{"version":3,"file":"static/js/main.d4db7836.js","mappings":"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","sources":["../node_modules/invariant/browser.js","../node_modules/prop-types-extra/lib/all.js","../node_modules/prop-types-extra/lib/utils/createChainableTypeChecker.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/classnames/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/uncontrollable/lib/esm/utils.js","../node_modules/uncontrollable/lib/esm/hook.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/getComputedStyle.js","../node_modules/dom-helpers/esm/ownerWindow.js","../node_modules/dom-helpers/esm/hyphenate.js","../node_modules/dom-helpers/esm/hyphenateStyle.js","../node_modules/dom-helpers/esm/isTransform.js","../node_modules/dom-helpers/esm/css.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/transitionEnd.js","../node_modules/dom-helpers/esm/triggerEvent.js","../node_modules/react-bootstrap/esm/transitionEndListener.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/triggerBrowserReflow.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/react-bootstrap/esm/TransitionWrapper.js","../node_modules/react-bootstrap/esm/safeFindDOMNode.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/useMediaQuery.js","../node_modules/@restart/hooks/esm/useBreakpoint.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/useRTGTransitionProps.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/@restart/ui/esm/RTGTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/Offcanvas.js","../node_modules/react-bootstrap/esm/NavbarOffcanvas.js","../node_modules/react-bootstrap/esm/NavbarText.js","../node_modules/react-bootstrap/esm/Navbar.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/TabContext.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/esm/NavItem.js","../node_modules/@restart/ui/esm/Nav.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/NavItem.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/NavLink.js","../node_modules/react-bootstrap/esm/Nav.js","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","assets/img/header-img.svg","assets/img/nav-icon3.svg","assets/img/index.js","assets/img/nav-icon1.svg","assets/img/nav-icon2.svg","components/NavBar.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap-icons/dist/icons/arrow-right-circle.js","components/Banner.js","../node_modules/@restart/ui/node_modules/uncontrollable/lib/esm/index.js","../packages/@react-aria/ssr/src/SSRProvider.tsx","../node_modules/@restart/ui/esm/TabPanel.js","../node_modules/@restart/ui/esm/Tabs.js","../node_modules/react-bootstrap/esm/getTabTransitionComponent.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","components/FavoritesCard.js","components/Favorites.js","components/Home.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n      if (result != null) {\n        error = result;\n      }\n    });\n\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createChainableTypeChecker;\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Mostly taken from ReactPropTypes.\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n      }\n\n      return null;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      args[_key - 6] = arguments[_key];\n    }\n\n    return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\nmodule.exports = exports['default'];","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"d44b3402\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"czar_portfolio:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/czar_portfolio/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkczar_portfolio\"] = self[\"webpackChunkczar_portfolio\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  // We keep the raw Response for redirects so we can return it verbatim\n  response: Response;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\ntype DataFunctionReturnValue = Promise<DataFunctionValue> | DataFunctionValue;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (\n    args: LoaderFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (\n    args: ActionFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionStatus?: number;\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\nexport interface DataStrategyMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {\n  shouldLoad: boolean;\n  resolve: (\n    handlerOverride?: (\n      handler: (ctx?: unknown) => DataFunctionReturnValue\n    ) => DataFunctionReturnValue\n  ) => Promise<DataStrategyResult>;\n}\n\nexport interface DataStrategyFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {\n  matches: DataStrategyMatch[];\n  fetcherKey: string | null;\n}\n\n/**\n * Result from a loader or action called via dataStrategy\n */\nexport interface DataStrategyResult {\n  type: \"data\" | \"error\";\n  result: unknown; // data, Error, Response, DeferredData, DataWithResponseInit\n}\n\nexport interface DataStrategyFunction {\n  (args: DataStrategyFunctionArgs): Promise<Record<string, DataStrategyResult>>;\n}\n\nexport interface AgnosticPatchRoutesOnNavigationFunction<\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> {\n  (opts: {\n    path: string;\n    matches: M[];\n    patch: (routeId: string | null, children: AgnosticRouteObject[]) => void;\n  }): void | Promise<void>;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction | boolean;\n  action?: ActionFunction | boolean;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: string[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\n\nexport function matchRoutesImpl<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename: string,\n  allowPartial: boolean\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string,\n  allowPartial = false\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    let route = meta.route;\n\n    if (\n      !match &&\n      end &&\n      allowPartial &&\n      !routesMeta[routesMeta.length - 1].route.index\n    ) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false,\n        },\n        remainingPathname\n      );\n    }\n\n    if (!match) {\n      return null;\n    }\n\n    Object.assign(matchedParams, match.params);\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nexport function decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport class DataWithResponseInit<D> {\n  type: string = \"DataWithResponseInit\";\n  data: D;\n  init: ResponseInit | null;\n\n  constructor(data: D, init?: ResponseInit) {\n    this.data = data;\n    this.init = init || null;\n  }\n}\n\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nexport function data<D>(data: D, init?: number | ResponseInit) {\n  return new DataWithResponseInit(\n    data,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const replace: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DataStrategyMatch,\n  AgnosticRouteObject,\n  DataResult,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  DataStrategyResult,\n  ImmutableRouteKey,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n  AgnosticPatchRoutesOnNavigationFunction,\n  DataWithResponseInit,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  matchRoutesImpl,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE DO NOT USE\n   *\n   * Patch additional children routes into an existing parent route\n   * @param routeId The parent route id or a callback function accepting `patch`\n   *                to perform batch patching\n   * @param children The additional children routes\n   */\n  patchRoutes(routeId: string | null, children: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n  v7_skipActionErrorRevalidation: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n  unstable_patchRoutesOnNavigation?: AgnosticPatchRoutesOnNavigationFunction;\n  unstable_dataStrategy?: DataStrategyFunction;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      unstable_dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: {\n      routeId?: string;\n      requestContext?: unknown;\n      unstable_dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      unstable_viewTransitionOpts?: ViewTransitionOpts;\n      unstable_flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  unstable_viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ntype PendingActionResult = [string, SuccessResult | ErrorResult];\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * Tuple for the returned or thrown value from the current action.  The routeId\n   * is the action route for success and the bubbled boundary route for errors.\n   */\n  pendingActionResult?: PendingActionResult;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.unstable_dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.unstable_patchRoutesOnNavigation;\n\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // FIFO queue of previously discovered routes to prevent re-calling on\n  // subsequent navigations to the same path\n  let discoveredRoutesMaxSize = 1000;\n  let discoveredRoutes = new Set<string>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n\n  let initialized: boolean;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    let isRouteInitialized = (m: AgnosticDataRouteMatch) => {\n      // No loader, nothing to initialize\n      if (!m.route.loader) {\n        return true;\n      }\n      // Explicitly opting-in to running on hydration\n      if (\n        typeof m.route.loader === \"function\" &&\n        m.route.loader.hydrate === true\n      ) {\n        return false;\n      }\n      // Otherwise, initialized if hydrated with data or an error\n      return (\n        (loaderData && loaderData[m.route.id] !== undefined) ||\n        (errors && errors[m.route.id] !== undefined)\n      );\n    };\n\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors![m.route.id] !== undefined\n      );\n      initialized = initialMatches.slice(0, idx + 1).every(isRouteInitialized);\n    } else {\n      initialized = initialMatches.every(isRouteInitialized);\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: Set<string> = new Set();\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Map of pending patchRoutesOnNavigation() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map<\n    string,\n    ReturnType<AgnosticPatchRoutesOnNavigationFunction>\n  >();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate: (() => void) | undefined = undefined;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = undefined;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          let nextHistoryUpdatePromise = new Promise<void>((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked, after the url\n              // restoration is also complete.  See:\n              // https://github.com/remix-run/react-router/issues/11613\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        unstable_viewTransitionOpts: opts.viewTransitionOpts,\n        unstable_flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true,\n      }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult: PendingActionResult | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: ResultType.error, error: opts.pendingError },\n      ];\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionResult.shortCircuited) {\n        return;\n      }\n\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (\n          isErrorResult(result) &&\n          isRouteErrorResponse(result.error) &&\n          result.error.status === 404\n        ) {\n          pendingNavigationController = null;\n\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error,\n            },\n          });\n          return;\n        }\n      }\n\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n\n      // Create a GET request for the loaders\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors,\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let { boundaryId, error } = handleDiscoverRouteError(\n          location.pathname,\n          discoverResult\n        );\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        state,\n        request,\n        [actionMatch],\n        matches,\n        null\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\")!,\n          new URL(request.url),\n          basename\n        );\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result],\n      };\n    }\n\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result],\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionResult?: PendingActionResult\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState =\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration);\n\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...(actionData !== undefined ? { actionData } : {}),\n          },\n          {\n            flushSync,\n          }\n        );\n      }\n\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let { boundaryId, error } = handleDiscoverRouteError(\n          location.pathname,\n          discoverResult\n        );\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: error,\n          },\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors:\n            pendingActionResult && isErrorResult(pendingActionResult[1])\n              ? { [pendingActionResult[0]]: pendingActionResult[1].error }\n              : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    if (shouldUpdateNavigationState) {\n      let updates: Partial<RouterState> = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // During partial hydration, preserve SSR errors for routes that don't re-run\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      Object.entries(state.errors)\n        .filter(([id]) => !matchesToLoad.some((m) => m.route.id === id))\n        .forEach(([routeId, error]) => {\n          errors = Object.assign(errors || {}, { [routeId]: error });\n        });\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getUpdatedActionData(\n    pendingActionResult: PendingActionResult | undefined\n  ): Record<string, RouteData> | null | undefined {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data as any,\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n\n  function getUpdatedRevalidatingFetchers(\n    revalidatingFetchers: RevalidatingFetcher[]\n  ) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        undefined,\n        fetcher ? fetcher.data : undefined\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    function detectAndHandle405Error(m: AgnosticDataRouteMatch) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId,\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let { error } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      state,\n      fetchRequest,\n      [match],\n      requestMatches,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false\n      );\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false\n      );\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let { error } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      state,\n      fetchRequest,\n      [match],\n      matches,\n      key\n    );\n    let result = results[match.route.id];\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    request: Request,\n    redirect: RedirectResult,\n    isNavigation: boolean,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true,\n    });\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true || redirect.response.headers.has(\"X-Remix-Replace\")\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.response.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location,\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    }\n  }\n\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    state: RouterState,\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    fetcherKey: string | null\n  ): Promise<Record<string, DataResult>> {\n    let results: Record<string, DataStrategyResult>;\n    let dataResults: Record<string, DataResult> = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        state,\n        request,\n        matchesToLoad,\n        matches,\n        fetcherKey,\n        manifest,\n        mapRouteProperties\n      );\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach((m) => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e,\n        };\n      });\n      return dataResults;\n    }\n\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result as Response;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          ),\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n\n    return dataResults;\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    state: RouterState,\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    let currentMatches = state.matches;\n\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\n      \"loader\",\n      state,\n      request,\n      matchesToLoad,\n      matches,\n      null\n    );\n\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.controller) {\n          let results = await callDataStrategy(\n            \"loader\",\n            state,\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            [f.match],\n            f.matches,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          // Fetcher results are keyed by fetcher key from here on out, not routeId\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: ResultType.error,\n              error: getInternalRouterError(404, {\n                pathname: f.path,\n              }),\n            } as ErrorResult,\n          });\n        }\n      })\n    );\n\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n\n    await Promise.all([\n      resolveNavigationDeferredResults(\n        matches,\n        loaderResults,\n        request.signal,\n        currentMatches,\n        state.loaderData\n      ),\n      resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad),\n    ]);\n\n    return {\n      loaderResults,\n      fetcherResults,\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function handleNavigational404(pathname: string) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n\n    return { notFoundMatches: matches, route, error };\n  }\n\n  function handleDiscoverRouteError(\n    pathname: string,\n    discoverResult: DiscoverRoutesErrorResult\n  ) {\n    return {\n      boundaryId: findNearestBoundary(discoverResult.partialMatches).route.id,\n      error: getInternalRouterError(400, {\n        type: \"route-discovery\",\n        pathname,\n        message:\n          discoverResult.error != null && \"message\" in discoverResult.error\n            ? discoverResult.error\n            : String(discoverResult.error),\n      }),\n    };\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function checkFogOfWar(\n    matches: AgnosticDataRouteMatch[] | null,\n    routesToUse: AgnosticDataRouteObject[],\n    pathname: string\n  ): { active: boolean; matches: AgnosticDataRouteMatch[] | null } {\n    if (patchRoutesOnNavigationImpl) {\n      // Don't bother re-calling patchRouteOnMiss for a path we've already\n      // processed.  the last execution would have patched the route tree\n      // accordingly so `matches` here are already accurate.\n      if (discoveredRoutes.has(pathname)) {\n        return { active: false, matches };\n      }\n\n      if (!matches) {\n        let fogMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n\n    return { active: false, matches: null };\n  }\n\n  type DiscoverRoutesSuccessResult = {\n    type: \"success\";\n    matches: AgnosticDataRouteMatch[] | null;\n  };\n  type DiscoverRoutesErrorResult = {\n    type: \"error\";\n    error: any;\n    partialMatches: AgnosticDataRouteMatch[];\n  };\n  type DiscoverRoutesAbortedResult = { type: \"aborted\" };\n  type DiscoverRoutesResult =\n    | DiscoverRoutesSuccessResult\n    | DiscoverRoutesErrorResult\n    | DiscoverRoutesAbortedResult;\n\n  async function discoverRoutes(\n    matches: AgnosticDataRouteMatch[],\n    pathname: string,\n    signal: AbortSignal\n  ): Promise<DiscoverRoutesResult> {\n    let partialMatches: AgnosticDataRouteMatch[] | null = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      try {\n        await loadLazyRouteChildren(\n          patchRoutesOnNavigationImpl!,\n          pathname,\n          partialMatches,\n          routesToUse,\n          manifest,\n          mapRouteProperties,\n          pendingPatchRoutes,\n          signal\n        );\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        addToFifoQueue(pathname, discoveredRoutes);\n        return { type: \"success\", matches: newMatches };\n      }\n\n      let newPartialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n\n      // Avoid loops if the second pass results in the same partial matches\n      if (\n        !newPartialMatches ||\n        (partialMatches.length === newPartialMatches.length &&\n          partialMatches.every(\n            (m, i) => m.route.id === newPartialMatches![i].route.id\n          ))\n      ) {\n        addToFifoQueue(pathname, discoveredRoutes);\n        return { type: \"success\", matches: null };\n      }\n\n      partialMatches = newPartialMatches;\n    }\n  }\n\n  function addToFifoQueue(path: string, queue: Set<string>) {\n    if (queue.size >= discoveredRoutesMaxSize) {\n      let first = queue.values().next().value;\n      queue.delete(first);\n    }\n    queue.add(path);\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  function patchRoutes(\n    routeId: string | null,\n    children: AgnosticRouteObject[]\n  ): void {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties\n    );\n\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(\n    request: Request,\n    {\n      requestContext,\n      skipLoaderErrorBubbling,\n      unstable_dataStrategy,\n    }: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      unstable_dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      unstable_dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n      unstable_dataStrategy,\n    }: {\n      requestContext?: unknown;\n      routeId?: string;\n      unstable_dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      unstable_dataStrategy || null,\n      false,\n      match\n    );\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          unstable_dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        unstable_dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches,\n        isRouteRequest,\n        requestContext,\n        unstable_dataStrategy\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")!,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling\n        ? actionMatch\n        : findNearestBoundary(matches, actionMatch.route.id);\n\n      let context = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        unstable_dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        [boundaryMatch.route.id, result]\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : result.statusCode != null\n          ? result.statusCode\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      unstable_dataStrategy,\n      skipLoaderErrorBubbling,\n      null\n    );\n\n    return {\n      ...context,\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionHeaders: result.headers\n        ? { [actionMatch.route.id]: result.headers }\n        : {},\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null,\n    pendingActionResult?: PendingActionResult\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0])\n      : matches;\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors:\n          pendingActionResult && isErrorResult(pendingActionResult[1])\n            ? {\n                [pendingActionResult[0]]: pendingActionResult[1].error,\n              }\n            : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await callDataStrategy(\n      \"loader\",\n      request,\n      matchesToLoad,\n      matches,\n      isRouteRequest,\n      requestContext,\n      unstable_dataStrategy\n    );\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      activeDeferreds,\n      skipLoaderErrorBubbling\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    isRouteRequest: boolean,\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null\n  ): Promise<Record<string, DataResult>> {\n    let results = await callDataStrategyImpl(\n      unstable_dataStrategy || defaultDataStrategy,\n      type,\n      null,\n      request,\n      matchesToLoad,\n      matches,\n      null,\n      manifest,\n      mapRouteProperties,\n      requestContext\n    );\n\n    let dataResults: Record<string, DataResult> = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResultResult(result)) {\n          let response = result.result as Response;\n          // Throw redirects and let the server handle them with an HTTP redirect\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          // For SSR single-route requests, we want to hand Responses back\n          // directly without unwrapping\n          throw result;\n        }\n\n        dataResults[match.route.id] =\n          await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isInitialLoad: boolean,\n  skipActionErrorRevalidation: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: Set<string>,\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionResult?: PendingActionResult\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingActionResult\n    ? isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : pendingActionResult[1].data\n    : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[0]\n      : undefined;\n  let boundaryMatches = boundaryId\n    ? getLoaderMatchesUntilBoundary(matches, boundaryId)\n    : matches;\n\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult\n    ? pendingActionResult[1].statusCode\n    : undefined;\n  let shouldSkipRevalidation =\n    skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (isInitialLoad) {\n      if (typeof route.loader !== \"function\" || route.loader.hydrate) {\n        return true;\n      }\n      return (\n        state.loaderData[route.id] === undefined &&\n        // Don't re-run if the loader ran and threw an error\n        (!state.errors || state.errors[route.id] === undefined)\n      );\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation\n        ? false\n        : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n          isRevalidationRequired ||\n          currentUrl.pathname + currentUrl.search ===\n            nextUrl.pathname + nextUrl.search ||\n          // Search params affect all loaders\n          currentUrl.search !== nextUrl.search ||\n          isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      isInitialLoad ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation\n          ? false\n          : isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Idempotent utility to execute patchRoutesOnNavigation() to lazily load route\n * definitions and update the routes/routeManifest\n */\nasync function loadLazyRouteChildren(\n  patchRoutesOnNavigationImpl: AgnosticPatchRoutesOnNavigationFunction,\n  path: string,\n  matches: AgnosticDataRouteMatch[],\n  routes: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  pendingRouteChildren: Map<\n    string,\n    ReturnType<typeof patchRoutesOnNavigationImpl>\n  >,\n  signal: AbortSignal\n) {\n  let key = [path, ...matches.map((m) => m.route.id)].join(\"-\");\n  try {\n    let pending = pendingRouteChildren.get(key);\n    if (!pending) {\n      pending = patchRoutesOnNavigationImpl({\n        path,\n        matches,\n        patch: (routeId, children) => {\n          if (!signal.aborted) {\n            patchRoutesImpl(\n              routeId,\n              children,\n              routes,\n              manifest,\n              mapRouteProperties\n            );\n          }\n        },\n      });\n      pendingRouteChildren.set(key, pending);\n    }\n\n    if (pending && isPromise<AgnosticRouteObject[]>(pending)) {\n      await pending;\n    }\n  } finally {\n    pendingRouteChildren.delete(key);\n  }\n}\n\nfunction patchRoutesImpl(\n  routeId: string | null,\n  children: AgnosticRouteObject[],\n  routesToUse: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction\n) {\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    let dataChildren = convertRoutesToDataRoutes(\n      children,\n      mapRouteProperties,\n      [routeId, \"patch\", String(route.children?.length || \"0\")],\n      manifest\n    );\n    if (route.children) {\n      route.children.push(...dataChildren);\n    } else {\n      route.children = dataChildren;\n    }\n  } else {\n    let dataChildren = convertRoutesToDataRoutes(\n      children,\n      mapRouteProperties,\n      [\"patch\", String(routesToUse.length || \"0\")],\n      manifest\n    );\n    routesToUse.push(...dataChildren);\n  }\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy({\n  matches,\n}: DataStrategyFunctionArgs): ReturnType<DataStrategyFunction> {\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  return results.reduce(\n    (acc, result, i) =>\n      Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\n    {}\n  );\n}\n\nasync function callDataStrategyImpl(\n  dataStrategyImpl: DataStrategyFunction,\n  type: \"loader\" | \"action\",\n  state: RouterState | null,\n  request: Request,\n  matchesToLoad: AgnosticDataRouteMatch[],\n  matches: AgnosticDataRouteMatch[],\n  fetcherKey: string | null,\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  requestContext?: unknown\n): Promise<Record<string, DataStrategyResult>> {\n  let loadRouteDefinitionsPromises = matches.map((m) =>\n    m.route.lazy\n      ? loadLazyRouteModule(m.route, mapRouteProperties, manifest)\n      : undefined\n  );\n\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve: DataStrategyMatch[\"resolve\"] = async (handlerOverride) => {\n      if (\n        handlerOverride &&\n        request.method === \"GET\" &&\n        (match.route.lazy || match.route.loader)\n      ) {\n        shouldLoad = true;\n      }\n      return shouldLoad\n        ? callLoaderOrAction(\n            type,\n            request,\n            match,\n            loadRoutePromise,\n            handlerOverride,\n            requestContext\n          )\n        : Promise.resolve({ type: ResultType.data, result: undefined });\n    };\n\n    return {\n      ...match,\n      shouldLoad,\n      resolve,\n    };\n  });\n\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext,\n  });\n\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n\n  return results;\n}\n\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  loadRoutePromise: Promise<void> | undefined,\n  handlerOverride: Parameters<DataStrategyMatch[\"resolve\"]>[0],\n  staticContext?: unknown\n): Promise<DataStrategyResult> {\n  let result: DataStrategyResult;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (\n    handler: AgnosticRouteObject[\"loader\"] | AgnosticRouteObject[\"action\"]\n  ): Promise<DataStrategyResult> => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise<DataStrategyResult>((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n\n    let actualHandler = (ctx?: unknown) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean ` +\n              `\"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext,\n        },\n        ...(ctx !== undefined ? [ctx] : [])\n      );\n    };\n\n    let handlerPromise: Promise<DataStrategyResult> = (async () => {\n      try {\n        let val = await (handlerOverride\n          ? handlerOverride((ctx: unknown) => actualHandler(ctx))\n          : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadRoutePromise,\n        ]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value!;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, result: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result.result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return { type: ResultType.error, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  return result;\n}\n\nasync function convertDataStrategyResultToDataResult(\n  dataStrategyResult: DataStrategyResult\n): Promise<DataResult> {\n  let { result, type } = dataStrategyResult;\n\n  if (isResponse(result)) {\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: result.init?.status,\n        };\n      }\n\n      // Convert thrown unstable_data() to ErrorResponse instances\n      result = new ErrorResponseImpl(\n        result.init?.status || 500,\n        undefined,\n        result.data\n      );\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n    };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers\n        ? new Headers(result.init.headers)\n        : undefined,\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(\n  response: Response,\n  request: Request,\n  routeId: string,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  v7_relativeSplatPath: boolean\n) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      true,\n      location,\n      v7_relativeSplatPath\n    );\n    response.headers.set(\"Location\", location);\n  }\n\n  return response;\n}\n\nfunction normalizeRedirectLocation(\n  location: string,\n  currentUrl: URL,\n  basename: string\n): string {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\")\n      ? new URL(currentUrl.protocol + normalizedLocation)\n      : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  activeDeferreds: Map<string, DeferredData>,\n  skipLoaderErrorBubbling: boolean\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n  let pendingError =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : undefined;\n\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (\n          result.statusCode != null &&\n          result.statusCode !== 200 &&\n          !foundError\n        ) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: Record<string, DataResult>,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult,\n    activeDeferreds,\n    false // This method is only called client side so we always want to bubble\n  );\n\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\nfunction getActionDataForCommit(\n  pendingActionResult: PendingActionResult | undefined\n) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1])\n    ? {\n        // Clear out prior actionData on errors\n        actionData: {},\n      }\n    : {\n        actionData: {\n          [pendingActionResult[0]]: pendingActionResult[1].data,\n        },\n      };\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n    message,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\" | \"route-discovery\";\n    message?: string;\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (type === \"route-discovery\") {\n      errorMessage =\n        `Unable to match URL \"${pathname}\" - the \\`unstable_patchRoutesOnNavigation()\\` ` +\n        `function threw the following error:\\n${message}`;\n    } else if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: Record<string, DataResult>\n): { key: string; result: RedirectResult } | undefined {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isPromise<T = unknown>(val: unknown): val is Promise<T> {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\n\nfunction isDataStrategyResult(result: unknown): result is DataStrategyResult {\n  return (\n    result != null &&\n    typeof result === \"object\" &&\n    \"type\" in result &&\n    \"result\" in result &&\n    (result.type === ResultType.data || result.type === ResultType.error)\n  );\n}\n\nfunction isRedirectDataStrategyResultResult(result: DataStrategyResult) {\n  return (\n    isResponse(result.result) && redirectStatusCodes.has(result.result.status)\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDataWithResponseInit(\n  value: any\n): value is DataWithResponseInit<unknown> {\n  return (\n    typeof value === \"object\" &&\n    value != null &&\n    \"type\" in value &&\n    \"data\" in value &&\n    \"init\" in value &&\n    value.type === \"DataWithResponseInit\"\n  );\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveNavigationDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  signal: AbortSignal,\n  currentMatches: AgnosticDataRouteMatch[],\n  currentLoaderData: RouteData\n) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then((result) => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\n\nasync function resolveFetcherDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  revalidatingFetchers: RevalidatingFetcher[]\n) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, routeId, controller } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(\n        controller,\n        \"Expected an AbortController for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, controller.signal, true).then(\n        (result) => {\n          if (result) {\n            results[key] = result;\n          }\n        }\n      );\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_decodePath as decodePath,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else if (\n      future?.v7_partialHydration &&\n      parentMatches.length === 0 &&\n      !dataRouterState.initialized &&\n      dataRouterState.matches.length > 0\n    ) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== undefined\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        \"_error\" in promise\n          ? AwaitRenderStatus.error\n          : \"_data\" in promise\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","import invariant from 'invariant';\n\nvar noop = function noop() {};\n\nfunction readOnlyPropType(handler, name) {\n  return function (props, propName) {\n    if (props[propName] !== undefined) {\n      if (!props[handler]) {\n        return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n      }\n    }\n  };\n}\n\nexport function uncontrolledPropTypes(controlledValues, displayName) {\n  var propTypes = {};\n  Object.keys(controlledValues).forEach(function (prop) {\n    // add default propTypes for folks that use runtime checks\n    propTypes[defaultKey(prop)] = noop;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var handler = controlledValues[prop];\n      !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n      propTypes[prop] = readOnlyPropType(handler, displayName);\n    }\n  });\n  return propTypes;\n}\nexport function isProp(props, prop) {\n  return props[prop] !== undefined;\n}\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexport function canAcceptRef(component) {\n  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { useCallback, useRef, useState } from 'react';\nimport * as Utils from './utils';\n\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  var wasPropRef = useRef(propValue !== undefined);\n\n  var _useState = useState(defaultValue),\n      stateValue = _useState[0],\n      setState = _useState[1];\n\n  var isProp = propValue !== undefined;\n  var wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n\n  return [isProp ? propValue : stateValue, useCallback(function (value) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (handler) handler.apply(void 0, [value].concat(args));\n    setState(value);\n  }, [handler])];\n}\n\nexport { useUncontrolledProp };\nexport default function useUncontrolled(props, config) {\n  return Object.keys(config).reduce(function (result, fieldName) {\n    var _extends2;\n\n    var _ref = result,\n        defaultValue = _ref[Utils.defaultKey(fieldName)],\n        propsValue = _ref[fieldName],\n        rest = _objectWithoutPropertiesLoose(_ref, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));\n\n    var handlerName = config[fieldName];\n\n    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]),\n        value = _useUncontrolledProp[0],\n        handler = _useUncontrolledProp[1];\n\n    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));\n  }, props);\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarBrand = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  const Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  });\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import ownerWindow from './ownerWindow';\n/**\n * Returns one or all computed style properties of an element.\n * \n * @param node the element\n * @param psuedoElement the style property\n */\n\nexport default function getComputedStyle(node, psuedoElement) {\n  return ownerWindow(node).getComputedStyle(node, psuedoElement);\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the owner window of a given element.\n * \n * @param node the element\n */\n\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc && doc.defaultView || window;\n}","var rUpper = /([A-Z])/g;\nexport default function hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nimport hyphenate from './hyphenate';\nvar msPattern = /^ms-/;\nexport default function hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}","var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\nexport default function isTransform(value) {\n  return !!(value && supportedTransforms.test(value));\n}","import getComputedStyle from './getComputedStyle';\nimport hyphenate from './hyphenateStyle';\nimport isTransform from './isTransform';\n\nfunction style(node, property) {\n  var css = '';\n  var transforms = '';\n\n  if (typeof property === 'string') {\n    return node.style.getPropertyValue(hyphenate(property)) || getComputedStyle(node).getPropertyValue(hyphenate(property));\n  }\n\n  Object.keys(property).forEach(function (key) {\n    var value = property[key];\n\n    if (!value && value !== 0) {\n      node.style.removeProperty(hyphenate(key));\n    } else if (isTransform(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += hyphenate(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += \"transform: \" + transforms + \";\";\n  }\n\n  node.style.cssText += \";\" + css;\n}\n\nexport default style;","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import css from './css';\nimport listen from './listen';\nimport triggerEvent from './triggerEvent';\n\nfunction parseDuration(node) {\n  var str = css(node, 'transitionDuration') || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nfunction emulateTransitionEnd(element, duration, padding) {\n  if (padding === void 0) {\n    padding = 5;\n  }\n\n  var called = false;\n  var handle = setTimeout(function () {\n    if (!called) triggerEvent(element, 'transitionend', true);\n  }, duration + padding);\n  var remove = listen(element, 'transitionend', function () {\n    called = true;\n  }, {\n    once: true\n  });\n  return function () {\n    clearTimeout(handle);\n    remove();\n  };\n}\n\nexport default function transitionEnd(element, handler, duration, padding) {\n  if (duration == null) duration = parseDuration(element) || 0;\n  var removeEmulate = emulateTransitionEnd(element, duration, padding);\n  var remove = listen(element, 'transitionend', handler);\n  return function () {\n    removeEmulate();\n    remove();\n  };\n}","/**\n * Triggers an event on a given element.\n * \n * @param node the element\n * @param eventName the event name to trigger\n * @param bubbles whether the event should bubble up\n * @param cancelable whether the event should be cancelable\n */\nexport default function triggerEvent(node, eventName, bubbles, cancelable) {\n  if (bubbles === void 0) {\n    bubbles = false;\n  }\n\n  if (cancelable === void 0) {\n    cancelable = true;\n  }\n\n  if (node) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, bubbles, cancelable);\n    node.dispatchEvent(event);\n  }\n}","import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nfunction parseDuration(node, property) {\n  const str = css(node, property) || '';\n  const mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\nexport default function transitionEndListener(element, handler) {\n  const duration = parseDuration(element, 'transitionDuration');\n  const delay = parseDuration(element, 'transitionDelay');\n  const remove = transitionEnd(element, e => {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args);\n      // @ts-ignore\n      f.apply(this, args);\n    };\n  }, null);\n}\nexport default createChainedFunction;","// reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\nexport default function triggerBrowserReflow(node) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  node.offsetHeight;\n}","import { useMemo } from 'react';\nconst toFnRef = ref => !ref || typeof ref === 'function' ? ref : value => {\n  ref.current = value;\n};\nexport function mergeRefs(refA, refB) {\n  const a = toFnRef(refA);\n  const b = toFnRef(refB);\n  return value => {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\nfunction useMergedRefs(refA, refB) {\n  return useMemo(() => mergeRefs(refA, refB), [refA, refB]);\n}\nexport default useMergedRefs;","\"use client\";\n\nimport React, { useCallback, useRef } from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst TransitionWrapper = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  addEndListener,\n  children,\n  childRef,\n  ...props\n}, ref) => {\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, childRef);\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return /*#__PURE__*/_jsx(Transition, {\n    ref: ref,\n    ...props,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, {\n      ...innerProps,\n      ref: attachRef\n    }) : /*#__PURE__*/React.cloneElement(children, {\n      ref: attachRef\n    })\n  });\n});\nexport default TransitionWrapper;","import ReactDOM from 'react-dom';\nexport default function safeFindDOMNode(componentOrElement) {\n  if (componentOrElement && 'setState' in componentOrElement) {\n    return ReactDOM.findDOMNode(componentOrElement);\n  }\n  return componentOrElement != null ? componentOrElement : null;\n}","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value +\n  // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) +\n  // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  in: inProp = false,\n  timeout = 300,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n\n  /* -- Expanding -- */\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n\n  /* -- Collapsing -- */\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? inProp : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    in: inProp,\n    timeout: timeout,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n});\n\n// @ts-ignore\n\nexport default Collapse;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarCollapse = /*#__PURE__*/React.forwardRef(({\n  children,\n  bsPrefix,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Collapse, {\n    in: !!(context && context.expanded),\n    ...props,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: ref,\n      className: bsPrefix,\n      children: children\n    })\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  const ref = useCommittedRef(fn);\n  return useCallback(function (...args) {\n    return ref.current && ref.current(...args);\n  }, [ref]);\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  label = 'Toggle navigation',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n  const {\n    onToggle,\n    expanded\n  } = useContext(NavbarContext) || {};\n  const handleClick = useEventCallback(e => {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: `${bsPrefix}-icon`\n    })\n  });\n});\nNavbarToggle.displayName = 'NavbarToggle';\nexport default NavbarToggle;","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import useEffect from './useIsomorphicEffect';\nimport { useState } from 'react';\nconst matchersByWindow = new WeakMap();\nconst getMatcher = (query, targetWindow) => {\n  if (!query || !targetWindow) return undefined;\n  const matchers = matchersByWindow.get(targetWindow) || new Map();\n  matchersByWindow.set(targetWindow, matchers);\n  let mql = matchers.get(query);\n  if (!mql) {\n    mql = targetWindow.matchMedia(query);\n    mql.refCount = 0;\n    matchers.set(mql.media, mql);\n  }\n  return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */\nexport default function useMediaQuery(query, targetWindow = typeof window === 'undefined' ? undefined : window) {\n  const mql = getMatcher(query, targetWindow);\n  const [matches, setMatches] = useState(() => mql ? mql.matches : false);\n  useEffect(() => {\n    let mql = getMatcher(query, targetWindow);\n    if (!mql) {\n      return setMatches(false);\n    }\n    let matchers = matchersByWindow.get(targetWindow);\n    const handleChange = () => {\n      setMatches(mql.matches);\n    };\n    mql.refCount++;\n    mql.addListener(handleChange);\n    handleChange();\n    return () => {\n      mql.removeListener(handleChange);\n      mql.refCount--;\n      if (mql.refCount <= 0) {\n        matchers == null ? void 0 : matchers.delete(mql.media);\n      }\n      mql = undefined;\n    };\n  }, [query]);\n  return matches;\n}","import useMediaQuery from './useMediaQuery';\nimport { useMemo } from 'react';\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */\nexport function createBreakpointHook(breakpointValues) {\n  const names = Object.keys(breakpointValues);\n  function and(query, next) {\n    if (query === next) {\n      return next;\n    }\n    return query ? `${query} and ${next}` : next;\n  }\n  function getNext(breakpoint) {\n    return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n  }\n  function getMaxQuery(breakpoint) {\n    const next = getNext(breakpoint);\n    let value = breakpointValues[next];\n    if (typeof value === 'number') value = `${value - 0.2}px`;else value = `calc(${value} - 0.2px)`;\n    return `(max-width: ${value})`;\n  }\n  function getMinQuery(breakpoint) {\n    let value = breakpointValues[breakpoint];\n    if (typeof value === 'number') {\n      value = `${value}px`;\n    }\n    return `(min-width: ${value})`;\n  }\n\n  /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  /**\n   * Match a single breakpoint exactly, up, or down.\n   *\n   * ```tsx\n   * const PhoneOnly = () => {\n   *   const isSmall = useBreakpoint('sm', 'down');\n   *\n   *   if (isSmall) return <div>On a Small Screen!</div>\n   *   return null;\n   * }\n   * ```\n   *\n   * @param breakpoint The breakpoint key\n   * @param direction A direction 'up' for a max, 'down' for min, true to match only the breakpoint\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  function useBreakpoint(breakpointOrMap, direction, window) {\n    let breakpointMap;\n    if (typeof breakpointOrMap === 'object') {\n      breakpointMap = breakpointOrMap;\n      window = direction;\n      direction = true;\n    } else {\n      direction = direction || true;\n      breakpointMap = {\n        [breakpointOrMap]: direction\n      };\n    }\n    let query = useMemo(() => Object.entries(breakpointMap).reduce((query, [key, direction]) => {\n      if (direction === 'up' || direction === true) {\n        query = and(query, getMinQuery(key));\n      }\n      if (direction === 'down' || direction === true) {\n        query = and(query, getMaxQuery(key));\n      }\n      return query;\n    }, ''), [JSON.stringify(breakpointMap)]);\n    return useMediaQuery(query, window);\n  }\n  return useBreakpoint;\n}\nconst useBreakpoint = createBreakpointHook({\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n});\nexport default useBreakpoint;","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","const _excluded = [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"addEndListener\", \"children\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { getReactVersion } from './utils';\n/**\n * Normalizes RTG transition callbacks with nodeRef to better support\n * strict mode.\n *\n * @param props Transition props.\n * @returns Normalized transition props.\n */\nexport default function useRTGTransitionProps(_ref) {\n  let {\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n      addEndListener,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const {\n    major\n  } = getReactVersion();\n  const childRef = major >= 19 ? children.props.ref : children.ref;\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, typeof children === 'function' ? null : childRef);\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return Object.assign({}, props, {\n    nodeRef\n  }, onEnter && {\n    onEnter: handleEnter\n  }, onEntering && {\n    onEntering: handleEntering\n  }, onEntered && {\n    onEntered: handleEntered\n  }, onExit && {\n    onExit: handleExit\n  }, onExiting && {\n    onExiting: handleExiting\n  }, onExited && {\n    onExited: handleExited\n  }, addEndListener && {\n    addEndListener: handleAddEndListener\n  }, {\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, Object.assign({}, innerProps, {\n      ref: mergedRef\n    })) : /*#__PURE__*/cloneElement(children, {\n      ref: mergedRef\n    })\n  });\n}","import * as React from 'react';\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}\nexport function getReactVersion() {\n  const parts = React.version.split('.');\n  return {\n    major: +parts[0],\n    minor: +parts[1],\n    patch: +parts[2]\n  };\n}","const _excluded = [\"component\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport useRTGTransitionProps from './useRTGTransitionProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst RTGTransition = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      component: Component\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const transitionProps = useRTGTransitionProps(props);\n  return /*#__PURE__*/_jsx(Component, Object.assign({\n    ref: ref\n  }, transitionProps));\n});\nexport default RTGTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport RTGTransition from './RTGTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(component, runTransition, props) {\n  if (component) {\n    return /*#__PURE__*/_jsx(RTGTransition, Object.assign({}, props, {\n      component: component\n    }));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\n/*\n  Modal props are split into a version with and without index signature so that you can fully use them in another projects\n  This is due to Typescript not playing well with index signatures e.g. when using Omit\n*/\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null || onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasBody.displayName = 'OffcanvasBody';\nexport default OffcanvasBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  in: inProp = false,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null || context.onHide();\n    onHide == null || onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nexport default OffcanvasHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst OffcanvasTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasTitle.displayName = 'OffcanvasTitle';\nexport default OffcanvasTitle;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport NavbarContext from './NavbarContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, {\n    ...props\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props\n  });\n}\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement = 'start',\n  responsive,\n  /* BaseModal props */\n\n  show = false,\n  backdrop = true,\n  keyboard = true,\n  scroll = false,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode = false,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const {\n    onToggle\n  } = useContext(NavbarContext) || {};\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const handleHide = useEventCallback(() => {\n    onToggle == null || onToggle();\n    onHide == null || onHide();\n  });\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n    return getSharedManager();\n  }\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null || onEnter(node, ...args);\n  };\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null || onExited(...args);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarOffcanvas = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Offcanvas, {\n    ref: ref,\n    show: !!(context != null && context.expanded),\n    ...props,\n    renderStaticNode: true\n  });\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nNavbarText.displayName = 'NavbarText';\nexport default NavbarText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport NavbarText from './NavbarText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix: initialBsPrefix,\n    expand = true,\n    variant = 'light',\n    bg,\n    fixed,\n    sticky,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'nav',\n    expanded,\n    onToggle,\n    onSelect,\n    collapseOnSelect = false,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    expanded: 'onToggle'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  const handleCollapse = useCallback((...args) => {\n    onSelect == null || onSelect(...args);\n    if (collapseOnSelect && expanded) {\n      onToggle == null || onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, onToggle]);\n\n  // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n  let expandClass = `${bsPrefix}-expand`;\n  if (typeof expand === 'string') expandClass = `${expandClass}-${expand}`;\n  const navbarContext = useMemo(() => ({\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\n    bsPrefix,\n    expanded: !!expanded,\n    expand\n  }), [bsPrefix, expanded, expand, onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, {\n        ref: ref,\n        ...controlledProps,\n        className: classNames(className, bsPrefix, expand && expandClass, variant && `${bsPrefix}-${variant}`, bg && `bg-${bg}`, sticky && `sticky-${sticky}`, fixed && `fixed-${fixed}`)\n      })\n    })\n  });\n});\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import * as React from 'react';\nconst TabContext = /*#__PURE__*/React.createContext(null);\nexport default TabContext;","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","const _excluded = [\"as\", \"active\", \"eventKey\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useNavItem({\n  key,\n  onClick,\n  active,\n  id,\n  role,\n  disabled\n}) {\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const tabContext = useContext(TabContext);\n  let isActive = active;\n  const props = {\n    role\n  };\n  if (navContext) {\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\n    const contextControlledId = navContext.getControlledId(key != null ? key : null);\n\n    // @ts-ignore\n    props[dataAttr('event-key')] = key;\n    props.id = contextControllerId || id;\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\n\n    /**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\n  }\n  if (props.role === 'tab') {\n    props['aria-selected'] = isActive;\n    if (!isActive) {\n      props.tabIndex = -1;\n    }\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n  }\n  props.onClick = useEventCallback(e => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(e);\n    if (key == null) {\n      return;\n    }\n    if (parentOnSelect && !e.isPropagationStopped()) {\n      parentOnSelect(key, e);\n    }\n  });\n  return [props, {\n    isActive\n  }];\n}\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: Component = Button,\n      active,\n      eventKey\n    } = _ref,\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [props, meta] = useNavItem(Object.assign({\n    key: makeEventKey(eventKey, options.href),\n    active\n  }, options));\n\n  // @ts-ignore\n  props[dataAttr('active')] = meta.isActive;\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\n    ref: ref\n  }));\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'div',\n      onSelect,\n      activeKey,\n      role,\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    // TODO: do we need to duplicate these?\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n  const listNode = useRef(null);\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    if (!tabContext) {\n      return;\n    }\n    let nextActiveChild;\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n      default:\n        return;\n    }\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","import { useReducer } from 'react';\n\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are strictly equal to the last state value\n  const [, dispatch] = useReducer(state => !state, false);\n  return dispatch;\n}","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavItem = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavLink = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as: Component = Anchor,\n  active,\n  eventKey,\n  disabled = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-link');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    disabled,\n    ...props\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...navItemProps,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, bsPrefix, disabled && 'disabled', meta.isActive && 'active')\n  });\n});\nNavLink.displayName = 'NavLink';\nexport default NavLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport CardHeaderContext from './CardHeaderContext';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Nav = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    as = 'div',\n    bsPrefix: initialBsPrefix,\n    variant,\n    fill = false,\n    justify = false,\n    navbar,\n    navbarScroll,\n    className,\n    activeKey,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'nav');\n  let navbarBsPrefix;\n  let cardHeaderBsPrefix;\n  let isNavbar = false;\n  const navbarContext = useContext(NavbarContext);\n  const cardHeaderContext = useContext(CardHeaderContext);\n  if (navbarContext) {\n    navbarBsPrefix = navbarContext.bsPrefix;\n    isNavbar = navbar == null ? true : navbar;\n  } else if (cardHeaderContext) {\n    ({\n      cardHeaderBsPrefix\n    } = cardHeaderContext);\n  }\n  return /*#__PURE__*/_jsx(BaseNav, {\n    as: as,\n    ref: ref,\n    activeKey: activeKey,\n    className: classNames(className, {\n      [bsPrefix]: !isNavbar,\n      [`${navbarBsPrefix}-nav`]: isNavbar,\n      [`${navbarBsPrefix}-nav-scroll`]: isNavbar && navbarScroll,\n      [`${cardHeaderBsPrefix}-${variant}`]: !!cardHeaderBsPrefix,\n      [`${bsPrefix}-${variant}`]: !!variant,\n      [`${bsPrefix}-fill`]: fill,\n      [`${bsPrefix}-justified`]: justify\n    }),\n    ...props\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem,\n  Link: NavLink\n});","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  unstable_flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  unstable_DataStrategyFunction,\n  unstable_PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  unstable_DataStrategyFunction,\n  unstable_DataStrategyFunctionArgs,\n  unstable_DataStrategyMatch,\n  unstable_DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n  unstable_PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  unstable_dataStrategy?: unstable_DataStrategyFunction;\n  unstable_patchRoutesOnNavigation?: unstable_PatchRoutesOnNavigationFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnNavigation: opts?.unstable_patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnNavigation: opts?.unstable_patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        unstable_flushSync: flushSync,\n        unstable_viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          unstable_flushSync: options.unstable_flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_flushSync: options.unstable_flushSync,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { unstable_flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { unstable_flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n","var _rect,_title,_path,_path2,_path3,_path4,_path5,_path6,_path7,_path8,_path9,_path10,_path11,_path12,_path13,_path14,_path15,_path16,_path17,_path18,_path19,_path20,_path21,_path22,_path23,_path24,_path25,_path26,_path27,_path28,_path29,_path30,_path31,_path32,_path33,_path34,_path35,_path36,_path37,_path38,_path39,_path40,_path41,_path42,_path43,_path44,_path45,_path46,_path47,_path48,_path49,_path50,_path51,_path52,_path53,_path54,_path55,_path56,_path57,_path58,_path59,_path60,_path61,_path62,_path63,_path64,_path65,_path66,_path67,_path68,_path69,_path70,_path71,_path72,_path73,_path74,_path75,_path76,_path77,_path78,_path79,_path80,_path81,_path82,_path83,_path84,_path85,_path86,_path87,_path88,_path89,_path90,_path91,_path92,_path93,_path94,_path95,_path96,_path97,_path98,_path99,_path100,_path101,_path102,_path103,_path104,_path105,_path106,_path107,_path108,_path109,_path110,_path111,_path112,_path113,_path114,_path115,_path116,_path117,_path118,_path119,_path120,_path121,_path122,_path123,_path124,_path125,_path126,_path127,_path128,_path129,_path130,_path131,_path132,_path133,_path134,_path135,_path136,_path137,_path138,_path139,_path140,_path141,_path142,_path143,_path144,_path145,_path146,_path147,_path148,_path149,_path150,_path151,_path152,_path153,_path154,_path155,_path156,_path157,_path158,_path159,_path160,_path161,_path162,_path163,_path164,_path165,_path166,_path167,_path168,_path169,_path170,_path171,_path172,_path173,_path174,_path175,_path176,_path177,_path178,_path179,_path180,_path181,_path182,_path183,_path184,_path185,_path186,_path187,_path188,_path189,_path190,_path191,_path192,_path193,_path194,_path195,_path196,_path197,_path198,_path199,_path200,_path201,_path202,_path203,_path204,_path205,_path206,_path207,_path208,_path209,_path210,_path211,_path212,_path213,_path214,_path215,_path216,_path217,_path218,_path219,_path220,_path221,_path222,_path223,_path224,_path225,_path226,_path227,_path228,_path229,_path230,_path231,_path232,_path233,_path234,_path235,_path236,_path237,_path238,_path239,_path240,_path241,_path242,_path243,_path244,_path245,_path246,_path247,_path248,_path249,_path250,_path251,_path252,_path253,_path254,_path255,_path256,_path257,_path258,_path259,_path260,_path261,_path262,_path263,_path264,_path265,_path266,_path267,_path268,_path269,_path270,_path271,_path272,_path273,_path274,_path275,_path276,_path277,_path278,_path279,_path280,_path281,_path282,_path283,_path284,_path285,_path286,_path287,_path288,_path289,_path290,_path291,_path292,_path293,_path294,_path295,_path296,_path297,_path298,_path299,_path300,_path301,_path302,_path303,_path304,_path305,_path306,_path307,_path308,_path309,_path310,_path311,_path312,_path313,_path314,_path315,_path316,_path317,_path318,_path319,_path320,_path321,_path322,_path323,_path324,_path325,_path326,_path327,_path328,_path329,_path330,_path331,_path332,_path333,_path334,_path335,_path336,_path337,_path338,_path339,_path340,_path341,_path342,_path343,_path344,_path345,_path346,_path347,_path348,_path349,_path350,_path351,_path352,_path353,_path354,_path355,_path356,_path357,_path358,_path359,_path360,_path361,_path362,_path363,_path364,_path365,_path366,_path367,_path368,_path369,_path370,_path371,_path372,_path373,_path374,_path375,_path376,_path377,_path378,_path379,_path380,_path381,_path382,_path383,_path384,_path385,_path386,_path387,_path388,_path389,_path390,_path391,_path392,_path393,_path394,_path395,_path396,_path397,_path398,_path399,_path400,_path401,_path402,_path403,_path404,_path405,_path406,_path407,_path408,_path409,_path410,_path411,_path412,_path413,_path414,_path415,_path416,_path417,_path418,_path419,_path420,_path421,_path422,_path423,_path424,_path425,_path426,_path427,_path428,_path429,_path430,_path431,_path432,_path433,_path434,_path435,_path436,_path437,_path438,_path439,_path440,_path441,_path442,_path443,_path444,_path445,_path446,_path447,_path448,_path449,_path450,_path451,_path452,_path453,_path454,_path455,_path456,_path457,_path458,_path459,_path460,_path461,_path462,_path463,_path464,_path465,_path466,_path467,_path468,_path469,_path470,_path471,_path472,_path473,_path474,_path475,_path476,_path477,_path478,_path479,_path480,_path481,_path482,_path483,_path484,_path485,_path486,_path487,_path488,_path489,_path490,_path491,_path492,_path493,_path494,_path495,_path496,_path497,_path498,_path499,_path500,_path501,_path502,_path503,_path504,_path505,_path506,_path507,_path508,_path509,_path510,_path511,_path512,_path513,_path514,_path515,_path516,_path517,_path518,_path519,_path520,_path521,_path522,_path523,_path524,_path525,_path526,_path527,_path528,_path529,_path530,_path531,_path532,_path533,_path534,_path535,_path536,_path537,_path538,_path539,_path540,_path541,_path542,_path543,_path544,_path545,_path546,_path547,_path548,_path549,_path550,_path551,_path552,_path553,_path554,_path555,_path556,_path557,_path558,_path559,_path560,_path561,_path562,_path563,_path564,_path565,_path566,_path567,_path568,_path569,_path570,_path571,_path572,_path573,_path574,_path575,_path576,_path577,_path578,_path579,_path580,_path581,_path582,_path583,_path584,_path585,_path586,_path587,_path588,_path589,_path590,_path591,_path592,_path593,_path594,_path595,_path596,_path597,_path598,_path599,_path600,_path601,_path602,_path603,_path604,_path605,_path606,_path607,_path608,_path609,_path610,_path611,_path612,_path613,_path614,_path615,_path616,_path617,_path618,_path619,_path620,_path621,_path622,_path623,_path624,_path625,_path626,_path627,_path628,_path629,_path630,_path631,_path632,_path633,_path634,_path635,_path636,_path637,_path638,_path639,_path640,_path641,_path642,_path643,_path644,_path645,_path646,_path647,_path648,_path649,_path650,_path651,_path652,_path653,_path654,_path655,_path656,_path657,_path658,_path659,_path660,_path661,_path662,_path663,_path664,_path665,_path666,_path667,_path668,_path669,_path670,_path671,_path672,_path673,_path674,_path675,_path676,_path677,_path678,_path679,_path680,_path681,_path682,_path683,_path684,_path685,_path686,_path687,_path688,_path689,_path690,_path691,_path692,_path693,_path694,_path695,_path696,_path697,_path698,_path699,_path700,_path701,_path702,_path703,_path704,_path705,_path706,_path707,_path708,_path709,_path710,_path711,_path712,_path713,_path714,_path715,_path716,_path717,_path718,_path719,_path720,_path721,_path722,_path723,_path724,_path725,_path726,_path727,_path728,_path729,_path730,_path731,_path732,_path733,_path734,_path735,_path736,_path737,_path738,_path739,_path740,_path741,_path742,_path743,_path744,_path745,_path746,_path747,_path748,_path749,_path750,_path751,_path752,_path753,_path754,_path755,_path756,_path757,_path758,_path759,_path760,_path761,_path762,_path763,_path764,_path765,_path766,_path767,_path768,_path769,_path770,_path771,_path772,_path773,_path774,_path775,_path776,_path777,_path778,_path779,_path780,_path781,_path782,_path783,_path784,_path785,_path786,_path787,_path788,_path789,_path790,_path791,_path792,_path793,_path794,_path795,_path796,_path797,_path798,_path799,_path800,_path801,_path802,_path803,_path804,_path805,_path806,_path807,_path808,_path809,_path810,_path811,_path812,_path813,_path814,_path815,_path816,_path817,_path818,_path819,_path820,_path821,_path822,_path823,_path824,_path825,_path826,_path827,_path828,_path829,_path830,_path831,_path832,_path833,_path834,_path835,_path836,_path837,_path838,_path839,_path840,_path841,_path842,_path843,_path844,_path845,_path846,_path847,_path848,_path849,_path850,_path851,_path852,_path853,_path854,_path855,_path856,_path857,_path858,_path859,_path860,_path861,_path862,_path863,_path864,_path865,_path866,_path867,_path868,_path869,_path870,_path871,_path872,_path873,_path874,_path875,_path876,_path877,_path878,_path879,_path880,_path881,_path882,_path883,_path884,_path885,_path886,_path887,_path888,_path889,_path890,_path891,_path892,_path893,_path894,_path895,_path896,_path897,_path898,_path899,_path900,_path901,_path902,_path903,_path904,_path905,_path906,_path907,_path908,_path909,_path910,_path911,_path912,_path913,_path914,_path915,_path916,_path917,_path918,_path919,_path920,_path921,_path922,_path923,_path924,_path925,_path926,_path927,_path928,_path929,_path930,_path931,_path932,_path933,_path934,_path935,_path936,_path937,_path938,_path939,_path940,_path941,_path942,_path943,_path944,_path945,_path946,_path947,_path948,_path949,_path950,_path951,_path952,_path953,_path954,_path955,_path956,_path957,_path958,_path959,_path960,_path961,_path962,_path963,_path964,_path965,_path966,_path967,_path968,_path969,_path970,_path971,_path972,_path973,_path974,_path975,_path976,_path977,_path978,_path979,_path980,_path981,_path982,_path983,_path984,_path985,_path986,_path987,_path988,_path989,_path990,_path991,_path992,_path993,_path994,_path995,_path996,_path997,_path998,_path999,_path1000,_path1001,_path1002,_path1003,_path1004,_path1005,_path1006,_path1007,_path1008,_path1009,_path1010,_path1011,_path1012,_path1013,_path1014,_path1015,_path1016,_path1017,_path1018,_path1019,_path1020,_path1021,_path1022,_path1023,_path1024,_path1025,_path1026,_path1027,_path1028,_path1029,_path1030,_path1031,_path1032,_path1033,_path1034,_path1035,_path1036,_path1037,_path1038,_path1039,_path1040,_path1041,_path1042,_path1043,_path1044,_path1045,_path1046,_path1047,_path1048,_path1049,_path1050,_path1051,_path1052,_path1053,_path1054,_path1055,_path1056,_path1057,_path1058,_path1059,_path1060,_path1061,_path1062,_path1063,_path1064,_path1065,_path1066,_path1067,_path1068,_path1069,_path1070,_path1071,_path1072,_path1073,_path1074,_path1075,_path1076,_path1077,_path1078,_path1079,_path1080,_path1081,_path1082,_path1083,_path1084,_path1085,_path1086,_path1087,_path1088,_path1089,_path1090,_path1091,_path1092,_path1093,_path1094,_path1095,_path1096,_path1097,_path1098,_path1099,_path1100,_path1101,_path1102,_path1103,_path1104,_path1105,_path1106,_path1107,_path1108,_path1109,_path1110,_path1111,_path1112,_path1113,_path1114,_path1115,_path1116,_path1117,_path1118,_path1119,_path1120,_path1121,_path1122,_path1123,_path1124,_path1125,_path1126,_path1127,_path1128,_path1129,_path1130,_path1131,_path1132,_path1133,_path1134,_path1135,_path1136,_path1137,_path1138,_path1139,_path1140,_path1141,_path1142,_path1143,_path1144,_path1145,_path1146,_path1147,_path1148,_path1149,_path1150,_path1151,_path1152,_path1153,_path1154,_path1155,_path1156,_path1157,_path1158,_path1159,_path1160,_path1161,_path1162,_path1163,_path1164,_path1165,_path1166,_path1167,_path1168,_path1169,_path1170,_path1171,_path1172,_path1173,_path1174,_path1175,_path1176,_path1177,_path1178,_path1179,_path1180,_path1181,_path1182,_path1183,_path1184,_path1185,_path1186,_path1187,_path1188,_path1189,_path1190,_path1191,_path1192,_path1193,_path1194,_path1195,_path1196,_path1197,_path1198,_path1199,_path1200,_path1201,_path1202,_path1203,_path1204,_path1205,_path1206,_path1207,_path1208,_path1209,_path1210,_path1211,_path1212,_path1213,_path1214,_path1215,_path1216,_path1217,_path1218,_path1219,_path1220,_path1221,_path1222,_path1223,_path1224,_path1225,_path1226,_path1227,_path1228,_path1229,_path1230,_path1231,_path1232,_path1233,_path1234,_path1235,_path1236,_path1237,_path1238,_path1239,_path1240,_path1241,_path1242,_path1243,_path1244,_path1245,_path1246,_path1247,_path1248,_path1249,_path1250,_path1251,_path1252,_path1253,_path1254,_path1255,_path1256,_path1257,_path1258,_path1259,_path1260,_path1261,_path1262,_path1263,_path1264,_path1265,_path1266,_path1267,_path1268,_path1269,_path1270,_path1271,_path1272,_path1273,_path1274,_path1275,_path1276,_path1277,_path1278,_path1279,_path1280,_path1281,_path1282,_path1283,_path1284,_path1285,_path1286,_path1287,_path1288,_path1289,_path1290,_path1291,_path1292,_path1293,_path1294,_path1295,_path1296,_path1297,_path1298,_path1299,_path1300,_path1301,_path1302,_path1303,_path1304,_path1305,_path1306,_path1307,_path1308,_path1309,_path1310,_path1311,_path1312,_path1313,_path1314,_path1315,_path1316,_path1317,_path1318,_path1319,_path1320,_path1321,_path1322,_path1323,_path1324,_path1325,_path1326,_path1327,_path1328,_path1329,_path1330,_path1331,_path1332,_path1333,_path1334,_path1335,_path1336,_path1337,_path1338,_path1339,_path1340,_path1341,_path1342,_path1343,_path1344,_path1345,_path1346,_path1347,_path1348,_path1349,_path1350,_path1351,_path1352,_path1353,_path1354,_path1355,_path1356,_path1357,_path1358,_path1359,_path1360,_path1361,_path1362,_path1363,_path1364,_path1365,_path1366,_path1367,_path1368,_path1369,_path1370,_path1371,_path1372,_path1373,_path1374,_path1375,_path1376,_path1377,_path1378,_path1379,_path1380,_path1381,_path1382,_path1383,_path1384,_path1385,_path1386,_path1387,_path1388,_path1389,_path1390,_path1391,_path1392,_path1393,_path1394,_path1395,_path1396,_path1397,_path1398,_path1399,_path1400,_path1401,_path1402,_path1403,_path1404,_path1405,_path1406,_path1407,_path1408,_path1409,_path1410,_path1411,_path1412,_path1413,_path1414,_path1415,_path1416,_path1417,_path1418,_path1419,_path1420,_path1421,_path1422,_path1423,_path1424,_path1425,_path1426,_path1427,_path1428,_path1429,_path1430,_path1431,_path1432,_path1433,_path1434,_path1435,_path1436,_path1437,_path1438,_path1439,_path1440,_path1441,_path1442,_path1443,_path1444,_path1445,_path1446,_path1447,_path1448,_path1449,_path1450,_path1451,_path1452,_path1453,_path1454,_path1455,_path1456,_path1457,_path1458,_path1459,_path1460,_path1461,_path1462,_path1463,_path1464,_path1465,_path1466,_path1467,_path1468,_path1469,_path1470,_path1471,_path1472,_path1473,_path1474,_path1475,_path1476,_path1477,_path1478,_path1479,_path1480,_path1481,_path1482,_path1483,_path1484,_path1485,_path1486,_path1487,_path1488,_path1489,_path1490,_path1491,_path1492,_path1493,_path1494,_path1495,_path1496,_path1497,_path1498,_path1499,_path1500,_path1501,_path1502,_path1503,_path1504,_path1505,_path1506,_path1507,_path1508,_path1509,_path1510,_path1511,_path1512,_path1513,_path1514,_path1515,_path1516,_path1517,_path1518,_path1519,_path1520,_path1521,_path1522,_path1523,_path1524,_path1525,_path1526,_path1527,_path1528,_path1529,_path1530,_path1531,_path1532,_path1533,_path1534,_path1535,_path1536,_path1537,_path1538,_path1539,_path1540,_path1541,_path1542,_path1543,_path1544,_path1545,_path1546,_path1547,_path1548,_path1549,_path1550,_path1551,_path1552,_path1553,_path1554,_path1555,_path1556,_path1557,_path1558,_path1559,_path1560,_path1561,_path1562,_path1563,_path1564,_path1565,_path1566,_path1567,_path1568,_path1569,_path1570,_path1571,_path1572,_path1573,_path1574,_path1575,_path1576,_path1577,_path1578,_path1579,_path1580,_path1581,_path1582,_path1583,_path1584,_path1585,_path1586,_path1587,_path1588,_path1589,_path1590,_path1591,_path1592,_path1593,_path1594,_path1595,_path1596,_path1597,_path1598,_path1599,_path1600,_path1601,_path1602,_path1603,_path1604,_path1605,_path1606,_path1607,_path1608,_path1609,_path1610,_path1611,_path1612,_path1613,_path1614,_path1615,_path1616,_path1617,_path1618,_path1619,_path1620,_path1621,_path1622,_path1623,_path1624,_path1625,_path1626,_path1627,_path1628,_path1629,_path1630,_path1631,_path1632,_path1633,_path1634,_path1635,_path1636,_path1637,_path1638,_path1639,_path1640,_path1641,_path1642,_path1643,_path1644,_path1645,_path1646,_path1647,_path1648,_path1649,_path1650,_path1651,_path1652,_path1653,_path1654,_path1655,_path1656,_path1657,_path1658,_path1659,_path1660,_path1661,_path1662,_path1663,_path1664,_path1665,_path1666,_path1667,_path1668,_path1669,_path1670,_path1671,_path1672,_path1673,_path1674,_path1675,_path1676,_path1677,_path1678,_path1679,_path1680,_path1681,_path1682,_path1683,_path1684,_path1685,_path1686,_path1687,_path1688,_path1689,_path1690,_path1691,_path1692,_path1693,_path1694,_path1695,_path1696,_path1697,_path1698,_path1699,_path1700,_path1701,_path1702,_path1703,_path1704,_path1705,_path1706,_path1707,_path1708,_path1709,_path1710,_path1711,_path1712,_path1713,_path1714,_path1715,_path1716,_path1717,_path1718,_path1719,_path1720,_path1721,_path1722,_path1723,_path1724,_path1725,_path1726,_path1727,_path1728,_path1729,_path1730,_path1731,_path1732,_path1733,_path1734,_path1735,_path1736,_path1737,_path1738,_path1739,_path1740,_path1741,_path1742,_path1743,_path1744,_path1745,_path1746,_path1747,_path1748,_path1749,_path1750,_path1751,_path1752,_path1753,_path1754,_path1755,_path1756,_path1757,_path1758,_path1759,_path1760,_path1761,_path1762,_path1763,_path1764,_path1765,_path1766,_path1767,_path1768,_path1769,_path1770,_path1771,_path1772,_path1773,_path1774,_path1775,_path1776,_path1777,_path1778,_path1779,_path1780,_path1781,_path1782,_path1783,_path1784,_path1785,_path1786,_path1787,_path1788,_path1789,_path1790,_path1791,_path1792,_path1793,_path1794,_path1795,_path1796,_path1797,_path1798,_path1799,_path1800,_path1801,_path1802,_path1803,_path1804,_path1805,_path1806,_path1807,_path1808,_path1809,_path1810,_path1811,_path1812,_path1813,_path1814,_path1815,_path1816,_path1817,_path1818,_path1819,_path1820,_path1821,_path1822,_path1823,_path1824,_path1825,_path1826,_path1827,_path1828,_path1829,_path1830,_path1831,_path1832,_path1833,_path1834,_path1835,_path1836,_path1837,_path1838,_path1839,_path1840,_path1841,_path1842,_path1843,_path1844,_path1845,_path1846,_path1847,_path1848,_path1849,_path1850,_path1851,_path1852,_path1853,_path1854,_path1855,_path1856,_path1857,_path1858,_path1859,_path1860,_path1861,_path1862,_path1863,_path1864,_path1865,_path1866,_path1867,_path1868,_path1869,_path1870,_path1871,_path1872,_path1873,_path1874,_path1875,_path1876,_path1877,_path1878,_path1879,_path1880,_path1881,_path1882,_path1883,_path1884,_path1885,_path1886,_path1887,_path1888,_path1889,_path1890,_path1891,_path1892,_path1893,_path1894,_path1895,_path1896,_path1897,_path1898,_path1899,_path1900,_path1901,_path1902,_path1903,_path1904,_path1905,_path1906,_path1907,_path1908,_path1909,_path1910,_path1911,_path1912,_path1913,_path1914,_path1915,_path1916,_path1917,_path1918,_path1919,_path1920,_path1921,_path1922,_path1923,_path1924,_path1925,_path1926,_path1927,_path1928,_path1929,_path1930,_path1931,_path1932,_path1933,_path1934,_path1935,_path1936,_path1937,_path1938,_path1939,_path1940,_path1941,_path1942,_path1943,_path1944,_path1945,_path1946,_path1947,_path1948,_path1949,_path1950,_path1951,_path1952,_path1953,_path1954,_path1955,_path1956,_path1957,_path1958,_path1959,_path1960,_path1961,_path1962,_path1963,_path1964,_path1965,_path1966,_path1967,_path1968,_path1969,_path1970,_path1971,_path1972,_path1973,_path1974,_path1975,_path1976,_path1977,_path1978,_path1979,_path1980,_path1981,_path1982,_path1983,_path1984,_path1985,_path1986,_path1987,_path1988,_path1989,_path1990,_path1991,_path1992,_path1993,_path1994,_path1995,_path1996,_path1997,_path1998,_path1999,_path2000,_path2001,_path2002,_path2003,_path2004,_path2005,_path2006,_path2007,_path2008,_path2009,_path2010,_path2011,_path2012,_path2013,_path2014,_path2015,_path2016,_path2017,_path2018,_path2019,_path2020,_path2021,_path2022,_path2023,_path2024,_path2025,_path2026,_path2027,_path2028,_path2029,_path2030,_path2031,_path2032,_path2033,_path2034,_path2035,_path2036,_path2037,_path2038,_path2039,_path2040,_path2041,_path2042,_path2043,_path2044,_path2045,_path2046,_path2047,_path2048,_path2049,_path2050,_path2051,_path2052,_path2053,_path2054,_path2055,_path2056,_path2057,_path2058,_path2059,_path2060,_path2061,_path2062,_path2063,_path2064,_path2065,_path2066,_path2067,_path2068,_path2069,_path2070,_path2071,_path2072,_path2073,_path2074,_path2075,_path2076,_path2077,_path2078,_path2079,_path2080,_path2081,_path2082,_path2083,_path2084,_path2085,_path2086,_path2087,_path2088,_path2089,_path2090,_path2091,_path2092,_path2093,_path2094,_path2095,_path2096,_path2097,_path2098,_path2099,_path2100,_path2101,_path2102,_path2103,_path2104,_path2105,_path2106,_path2107,_path2108,_path2109,_path2110,_path2111,_path2112,_path2113,_path2114,_path2115,_path2116,_path2117,_path2118,_path2119,_path2120,_path2121,_path2122,_path2123,_path2124,_path2125,_path2126,_path2127,_path2128,_path2129,_path2130,_path2131,_path2132,_path2133,_path2134,_path2135,_path2136,_path2137,_path2138,_path2139,_path2140,_path2141,_path2142,_path2143,_path2144,_path2145,_path2146,_path2147,_path2148,_path2149,_path2150,_path2151,_path2152,_path2153,_path2154,_path2155,_path2156,_path2157,_path2158,_path2159,_path2160,_path2161,_path2162,_path2163,_path2164,_path2165,_path2166,_path2167,_path2168,_path2169,_path2170,_path2171,_path2172,_path2173,_path2174,_path2175,_path2176,_path2177,_path2178,_path2179,_path2180,_path2181,_path2182,_path2183,_path2184,_path2185,_path2186,_path2187,_path2188,_path2189,_path2190,_path2191,_path2192,_path2193,_path2194,_path2195,_path2196,_path2197,_path2198,_path2199,_path2200,_path2201,_path2202,_path2203,_path2204,_path2205,_path2206,_path2207,_path2208,_path2209,_path2210,_path2211,_path2212,_path2213,_path2214,_path2215,_path2216,_path2217,_path2218,_path2219,_path2220,_path2221,_path2222,_path2223,_path2224,_path2225,_path2226,_path2227,_path2228,_path2229,_path2230,_path2231,_path2232,_path2233,_path2234,_path2235,_path2236,_path2237,_path2238,_path2239,_path2240,_path2241,_path2242,_path2243,_path2244,_path2245,_path2246,_path2247,_path2248,_path2249,_path2250,_path2251,_path2252,_path2253,_path2254,_path2255,_path2256,_path2257,_path2258,_path2259,_path2260,_path2261,_path2262,_path2263,_path2264,_path2265,_path2266,_path2267,_path2268,_path2269,_path2270,_path2271,_path2272,_path2273,_path2274,_path2275,_path2276,_path2277,_path2278,_path2279,_path2280,_path2281,_path2282,_path2283;function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r]);}return n;},_extends.apply(null,arguments);}import*as React from\"react\";function SvgHeaderImg(_ref,svgRef){let{title,titleId,...props}=_ref;return/*#__PURE__*/React.createElement(\"svg\",_extends({xmlns:\"http://www.w3.org/2000/svg\",xmlnsXlink:\"http://www.w3.org/1999/xlink\",width:905,enableBackground:\"new 0 0 905 909\",xmlSpace:\"preserve\",height:909,style:{},ref:svgRef,\"aria-labelledby\":titleId},props),title?/*#__PURE__*/React.createElement(\"title\",{id:titleId},title):null,_rect||(_rect=/*#__PURE__*/React.createElement(\"rect\",{id:\"backgroundrect\",width:\"100%\",height:\"100%\",x:0,y:0,fill:\"none\",stroke:\"none\"})),/*#__PURE__*/React.createElement(\"g\",{className:\"currentLayer\",style:{}},_title||(_title=/*#__PURE__*/React.createElement(\"title\",null,\"Layer 1\")),_path||(_path=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M298.468658,910.000000   C296.080902,909.472961 294.185394,908.827576 292.238586,908.439636   C284.459076,906.889771 276.663635,905.419861 268.442535,903.488281   C264.465271,898.588135 258.892303,899.460449 254.251190,898.199829   C248.885818,896.742554 243.137985,896.727722 237.585663,895.891052   C236.649017,895.749939 235.861206,894.620972 235.372757,893.947754   C240.774567,894.284668 245.806046,894.661865 250.842896,894.942261   C253.206039,895.073853 255.579559,895.019226 258.069061,895.271362   C258.465210,895.676086 258.740692,895.858521 259.268036,896.310059   C260.756744,896.649841 261.993561,896.720581 263.587585,896.817627   C266.436096,896.884705 268.947388,897.118958 271.408417,896.865417   C272.315704,896.771912 273.104462,895.528137 274.225708,894.832825   C274.689331,894.876770 274.874512,894.897034 275.119446,895.287231   C276.600861,895.931885 278.021149,896.417725 279.444611,896.427185   C281.186584,896.438721 282.931213,896.051208 284.674713,895.836182   C284.902283,896.311646 285.129883,896.787170 285.357452,897.262634   C285.783691,896.554077 286.037445,895.549866 286.663910,895.184509   C291.051971,892.625122 292.637054,889.501404 291.203674,884.109863   C289.406921,877.351501 289.420685,870.360901 291.799072,863.441040   C292.667419,860.914490 291.929810,857.835999 292.102051,854.694092   C292.484161,851.240112 292.689056,848.101379 292.928772,844.643555   C292.926208,843.899231 292.888855,843.473938 292.890961,842.636169   C292.409149,841.105652 291.887848,839.987610 291.522095,838.507935   C289.562469,834.270569 288.338684,829.273071 285.154419,826.742676   C277.522003,820.677429 269.083344,815.582642 260.728241,810.493103   C257.478027,808.513306 253.577454,807.601196 249.954651,805.826660   C248.174866,801.401733 251.614822,801.393982 253.714905,801.165588   C256.348358,800.879089 257.964539,800.327393 259.617828,797.798340   C261.372589,795.113953 264.729218,793.474121 267.800995,798.816833   C269.061005,795.747681 269.947754,793.587646 270.833557,791.429932   C272.146606,791.040649 273.495392,790.640808 276.221802,789.832581   C273.520203,785.788818 271.249542,782.390076 268.988220,778.994446   C268.997559,778.997559 268.990326,778.979431 269.366760,778.991455   C272.258331,780.489746 274.773407,781.976135 277.288483,783.462524   C277.103271,783.791687 276.918030,784.120789 276.732788,784.449951   C277.684357,784.170715 278.635925,783.891479 279.776733,783.556702   C280.053406,788.838623 281.890747,792.313171 288.857910,792.632324   C288.904907,787.033020 288.951233,781.516541 289.003387,775.574463   C287.892700,771.110840 286.682922,767.094788 285.723083,763.019836   C285.472900,761.957520 285.874146,760.664734 286.270416,759.585938   C286.359589,759.343201 287.854919,759.268188 288.404022,759.604187   C290.654724,760.981812 292.789856,762.548157 295.023682,764.418945   C295.722717,767.861145 296.365631,770.929321 296.955597,774.405029   C295.860901,782.888245 294.819183,790.963989 293.777466,799.039734   C294.270599,799.100769 294.763733,799.161804 295.256897,799.222839   C296.338135,797.355225 297.419403,795.487610 298.500671,793.619995   C298.908661,793.607056 299.316620,793.594116 299.724579,793.581116   C300.075317,795.851990 300.426086,798.122864 300.632446,799.459106   C298.305969,800.880005 296.089355,801.532532 295.241211,802.984436   C294.616943,804.053162 295.782043,806.167114 296.149780,807.815369   C296.554962,807.725403 296.960114,807.635437 297.365265,807.545410   C297.850464,806.150696 298.335663,804.755920 298.900818,803.131409   C303.221619,807.884949 303.134399,807.869629 302.130951,813.578613   C301.887848,814.961670 302.522430,816.478333 302.582214,817.940552   C302.653595,819.686646 302.650818,821.451111 302.477142,823.187378   C302.301514,824.942871 301.877716,826.673584 301.562592,828.415161   C304.808838,826.307678 307.809387,824.416809 308.590149,821.850586   C310.606140,815.224304 311.618225,808.294739 313.081909,801.497192   C313.562531,799.264954 314.012115,796.996704 314.806488,794.868225   C316.055023,791.523071 317.583771,788.282471 318.996582,784.579468   C320.079895,778.600525 320.065826,772.680481 324.624908,768.297729   C325.288971,767.659363 325.790741,765.742310 325.380432,765.264282   C320.119141,759.133728 327.230865,758.907532 328.492004,756.495483   C331.273682,758.032532 333.321228,759.142517 335.347961,760.289185   C338.160309,761.880371 340.527405,763.547119 337.576904,767.129272   C334.941528,770.328735 332.506897,773.693542 329.763733,777.101685   C329.268860,777.428162 329.087769,777.700745 328.691925,778.182739   C327.591736,779.886475 326.800201,781.443237 325.691467,783.161377   C324.570282,786.550293 323.766235,789.777771 322.962860,793.340454   C322.636993,794.443848 322.310455,795.212036 321.662781,796.026184   C320.915680,796.726990 320.489807,797.381836 320.048889,798.433350   C320.017853,799.888550 320.001862,800.947083 319.763245,802.300415   C318.687103,805.719177 317.833588,808.843262 316.661438,812.016968   C315.914612,812.714905 315.486359,813.363098 315.044220,814.384033   C315.010590,815.502197 314.990845,816.247803 314.687805,817.267456   C313.923737,820.686096 313.442963,823.830750 312.566162,826.992310   C311.446808,828.231995 310.761322,829.479187 309.990509,830.671265   C309.051453,832.123413 308.040680,833.529297 307.026306,834.708008   C306.822906,834.203979 306.654022,833.947205 306.485168,833.690430   C306.318604,834.124451 306.152039,834.558472 305.715393,835.227112   C303.821259,840.752991 302.107056,846.019226 300.624725,851.349915   C300.140961,853.089600 300.261230,854.997314 300.105255,856.828125   C300.627075,856.962891 301.148926,857.097595 301.670746,857.232361   C300.189453,858.428955 298.708130,859.625549 297.168884,860.868958   C298.233398,861.785645 299.008484,862.453064 299.998352,863.305420   C297.399933,864.529541 295.247589,865.543579 293.095245,866.557556   C293.288177,867.004883 293.481140,867.452148 293.674072,867.899414   C295.226746,867.409302 296.779388,866.919128 298.374939,866.415466   C299.531708,867.869324 300.654297,869.280212 301.585175,870.450134   C300.730713,871.970276 299.219269,873.391785 299.428589,874.483093   C301.494171,885.251953 303.845276,895.966003 306.049408,906.383484   C310.867401,905.609314 314.783783,904.980042 317.973511,904.467529   C316.869965,899.980652 315.871521,895.921021 314.684326,891.093933   C316.743439,892.004944 317.871826,892.504150 319.045349,893.351562   C320.677460,894.846741 322.264404,895.993591 323.924591,897.451782   C324.683167,898.166504 325.368469,898.569946 326.087891,899.296082   C326.743896,900.097900 327.365814,900.577026 328.308807,901.089661   C329.058624,901.149231 329.487335,901.175171 330.106964,901.471313   C332.208405,902.797302 334.118988,903.853088 336.295593,905.133545   C338.398621,906.281128 340.235596,907.203979 342.298889,908.294067   C342.683472,908.974243 342.841736,909.487122 343.000000,910.000000   C328.312439,910.000000 313.624878,910.000000 298.468658,910.000000  z\",id:\"svg_2\"})),_path2||(_path2=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M752.813843,832.015991   C754.290283,835.540161 755.750427,839.071106 757.246582,842.586792   C760.115051,849.327271 758.520020,855.420288 755.145691,861.595886   C751.685303,867.928955 748.835876,874.598206 745.786011,881.151489   C745.092346,882.641968 744.583435,884.235657 744.145264,885.824768   C742.392761,892.181274 738.583801,894.647583 731.731445,894.466736   C727.626892,894.358398 723.471008,897.074524 719.299622,898.399841   C713.270935,900.315247 707.298828,903.257263 701.140808,903.753357   C684.703430,905.077637 668.173462,905.211243 651.694031,906.078857   C646.400452,906.357544 640.710693,905.326355 636.049438,909.616089   C635.555542,910.000000 635.111084,910.000000 634.375732,909.646118   C636.049194,906.183594 638.013611,903.074951 639.982544,899.724121   C639.987000,899.481934 639.998291,898.997559 640.382751,898.915527   C641.510742,895.556519 642.254272,892.279480 643.428223,889.001465   C646.325989,888.629639 648.793396,888.258850 651.630188,887.911865   C656.327637,889.009583 660.607849,890.474915 665.001465,891.012085   C667.681274,891.339722 670.699219,889.430725 673.276733,889.952332   C678.180725,890.944824 681.973633,888.856079 686.314941,887.132996   C688.421509,887.845276 690.207092,888.409790 692.042236,889.307007   C694.722107,889.425903 697.352539,889.211975 700.236694,889.161987   C701.713623,889.814941 703.075439,890.103455 704.131104,890.834290   C706.415649,892.415771 707.925598,892.995789 709.273071,889.600281   C709.721924,888.469421 712.328735,887.978455 714.037842,887.628113   C715.600647,887.307800 717.549866,888.107300 718.852905,887.458191   C720.984314,886.396545 722.671021,884.477783 724.649292,883.066162   C729.403992,879.673340 734.218933,876.364990 739.332092,872.870483   C740.329468,871.282288 741.107544,869.883911 741.651184,868.399719   C742.233398,866.810303 742.126160,864.143433 743.130737,863.670959   C748.609680,861.094177 750.802002,856.767151 752.783447,851.233093   C754.117188,847.508484 754.390076,844.607178 753.172668,841.232239   C752.397766,839.084167 751.167419,837.060486 750.702332,834.862244   C750.540344,834.096741 752.061401,832.975037 752.813843,832.015991  M745.184021,865.332153   C744.518066,865.747009 743.852173,866.161804 743.186218,866.576538   C743.589966,866.988586 743.993713,867.400635 744.397522,867.812622   C744.821899,867.152588 745.246338,866.492615 745.184021,865.332153  z\",id:\"svg_3\"})),_path3||(_path3=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M343.444153,910.000000   C342.841736,909.487122 342.683472,908.974243 342.246704,907.923218   C340.878784,905.883484 340.053680,904.033630 338.639313,902.960327   C336.400146,901.261108 335.992859,903.012634 336.029541,904.908936   C334.118988,903.853088 332.208405,902.797302 330.211548,901.188416   C329.416840,899.423584 328.708405,898.211792 328.331268,896.857483   C331.881317,895.504761 334.586609,893.905823 334.009521,889.437378   C335.344269,889.171753 336.720093,888.912109 337.826263,889.343628   C341.435242,890.751282 344.852203,893.459167 348.510986,893.785767   C361.618134,894.955994 374.787842,895.606323 387.946960,895.945129   C395.633942,896.143127 403.345764,895.375854 411.463593,895.033203   C414.557343,894.614685 417.233917,894.205811 420.307251,893.860962   C422.192108,893.346680 423.680237,892.768311 425.450317,892.176514   C426.106964,892.164368 426.481689,892.165588 426.939148,892.502686   C427.549042,893.429932 428.055634,894.510437 428.606659,894.533569   C432.250488,894.686707 435.903900,894.612732 439.885620,894.612732   C439.390137,897.678650 439.981689,900.593201 435.983612,902.477539   C432.566345,904.088135 429.963196,907.426025 427.000000,910.000000   C409.979095,910.000000 392.958221,910.000000 375.467957,909.631836   C374.765228,908.262939 374.531860,907.262207 374.206268,905.866211   C372.564758,907.079590 371.408447,907.934326 370.569427,908.554504   C367.820435,906.906372 365.392242,905.450623 362.651001,903.858887   C359.909027,903.348206 357.940430,898.407349 354.682129,902.988281   C353.911865,902.998108 353.471710,903.003906 352.995972,902.671631   C351.628265,901.560364 350.296143,900.787231 348.612183,900.073120   C347.684296,900.888855 347.065063,901.617126 346.542328,902.409058   C345.752411,903.605713 345.029694,904.846741 344.278381,906.068848   C346.224487,906.472107 348.156860,907.000183 350.123535,907.215881   C350.891083,907.300110 351.735657,906.681763 353.988647,905.851318   C352.399780,908.056946 351.699890,909.028503 351.000000,910.000000   C348.629425,910.000000 346.258881,910.000000 343.444153,910.000000  M332.816895,897.239685   C332.874786,897.413574 332.932678,897.587524 332.990540,897.761414   C333.046906,897.586243 333.103241,897.411133 332.816895,897.239685  z\",id:\"svg_4\"})),_path4||(_path4=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M550.000000,910.000000   C549.250000,910.000000 548.500000,910.000000 547.329529,909.647583   C545.213623,907.353821 543.830322,907.143433 543.000000,910.000000   C542.250000,910.000000 541.500000,910.000000 540.253052,909.695801   C539.226929,908.678833 538.697754,907.966064 537.676819,906.590759   C537.343506,908.269714 537.171753,909.134827 537.000000,910.000000   C536.250000,910.000000 535.500000,910.000000 534.351074,909.655518   C533.369934,908.655212 532.787720,907.999329 532.205566,907.343506   C531.803711,908.229004 531.401855,909.114502 531.000000,910.000000   C529.611084,910.000000 528.222229,910.000000 526.297852,909.648315   C517.494995,905.286743 509.227692,901.276794 500.963165,896.884033   C501.645966,893.671570 502.325928,890.841919 503.336365,888.000366   C504.107117,887.965637 504.547394,887.942871 505.311523,887.929077   C506.439911,887.301514 507.244446,886.665039 508.435272,886.020996   C511.534760,885.986084 514.247925,885.958801 517.342651,885.993835   C520.101685,887.281860 522.463257,889.421631 524.861511,889.463501   C527.044250,889.501587 528.667297,894.613953 531.478821,890.245728   C533.249023,890.899414 534.657349,891.576294 536.089050,892.199829   C541.189148,894.421204 546.541748,894.580139 551.984985,894.461792   C552.666992,896.547180 553.332275,898.274841 553.998779,900.001221   C554.000000,900.000000 554.002441,899.997559 553.612427,900.003418   C552.146484,900.308289 551.070496,900.607239 550.814636,900.678345   C552.262268,902.464233 553.535767,904.035278 555.011475,905.855652   C555.887268,905.271912 557.089722,904.470459 558.515442,903.520203   C560.994751,909.889709 562.649292,903.561523 564.804504,902.964478   C565.671936,904.082825 566.423340,905.051453 566.785583,905.518494   C568.858154,904.919312 570.441223,904.461609 572.071899,904.352966   C574.318481,905.473816 577.949280,902.996948 579.376038,900.019409   C582.029968,901.828247 584.312683,903.622437 586.745544,905.534607   C589.494385,903.063110 592.267578,900.569763 595.380554,898.053467   C597.157471,898.356689 598.594482,898.682922 600.263184,899.012207   C600.494812,899.015259 600.958069,899.020447 601.219727,899.030884   C601.655945,899.039795 601.830505,899.038330 602.043579,899.408386   C603.119629,901.546936 604.157349,903.313904 605.176697,905.406006   C605.119690,906.163513 605.081055,906.595886 604.717529,906.885376   C603.261841,906.494995 602.130920,906.247498 600.999451,905.701538   C600.914307,904.874817 600.829712,904.346436 600.745117,903.818115   C600.531616,903.887390 600.318176,903.956665 600.104736,904.025940   C600.403137,904.683960 600.701599,905.341980 600.882446,906.279907   C600.514343,907.316284 600.263794,908.072815 599.674683,908.875671   C598.269409,908.609192 597.202576,908.296326 596.000000,907.943604   C596.000000,908.735840 596.000000,909.367920 596.000000,910.000000   C583.979126,910.000000 571.958191,910.000000 559.416016,909.666626   C557.929810,909.555481 556.964905,909.777771 556.000000,910.000000   C555.250000,910.000000 554.500000,910.000000 553.389893,909.629700   C552.395203,908.587524 551.760742,907.915649 551.126282,907.243774   C550.750854,908.162537 550.375427,909.081238 550.000000,910.000000  z\",id:\"svg_5\"})),_path5||(_path5=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M600.031555,899.009155   C598.594482,898.682922 597.157471,898.356689 594.973999,898.021606   C589.854370,897.312927 585.481140,896.613159 580.877441,895.660339   C579.111694,895.559753 577.576477,895.712158 576.038025,895.506348   C576.033997,894.432312 576.033203,893.716431 576.348511,892.862671   C580.324829,892.524719 583.984863,892.165710 587.645264,892.162354   C592.988708,892.157410 598.530579,893.373169 603.630493,892.326904   C611.610962,890.689697 621.893494,896.277527 623.580322,904.301208   C627.331848,905.644958 630.583313,905.663757 633.680176,902.434326   C635.096802,900.957031 637.837769,900.749695 639.978027,899.966309   C638.013611,903.074951 636.049194,906.183594 634.042358,909.646118   C624.645752,910.000000 615.291565,910.000000 605.429626,909.629211   C604.962097,908.515076 605.002258,907.771667 605.042358,907.028320   C605.081055,906.595886 605.119690,906.163513 605.514526,905.443970   C611.401306,907.384583 611.439819,901.071411 614.791748,899.350342   C610.769104,898.232483 606.838684,897.790894 602.897766,897.485718   C602.641785,897.465881 602.304565,898.495422 602.005127,899.036804   C601.830505,899.038330 601.655945,899.039795 601.148987,898.852661   C600.554932,898.779114 600.293274,898.894104 600.031555,899.009155  z\",id:\"svg_7\"})),_path6||(_path6=/*#__PURE__*/React.createElement(\"path\",{fill:\"#312216\",opacity:1,stroke:\"none\",d:\" M436.146179,907.400879   C435.630096,907.647095 435.114014,907.893372 434.149384,907.860291   C433.136169,908.028198 432.571503,908.475464 432.006836,908.922668   C431.784912,909.164062 431.556641,909.399292 431.161011,909.814209   C429.933319,910.000000 428.866669,910.000000 427.399994,910.000000   C429.963196,907.426025 432.566345,904.088135 435.983612,902.477539   C439.981689,900.593201 439.390137,897.678650 439.885620,894.612732   C435.903900,894.612732 432.250488,894.686707 428.606659,894.533569   C428.055634,894.510437 427.549042,893.429932 427.376587,892.444458   C429.799530,892.050476 431.867767,892.050476 434.945862,892.050476   C432.332703,890.714294 430.671844,889.864990 429.154785,888.675415   C429.528748,886.893311 429.758881,885.451538 429.994690,884.004761   C430.000336,883.999817 430.011353,883.988403 430.389648,883.989685   C432.517548,885.344788 434.267151,886.698547 436.120392,888.251770   C436.406128,888.707520 436.650391,888.870972 437.066742,889.202759   C437.449371,889.959290 437.721985,890.454773 438.147705,891.212402   C438.865082,891.648071 439.429321,891.821594 440.294739,892.141479   C445.335785,894.977295 443.570160,899.116699 442.646271,903.048828   C440.498505,903.641968 438.686340,904.179932 436.305969,904.886597   C436.285217,905.213074 436.215729,906.306946 436.146179,907.400879  z\",id:\"svg_8\"})),_path7||(_path7=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6F4B30\",opacity:1,stroke:\"none\",d:\" M362.964050,903.994873   C365.392242,905.450623 367.820435,906.906372 370.569427,908.554504   C371.408447,907.934326 372.564758,907.079590 374.206268,905.866211   C374.531860,907.262207 374.765228,908.262939 374.999329,909.631836   C367.312408,910.000000 359.624847,910.000000 351.468628,910.000000   C351.699890,909.028503 352.399780,908.056946 353.988647,905.851318   C351.735657,906.681763 350.891083,907.300110 350.123535,907.215881   C348.156860,907.000183 346.224487,906.472107 344.278381,906.068848   C345.029694,904.846741 345.752411,903.605713 346.542328,902.409058   C347.065063,901.617126 347.684296,900.888855 348.773438,900.381592   C350.534912,901.424011 351.783234,902.216919 353.031586,903.009766   C353.471710,903.003906 353.911865,902.998108 355.061249,903.009277   C357.127777,903.712280 358.521088,904.337158 359.827911,905.108643   C360.545166,905.531982 361.116547,906.202576 361.753662,906.761658   C362.157104,905.839355 362.560577,904.917114 362.964050,903.994873  M354.466492,905.417053   C354.526184,905.177185 354.585876,904.937378 354.645569,904.697510   C354.497803,904.851990 354.350006,905.006470 354.466492,905.417053  z\",id:\"svg_9\"})),_path8||(_path8=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M604.717590,906.885376   C605.002258,907.771667 604.962097,908.515076 604.960938,909.629211   C604.555542,910.000000 604.111084,910.000000 603.371948,909.690308   C602.948669,908.840393 602.820068,908.300232 602.691467,907.760010   C602.510620,907.769775 602.329773,907.779602 602.148926,907.789368   C602.099243,908.526245 602.049622,909.263123 602.000000,910.000000   C601.555542,910.000000 601.111084,910.000000 600.350708,909.707520   C600.027588,909.219727 600.020386,909.024536 600.013245,908.829285   C600.263794,908.072815 600.514343,907.316284 600.882446,906.279907   C602.130920,906.247498 603.261841,906.494995 604.717590,906.885376  z\",id:\"svg_10\"})),_path9||(_path9=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M550.375000,910.000000   C550.375427,909.081238 550.750854,908.162537 551.126282,907.243774   C551.760742,907.915649 552.395203,908.587524 553.014893,909.629700   C552.250000,910.000000 551.500000,910.000000 550.375000,910.000000  z\",id:\"svg_11\"})),_path10||(_path10=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M531.375000,910.000000   C531.401855,909.114502 531.803711,908.229004 532.205566,907.343506   C532.787720,907.999329 533.369934,908.655212 533.976074,909.655518   C533.250000,910.000000 532.500000,910.000000 531.375000,910.000000  z\",id:\"svg_12\"})),_path11||(_path11=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M543.399963,910.000000   C543.830322,907.143433 545.213623,907.353821 546.954529,909.647583   C545.933289,910.000000 544.866638,910.000000 543.399963,910.000000  z\",id:\"svg_13\"})),_path12||(_path12=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M537.375000,910.000000   C537.171753,909.134827 537.343506,908.269714 537.676819,906.590759   C538.697754,907.966064 539.226929,908.678833 539.878052,909.695801   C539.250000,910.000000 538.500000,910.000000 537.375000,910.000000  z\",id:\"svg_14\"})),_path13||(_path13=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M556.375000,910.000000   C556.964905,909.777771 557.929810,909.555481 558.947388,909.666626   C558.250000,910.000000 557.500000,910.000000 556.375000,910.000000  z\",id:\"svg_15\"})),_path14||(_path14=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M599.674683,908.875671   C600.020386,909.024536 600.027588,909.219727 600.017334,909.707520   C598.933289,910.000000 597.866638,910.000000 596.399963,910.000000   C596.000000,909.367920 596.000000,908.735840 596.000000,907.943604   C597.202576,908.296326 598.269409,908.609192 599.674683,908.875671  z\",id:\"svg_16\"})),_path15||(_path15=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M602.250000,910.000000   C602.049622,909.263123 602.099243,908.526245 602.148926,907.789368   C602.329773,907.779602 602.510620,907.769775 602.691467,907.760010   C602.820068,908.300232 602.948669,908.840393 603.038635,909.690308   C603.000000,910.000000 602.500000,910.000000 602.250000,910.000000  z\",id:\"svg_17\"})),_path16||(_path16=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M752.762695,831.644409   C752.061401,832.975037 750.540344,834.096741 750.702332,834.862244   C751.167419,837.060486 752.397766,839.084167 753.172668,841.232239   C754.390076,844.607178 754.117188,847.508484 752.783447,851.233093   C750.802002,856.767151 748.609680,861.094177 743.130737,863.670959   C742.126160,864.143433 742.233398,866.810303 741.651184,868.399719   C741.107544,869.883911 740.329468,871.282288 739.081909,872.656372   C738.509338,871.235535 738.509338,869.876770 738.509338,868.517212   C736.196411,868.689026 734.103088,868.844482 732.005249,868.667419   C731.987854,867.891663 731.974976,867.448364 732.353760,867.001587   C734.876099,866.098816 737.006958,865.199463 740.441284,863.750000   C738.145813,862.341064 737.054443,861.671265 735.963135,860.598877   C735.512512,857.876648 735.062012,855.556885 734.588074,853.116760   C733.110657,853.568115 732.185547,853.850708 731.182861,853.750122   C731.052246,852.591431 730.999146,851.815979 730.973877,851.018311   C731.001709,850.996155 731.054077,850.947998 731.418335,850.961060   C733.475525,850.616638 735.563293,850.766968 733.950134,847.819763   C733.498047,846.993835 734.636963,845.297119 735.314575,844.194458   C736.316711,844.564392 737.050354,844.739624 737.783997,844.914917   C737.981689,842.178284 738.643799,839.368469 738.227722,836.728638   C737.904053,834.675537 735.885315,832.944641 735.235657,830.877136   C733.631653,825.771912 729.617126,822.566589 724.177246,821.729919   C722.341125,821.447510 720.713135,819.728149 719.024963,818.612732   C718.404968,818.203064 717.959656,817.367981 717.308838,817.191711   C712.618958,815.921936 707.896729,814.771606 703.653503,813.701538   C703.835693,811.195312 703.915405,810.098999 703.840332,808.692139   C698.105164,802.703064 691.838318,798.854614 683.305786,800.596680   C683.537476,802.951904 683.752502,805.138306 684.111877,808.792419   C682.336304,806.830627 681.583679,805.999084 681.075684,805.437805   C678.509827,807.089233 676.263000,808.535339 673.892151,809.700562   C673.177917,808.613831 672.587708,807.807922 671.846680,806.650391   C671.855835,804.477966 672.020081,802.657593 672.174255,800.836365   C672.277954,799.611450 672.760010,798.251587 672.395752,797.182800   C670.771057,792.415894 671.300476,791.558838 676.921936,791.210632   C676.305969,788.910583 679.117554,785.303528 674.019165,784.694702   C674.362976,783.930481 674.685120,783.463989 675.398560,782.996948   C678.505920,783.674438 682.551758,776.869080 683.730347,785.287903   C685.586975,782.750549 686.942261,780.898193 689.057556,778.007324   C685.746948,778.007324 683.375916,778.007324 680.948730,777.658081   C679.731323,776.492920 678.409241,775.832214 677.441528,774.829407   C675.262085,772.571106 675.487366,771.060547 679.219116,771.237549   C681.150024,770.558838 682.859375,769.642578 684.568726,768.726318   C684.568726,768.726318 684.869873,768.742065 684.937866,769.277649   C685.612610,774.183533 688.838867,772.840759 691.477173,772.780273   C691.477173,772.780273 691.832397,772.840271 691.933655,773.344849   C694.295410,775.260681 696.555908,776.671936 698.816345,778.083252   C698.816345,778.083252 698.919861,778.046570 698.977661,778.460449   C700.188538,779.504150 701.341614,780.133972 702.494690,780.763794   C702.494690,780.763794 702.830566,780.766785 702.950378,781.244202   C703.988342,782.164307 704.906555,782.606995 705.824707,783.049683   C719.525574,788.968628 728.577820,800.930481 740.183411,809.585510   C747.291382,814.886414 750.346741,822.990417 752.762695,831.644409  M699.612915,798.190552   C698.830322,796.556519 698.047668,794.922546 697.178711,793.108337   C695.739502,795.202148 694.655518,796.779114 693.372314,798.645935   C695.428772,798.645935 697.286865,798.645935 699.612915,798.190552  z\",id:\"svg_18\"})),_path17||(_path17=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M294.967560,764.044983   C292.789856,762.548157 290.654724,760.981812 288.404022,759.604187   C287.854919,759.268188 286.359589,759.343201 286.270416,759.585938   C285.874146,760.664734 285.472900,761.957520 285.723083,763.019836   C286.682922,767.094788 287.892700,771.110840 288.684784,775.548645   C287.520355,774.801697 286.680328,773.655029 285.635590,772.228821   C285.191833,773.790405 284.782867,775.229492 283.989288,778.022095   C282.303436,772.793274 281.016541,768.801941 279.673401,764.636108   C273.769928,767.641174 270.366608,772.514160 268.990326,778.979431   C268.990326,778.979431 268.997559,778.997559 268.620667,779.035400   C262.299896,780.042542 264.576385,784.870789 264.384003,788.923035   C262.794159,788.291443 261.827179,787.907288 259.984314,787.175171   C259.217133,789.979370 258.733276,792.808044 257.606873,795.352234   C257.145355,796.394592 255.198456,797.554138 254.093933,797.407288   C248.312241,796.638062 242.601837,795.338013 236.822952,794.538574   C235.598526,794.369263 234.191742,795.518250 232.868973,796.059875   C232.962357,796.669739 233.055740,797.279663 233.149139,797.889587   C238.569000,797.026611 242.030670,799.297668 243.803436,804.055298   C243.381943,804.451599 243.178040,804.716064 242.681381,805.003906   C241.924255,805.339294 241.459900,805.651184 240.742126,805.970642   C240.319733,805.981934 240.150757,805.985779 239.543396,805.990845   C236.781372,806.150757 234.457718,806.309570 231.805405,806.490845   C233.677582,809.356384 235.060287,811.472717 236.443008,813.589050   C236.054016,813.904846 235.665009,814.220581 235.276016,814.536377   C232.947556,813.978149 230.619095,813.419983 227.965652,812.783875   C228.756485,811.037354 229.268829,809.905945 229.783401,808.769531   C222.493469,805.639465 221.246979,806.254578 220.640244,812.930603   C219.890533,813.019287 219.458511,813.041809 218.836639,812.815674   C218.049408,813.179016 217.452042,813.791077 216.567184,814.453735   C215.571976,814.815491 214.864258,815.126526 213.796280,815.302002   C212.926086,815.106567 212.416153,815.046814 211.647079,814.798584   C210.036942,814.541687 208.489700,814.012146 207.370499,814.488403   C203.498901,816.136169 199.776306,818.134094 195.583191,819.995239   C190.479034,820.113098 184.459183,825.521606 184.004074,830.011780   C184.000015,830.004028 184.022430,830.009094 183.650360,829.999451   C182.764801,828.855286 181.507187,827.261414 181.872635,826.669495   C183.139771,824.616943 185.123810,823.021484 186.534683,821.038330   C187.507614,819.670776 187.984329,817.950195 188.682785,816.387390   C188.320374,816.175232 187.957977,815.963074 187.595566,815.750916   C189.110489,813.477478 190.437683,811.042053 192.208557,808.989380   C193.327255,807.692688 195.067596,806.897522 196.602463,806.003357   C198.646515,804.812683 200.819000,803.829895 202.778488,802.521484   C203.040237,802.346741 202.277679,799.978394 202.160187,799.993103   C199.995178,800.263489 197.856186,800.742249 195.487473,801.001099   C194.830307,800.198547 194.397354,799.571899 193.964386,798.945190   C194.399307,798.325073 194.834244,797.705017 195.928619,797.033936   C198.118393,795.850342 199.585724,794.617493 201.193008,793.607239   C204.036331,791.820190 206.781097,789.587280 209.902115,788.600952   C214.227982,787.233826 218.928574,787.101807 223.349869,785.974792   C228.859024,784.570312 234.289383,782.815125 239.675583,780.981750   C244.920151,779.196533 250.363541,777.656555 255.154602,774.992676   C258.559723,773.099182 260.787964,769.206055 263.974701,766.772827   C267.755524,763.886047 270.699829,759.567200 276.002258,759.349915   C277.219238,760.575623 279.106354,762.420349 279.522217,762.133362   C281.347656,760.873535 282.730408,758.980652 284.306091,757.348572   C286.368073,755.212646 288.436401,753.081604 290.556152,751.003662   C291.117249,750.453674 292.340393,750.217163 292.475464,749.650024   C293.992554,743.279541 299.803802,744.561401 304.014954,743.408569   C304.007324,744.900085 304.007324,746.011780 304.007324,746.948853   C308.599396,745.459534 312.903168,744.063721 316.997559,742.735840   C316.997559,748.013489 316.997559,752.001953 316.627563,755.953979   C314.417206,754.557556 312.757233,752.722778 310.697449,751.940002   C306.858551,750.480896 302.786987,749.633850 297.688843,748.220581   C298.718506,752.548950 299.369507,755.285522 300.015686,758.266479   C300.010834,758.510803 299.998779,759.000000 299.620178,759.004517   C297.816895,760.687683 296.392242,762.366333 294.967560,764.044983  M233.652985,787.897766   C234.231750,787.561584 234.810516,787.225403 235.389267,786.889282   C234.891830,786.629639 234.150711,786.032104 233.946686,786.179321   C233.492691,786.506714 233.307465,787.206787 233.652985,787.897766  M190.743179,815.481262   C191.535507,815.958130 192.327850,816.434937 193.120193,816.911804   C193.291306,816.502747 193.462433,816.093628 193.633560,815.684509   C192.832336,815.494019 192.031097,815.303467 190.743179,815.481262  z\",id:\"svg_19\"})),_path18||(_path18=/*#__PURE__*/React.createElement(\"path\",{fill:\"#604234\",opacity:1,stroke:\"none\",d:\" M263.090179,486.968597   C262.327942,485.973816 261.565735,484.979004 260.888672,483.285797   C259.979980,481.725647 258.986115,480.863922 257.992249,480.002197   C257.992249,480.002228 257.772034,479.769928 257.849182,479.215210   C258.417328,476.621490 259.022675,474.600281 259.343475,472.534882   C259.473297,471.698883 258.982208,470.766418 258.773651,469.877869   C257.900879,470.249054 257.028076,470.620270 256.671112,470.772095   C253.545502,468.478546 256.493530,462.843872 251.034592,462.006317   C250.881882,461.417694 250.729156,460.829041 250.738037,459.526184   C251.119629,455.637360 252.698883,453.903503 255.968933,454.342712   C255.624588,455.793030 255.313980,456.898132 254.714813,458.036163   C254.128082,458.476776 253.829910,458.884491 253.531738,459.292206   C253.794052,459.382721 254.263535,459.588470 254.287048,459.546204   C254.562393,459.051117 254.770752,458.518829 255.327179,458.019806   C260.988159,458.691345 258.921448,453.809631 260.400146,451.513489   C258.932556,452.343262 257.464996,453.173004 256.022125,453.651520   C258.085602,451.061157 257.533295,448.831329 255.696808,446.933441   C253.644089,444.812134 251.326080,442.947540 249.874023,441.644653   C250.388214,435.940460 250.822159,431.126282 251.355988,425.204193   C254.515747,430.311188 258.403290,431.595764 263.074249,429.611084   C260.190979,427.696655 257.619110,425.989014 255.094513,424.312775   C255.284241,423.401245 255.638031,421.701538 256.340027,420.035828   C261.424835,424.372192 267.337830,427.899628 265.871002,436.288177   C266.315399,436.129425 266.759796,435.970673 267.204163,435.811920   C268.472290,433.858124 269.740417,431.904297 271.366333,429.996887   C275.177612,433.050842 281.082642,433.931335 280.590637,440.931824   C283.145660,438.058563 284.899017,439.093750 285.954132,441.806854   C289.405334,439.952484 292.071930,433.694092 296.013733,440.729706   C296.193756,441.051025 297.258179,440.876770 297.918823,441.318695   C295.627380,448.141022 293.327789,454.577972 290.657043,460.943298   C290.018494,459.257629 289.802032,457.632904 289.466858,456.033081   C289.217255,454.841766 288.813934,453.682617 288.479095,452.509155   C287.885590,452.523834 287.292084,452.538513 286.698547,452.553192   C288.622620,457.867340 286.522308,461.686432 282.801697,465.028381   C282.786255,465.085083 282.916199,465.070953 283.455505,465.045044   C286.239410,465.358643 288.614014,465.684052 291.217346,466.017578   C291.446075,466.025665 291.903046,465.997711 291.912231,466.313660   C291.912811,467.050781 291.904175,467.471985 291.588074,467.976685   C291.166077,469.043030 291.051575,470.025909 290.908508,471.385742   C290.829559,473.007416 290.789001,474.252655 290.727173,475.496796   C290.470276,480.665161 290.207001,485.833160 289.581451,491.006653   C285.678131,493.184692 282.139435,495.357452 278.600708,497.530182   C278.468628,497.355713 278.336548,497.181213 278.204468,497.006714   C279.830170,494.656525 281.455902,492.306366 283.081635,489.956177   C282.792206,489.738403 282.502777,489.520630 282.213379,489.302856   C279.130981,491.536591 276.048584,493.770325 272.692322,495.801392   C270.250214,492.939789 268.162201,490.207733 265.853912,487.676575   C265.318176,487.089050 264.031372,487.186401 263.090179,486.968597  M261.906982,466.434479   C261.506989,466.129028 261.106964,465.823578 260.706970,465.518127   C260.622467,465.778564 260.421539,466.239380 260.471497,466.268402   C260.958984,466.551697 261.488312,466.762939 262.053497,467.645050   C262.576202,468.583527 263.098877,469.521973 263.621552,470.460449   C264.059692,470.072510 264.497833,469.684601 264.935944,469.296661   C263.955536,468.533051 262.975128,467.769440 261.906982,466.434479  M271.938629,451.365509   C271.382111,450.644836 270.825623,449.924164 270.269104,449.203491   C269.969147,449.512115 269.669220,449.820740 269.369263,450.129364   C270.243256,450.755737 271.117279,451.382141 272.061157,452.660034   C273.029358,453.783905 273.997528,454.907806 274.467957,456.463226   C274.572235,457.698822 274.676514,458.934418 274.813690,460.559814   C273.445343,460.718933 272.220856,460.861298 271.006836,460.252930   C270.982574,459.749908 270.958282,459.246857 270.948212,457.990997   C270.376587,456.950226 269.813660,455.904602 269.231384,454.869812   C268.238281,453.104858 266.600464,451.422607 266.378143,449.568390   C266.026672,446.636230 266.620453,443.590790 266.814209,440.593292   C266.346558,440.498566 265.878906,440.403839 265.411255,440.309113   C264.695038,443.660309 263.978821,447.011505 263.048798,451.363098   C264.247253,453.172821 266.130280,456.016357 268.234100,459.492523   C269.157288,459.993805 270.080475,460.495087 270.787415,461.550232   C270.726685,462.150024 270.665924,462.749847 270.605194,463.349640   C274.521729,461.611633 274.469666,464.652435 274.337891,466.947571   C273.571411,467.313232 272.804932,467.678894 272.038422,468.044525   C272.463684,468.624725 272.888947,469.204956 273.314209,469.785187   C273.877350,468.858002 274.440521,467.930847 275.683624,466.937103   C276.455780,465.958099 277.227936,464.979095 278.728668,463.993561   C281.757202,461.746796 286.291901,460.376251 283.248779,455.079254   C281.887299,455.398804 280.525818,455.718353 278.566193,455.999359   C278.366486,455.993011 278.166779,455.986664 277.601013,455.434601   C275.736542,454.286896 273.872101,453.139160 271.938629,451.365509  M264.612335,474.807709   C263.948517,474.430145 263.284668,474.052551 262.620850,473.674988   C262.484772,474.089233 262.348694,474.503448 262.212585,474.917694   C262.981018,475.084076 263.749481,475.250488 264.612335,474.807709  M262.477783,437.680939   C263.027557,438.021729 263.577332,438.362518 264.127075,438.703339   C264.261780,438.427582 264.396454,438.151825 264.531128,437.876068   C263.993073,437.669434 263.455017,437.462799 262.477783,437.680939  M278.683746,453.554016   C279.024384,453.001648 279.365021,452.449280 279.705688,451.896912   C279.430450,451.760193 279.155182,451.623474 278.879944,451.486725   C278.673553,452.027527 278.467133,452.568298 278.683746,453.554016  M253.869431,434.602112   C254.179718,434.716888 254.490005,434.831696 254.800278,434.946503   C254.644623,434.428772 254.488983,433.911041 254.333328,433.393311   C254.109100,433.642059 253.884872,433.890839 253.869431,434.602112  M256.623657,461.480011   C256.838379,461.535370 257.053101,461.590759 257.267822,461.646149   C257.129730,461.510559 256.991638,461.374969 256.623657,461.480011  M266.611389,477.521179   C266.611389,477.521179 266.449554,477.426147 266.449554,477.426147   C266.449554,477.426147 266.470703,477.613068 266.611389,477.521179  M256.591278,432.510498   C256.591278,432.510498 256.481995,432.574493 256.591278,432.510498  z\",id:\"svg_20\"})),_path19||(_path19=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M693.079834,454.951172   C690.228516,461.432556 687.157349,467.827484 684.568665,474.412109   C677.834045,491.542603 671.005737,508.639038 659.124695,523.015625   C650.329834,533.657715 640.596619,543.557434 632.235046,554.515503   C623.276978,566.255432 611.202209,573.376953 599.032104,580.949646   C583.560120,590.576904 566.351379,594.832214 549.067810,598.538330   C539.132446,600.668701 528.583130,599.956116 518.307800,600.474792   C511.336304,600.826660 504.288391,600.564453 497.400726,601.502380   C479.108643,603.993225 460.980591,604.670044 442.885132,599.978210   C437.926239,598.692505 432.681213,598.527588 427.577942,597.777344   C421.197021,596.839233 414.826813,595.827942 408.181427,594.303223   C408.341980,588.214844 411.560944,592.559631 413.016449,592.662598   C418.706482,593.065002 424.347076,594.166199 430.227112,595.270691   C431.634094,595.028137 432.820007,594.522583 434.358582,594.053711   C437.264130,596.408325 439.893616,598.036377 443.404480,595.017578   C448.809448,598.019531 454.119995,599.543579 460.373932,598.043823   C462.502869,598.404541 464.251770,598.721375 466.211670,599.295288   C467.287598,599.695923 468.152557,599.839539 469.478760,599.985718   C486.331757,598.975342 502.726196,598.001343 519.110229,596.876953   C520.451172,596.784973 521.721741,595.667053 523.395142,595.030273   C524.506958,595.024109 525.248596,595.013550 525.995117,595.001465   C526.000000,595.000000 525.996948,595.009399 526.055725,595.380005   C532.738159,595.497070 539.361816,595.243652 546.370239,594.947510   C550.060242,593.726929 554.760254,594.510620 555.338928,589.024292   C556.106506,589.001526 556.545105,588.989746 556.989624,589.353271   C557.227234,590.732666 557.458801,591.736877 557.613159,592.406006   C559.953430,591.830200 561.854919,591.395569 563.737244,590.889343   C565.447998,590.429382 567.137817,589.891663 568.836914,589.388184   C569.326294,588.846558 570.381592,589.417175 571.076294,589.126404   C573.114624,588.273193 575.009521,587.077515 577.301514,586.021057   C578.408264,585.684937 579.174072,585.343750 580.323059,584.994812   C586.223328,583.617920 589.531433,580.109558 590.586609,574.475708   C592.262451,575.327332 593.752563,576.084595 595.730774,577.089905   C595.846191,574.940735 595.924316,573.486023 596.332703,572.027100   C597.103088,572.032959 597.543213,572.042908 597.954163,572.381958   C597.735962,573.590332 597.546875,574.469543 597.185425,576.150330   C600.570740,573.786072 603.274353,571.897888 606.359009,570.006653   C610.157471,568.003174 613.575073,566.002808 617.322266,563.859924   C622.458923,562.783142 623.050659,558.766663 624.019592,554.687195   C624.036316,553.910950 624.044678,553.467529 624.366699,552.970581   C625.155945,551.224548 625.631531,549.531921 626.066101,547.985352   C627.741150,548.106445 629.741821,548.872681 630.565125,548.199341   C633.587646,545.727417 636.219177,542.777405 639.314575,539.838379   C641.080322,537.405334 641.481506,534.720764 644.966980,533.600037   C647.132629,532.903687 648.363525,529.300110 650.005737,526.999512   C649.997559,526.997559 650.000977,527.013977 650.322632,526.963867   C650.745911,525.619568 650.847595,524.325439 651.229675,522.835083   C653.558167,520.306274 655.859985,518.145996 657.589722,515.597412   C659.712524,512.469666 664.346313,510.367828 662.226318,505.175476   C662.000854,504.623383 663.508789,503.186249 664.416992,502.394104   C665.510437,501.440369 667.403564,501.015106 667.945740,499.880798   C671.451111,492.547668 674.719849,485.100006 677.984314,477.653961   C679.215515,474.845795 680.228821,471.942139 681.341370,469.081940   C681.341370,469.081940 683.187744,461.947601 683.187744,461.947571   C683.815369,461.176727 684.292847,459.996857 685.095276,459.702362   C689.756226,457.991730 689.951538,454.110168 690.351501,450.085571   C691.044678,449.981781 691.439636,449.915100 692.044861,450.077820   C694.318176,448.784424 696.381287,447.261627 698.692261,445.555847   C698.482788,447.495392 698.279846,449.374908 697.876831,451.446594   C696.144470,452.742950 694.612122,453.847076 693.079834,454.951172  z\",id:\"svg_21\"})),_path20||(_path20=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M684.384705,768.427002   C682.859375,769.642578 681.150024,770.558838 679.228943,770.911865   C679.033508,769.914429 679.049866,769.480347 679.303467,768.846924   C678.704834,767.737915 677.868774,766.828308 676.846313,765.610840   C674.317078,764.481689 671.974243,763.660400 669.631348,762.839050   C669.409973,763.368164 669.188538,763.897278 668.967102,764.426453   C671.020752,766.171753 673.074402,767.916992 675.128052,769.662292   C674.694153,770.196411 674.260254,770.730469 673.826294,771.264526   C671.894287,770.156799 669.962280,769.049072 667.873474,767.645142   C666.706482,766.300354 665.803894,765.112244 664.663635,764.232056   C662.206543,762.335327 658.021973,763.896484 656.994141,767.335693   C655.292358,768.469421 653.645386,769.234680 651.995605,769.647583   C651.333008,768.535828 650.673279,767.776489 649.637146,767.009277   C648.508545,766.999390 647.756226,766.997253 647.001709,766.583374   C647.609070,761.295959 644.832336,759.300598 639.707153,757.688782   C640.442200,759.729614 640.828979,760.698792 641.138794,761.692017   C641.476807,762.775452 641.743530,763.881226 641.920349,765.205994   C641.525574,765.636841 641.251831,765.838928 640.654114,765.861938   C638.838135,765.125244 637.305725,764.654907 635.863770,763.988647   C633.873413,763.069031 631.951355,762.001648 629.934814,760.626587   C628.911499,756.506226 627.953308,752.756775 627.370789,749.003601   C628.497620,748.994995 629.248840,748.990173 630.389526,748.944153   C632.989075,748.912109 635.210815,748.783264 637.405640,748.970337   C639.495300,749.148376 641.653198,750.202759 643.602478,749.859009   C645.399841,749.541931 646.959778,747.879333 648.624329,746.809387   C647.358398,745.475586 646.253357,743.238770 644.795959,742.979065   C640.607361,742.232605 636.276306,742.285583 631.575439,742.016663   C626.765808,741.336609 622.381958,740.664307 618.209229,739.704468   C620.756653,738.232605 623.092834,737.048279 625.051025,736.055603   C621.479553,730.030823 617.884338,723.966003 613.658508,716.837280   C616.914124,717.171326 619.135437,717.718750 621.289673,717.524109   C623.176331,717.353638 625.460327,716.831726 626.719177,715.598022   C628.513428,713.839722 629.531372,711.289185 630.317810,710.000122   C630.863220,706.413696 631.296875,703.562073 631.730530,700.710388   C636.877563,711.804016 642.549133,722.690674 647.030396,734.047058   C651.921570,746.442078 661.209717,754.048462 672.132629,760.433411   C676.248230,762.839233 680.183350,765.553894 684.384705,768.427002  M666.099121,758.243408   C664.932922,757.957458 663.766663,757.671509 662.600464,757.385559   C662.606018,757.940002 662.611633,758.494507 662.617188,759.048950   C663.928284,758.932068 665.239380,758.815125 666.099121,758.243408  z\",id:\"svg_22\"})),_path21||(_path21=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M560.077271,642.526489   C560.512756,642.387085 560.948181,642.247803 561.891479,642.396973   C563.626160,642.070312 564.852844,641.455139 566.079590,640.839905   C566.828613,640.645508 567.577637,640.451111 568.973389,640.538147   C577.927673,639.583252 584.928650,635.744507 591.012817,630.079468   C591.329346,629.945801 591.645874,629.812195 592.567627,629.794678   C593.793884,629.355652 594.414978,628.800598 595.036072,628.245483   C595.668152,628.075806 596.300293,627.906189 597.668091,627.865845   C600.916687,628.667908 603.429443,629.340637 605.942261,630.013367   C606.257751,630.479004 606.573181,630.944702 606.662659,631.901794   C606.901184,632.945984 607.365784,633.498657 607.830322,634.051392   C610.071411,640.462219 612.312500,646.873047 614.185303,653.598999   C612.553040,653.589539 611.289185,653.264893 610.021729,652.707520   C610.018250,652.474792 610.014465,652.009399 610.249512,651.837524   C610.578674,651.069885 610.672852,650.474060 610.767029,649.878296   C610.558289,649.854431 610.349548,649.830627 610.140747,649.806763   C610.088928,650.532959 610.037170,651.259155 609.676392,651.850525   C607.573547,650.472229 605.779541,649.228760 603.982910,647.635864   C602.520447,646.747925 601.060547,646.209473 599.188354,645.518921   C599.232971,645.755493 599.149048,645.280579 599.053040,644.808105   C598.739258,643.263245 598.421082,641.719238 598.104614,640.174927   C596.237000,640.589355 594.349976,640.932739 592.506470,641.435486   C589.896545,642.147278 587.325562,643.000854 584.723511,643.743347   C583.726807,644.027893 582.554382,643.933533 581.694458,644.421448   C576.504150,647.366333 580.081421,650.692139 581.664001,653.551025   C584.149780,658.041443 587.779602,658.298950 591.583008,654.787292   C592.332214,654.095520 593.378296,653.696838 594.332581,653.261902   C595.954895,652.522461 597.681519,651.986633 599.237427,651.133667   C600.896790,650.224182 602.408997,649.046204 603.990540,648.387939   C603.998718,649.862732 604.001831,650.934998 603.843628,652.323486   C603.481689,655.408752 603.281128,658.177979 602.656494,660.966064   C600.825623,660.990845 599.418884,660.996643 597.962036,660.631470   C596.677185,659.582520 595.442505,658.904480 594.207886,658.226440   C593.808533,659.815186 593.409180,661.403931 592.677063,662.964600   C590.895447,662.626831 589.446472,662.317078 587.628052,661.998169   C585.385498,661.213196 583.512573,660.437378 581.733887,659.700562   C581.021790,660.307190 580.012634,661.692627 579.491516,661.528442   C574.923218,660.089417 575.005615,663.040405 574.997253,666.002075   C575.000000,666.000000 575.004089,665.994507 574.683716,666.016785   C573.574768,666.359375 572.786133,666.679688 571.753723,666.845703   C571.004944,666.127625 570.500061,665.563843 569.948486,664.674072   C569.097473,664.139160 568.293030,663.930054 567.488586,663.720947   C567.990784,664.153809 568.492920,664.586670 568.996826,665.407471   C569.992310,666.862000 570.986023,667.928589 571.987854,669.326477   C572.009521,670.099426 572.023132,670.540955 571.676758,670.992676   C569.877014,671.668518 568.437317,672.334229 566.751343,672.798584   C566.104492,671.424927 565.703918,670.252625 565.303345,669.080383   C564.525818,670.054382 563.748230,671.028442 562.580566,672.002808   C560.434143,672.930664 558.725342,673.971313 556.900879,674.735779   C556.042786,675.095276 554.962280,674.923889 553.986328,674.565430   C553.994263,672.426025 553.998352,670.714233 554.406250,669.001282   C560.093140,668.669800 560.544067,667.826904 558.576782,663.235779   C557.449036,660.604004 556.828430,657.754944 556.318237,655.001831   C557.108826,654.997559 557.560486,654.995117 558.343506,654.994507   C559.116516,654.999207 559.558289,655.002014 560.042480,655.326782   C560.733032,656.091370 561.381165,656.534058 562.379089,657.036865   C564.825745,658.430908 566.922546,659.764709 569.681885,661.519958   C569.681885,657.835815 569.681885,655.156006 569.681885,652.476135   C570.012268,652.378845 570.342712,652.281616 570.673096,652.184387   C571.494324,654.690063 572.315552,657.195740 573.137939,659.704956   C575.675354,658.732605 577.736633,657.942749 580.709167,656.803711   C579.025391,653.342651 577.468384,650.142151 575.911316,646.941650   C575.485840,647.153564 575.060303,647.365540 574.634766,647.577454   C575.025452,649.476746 575.416138,651.376038 575.806824,653.275330   C575.405640,653.394897 575.004517,653.514465 574.603394,653.633972   C573.545593,651.522949 572.487793,649.411926 571.345032,647.131287   C569.978943,647.786743 568.845398,648.330627 568.338074,648.574036   C565.870117,647.186218 563.928528,646.094299 561.651001,645.001221   C560.867249,645.003174 560.419312,645.006409 559.987732,645.005127   C560.004089,645.000671 559.989563,645.031494 560.002197,644.718079   C560.035645,643.778625 560.056458,643.152527 560.077271,642.526489  z\",id:\"svg_23\"})),_path22||(_path22=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M195.711685,801.176941   C197.856186,800.742249 199.995178,800.263489 202.160187,799.993103   C202.277679,799.978394 203.040237,802.346741 202.778488,802.521484   C200.819000,803.829895 198.646515,804.812683 196.602463,806.003357   C195.067596,806.897522 193.327255,807.692688 192.208557,808.989380   C190.437683,811.042053 189.110489,813.477478 187.595566,815.750916   C187.957977,815.963074 188.320374,816.175232 188.682785,816.387390   C187.984329,817.950195 187.507614,819.670776 186.534683,821.038330   C185.123810,823.021484 183.139771,824.616943 181.872635,826.669495   C181.507187,827.261414 182.764801,828.855286 183.787292,830.292297   C184.357468,831.879700 186.492691,831.763000 185.203934,834.631897   C183.121857,839.266907 182.756180,845.617920 184.100922,850.584900   C185.481934,855.685791 189.378952,860.332031 192.901581,864.573730   C198.278488,871.048279 204.338440,876.951477 209.983459,883.209839   C211.860580,885.290833 213.353622,887.718323 214.663483,889.992676   C212.914749,889.339233 211.524765,888.680481 210.269073,888.085388   C209.060440,888.668579 207.681747,889.333801 205.722229,890.279236   C206.212158,887.885742 206.500900,886.475098 206.497589,886.491211   C203.640335,885.814636 201.534653,885.436340 199.518707,884.781677   C198.667374,884.505249 198.093567,883.416199 197.242737,883.089661   C190.536499,880.516174 189.809418,877.649719 193.950424,874.142151   C189.528595,871.146301 183.616104,868.885376 180.517273,864.593140   C176.764008,859.394348 175.033951,852.583069 173.165558,846.252014   C172.444992,843.810425 171.875336,842.782837 169.458847,843.020020   C169.401840,842.222290 169.344833,841.424622 169.792694,840.114136   C170.501129,838.519714 170.704712,837.438110 170.908295,836.356445   C171.700272,827.818054 175.923447,820.869202 181.132523,814.393860   C184.431671,810.292664 187.796371,806.244263 191.782822,802.041992   C193.526550,801.666870 194.619110,801.421875 195.711685,801.176941  M184.843338,818.049377   C184.590012,818.201599 184.202377,818.305603 184.125031,818.520935   C184.060913,818.699402 184.362656,819.009216 184.502319,819.260864   C184.642303,819.008972 184.782288,818.757141 184.843338,818.049377  z\",id:\"svg_24\"})),_path23||(_path23=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AD703F\",opacity:1,stroke:\"none\",d:\" M702.596802,462.889618   C702.449524,462.602722 702.416870,462.303284 702.696899,461.322876   C702.602966,456.137146 702.311157,451.619843 702.041687,446.747803   C702.346313,438.933228 702.628540,431.473419 703.173218,423.865723   C702.325073,422.465240 701.214539,421.212646 700.102905,419.634369   C700.436279,417.835327 700.770630,416.362000 700.895081,414.629456   C700.614624,413.201294 700.190247,411.902802 700.559326,410.894806   C701.070007,409.500427 702.177979,408.324768 703.207275,406.818420   C703.940491,406.445251 704.496704,406.309052 705.221252,406.455750   C707.257446,406.487976 709.125366,406.237305 711.000488,406.326935   C711.372253,407.559448 712.265259,409.040283 712.023560,409.257263   C706.823425,413.926025 713.013489,415.038086 714.128601,418.333191   C715.555908,416.424438 716.465759,415.207672 717.802124,413.420471   C718.739624,415.662354 719.407593,417.259613 720.156860,419.159302   C719.843506,421.382812 719.657959,423.379333 718.999023,425.204987   C718.250671,427.278442 717.078735,429.199005 716.105957,431.539307   C717.479553,436.280548 719.938660,431.861725 721.828979,432.945740   C722.975647,434.202454 724.047058,435.109863 725.097107,436.386414   C725.051331,437.494446 725.026855,438.233307 725.001953,439.352905   C724.050354,441.054901 723.099304,442.376160 722.442078,443.289246   C723.758606,445.313782 724.952820,447.150299 726.147095,448.986816   C725.783386,449.261719 725.419678,449.536621 725.055969,449.811523   C726.205933,449.710541 727.355835,449.609558 728.357117,449.521637   C727.483521,451.207764 726.740051,452.642639 725.606323,454.057861   C721.354492,454.214020 720.480591,456.975037 719.929565,460.420349   C718.485474,461.496460 717.025391,462.103851 715.742676,462.973022   C710.356262,466.622864 707.454163,466.637665 702.596802,462.889618  M718.069153,443.558563   C716.813599,444.192993 715.558044,444.827423 713.957642,445.636078   C713.392822,444.994904 712.501892,443.983643 711.569275,442.925049   C710.375610,443.700806 709.501892,444.673767 708.489563,444.849976   C705.539429,445.363586 705.415894,447.358246 706.477051,449.178925   C707.570984,451.055969 709.216614,453.291016 711.892334,450.660828   C712.448914,450.113770 713.689148,449.306824 713.853638,449.456390   C717.693848,452.947662 719.087830,449.284821 721.059875,447.201691   C720.174133,446.079193 719.362244,445.050354 718.069153,443.558563  M718.518555,456.341522   C717.152527,455.055084 715.786438,453.768646 714.420410,452.482178   C714.094055,452.979095 713.767639,453.476044 713.441284,453.972992   C714.968140,454.902832 716.494995,455.832703 718.518555,456.341522  M720.629700,441.299072   C720.408386,441.002411 720.187073,440.705780 719.965759,440.409119   C719.776245,440.589844 719.586731,440.770569 719.397217,440.951294   C719.684021,441.184204 719.970825,441.417114 720.629700,441.299072  M714.844421,432.029327   C714.589966,432.182495 714.198120,432.287903 714.123169,432.503479   C714.059509,432.686584 714.361450,432.996826 714.501587,433.250854   C714.642212,432.996674 714.782898,432.742493 714.844421,432.029327  M717.162231,418.950134   C717.412720,418.799408 717.798523,418.695740 717.872314,418.483551   C717.934814,418.303711 717.636597,417.998474 717.497925,417.748718   C717.358826,417.998596 717.219727,418.248474 717.162231,418.950134  M720.523438,452.579193   C720.408875,452.793427 720.270325,452.999939 720.197083,453.227478   C720.179443,453.282318 720.378174,453.406799 720.477356,453.499298   C720.592529,453.284515 720.707764,453.069733 720.523438,452.579193  z\",id:\"svg_25\"})),_path24||(_path24=/*#__PURE__*/React.createElement(\"path\",{fill:\"#493724\",opacity:1,stroke:\"none\",d:\" M631.725220,700.483887   C631.296875,703.562073 630.863220,706.413696 630.317810,710.000122   C629.531372,711.289185 628.513428,713.839722 626.719177,715.598022   C625.460327,716.831726 623.176331,717.353638 621.289673,717.524109   C619.135437,717.718750 616.914124,717.171326 613.658508,716.837280   C617.884338,723.966003 621.479553,730.030823 625.051025,736.055603   C623.092834,737.048279 620.756653,738.232605 617.846802,739.709778   C615.176270,739.673340 613.079407,739.343994 611.061340,738.643982   C613.743896,737.177002 616.347656,736.080750 619.745605,734.650085   C616.054932,731.857361 613.390747,729.841431 609.766357,727.098877   C609.549377,723.153564 609.270386,718.080444 609.267822,712.781250   C612.930298,707.184570 613.057861,702.444275 607.211487,698.505554   C606.342651,697.920166 606.244812,696.160950 605.836121,694.929626   C605.369446,693.523682 605.322388,691.183472 604.456055,690.835632   C599.264526,688.751160 601.406555,684.668213 601.636780,681.282471   C597.614868,679.051331 594.022339,671.610291 595.908752,669.221741   C596.923279,668.952576 598.142029,668.629150 598.721619,668.475342   C602.724609,673.860901 607.316956,678.411499 609.856079,683.910278   C612.427795,689.479736 612.969299,695.986694 614.400024,702.083008   C615.184937,702.034424 615.969910,701.985840 616.754822,701.937195   C616.857178,700.004822 616.870667,698.062134 617.091614,696.143372   C617.252441,694.746704 617.687317,693.381592 618.232849,692.278931   C619.316772,693.422852 620.606201,694.153625 620.928162,695.186096   C621.608337,697.367432 621.447815,699.843445 622.299072,701.925903   C622.757446,703.047302 624.593994,703.605286 625.808716,704.417542   C625.771973,703.190002 625.907043,701.925781 625.654236,700.744507   C625.351990,699.331848 624.718201,697.990234 623.928955,695.780701   C627.130676,697.590393 629.245667,698.785828 631.360596,699.981201   C631.360596,699.981201 631.719971,700.257324 631.725220,700.483887  z\",id:\"svg_26\"})),_path25||(_path25=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M353.019501,622.920532   C353.195129,622.901062 353.370789,622.881531 353.807617,623.334351   C354.714172,624.872620 355.359528,625.938660 355.644287,627.062378   C355.164673,629.577454 355.045654,632.034851 354.926636,634.492188   C355.584351,634.555847 356.242065,634.619507 356.899780,634.683167   C356.966705,633.482788 357.206116,632.260315 357.055756,631.087769   C356.877899,629.701050 356.363586,628.357422 356.406616,626.993103   C360.188293,628.593323 363.558502,630.195557 366.991394,631.827637   C367.267548,631.313843 367.653931,630.594971 368.040283,629.876160   C368.488098,629.894653 368.935883,629.913147 369.741089,630.437866   C373.165253,632.252686 376.232056,633.561218 379.298828,634.869751   C379.696503,634.950012 380.094147,635.030212 380.816559,635.622803   C386.393555,639.112122 391.645782,642.089233 395.500336,644.274048   C398.473602,644.667786 400.141418,644.585815 401.569122,645.131775   C406.881989,647.163330 412.115906,649.401245 417.379456,651.561768   C417.379456,651.561768 417.367676,651.709473 417.240051,652.066162   C417.407471,653.616028 417.702515,654.809265 418.001129,656.340332   C418.333740,657.454224 418.662781,658.230103 419.135620,659.294189   C420.184540,660.065430 421.089691,660.548584 422.102264,661.285767   C422.469818,662.024109 422.729980,662.508362 422.835510,663.352600   C422.184601,665.796570 421.688324,667.880676 421.192047,669.964722   C418.649628,666.982727 416.894989,664.025269 416.108276,660.829529   C415.250885,657.346497 413.157410,655.915283 410.041138,655.141113   C406.315338,654.215454 402.617889,653.175720 399.783386,652.419067   C396.920898,653.078064 394.524261,654.165955 392.193481,654.039490   C388.783234,653.854431 387.644257,651.593079 389.538452,648.240112   C387.576752,648.240112 386.134491,648.240112 384.692230,648.240112   C384.079132,650.276611 382.683868,652.228455 381.765778,652.025208   C377.713776,651.127930 373.799225,649.609924 369.834900,648.316772   C370.086761,647.533508 370.338593,646.750244 370.590424,645.967041   C373.914490,646.901428 377.238556,647.835815 380.832703,648.846130   C380.133942,645.633545 379.574066,643.059631 378.852936,639.744324   C373.872742,644.017029 368.747894,641.698059 363.467377,640.052795   C360.093628,639.001587 356.497620,638.663696 352.946259,637.660278   C351.920990,636.871521 350.950714,636.428406 349.934174,635.655151   C348.932800,635.545166 347.977722,635.765259 346.669647,635.954651   C344.826385,635.498474 343.336060,635.072998 341.751190,634.620544   C342.256195,633.970947 342.642029,633.474609 343.420288,632.971130   C345.804230,632.455566 347.795776,631.947144 350.066162,631.367554   C349.305206,628.905640 348.669159,626.847839 348.285339,625.606140   C350.264771,624.483215 351.642151,623.701904 353.019501,622.920532  z\",id:\"svg_27\"})),_path26||(_path26=/*#__PURE__*/React.createElement(\"path\",{fill:\"#574432\",opacity:1,stroke:\"none\",d:\" M272.966187,496.004089   C276.048584,493.770325 279.130981,491.536591 282.213379,489.302856   C282.502777,489.520630 282.792206,489.738403 283.081635,489.956177   C281.455902,492.306366 279.830170,494.656525 278.204468,497.006714   C278.336548,497.181213 278.468628,497.355713 278.600708,497.530182   C282.139435,495.357452 285.678131,493.184692 289.701630,491.222504   C290.383820,491.710785 290.642975,491.906830 291.013672,492.352356   C291.774200,493.889984 292.704376,495.019653 293.158478,496.316040   C295.335754,502.531433 296.794464,509.081970 299.674957,514.939819   C301.777283,519.215088 305.708649,522.585815 308.793884,526.384705   C311.144440,529.278931 313.446777,532.212341 315.794434,535.503906   C316.230011,537.234192 316.641693,538.588806 317.063843,540.261108   C317.432617,541.059082 317.790924,541.539368 318.171692,542.248413   C318.194122,542.477295 318.207245,542.937012 317.832581,542.991943   C313.413635,544.159119 315.866089,546.867065 315.699463,549.030762   C315.277252,549.700317 315.150330,550.343445 315.015961,550.991821   C315.008514,550.997070 315.025421,550.978760 315.003967,551.386536   C314.430145,552.647827 313.877777,553.501282 313.325378,554.354736   C312.445160,553.681824 311.564972,553.008972 310.785034,551.646240   C311.792023,549.198547 312.698761,547.440735 313.634247,545.627136   C310.468384,543.909058 307.780731,542.450500 305.093079,540.991943   C304.542023,540.307678 303.990997,539.623413 303.743958,538.480591   C305.529449,537.721252 307.010895,537.420532 308.106293,537.198120   C305.127655,534.054504 302.130402,530.787537 299.013184,527.639404   C297.071686,525.678650 294.948761,523.897583 292.907257,522.035828   C288.689850,517.528809 284.472473,513.021729 280.148926,507.763031   C280.401581,503.000397 279.923248,499.783173 274.544373,501.212952   C274.132141,500.879547 273.719910,500.546143 273.183594,499.594666   C273.028412,497.985748 272.997314,496.994904 272.966187,496.004089  z\",id:\"svg_28\"})),_path27||(_path27=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M169.369812,843.406372   C171.875336,842.782837 172.444992,843.810425 173.165558,846.252014   C175.033951,852.583069 176.764008,859.394348 180.517273,864.593140   C183.616104,868.885376 189.528595,871.146301 193.950424,874.142151   C189.809418,877.649719 190.536499,880.516174 197.242737,883.089661   C198.093567,883.416199 198.667374,884.505249 199.518707,884.781677   C201.534653,885.436340 203.640335,885.814636 206.497589,886.491211   C206.500900,886.475098 206.212158,887.885742 205.722229,890.279236   C207.681747,889.333801 209.060440,888.668579 210.269073,888.085388   C211.524765,888.680481 212.914749,889.339233 214.652222,889.995972   C214.999695,889.993896 215.008362,889.977661 215.044846,890.336548   C216.868210,892.684814 221.625931,893.415344 224.334610,892.047729   C227.142426,892.352173 229.568756,892.666626 232.324966,892.987305   C233.093460,892.965820 233.532074,892.938171 234.192047,893.030762   C234.610474,893.416748 234.807541,893.682617 235.004608,893.948425   C235.861206,894.620972 236.649017,895.749939 237.585663,895.891052   C243.137985,896.727722 248.885818,896.742554 254.251190,898.199829   C258.892303,899.460449 264.465271,898.588135 268.018005,903.396423   C256.638306,902.175049 245.290573,899.808777 233.854965,899.253967   C219.252533,898.545532 206.253891,893.147217 193.023529,888.018799   C188.147110,886.128662 184.344803,883.183960 182.264023,878.348328   C178.755417,870.194458 175.248871,862.035339 171.993301,853.779114   C170.735626,850.589661 170.164627,847.129517 169.369812,843.406372  z\",id:\"svg_29\"})),_path28||(_path28=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M328.923706,666.833252   C329.329285,665.735596 329.734894,664.637939 330.685150,663.160156   C332.810974,659.516968 334.392151,656.253845 336.272034,653.133362   C337.372253,654.504944 338.173706,655.733887 338.731079,657.160278   C338.837250,658.679016 339.187500,660.000366 339.560028,661.405640   C338.669312,662.075989 337.719086,662.725647 336.844696,663.464905   C335.596436,664.520142 334.403656,665.641113 333.187195,666.734009   C334.046600,667.425354 334.984161,668.765930 335.749176,668.673828   C337.371063,668.478516 338.998077,667.699341 340.445374,666.855164   C341.921753,665.993835 343.061768,664.523987 344.571198,663.758789   C346.823517,662.617126 347.638580,661.504517 345.868866,659.226013   C345.238464,658.414368 345.258850,657.097290 344.945312,655.686768   C344.143463,655.109192 343.271545,655.009949 342.636353,654.569336   C341.413544,653.721130 340.324768,652.679810 339.180420,651.718567   C339.788574,651.139648 340.396729,650.560669 341.352112,649.840759   C346.261932,649.135498 350.824463,648.571167 355.519836,647.990356   C355.462677,647.076599 355.385376,645.840393 355.194977,642.796143   C357.789642,644.388916 360.548645,645.150757 360.768005,646.369629   C362.114288,653.851135 355.564636,649.650146 353.055695,651.288574   C353.055695,654.233582 353.055695,657.108704 352.838989,660.250122   C349.294678,661.131592 348.823456,663.147461 349.685059,666.229004   C349.610382,669.340027 349.808136,672.172424 349.991150,675.432800   C349.982300,677.575439 349.988251,679.290161 349.994934,681.340820   C350.010223,682.124634 350.024780,682.572449 350.026123,683.408936   C349.477570,687.847778 352.850189,688.552368 355.352875,689.896301   C357.688721,691.150513 360.149628,692.171814 362.978607,693.493347   C361.075806,695.031189 359.829254,696.038635 358.725189,696.930908   C355.299316,695.537354 352.150269,694.256409 348.853516,692.677002   C346.867432,690.220398 345.029053,688.062195 342.731659,685.365112   C344.436829,685.154663 345.225952,685.057251 346.331268,684.976562   C347.209381,684.789307 347.771332,684.585449 348.333252,684.381531   C347.558533,683.928711 346.783813,683.475830 345.657654,682.957947   C343.187683,680.510071 342.086761,676.715576 337.417938,678.240479   C335.106903,678.995239 332.476593,678.772461 329.983398,678.632996   C329.625275,674.460449 329.274475,670.646851 328.923706,666.833252  z\",id:\"svg_30\"})),_path29||(_path29=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M513.909668,200.309418   C514.682251,200.305786 515.454834,200.302155 516.732056,200.768097   C518.653564,201.425293 520.070374,201.612900 521.487183,201.800522   C521.820557,201.765564 522.153931,201.730606 522.969604,202.081635   C528.486328,204.086212 533.451477,205.990097 538.576477,207.236115   C542.932007,208.295044 547.471924,208.595261 551.930298,209.231171   C552.389893,209.209076 552.849426,209.186996 553.703064,209.638718   C556.423645,211.079910 558.769775,212.003265 561.072327,213.024780   C564.730469,214.647720 568.359497,216.336197 571.749634,218.000000   C571.330994,218.007278 571.163574,218.011490 570.588562,218.012207   C567.790527,217.675430 565.400085,217.342194 562.846558,216.764099   C562.135132,216.345764 561.586853,216.172272 560.794922,215.723419   C557.994995,215.073212 555.228088,211.780334 552.667542,215.996277   C551.555359,216.319305 550.778931,216.639175 549.655518,216.999420   C548.079285,216.799210 546.785828,216.727005 545.632568,216.287140   C541.843750,214.842087 539.015381,210.064804 533.992920,213.006012   C533.999695,213.002426 533.991699,213.013702 533.994507,212.634521   C533.256531,210.985535 532.515625,209.715759 531.774780,208.445984   C531.177612,208.966217 530.580505,209.486465 529.729614,210.111481   C528.996826,210.480759 528.517822,210.745270 527.838440,210.769897   C526.423828,212.041931 525.209473,213.553802 523.689453,214.904648   C521.831055,212.655426 520.661499,210.017853 518.637085,208.605927   C515.481689,206.405151 511.861603,204.694382 508.207306,203.460220   C506.403931,202.851181 504.083618,203.772903 501.998596,204.000992   C502.000000,204.000000 502.002930,203.997101 501.628235,204.000595   C500.686340,204.702759 499.493713,205.610260 499.646698,206.068451   C501.604431,211.931641 497.517822,214.818695 493.997864,217.621460   C495.409180,212.024643 496.815552,206.813507 498.221924,201.602371   C497.491974,201.366974 496.762024,201.131592 496.032104,200.896194   C495.033203,203.267258 494.034332,205.638336 492.775452,207.905350   C492.024811,207.539276 491.534088,207.277237 491.044006,206.654846   C491.561768,205.000610 492.078918,203.706741 492.666595,202.236496   C489.331421,199.885162 488.563477,201.736908 487.871857,204.665604   C487.199738,207.511871 485.982574,210.229431 484.757111,213.001862   C484.509460,213.000214 484.014191,212.999390 484.008423,212.612793   C484.324615,210.816589 485.060974,209.348526 484.872345,208.010941   C484.582489,205.955917 483.656982,203.990524 483.054321,201.649902   C484.054810,200.202942 485.002136,199.093170 486.213745,197.702515   C488.945374,197.077591 491.412781,196.733551 493.880188,196.389496   C494.974854,196.406891 496.069489,196.424286 497.675232,196.822769   C503.427460,198.239044 508.668549,199.274231 513.909668,200.309418  z\",id:\"svg_31\"})),_path30||(_path30=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M499.944580,656.165344   C501.028992,656.054504 502.113403,655.943726 503.617798,656.265747   C506.492523,658.136230 508.947296,659.573853 511.402069,661.011475   C511.760254,660.625183 512.118408,660.238953 512.476562,659.852722   C512.476562,661.064819 512.476562,662.276917 512.476562,663.444641   C514.064514,663.880371 515.435608,664.256531 516.428650,664.529053   C517.031921,666.628479 517.515991,668.312988 517.998779,670.248291   C517.999084,670.666199 518.000732,670.833313 518.052246,671.399170   C519.720337,676.464172 521.338623,681.130493 522.956909,685.796875   C522.641174,685.868652 522.325500,685.940430 521.609802,686.008850   C516.582336,686.570435 512.313232,682.929016 512.727051,680.212646   C513.704590,673.795776 508.682159,673.275757 506.170135,670.224854   C504.670959,672.309631 503.431335,674.033508 502.898682,674.774292   C504.658051,680.399719 506.184448,685.280273 507.740845,690.256653   C502.400299,690.502869 502.048676,691.314148 504.615723,696.010132   C502.615601,695.836121 499.727692,695.986389 499.582367,695.425659   C498.820282,692.485840 498.684174,689.370789 498.470245,686.306885   C498.346497,684.535339 498.800934,682.681030 498.451874,680.975098   C497.082153,674.281372 495.496490,667.631897 493.990784,660.600952   C493.998871,659.505981 494.007172,658.776001 494.384277,658.037231   C496.483582,657.407410 498.214081,656.786377 499.944580,656.165344  z\",id:\"svg_32\"})),_path31||(_path31=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M276.937439,302.990997   C279.200470,299.376923 281.255280,295.610443 283.767303,292.178619   C290.120758,283.498840 296.597107,274.905060 303.210297,266.421906   C305.023346,264.096222 307.349335,262.099792 309.684387,260.263062   C325.836548,247.557953 342.295441,235.287811 360.674561,225.781738   C359.280762,227.666916 357.336487,228.987991 356.028564,230.774872   C354.941376,232.260193 352.128174,234.203308 355.784973,236.400391   C355.839050,236.987808 355.853943,237.324280 355.504761,237.748398   C354.093933,238.357910 353.082428,238.976944 351.989929,239.372177   C351.041840,239.715195 350.002075,239.804794 348.747742,239.808746   C348.078186,238.826828 347.663696,238.042542 347.108582,236.992142   C344.500031,239.488770 342.193726,241.696075 339.520569,243.927048   C333.983398,244.150909 333.890442,248.913788 331.919128,252.247421   C331.917664,252.669235 331.922424,252.837936 331.926697,253.245300   C331.926178,253.483963 331.952271,253.960556 331.974670,253.981277   C331.997070,254.001999 331.960815,253.954269 331.666199,253.966675   C330.896851,254.279114 330.422058,254.579147 329.549255,254.909561   C327.250244,254.805389 325.349243,254.670853 322.411041,254.462891   C322.606689,256.831757 322.777313,258.897217 322.554535,260.965332   C320.607880,260.801666 319.054565,260.635406 316.981262,260.413483   C316.981262,262.794434 316.981262,264.869751 316.651367,266.812012   C312.342346,265.318787 311.541412,268.012451 310.589355,271.084961   C305.646545,273.714020 308.013550,268.111572 305.213470,267.228821   C304.473114,269.854767 303.745789,272.434570 302.646912,275.015106   C300.519623,275.658142 298.763855,276.300415 296.746460,277.112427   C296.316010,277.865570 296.147217,278.449036 295.981445,279.268372   C295.984436,279.504242 295.983398,279.976105 295.968689,280.223938   C295.953979,280.471771 295.947205,280.968292 295.720154,280.972443   C295.493073,280.976593 295.038910,280.979645 294.731384,281.003143   C294.638794,281.999084 294.853760,282.971558 295.041992,284.218079   C295.007050,284.675629 294.998871,284.859039 294.621948,285.044281   C293.515686,285.046722 292.778198,285.047333 291.694122,285.078125   C289.892975,287.355225 288.438416,289.602203 286.625793,291.923920   C285.519287,293.999115 284.770874,295.999573 283.666443,298.003265   C282.537506,298.662201 281.764587,299.317902 280.706055,300.106323   C279.618805,301.162720 278.817139,302.086426 277.745972,303.005432   C277.296783,302.997498 277.117096,302.994263 276.937439,302.990997  M329.932251,248.212357   C330.031586,248.705719 330.130920,249.199081 330.230286,249.692444   C330.708618,249.142319 331.186920,248.592194 331.665222,248.042053   C331.189758,247.931229 330.714264,247.820404 329.932251,248.212357  M308.394501,267.205963   C308.758667,267.255951 309.122833,267.305939 309.487000,267.355957   C309.488586,267.096405 309.490173,266.836853 309.491730,266.577301   C309.127014,266.616455 308.762299,266.655640 308.394501,267.205963  M313.231537,261.794189   C313.366302,261.974487 313.501038,262.154755 313.635773,262.335052   C313.605560,262.082458 313.575317,261.829865 313.231537,261.794189  M317.487579,258.611267   C317.487579,258.611267 317.584686,258.448181 317.584686,258.448181   C317.584686,258.448181 317.394958,258.468536 317.487579,258.611267  z\",id:\"svg_33\"})),_path32||(_path32=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M192.867050,377.899384   C192.708252,377.004211 192.549454,376.109070 192.518677,374.891968   C192.646713,374.570007 192.708115,374.485107 192.708115,374.485107   C191.017624,363.067230 194.546036,352.866821 200.654694,343.157654   C201.768936,343.856750 202.153244,344.631958 202.753067,345.164246   C207.007324,348.939758 209.099457,352.700867 203.270370,356.995575   C202.873093,357.288300 203.230164,359.587708 203.902557,360.134216   C205.111710,361.117096 206.826523,361.477814 208.300415,362.554810   C208.316055,366.901337 208.361359,370.791504 208.285919,375.007019   C208.113358,375.557831 208.061539,375.783295 207.669296,376.043396   C207.019531,376.776398 206.710175,377.474792 206.400818,378.173157   C206.771454,378.311127 207.142090,378.449066 207.512741,378.587006   C207.672043,377.721497 207.831345,376.855957 208.274353,376.207642   C208.070847,378.293671 207.583649,380.162567 206.830048,382.178375   C206.368698,382.885803 206.173706,383.446259 205.929504,384.189819   C205.880280,384.372925 205.817276,384.746857 205.554688,384.805054   C204.520523,384.972717 203.748947,385.082184 202.628220,385.104218   C200.201996,384.949585 198.124908,384.882385 195.976349,384.473022   C195.247375,382.710083 194.589859,381.289368 193.932343,379.868622   C193.932358,379.868622 193.945892,380.002380 194.154205,379.855469   C194.458191,379.011871 194.553848,378.315155 194.649506,377.618439   C194.055359,377.712097 193.461197,377.805725 192.867050,377.899384  M204.307693,363.416138   C204.016922,363.694183 203.726135,363.972229 203.435364,364.250305   C203.550156,364.369843 203.758270,364.599762 203.766281,364.592987   C204.073029,364.333649 204.361420,364.052551 204.307693,363.416138  z\",id:\"svg_34\"})),_path33||(_path33=/*#__PURE__*/React.createElement(\"path\",{fill:\"#615337\",opacity:1,stroke:\"none\",d:\" M280.084290,749.888245   C284.749542,743.513855 289.855560,737.411133 293.987213,730.707886   C302.279175,717.254883 310.039032,703.473877 318.538116,689.951111   C321.027039,690.392883 322.996368,690.711792 325.190552,691.130432   C325.695435,691.420471 325.898407,691.672791 325.951965,692.334595   C322.520905,695.136414 319.671295,697.666138 325.767609,701.696533   C320.674805,703.035156 316.565125,704.115356 311.775116,705.374390   C313.929596,706.571289 315.778534,707.598450 317.988800,708.826355   C316.856110,709.714111 316.064056,710.334900 315.821136,710.525330   C316.663300,712.273865 317.295044,713.585510 317.947510,714.932983   C317.968262,714.968872 317.897003,714.926636 317.519806,714.925537   C315.305328,714.630493 313.468018,714.336487 311.630737,714.042542   C311.518585,714.351379 311.406403,714.660217 311.294250,714.969055   C312.054871,715.622437 312.815460,716.275818 313.786591,717.110046   C312.452820,717.767273 311.396851,718.287659 310.299591,718.828308   C311.264221,720.121887 311.984863,721.088257 313.404633,722.992126   C310.866394,722.068359 309.440704,721.549500 307.288452,720.766174   C307.760284,722.453430 308.051971,723.496643 308.446564,724.907715   C304.375854,724.709717 299.572052,721.893555 298.429169,728.493225   C300.594971,729.304993 302.631134,730.068176 304.667267,730.831360   C294.793060,735.015625 288.460510,742.571899 282.254608,750.320251   C281.524536,751.231812 280.113739,751.598145 279.067688,751.962463   C279.439301,751.101257 279.761810,750.494751 280.084290,749.888245  z\",id:\"svg_35\"})),_path34||(_path34=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M631.327393,699.619507   C629.245667,698.785828 627.130676,697.590393 623.928955,695.780701   C624.718201,697.990234 625.351990,699.331848 625.654236,700.744507   C625.907043,701.925781 625.771973,703.190002 625.808716,704.417542   C624.593994,703.605286 622.757446,703.047302 622.299072,701.925903   C621.447815,699.843445 621.608337,697.367432 620.928162,695.186096   C620.606201,694.153625 619.316772,693.422852 618.360718,691.974731   C618.316162,690.628845 618.734741,689.570618 618.383911,689.141663   C611.637146,680.893494 606.832153,671.821472 606.394104,660.971802   C609.708435,658.290283 612.456604,656.505798 614.363831,662.011658   C614.559570,662.576660 616.082153,662.682068 616.989075,663.000793   C620.933899,673.589050 624.878723,684.177368 628.985352,695.381836   C629.610901,696.674561 630.074707,697.351135 630.538452,698.027649   C630.790344,698.437683 631.042236,698.847778 631.327393,699.619507  z\",id:\"svg_36\"})),_path35||(_path35=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2113\",opacity:1,stroke:\"none\",d:\" M561.986877,645.002441   C563.928528,646.094299 565.870117,647.186218 568.338074,648.574036   C568.845398,648.330627 569.978943,647.786743 571.345032,647.131287   C572.487793,649.411926 573.545593,651.522949 574.603394,653.633972   C575.004517,653.514465 575.405640,653.394897 575.806824,653.275330   C575.416138,651.376038 575.025452,649.476746 574.634766,647.577454   C575.060303,647.365540 575.485840,647.153564 575.911316,646.941650   C577.468384,650.142151 579.025391,653.342651 580.709167,656.803711   C577.736633,657.942749 575.675354,658.732605 573.137939,659.704956   C572.315552,657.195740 571.494324,654.690063 570.673096,652.184387   C570.342712,652.281616 570.012268,652.378845 569.681885,652.476135   C569.681885,655.156006 569.681885,657.835815 569.681885,661.519958   C566.922546,659.764709 564.825745,658.430908 562.328125,656.719055   C561.284851,655.895691 560.642395,655.450256 560.000000,655.004883   C559.558289,655.002014 559.116516,654.999207 558.387512,654.662476   C558.539124,652.818298 558.978088,651.308044 559.416992,649.797791   C554.701172,653.269348 554.701172,653.269348 555.979431,655.003723   C556.828430,657.754944 557.449036,660.604004 558.576782,663.235779   C560.544067,667.826904 560.093140,668.669800 554.074829,668.999390   C552.897827,668.995972 552.455994,668.993347 551.861755,668.649597   C550.472839,665.537415 549.236450,662.766235 548.000854,659.749390   C548.001770,659.503662 548.002441,659.012146 548.286011,658.742554   C548.613708,655.951599 551.075928,652.451050 545.766296,651.827271   C546.382141,650.423157 547.188416,649.212158 547.994690,648.001160   C548.760986,647.558472 549.527344,647.115784 550.562378,646.738342   C550.831177,646.803589 551.010437,647.166016 551.185303,647.348633   C551.880310,647.319092 552.400513,647.106873 553.292847,646.878784   C554.409546,646.880005 555.154053,646.897034 556.232178,646.922119   C557.372009,646.271606 558.178162,645.613098 559.234375,644.990173   C559.652832,645.027649 559.821167,645.029602 559.989563,645.031494   C559.989563,645.031494 560.004089,645.000671 560.088623,645.265564   C560.652283,645.783813 561.131348,646.037170 561.610474,646.290527   C561.735962,645.861145 561.861450,645.431824 561.986877,645.002441  z\",id:\"svg_37\"})),_path36||(_path36=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M597.986023,226.008698   C611.591858,236.043884 625.197693,246.079086 638.978149,256.739502   C640.062195,258.833374 640.856750,260.392090 641.915833,261.743469   C642.829895,262.909760 644.044983,263.840179 645.046753,265.229309   C643.560303,265.443298 641.895691,265.721954 640.813904,265.055054   C639.494202,264.241547 638.912476,262.195007 637.581482,261.441559   C629.837769,257.057983 621.839233,253.078735 616.009277,245.634827   C615.518372,243.941452 615.413635,242.135437 614.476990,241.422470   C610.122009,238.107666 605.536682,235.095459 600.876465,231.673492   C599.568237,229.639679 598.417480,227.907364 597.453918,226.165558   C597.641174,226.156067 597.986023,226.008698 597.986023,226.008698  z\",id:\"svg_38\"})),_path37||(_path37=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M645.126953,264.874878   C644.044983,263.840179 642.829895,262.909760 641.915833,261.743469   C640.856750,260.392090 640.062195,258.833374 639.202026,256.982361   C651.015015,264.091064 663.462463,270.799622 669.671448,284.412231   C671.940369,289.386505 674.547852,294.206299 676.924438,299.728943   C676.569153,300.576935 676.290283,300.792572 675.740723,300.812378   C674.648743,299.716858 673.827515,298.817200 672.972656,297.576691   C671.668701,295.476105 670.398438,293.716339 668.948120,291.707214   C667.686768,293.116638 666.848328,294.053528 665.762085,294.977844   C665.514221,294.965302 665.017944,294.961639 665.013794,294.974609   C665.009583,294.987579 665.041443,294.971405 665.033081,294.603790   C663.021667,291.811462 661.018555,289.386749 659.005371,286.978943   C658.995361,286.995819 659.032288,286.990173 659.034180,286.612915   C658.274414,284.150299 657.512634,282.064911 657.067383,279.814941   C658.422729,278.338989 659.461609,277.027557 661.567444,274.369293   C658.728271,274.201965 656.870605,274.092499 654.850098,273.735291   C654.141724,273.310425 653.596130,273.133331 653.026855,272.977509   C653.003113,272.998779 653.046631,272.957489 653.077148,272.609558   C652.417358,271.162567 651.727173,270.063446 651.025024,268.981659   C651.013123,268.998962 651.046265,268.963654 650.996887,268.650452   C650.299011,267.888000 649.650452,267.438751 648.848877,266.686523   C647.506165,265.880646 646.316589,265.377777 645.126953,264.874878  z\",id:\"svg_39\"})),_path38||(_path38=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M193.559891,379.899323   C194.589859,381.289368 195.247375,382.710083 195.994385,384.876221   C196.440872,387.050659 196.567398,388.590637 197.193024,389.890411   C200.647934,397.068176 201.759445,405.762390 209.979767,409.968689   C210.013229,410.007904 210.083633,410.083191 210.060791,410.439575   C214.042770,415.324036 217.490051,420.866821 225.256042,419.011475   C225.683701,419.002563 225.854752,418.998962 226.326904,419.125366   C227.410660,418.508698 228.193314,417.762085 229.101624,416.717285   C229.476212,415.607666 229.725159,414.796265 230.284592,413.836639   C231.734940,411.797119 232.874817,409.905823 234.359314,408.010437   C235.363998,406.535339 236.024048,405.064301 236.756805,403.431244   C237.057159,403.488647 238.107803,403.689392 238.447540,403.754333   C238.853470,401.674561 239.241501,400.083344 239.454163,398.469025   C239.619049,397.217377 239.839493,395.871490 239.556229,394.681519   C238.725555,391.191772 239.645477,388.840088 243.322662,388.320618   C242.507675,393.933838 241.676147,399.124329 240.799408,404.307190   C240.535156,405.869293 240.145218,407.410187 239.471344,409.018066   C235.803940,413.440613 232.478027,417.805908 228.735123,422.120270   C225.837402,422.410126 223.356659,422.750854 220.875931,423.091583   C220.875931,423.091583 220.952957,423.125214 220.944901,422.829865   C220.541367,422.146393 220.145889,421.758270 219.750427,421.370148   C219.479172,421.894928 219.207932,422.419708 218.936676,422.944489   C207.830750,417.054596 201.864029,406.933563 196.958710,396.012573   C195.281815,392.279205 193.902191,388.386749 192.737793,384.462799   C192.337860,383.115021 193.006805,381.450073 193.559891,379.899323  z\",id:\"svg_40\"})),_path39||(_path39=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M208.330078,362.098450   C206.826523,361.477814 205.111710,361.117096 203.902557,360.134216   C203.230164,359.587708 202.873093,357.288300 203.270370,356.995575   C209.099457,352.700867 207.007324,348.939758 202.753067,345.164246   C202.153244,344.631958 201.768936,343.856750 200.959595,343.018921   C202.553146,339.973114 204.471970,337.102386 207.092072,334.115479   C208.478348,332.950348 209.163345,331.901367 209.848328,330.852386   C209.848328,330.852386 209.930115,330.982574 210.230896,330.921936   C211.010437,330.233063 211.489182,329.604767 211.967941,328.976501   C212.373016,328.646698 212.778091,328.316864 213.732300,328.028137   C214.853912,328.741180 215.426422,329.413147 215.852814,330.391113   C214.471130,332.352783 213.235580,334.008453 212.111420,335.514832   C213.544937,337.171417 214.772476,338.589996 215.990967,340.376526   C215.990158,341.481049 215.998428,342.217590 216.005737,343.217499   C216.225800,343.716095 216.446808,343.951355 216.667816,344.186584   C216.772705,343.797668 216.877579,343.408722 217.304718,343.051941   C218.088730,343.716125 218.550461,344.348145 218.997711,345.235291   C218.956024,345.828522 218.928833,346.166687 218.657166,346.769653   C215.923599,349.639587 213.434509,352.244659 210.640961,355.038940   C209.984192,356.819214 209.631927,358.410278 209.234741,360.299774   C208.903244,361.098297 208.616669,361.598358 208.330078,362.098450  M212.828629,341.227112   C212.888565,341.405792 212.948517,341.584473 213.008484,341.763153   C213.066940,341.583344 213.125412,341.403503 212.828629,341.227112  z\",id:\"svg_41\"})),_path40||(_path40=/*#__PURE__*/React.createElement(\"path\",{fill:\"#574432\",opacity:1,stroke:\"none\",d:\" M279.778015,749.911194   C279.761810,750.494751 279.439301,751.101257 278.839417,752.207886   C277.706390,754.801331 276.850830,756.894531 275.995270,758.987793   C270.699829,759.567200 267.755524,763.886047 263.974701,766.772827   C260.787964,769.206055 258.559723,773.099182 255.154602,774.992676   C250.363541,777.656555 244.920151,779.196533 239.675583,780.981750   C234.289383,782.815125 228.859024,784.570312 223.349869,785.974792   C218.928574,787.101807 214.227982,787.233826 209.902115,788.600952   C206.781097,789.587280 204.036331,791.820190 201.193008,793.607239   C199.585724,794.617493 198.118393,795.850342 196.214249,796.951538   C201.530914,786.971069 211.811615,786.215759 221.433548,784.150208   C233.772812,781.501343 246.186752,778.875366 256.401764,770.863159   C260.526337,767.627991 263.812988,763.346802 267.705780,759.787598   C271.477600,756.338928 275.538025,753.205872 279.778015,749.911194  z\",id:\"svg_42\"})),_path41||(_path41=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M402.960205,591.190552   C398.724426,592.936340 394.536743,592.573914 390.290619,591.104126   C377.366364,586.630371 364.345734,582.423279 351.511200,577.708008   C346.765411,575.964417 342.432831,573.096008 338.083679,570.408386   C339.164093,568.880493 340.072571,567.684875 341.420410,565.911072   C342.377991,566.854065 344.031952,567.715759 344.114990,568.708862   C344.361694,571.657898 345.348511,572.693726 348.110687,571.798889   C349.773224,571.260376 351.394196,570.593384 353.017700,569.986938   C353.001556,569.989807 353.010315,569.965637 353.007568,570.303101   C352.665283,571.630249 352.325806,572.619873 351.980499,573.607666   C354.538483,575.362427 357.125031,577.353088 359.455444,572.928406   C360.558838,572.979187 361.294281,573.016846 362.016815,573.400574   C361.257965,575.056152 360.512024,576.365723 359.543793,578.065430   C361.173279,578.407898 362.587646,578.705200 364.001038,579.001221   C364.000000,579.000000 363.997559,578.997559 364.248962,579.277344   C372.114899,581.674194 379.729492,583.791260 388.166626,586.137024   C387.546112,584.447021 387.277130,583.714355 387.362823,582.980469   C388.824341,583.346863 389.931122,583.714600 391.022827,584.420410   C390.689819,585.762939 390.371948,586.767395 389.882050,588.315369   C393.781708,588.599304 397.536194,588.782959 401.259064,589.230103   C401.895386,589.306519 402.396576,590.508545 402.960205,591.190552  M348.408081,573.481323   C348.408081,573.481323 348.523621,573.414246 348.408081,573.481323  z\",id:\"svg_43\"})),_path42||(_path42=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M499.620667,655.958740   C498.214081,656.786377 496.483582,657.407410 493.953247,657.981812   C486.482574,659.751099 480.140625,658.377075 473.798950,656.188293   C471.659668,655.450012 469.255249,655.479858 466.509125,655.112671   C461.042633,655.109436 456.039032,655.152100 450.612854,655.138184   C447.784698,655.422485 445.379059,655.763367 442.526703,656.061401   C438.441895,656.255310 434.803772,656.492065 430.870728,656.475464   C427.009766,655.014709 423.443726,653.807190 419.877686,652.599670   C430.292328,652.635803 440.722198,652.327393 451.118042,652.787842   C467.189850,653.499817 483.238373,654.737366 499.620667,655.958740  z\",id:\"svg_44\"})),_path43||(_path43=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M256.002655,453.997467   C252.698883,453.903503 251.119629,455.637360 250.798706,459.225891   C249.792572,451.174164 248.672104,442.723450 248.084076,434.235809   C247.835464,430.647339 249.134903,426.954865 248.912994,423.360138   C248.774643,421.119049 247.107422,418.972321 246.394821,416.384033   C248.371658,415.609924 250.746872,415.726624 248.923599,412.767761   C248.852631,412.652588 250.271561,411.619293 250.996399,411.450806   C250.854935,415.709686 250.145279,419.881592 256.000519,420.003967   C256.000427,420.000244 255.991806,420.001801 255.991821,420.001801   C255.638031,421.701538 255.284241,423.401245 255.094513,424.312775   C257.619110,425.989014 260.190979,427.696655 263.074249,429.611084   C258.403290,431.595764 254.515747,430.311188 251.355988,425.204193   C250.822159,431.126282 250.388214,435.940460 249.874023,441.644653   C251.326080,442.947540 253.644089,444.812134 255.696808,446.933441   C257.533295,448.831329 258.085602,451.061157 256.023438,453.650146   C256.000000,454.000000 256.002655,453.997467 256.002655,453.997467  z\",id:\"svg_45\"})),_path44||(_path44=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M374.991058,217.938965   C374.991058,217.938980 375.236267,217.748062 375.795288,217.839447   C377.904114,217.621872 379.453888,217.312897 380.998993,217.398438   C382.295380,221.195328 383.596466,224.597687 384.695465,227.993195   C384.493378,227.986328 384.089050,227.976944 383.877625,227.720917   C382.192047,226.258163 380.717926,225.051453 378.349762,223.112930   C377.627319,227.935501 376.994080,232.162384 376.206482,237.419769   C375.026001,234.509537 373.974670,231.917679 372.923370,229.325821   C372.507019,229.353287 372.090668,229.380753 371.674347,229.408234   C372.100677,234.258286 372.527008,239.108353 372.615479,243.937164   C370.961517,243.471939 369.645508,243.027954 368.401276,242.608215   C367.454742,244.279984 366.696411,245.619400 365.938080,246.958817   C365.807709,246.435272 365.677338,245.911713 365.546967,245.388168   C363.333923,245.337280 361.120911,245.286407 358.616699,245.182678   C357.894928,244.762680 357.464386,244.395523 357.360687,243.964310   C358.991821,242.500839 360.296143,241.101440 360.730774,240.635117   C363.791748,240.635117 366.032227,240.635117 367.540222,240.635117   C366.966888,238.133453 366.485931,236.035019 366.299103,234.101120   C367.759399,235.164062 368.925598,236.062454 370.091766,236.960846   C370.297943,236.724167 370.504120,236.487473 370.710297,236.250778   C369.146484,232.474396 367.582703,228.697998 366.184021,224.616333   C368.023224,223.344772 369.788605,222.504120 371.343689,221.374084   C372.683868,220.400238 373.784515,219.096725 374.991058,217.938965  M376.693909,221.602478   C376.993622,221.379471 377.293335,221.156464 377.593048,220.933441   C377.410156,220.742584 377.227234,220.551712 377.044312,220.360855   C376.808411,220.650772 376.572540,220.940674 376.693909,221.602478  z\",id:\"svg_46\"})),_path45||(_path45=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M384.089050,227.976944   C384.089050,227.976944 384.493378,227.986328 385.047913,227.997833   C386.069641,228.007629 386.536865,228.005905 387.002045,228.002106   C387.000000,228.000000 386.995972,227.996155 386.997559,228.351379   C387.532471,231.816849 389.085693,231.027679 389.822571,229.103622   C390.783936,226.593521 390.946075,223.786316 391.567078,221.133850   C392.029327,219.159378 392.674072,217.227615 393.237549,215.276825   C393.649414,215.436661 394.061249,215.596481 394.473114,215.756302   C394.473114,219.037674 394.473114,222.319031 394.473114,225.054367   C396.528839,224.226852 398.291168,223.517456 400.375427,222.907898   C401.583832,223.530411 402.470306,224.053070 404.337402,225.153915   C403.058990,219.739197 402.024414,215.357162 400.996887,210.745239   C401.021271,210.209808 401.032288,209.904022 401.037018,209.598022   C401.775421,209.384720 402.513824,209.171402 403.651276,209.388336   C405.150452,212.582458 407.323303,214.751251 405.572327,218.541016   C404.616241,220.610382 405.550842,224.820709 409.962891,225.222260   C408.619934,225.689941 407.304047,225.847672 405.591370,226.007568   C404.456146,227.714584 403.717743,229.419418 402.979736,231.300705   C402.980133,231.477142 402.986694,231.829941 402.593994,231.862823   C398.694458,233.101395 395.187622,234.307068 391.403992,235.607925   C391.403992,234.509048 391.403992,233.512909 391.403992,232.755600   C388.953430,233.007797 386.750732,233.234497 384.089050,233.508438   C384.089050,231.541275 384.089050,229.759109 384.089050,227.976944  z\",id:\"svg_47\"})),_path46||(_path46=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M409.989960,224.912292   C405.550842,224.820709 404.616241,220.610382 405.572327,218.541016   C407.323303,214.751251 405.150452,212.582458 404.038025,209.459991   C404.025757,209.101410 404.403809,208.884521 405.050476,208.953308   C408.482788,208.680969 411.268433,208.339844 414.046448,208.439255   C413.875519,212.325897 413.712219,215.772003 413.530243,219.612213   C415.988434,216.305664 417.980621,213.625916 420.219330,210.970581   C420.465851,210.994980 420.959381,211.038284 420.936554,211.377136   C420.640106,212.806030 420.366516,213.896042 420.068115,215.363174   C420.030426,216.495773 420.017548,217.251236 420.008545,218.277588   C420.017883,218.729019 420.023285,218.909546 419.993713,219.419815   C419.847595,221.092728 419.736481,222.435898 419.618591,223.860458   C418.444977,224.008759 416.911469,224.202545 415.377960,224.396317   C415.292114,224.929001 415.206268,225.461685 415.120422,225.994370   C417.531250,226.560486 419.942108,227.126602 422.481079,227.722809   C422.481079,229.006256 422.481079,230.561172 422.481079,232.006073   C421.215424,232.504700 419.939575,233.007355 418.760742,233.471771   C417.573792,231.676178 416.440857,229.962265 414.943604,227.697189   C414.540192,231.252899 414.270691,233.627975 413.660767,235.983124   C412.865265,235.956100 412.410156,235.948975 411.667114,235.795624   C411.080475,234.963287 410.501068,233.685135 410.522797,233.674820   C414.100861,231.978455 412.066040,228.543655 412.795593,226.006104   C412.821014,225.917694 410.967651,225.289108 409.989960,224.912292  M408.816376,214.939636   C408.602814,217.026459 408.389252,219.113281 408.175720,221.200104   C408.532562,221.267929 408.889435,221.335754 409.246277,221.403580   C410.364288,218.085388 411.482269,214.767197 412.600281,211.449005   C411.988678,211.133179 411.377075,210.817368 410.765472,210.501541   C410.034241,211.741516 409.303040,212.981491 408.816376,214.939636  z\",id:\"svg_48\"})),_path47||(_path47=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M403.094849,591.550110   C402.396576,590.508545 401.895386,589.306519 401.259064,589.230103   C397.536194,588.782959 393.781708,588.599304 389.882050,588.315369   C390.371948,586.767395 390.689819,585.762939 391.421326,584.407104   C403.658112,587.324951 415.659271,589.309570 427.988342,589.399536   C428.365906,590.331665 428.724823,590.925720 429.083740,591.519775   C429.403595,590.710693 429.723450,589.901672 430.425720,589.080078   C432.517731,589.427063 434.227356,589.786560 435.968201,590.512207   C437.046570,594.212524 438.986572,593.285950 441.346008,591.935547   C442.114624,591.945435 442.553802,591.949707 442.997742,592.336426   C443.014740,593.484070 443.026978,594.249390 443.039215,595.014648   C439.893616,598.036377 437.264130,596.408325 434.023743,594.017883   C432.226166,594.299561 431.116119,594.653625 430.006042,595.007690   C424.347076,594.166199 418.706482,593.065002 413.016449,592.662598   C411.560944,592.559631 408.341980,588.214844 407.836182,594.154785   C406.856323,594.208679 405.951111,593.865967 404.791565,593.061340   C404.361176,592.424377 404.168549,592.273987 403.959320,592.148315   C403.716034,592.068787 403.472748,591.989197 403.094849,591.550110  z\",id:\"svg_49\"})),_path48||(_path48=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E0C7AA\",opacity:1,stroke:\"none\",d:\" M221.976898,322.809753   C224.575638,317.983917 229.818375,317.743530 233.979126,317.355316   C241.190521,316.682404 248.554092,317.640381 255.655121,318.433838   C255.203506,319.326691 254.950607,319.700073 254.354340,320.125427   C253.785339,321.224670 253.559692,322.271912 253.367432,323.690918   C252.817429,326.996124 252.234024,329.929596 251.297150,332.874847   C250.089798,331.088837 248.512909,329.281799 248.535675,327.495148   C248.580231,323.996277 246.644684,321.985565 243.069687,322.863068   C242.490082,323.005371 241.885986,323.468445 241.367233,323.374542   C234.838211,322.192261 228.419846,322.961578 222.000580,323.955688   C221.975677,323.319427 221.976288,323.064606 221.976898,322.809753  z\",id:\"svg_50\"})),_path49||(_path49=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M684.914001,311.005310   C689.106323,320.630493 693.298584,330.255676 697.210815,340.462402   C696.617676,341.413605 696.304504,341.783264 695.628418,342.031525   C694.253235,339.302551 693.240967,336.694977 691.822083,333.040039   C690.194214,335.143219 689.097107,336.560638 687.628906,337.977051   C686.343079,336.984528 685.119446,336.134003 684.586914,334.967896   C683.816650,333.281158 683.753296,331.275085 683.005188,329.573700   C682.264954,327.890198 681.049072,326.415802 680.041870,324.849701   C680.376770,324.559662 680.711670,324.269653 681.046570,323.979645   C682.330994,324.993744 683.615356,326.007812 684.899780,327.021881   C685.386108,326.758179 685.872437,326.494446 686.358765,326.230743   C684.262634,321.121460 682.166504,316.012177 680.348816,310.912292   C682.056213,310.949585 683.485107,310.977448 684.914001,311.005310  z\",id:\"svg_51\"})),_path50||(_path50=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M258.921661,319.485596   C261.344086,319.324036 263.766510,319.162506 266.742493,319.190002   C267.880951,319.620605 268.465820,319.862183 269.035767,320.486267   C269.005554,321.895813 268.990204,322.922852 268.691925,324.000977   C268.108185,324.484863 267.807404,324.917694 267.506653,325.350525   C268.002411,325.225037 268.498138,325.099518 269.322571,324.974854   C270.088348,325.001465 270.525482,325.027222 270.961304,325.414246   C270.313934,327.511749 269.667877,329.248016 268.662537,330.983032   C267.517059,331.654144 266.730835,332.326416 265.710876,332.993103   C265.477173,332.987488 265.009644,332.991638 264.672852,333.039886   C264.552185,334.088379 264.768311,335.088623 264.986694,336.444214   C264.843536,337.700104 264.698120,338.600708 264.482544,339.935669   C262.732758,338.420807 261.356262,337.229126 259.979767,336.037415   C259.613647,336.335510 259.247528,336.633636 258.881409,336.931732   C259.807739,338.519592 260.734039,340.107483 261.660370,341.695343   C261.473267,342.002777 261.286194,342.310211 261.099121,342.617645   C259.063873,341.742279 257.028625,340.866913 255.006165,339.571381   C256.419556,334.989929 257.343231,330.575226 259.376007,326.749878   C260.922791,323.839203 261.607849,321.771790 258.921661,319.485596  z\",id:\"svg_52\"})),_path51||(_path51=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M695.991333,342.152954   C696.304504,341.783264 696.617676,341.413605 697.244873,340.851013   C700.984619,347.612946 704.410156,354.567780 707.876587,362.160461   C707.920471,363.218079 707.923523,363.637909 707.521118,364.066895   C706.421997,365.430420 705.536682,366.723328 705.078491,368.153137   C704.347778,370.433380 703.901367,372.804779 703.233765,374.705750   C702.735840,371.195953 702.338806,368.118042 701.815186,364.717468   C699.789307,361.563232 697.890015,358.731598 695.994385,355.712952   C695.998047,355.525970 695.995850,355.151947 696.254700,354.918762   C696.341919,353.465759 696.170288,352.245941 696.000732,350.577026   C695.998962,347.469604 695.995117,344.811249 695.991333,342.152954  z\",id:\"svg_53\"})),_path52||(_path52=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M400.053497,222.808044   C398.291168,223.517456 396.528839,224.226852 394.473114,225.054367   C394.473114,222.319031 394.473114,219.037674 394.473114,215.756302   C394.061249,215.596481 393.649414,215.436661 393.237549,215.276825   C392.674072,217.227615 392.029327,219.159378 391.567078,221.133850   C390.946075,223.786316 390.783936,226.593521 389.822571,229.103622   C389.085693,231.027679 387.532471,231.816849 387.339844,228.303604   C390.060181,225.017166 390.060181,225.017166 387.230591,223.505020   C387.150909,225.087631 387.077515,226.545914 387.004089,228.004196   C386.536865,228.005905 386.069641,228.007629 385.250000,228.004700   C383.596466,224.597687 382.295380,221.195328 381.375061,217.369949   C382.509552,216.920303 383.263306,216.893677 384.129913,217.060150   C384.512512,216.845474 384.782288,216.437714 385.369385,215.886963   C386.791534,215.494064 387.896393,215.244141 389.033051,215.270538   C389.632690,214.576950 390.200500,213.607010 390.768311,212.637085   C390.776733,212.469666 390.785126,212.302246 391.247040,212.327164   C392.464630,212.013550 393.228638,211.507629 393.992676,211.001694   C394.758545,210.859695 395.524414,210.717697 396.686798,211.048126   C397.088379,213.114578 396.722137,214.830338 397.194611,216.271042   C397.756012,217.982819 399.038513,219.458099 400.010712,221.331970   C400.026428,222.021408 400.039978,222.414734 400.053497,222.808044  z\",id:\"svg_54\"})),_path53||(_path53=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M420.959381,211.038284   C420.959381,211.038284 420.465851,210.994980 420.226318,210.743713   C419.986786,210.492432 420.006348,210.037567 419.894836,209.810410   C419.518280,209.381424 419.253235,209.179596 419.083496,208.694824   C417.470581,208.274170 415.762329,208.136444 414.054077,207.998718   C411.268433,208.339844 408.482788,208.680969 405.267426,208.973892   C407.853943,207.809494 410.785522,206.192383 413.901398,205.665588   C426.076904,203.607117 438.319855,201.950439 450.514008,199.996475   C452.583038,199.664932 454.729614,198.921005 456.504974,197.824539   C461.429840,194.782867 466.763977,194.443527 472.372284,195.191223   C470.304413,196.059265 468.146118,196.533432 465.588379,197.007355   C461.788940,198.350433 458.388916,199.693741 454.674011,201.037415   C453.939240,201.046875 453.519348,201.055984 452.706543,201.084167   C449.538544,202.074341 446.763489,203.045441 443.652649,203.981628   C441.220123,204.298599 439.123383,204.650513 436.642334,205.002228   C435.488953,205.014008 434.719849,205.026001 433.633240,205.070435   C432.871582,205.734818 432.427460,206.366745 431.621094,206.996811   C430.536896,207.004440 429.814911,207.013916 428.882507,206.760605   C427.572296,206.366562 426.472504,206.235275 424.982208,206.174194   C421.970825,206.773895 420.449127,208.136292 420.959381,211.038284  z\",id:\"svg_55\"})),_path54||(_path54=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E0C7AA\",opacity:1,stroke:\"none\",d:\" M727.076233,368.871368   C738.338318,373.130890 747.174927,379.772461 749.701294,392.859680   C749.172058,395.066742 748.994019,396.680573 748.763306,398.771820   C748.001892,397.746704 747.630249,397.246277 747.087524,396.479889   C746.000671,395.155304 745.084961,394.096710 744.447327,392.799744   C742.551880,388.438446 740.378296,384.315521 738.394287,380.077820   C738.538757,379.721741 738.493591,379.480469 738.448425,379.239166   C738.255310,379.444794 738.062195,379.650391 737.566772,379.894165   C736.858521,379.944336 736.452576,379.956390 736.032349,379.590088   C735.347107,377.328339 737.055298,372.575958 731.848633,375.662842   C730.846008,375.099701 730.043823,374.794525 729.170776,374.213684   C728.553345,373.232605 728.006775,372.527161 727.402161,371.492065   C727.235535,370.727936 727.126953,370.293488 727.027832,369.611877   C727.037292,369.364655 727.076233,368.871368 727.076233,368.871368  z\",id:\"svg_56\"})),_path55||(_path55=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M518.000000,669.997559   C517.515991,668.312988 517.031921,666.628479 516.428650,664.529053   C515.435608,664.256531 514.064514,663.880371 512.476562,663.444641   C512.476562,662.276917 512.476562,661.064819 512.476562,659.852722   C512.118408,660.238953 511.760254,660.625183 511.402069,661.011475   C508.947296,659.573853 506.492523,658.136230 504.018768,656.350220   C504.784363,655.773499 505.568939,655.545105 506.707703,655.682739   C508.061646,655.927673 509.061462,655.806702 510.061249,655.685669   C511.782745,655.515259 513.504272,655.344788 515.802368,655.407166   C516.903687,655.441589 517.428406,655.243225 517.953125,655.044861   C520.189087,654.882080 522.424988,654.719299 525.492493,654.725220   C526.904297,654.955933 527.484497,655.018005 527.982056,655.411560   C525.805969,657.819214 523.902405,661.032532 519.954285,656.900818   C519.954285,661.592346 519.954285,666.283936 519.724731,670.974060   C519.495178,670.972595 519.036499,670.990295 518.918762,670.772766   C518.593750,670.283508 518.326721,670.097656 518.000000,669.997559  z\",id:\"svg_57\"})),_path56||(_path56=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M250.996262,411.013824   C250.271561,411.619293 248.852631,412.652588 248.923599,412.767761   C250.746872,415.726624 248.371658,415.609924 246.302643,416.028748   C245.941956,416.072754 245.952881,416.049072 245.943420,415.694794   C242.984253,411.964508 239.127686,413.651794 237.073639,419.216980   C235.117142,421.326233 233.160645,423.435486 230.573151,425.321228   C229.678802,424.122253 229.415451,423.146698 229.152100,422.171173   C232.478027,417.805908 235.803940,413.440613 239.868347,409.025238   C241.992218,407.466522 243.377609,405.957886 244.263397,404.993317   C246.027435,405.715637 247.553314,406.340454 249.391022,406.979675   C250.118942,407.006531 250.535034,407.019012 250.965363,407.271484   C250.979599,407.511444 251.011719,407.991119 251.008179,408.368866   C251.001831,409.502350 250.999039,410.258087 250.996262,411.013824  z\",id:\"svg_58\"})),_path57||(_path57=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M313.505432,554.661865   C313.877777,553.501282 314.430145,552.647827 315.344543,551.333862   C317.804749,549.282654 319.902954,547.691833 322.337097,546.131226   C324.167755,547.759583 325.662384,549.357788 326.825500,551.099731   C325.874298,551.776001 325.276672,552.336914 324.631256,552.836060   C321.846252,554.989807 321.069092,555.729919 324.508148,559.280457   C328.477539,563.378479 331.275024,561.969971 334.991699,561.287720   C335.002258,562.084045 335.004791,562.539185 335.003662,562.997131   C335.000000,563.000000 334.994415,563.007324 334.648376,563.038635   C333.200348,564.045044 332.098358,565.020081 331.002991,566.245117   C331.006104,566.661926 331.002625,566.828674 330.999146,566.995361   C327.809784,564.705872 324.644104,562.382385 321.423431,560.137756   C318.879181,558.364502 316.267334,556.688232 313.505432,554.661865  z\",id:\"svg_59\"})),_path58||(_path58=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M330.996338,565.995117   C332.098358,565.020081 333.200348,564.045044 334.704651,563.177246   C335.194641,563.333130 335.282318,563.381592 335.369995,563.430054   C335.249115,563.284790 335.128204,563.139526 335.007324,562.994263   C335.004791,562.539185 335.002258,562.084045 334.994446,560.887329   C334.981781,559.067627 334.974426,557.989441 335.293518,557.058411   C340.024658,560.267395 344.456116,563.291870 348.819244,566.411865   C350.312195,567.479431 351.633881,568.786499 353.033813,569.984131   C351.394196,570.593384 349.773224,571.260376 348.110687,571.798889   C345.348511,572.693726 344.361694,571.657898 344.114990,568.708862   C344.031952,567.715759 342.377991,566.854065 341.420410,565.911072   C340.072571,567.684875 339.164093,568.880493 337.864899,570.137512   C337.474182,570.198914 337.176758,570.285095 337.050842,569.799622   C334.948730,568.207825 332.972534,567.101440 330.996338,565.995117  z\",id:\"svg_60\"})),_path59||(_path59=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M258.566467,319.348511   C261.607849,321.771790 260.922791,323.839203 259.376007,326.749878   C257.343231,330.575226 256.419556,334.989929 254.710602,339.779266   C253.962784,342.097321 253.538147,343.791321 253.078644,345.475830   C252.760941,346.640503 252.395096,347.792084 251.982727,348.489258   C251.826675,342.973724 251.738663,337.918365 251.650635,332.863037   C252.234024,329.929596 252.817429,326.996124 253.676712,323.565430   C254.200958,322.069916 254.449326,321.071655 254.697693,320.073425   C254.950607,319.700073 255.203506,319.326691 255.738602,318.759857   C256.750946,318.781403 257.481110,318.996399 258.566467,319.348511  z\",id:\"svg_61\"})),_path60||(_path60=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M702.427490,463.194183   C707.454163,466.637665 710.356262,466.622864 715.742676,462.973022   C717.025391,462.103851 718.485474,461.496460 720.300537,460.410095   C722.627747,458.480072 726.929871,459.348969 726.307251,454.940948   C727.737061,455.350616 728.823853,455.705933 729.896912,456.399597   C729.544556,457.968201 729.205872,459.198395 728.487427,460.492615   C726.637634,461.237701 724.904297,461.621246 723.741943,462.649902   C717.823059,467.887726 711.039062,469.490479 703.396973,468.008179   C703.017334,466.505035 702.637695,465.001892 702.427490,463.194183  z\",id:\"svg_62\"})),_path61||(_path61=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M352.736816,622.686523   C351.642151,623.701904 350.264771,624.483215 348.285339,625.606140   C348.669159,626.847839 349.305206,628.905640 350.066162,631.367554   C347.795776,631.947144 345.804230,632.455566 343.035645,632.963867   C341.236176,632.986206 340.213776,633.008606 339.191406,633.031067   C339.807739,630.485596 340.066711,627.780273 341.117981,625.429321   C343.056274,621.094971 347.286377,620.141235 352.736816,622.686523  z\",id:\"svg_63\"})),_path62||(_path62=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M703.321777,468.376953   C711.039062,469.490479 717.823059,467.887726 723.741943,462.649902   C724.904297,461.621246 726.637634,461.237701 728.553223,460.927765   C729.026978,461.586578 729.055176,461.874298 729.083374,462.161987   C724.315552,467.543671 718.217102,470.786652 711.330139,472.224884   C708.305786,472.856415 704.130676,474.038971 703.321777,468.376953  z\",id:\"svg_64\"})),_path63||(_path63=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M339.094910,633.462891   C340.213776,633.008606 341.236176,632.986206 342.643188,632.971008   C342.642029,633.474609 342.256195,633.970947 341.751190,634.620544   C343.336060,635.072998 344.826385,635.498474 346.831177,636.187073   C348.223907,636.295227 349.102203,636.140259 349.980469,635.985229   C350.950714,636.428406 351.920990,636.871521 352.682617,637.940918   C350.811523,639.790405 346.610260,637.538086 347.213837,642.235718   C348.909882,642.373840 350.350739,642.491150 351.791626,642.608521   C351.885010,643.079285 351.978424,643.550110 352.071808,644.020874   C350.407684,644.560059 348.775177,645.263672 347.070404,645.591614   C345.395844,645.913879 343.647919,645.854614 341.889465,645.626587   C340.964386,643.544312 340.082062,641.798218 339.199738,640.052063   C339.132629,637.999573 339.065521,635.947144 339.094910,633.462891  z\",id:\"svg_65\"})),_path64||(_path64=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M747.258606,396.745850   C747.630249,397.246277 748.001892,397.746704 748.763306,398.771820   C748.994019,396.680573 749.172058,395.066742 749.643677,393.250122   C753.156006,396.180145 753.749329,400.014191 753.216797,404.298157   C752.892822,406.904755 753.042480,409.570282 752.623779,412.897369   C751.253113,417.178497 750.238098,420.771576 749.054932,424.020508   C749.204529,421.876465 750.202087,419.866425 749.722046,418.313019   C747.666199,411.660980 751.506531,404.245514 747.015991,397.675903   C747.132141,397.154785 747.195374,396.950317 747.258606,396.745850  z\",id:\"svg_66\"})),_path65||(_path65=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M597.730469,225.783142   C597.986023,226.008698 597.641174,226.156067 597.108276,226.094025   C595.726746,225.691528 594.878052,225.351074 593.730164,224.868469   C592.280151,224.139542 591.129395,223.552750 589.818420,222.657013   C586.376221,221.276169 583.094177,220.204285 579.553589,218.975311   C578.540466,218.583237 577.786011,218.348267 576.629028,218.082123   C575.150269,218.036819 574.073914,218.022690 572.748413,218.005096   C572.499268,218.001648 572.000854,217.996948 572.000854,217.996948   C568.359497,216.336197 564.730469,214.647720 561.072327,213.024780   C558.769775,212.003265 556.423645,211.079910 554.026367,209.770020   C562.048157,211.849060 570.180847,214.145950 578.219543,216.734711   C583.831909,218.542068 589.348877,220.665359 594.828003,222.849380   C595.899841,223.276596 596.602112,224.630875 597.730469,225.783142  z\",id:\"svg_67\"})),_path66||(_path66=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M616.989990,662.608887   C616.082153,662.682068 614.559570,662.576660 614.363831,662.011658   C612.456604,656.505798 609.708435,658.290283 606.025879,660.966858   C604.546692,660.962646 603.813660,660.954895 603.080627,660.947144   C603.281128,658.177979 603.481689,655.408752 604.231201,652.322021   C606.528564,652.316345 608.276917,652.628235 610.025269,652.940186   C611.289185,653.264893 612.553040,653.589539 614.145264,653.926880   C615.312744,656.698792 616.151794,659.457886 616.989990,662.608887  z\",id:\"svg_68\"})),_path67||(_path67=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M366.018890,224.921600   C367.582703,228.697998 369.146484,232.474396 370.710297,236.250778   C370.504120,236.487473 370.297943,236.724167 370.091766,236.960846   C368.925598,236.062454 367.759399,235.164062 366.297363,233.724213   C365.513306,231.545486 365.025024,229.908173 364.536774,228.270874   C363.536041,233.409348 361.029327,235.791504 355.745758,236.149429   C352.128174,234.203308 354.941376,232.260193 356.028564,230.774872   C357.336487,228.987991 359.280762,227.666916 361.019348,225.838303   C361.469452,225.350571 361.849701,225.168701 362.938660,225.009979   C364.437866,224.995972 365.228394,224.958786 366.018890,224.921600  z\",id:\"svg_69\"})),_path68||(_path68=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M417.196167,651.286743   C412.115906,649.401245 406.881989,647.163330 401.569122,645.131775   C400.141418,644.585815 398.473602,644.667786 395.500336,644.274048   C391.645782,642.089233 386.393555,639.112122 381.047791,635.826782   C392.973846,640.682922 404.993378,645.847351 417.196167,651.286743  z\",id:\"svg_70\"})),_path69||(_path69=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M726.788574,368.785156   C727.076233,368.871368 727.037292,369.364655 726.720947,369.800201   C723.342773,373.673157 721.191162,373.655090 718.313843,369.847961   C716.571289,367.542389 714.993530,365.603790 711.715393,367.864868   C710.468323,366.584259 709.500916,365.430176 708.379150,364.228760   C708.224792,364.181458 707.926575,364.057709 707.926575,364.057709   C707.923523,363.637909 707.920471,363.218079 707.987915,362.495178   C712.460327,363.417511 716.862183,364.642944 721.668945,366.389587   C722.814148,367.193298 723.554565,367.475861 724.294922,367.758423   C725.030273,368.071899 725.765564,368.385437 726.788574,368.785156  z\",id:\"svg_71\"})),_path70||(_path70=/*#__PURE__*/React.createElement(\"path\",{fill:\"#493724\",opacity:1,stroke:\"none\",d:\" M749.223022,424.364655   C750.238098,420.771576 751.253113,417.178497 752.563843,413.350769   C754.242676,422.237885 753.417664,430.893036 747.056519,438.675385   C746.159668,438.581848 745.707520,438.285187 745.182251,437.731873   C745.058289,437.305084 745.007385,437.134979 745.035889,436.663330   C745.186890,435.952484 745.258545,435.543182 745.621033,434.959839   C747.040100,432.214203 748.168274,429.642609 749.271729,426.730896   C749.238953,425.715393 749.231018,425.040009 749.223022,424.364655  z\",id:\"svg_72\"})),_path71||(_path71=/*#__PURE__*/React.createElement(\"path\",{fill:\"#312216\",opacity:1,stroke:\"none\",d:\" M548.002441,659.012146   C548.002441,659.012146 548.001770,659.503662 547.854919,660.088989   C547.472046,662.116150 547.236023,663.558044 546.749390,665.000732   C546.331726,665.002625 546.164612,665.003723 545.652832,665.059448   C544.644409,666.098877 543.980652,667.083801 543.303528,668.088440   C541.692322,662.814087 540.343445,658.398499 539.268677,653.715820   C539.445190,652.735657 539.347656,652.022522 539.250122,651.309448   C539.428284,651.246887 539.606384,651.184265 540.405457,651.380249   C541.693542,652.077209 542.360657,652.515625 543.067505,653.302979   C544.738892,655.438599 546.370667,657.225403 548.002441,659.012146  z\",id:\"svg_73\"})),_path72||(_path72=/*#__PURE__*/React.createElement(\"path\",{fill:\"#604234\",opacity:1,stroke:\"none\",d:\" M745.255371,437.988525   C745.707520,438.285187 746.159668,438.581848 746.870605,438.958496   C742.713440,445.298096 738.297546,451.557678 733.313171,457.938110   C732.520630,457.160645 732.296509,456.262390 732.392578,455.222870   C733.114929,454.307373 733.516968,453.533081 734.252319,452.725250   C736.953430,449.488007 739.321289,446.284332 741.888306,442.786438   C743.143433,440.990997 744.199402,439.489746 745.255371,437.988525  z\",id:\"svg_74\"})),_path73||(_path73=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M250.936768,462.293091   C256.493530,462.843872 253.545502,468.478546 256.671112,470.772095   C257.028076,470.620270 257.900879,470.249054 258.773651,469.877869   C258.982208,470.766418 259.473297,471.698883 259.343475,472.534882   C259.022675,474.600281 258.417328,476.621490 257.866211,479.056030   C255.483673,473.827698 253.161301,468.203766 250.936768,462.293091  z\",id:\"svg_75\"})),_path74||(_path74=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M292.949768,522.387329   C294.948761,523.897583 297.071686,525.678650 299.013184,527.639404   C302.130402,530.787537 305.127655,534.054504 308.106293,537.198120   C307.010895,537.420532 305.529449,537.721252 303.694855,538.149353   C299.891907,533.097412 296.442108,527.918152 292.949768,522.387329  z\",id:\"svg_76\"})),_path75||(_path75=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M276.747864,303.259644   C277.117096,302.994263 277.296783,302.997498 277.968994,303.272278   C282.505707,304.513123 286.549896,305.482483 290.661133,306.467896   C288.629395,308.542755 287.260376,309.940857 286.203278,311.020386   C283.576202,309.748749 280.742462,308.377045 277.597778,306.850494   C276.653015,306.416901 276.019196,306.138184 275.385376,305.859436   C275.776367,305.082367 276.167358,304.305298 276.747864,303.259644  z\",id:\"svg_77\"})),_path76||(_path76=/*#__PURE__*/React.createElement(\"path\",{fill:\"#615337\",opacity:1,stroke:\"none\",d:\" M328.625092,667.020813   C329.274475,670.646851 329.625275,674.460449 329.868744,678.847595   C329.556122,679.686829 329.293304,679.870056 328.737610,679.969177   C328.502197,679.967590 328.031342,679.967346 327.740051,679.848511   C326.656250,679.515564 325.863739,679.301514 324.726685,679.118652   C323.319489,680.452332 322.256866,681.754883 321.194244,683.057373   C323.571625,677.774353 325.949066,672.491333 328.625092,667.020813  z\",id:\"svg_78\"})),_path77||(_path77=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M590.644897,630.036682   C584.928650,635.744507 577.927673,639.583252 569.361816,640.581055   C576.161255,636.893005 583.219116,633.443481 590.644897,630.036682  z\",id:\"svg_79\"})),_path78||(_path78=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M551.608032,209.054367   C547.471924,208.595261 542.932007,208.295044 538.576477,207.236115   C533.451477,205.990097 528.486328,204.086212 523.206665,202.179062   C525.789185,202.399200 528.661621,202.735062 531.435852,203.450943   C538.077087,205.164673 544.672119,207.057220 551.608032,209.054367  z\",id:\"svg_80\"})),_path79||(_path79=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M275.195282,306.104736   C276.019196,306.138184 276.653015,306.416901 277.565430,307.195190   C276.257935,309.399200 274.487213,310.978485 273.195862,312.882843   C272.796661,313.471558 273.702240,314.945099 274.005219,316.006775   C274.000000,316.000061 273.986603,315.989838 273.956482,316.321411   C272.301117,317.803223 270.675903,318.953491 269.050690,320.103760   C268.465820,319.862183 267.880951,319.620605 267.119202,319.109131   C269.629944,314.676117 272.317535,310.513062 275.195282,306.104736  z\",id:\"svg_81\"})),_path80||(_path80=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M702.019287,447.102509   C702.311157,451.619843 702.602966,456.137146 702.812500,461.124023   C702.188538,460.495941 701.570190,459.428833 701.119385,458.295074   C699.742554,454.832031 697.763550,452.759369 693.439453,454.906372   C694.612122,453.847076 696.144470,452.742950 698.235962,451.368347   C699.869812,449.766113 700.944580,448.434296 702.019287,447.102509  z\",id:\"svg_82\"})),_path81||(_path81=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M320.931274,683.287964   C322.256866,681.754883 323.319489,680.452332 324.681946,679.426270   C324.986877,682.467712 324.991974,685.232666 324.663269,688.003296   C323.697845,688.366577 323.066223,688.724121 322.434631,689.081726   C322.952209,689.389832 323.469788,689.697937 324.208252,690.115479   C324.710571,690.425171 324.889435,690.693726 324.965668,691.030701   C322.996368,690.711792 321.027039,690.392883 318.794952,689.715454   C319.244202,687.410889 319.956238,685.464722 320.931274,683.287964  z\",id:\"svg_83\"})),_path82||(_path82=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M684.914429,310.646515   C683.485107,310.977448 682.056213,310.949585 680.306580,310.550903   C678.661011,307.122772 677.336182,304.065491 676.011414,301.008179   C676.290283,300.792572 676.569153,300.576935 676.962402,300.117737   C679.689453,303.345367 682.302124,306.816528 684.914429,310.646515  z\",id:\"svg_84\"})),_path83||(_path83=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M272.692322,495.801392   C272.997314,496.994904 273.028412,497.985748 273.072968,499.347687   C269.799866,495.696320 266.513306,491.673828 263.158447,487.309967   C264.031372,487.186401 265.318176,487.089050 265.853912,487.676575   C268.162201,490.207733 270.250214,492.939789 272.692322,495.801392  z\",id:\"svg_85\"})),_path84||(_path84=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M305.132996,541.344116   C307.780731,542.450500 310.468384,543.909058 313.634247,545.627136   C312.698761,547.440735 311.792023,549.198547 310.771576,551.346680   C308.829529,548.390015 307.001190,545.043152 305.132996,541.344116  z\",id:\"svg_86\"})),_path85||(_path85=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M367.811371,629.620117   C367.653931,630.594971 367.267548,631.313843 366.991394,631.827637   C363.558502,630.195557 360.188293,628.593323 356.409058,626.995544   C356.000000,627.000000 356.004883,627.004700 356.004883,627.004700   C355.359528,625.938660 354.714172,624.872620 354.025513,623.485291   C358.515625,625.230713 363.049042,627.297363 367.811371,629.620117  z\",id:\"svg_87\"})),_path86||(_path86=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M419.581604,652.393127   C423.443726,653.807190 427.009766,655.014709 430.699707,656.811401   C429.547333,657.642700 428.211914,658.250305 427.006470,658.055115   C423.972260,657.564026 420.996643,656.710632 417.997559,656.002441   C417.702515,654.809265 417.407471,653.616028 417.177795,652.026001   C417.923920,651.815002 418.604706,652.000793 419.581604,652.393127  z\",id:\"svg_88\"})),_path87||(_path87=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M384.017059,216.867050   C383.263306,216.893677 382.509552,216.920303 381.379761,216.975433   C379.453888,217.312897 377.904114,217.621872 375.947510,217.870758   C380.599548,215.831863 385.658447,213.853058 390.358032,212.434784   C389.666260,213.661621 389.333740,214.327927 389.001221,214.994202   C387.896393,215.244141 386.791534,215.494064 385.148499,215.961395   C384.327637,216.335114 384.129913,216.564529 384.017059,216.867050  z\",id:\"svg_89\"})),_path88||(_path88=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M465.987793,197.007584   C468.146118,196.533432 470.304413,196.059265 472.726685,195.313812   C474.710114,195.000641 476.429596,194.958771 478.760986,195.241180   C479.921356,196.375977 480.469818,197.186462 480.615479,197.999069   C479.139587,198.003983 478.066559,198.006775 476.655945,198.006592   C475.546814,198.334930 474.775238,198.666245 473.673828,198.996643   C472.904266,198.990463 472.464539,198.985168 471.790070,198.707642   C469.699493,197.959457 467.843628,197.483521 465.987793,197.007584  z\",id:\"svg_90\"})),_path89||(_path89=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M221.599670,322.824036   C221.976288,323.064606 221.975677,323.319427 222.006012,324.313354   C222.023346,326.036194 222.009735,327.019958 221.998062,328.001862   C222.000000,328.000000 222.003906,327.996124 221.627716,327.993652   C219.500671,328.689178 217.749802,329.387146 215.998932,330.085083   C215.426422,329.413147 214.853912,328.741180 213.971039,327.920532   C216.181274,326.127319 218.701874,324.482819 221.599670,322.824036  z\",id:\"svg_91\"})),_path90||(_path90=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M481.018311,197.996948   C480.469818,197.186462 479.921356,196.375977 479.185303,195.316528   C483.743958,195.348877 488.490265,195.630157 493.558350,196.150467   C491.412781,196.733551 488.945374,197.077591 485.804291,197.705612   C483.759857,197.992050 482.389069,197.994507 481.018311,197.996948  z\",id:\"svg_92\"})),_path91||(_path91=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M366.184021,224.616318   C365.228394,224.958786 364.437866,224.995972 363.255737,224.976013   C366.657074,222.588120 370.450043,220.257355 374.617065,217.932785   C373.784515,219.096725 372.683868,220.400238 371.343689,221.374084   C369.788605,222.504120 368.023224,223.344772 366.184021,224.616318  z\",id:\"svg_93\"})),_path92||(_path92=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M228.735107,422.120270   C229.415451,423.146698 229.678802,424.122253 230.229614,425.377747   C227.249481,425.047241 223.981873,424.436768 220.795105,423.458954   C223.356659,422.750854 225.837402,422.410126 228.735107,422.120270  z\",id:\"svg_94\"})),_path93||(_path93=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M513.637817,200.073151   C508.668549,199.274231 503.427460,198.239044 498.068207,196.950897   C503.088715,197.744247 508.227386,198.790573 513.637817,200.073151  z\",id:\"svg_95\"})),_path94||(_path94=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M335.973297,652.990662   C334.392151,656.253845 332.810974,659.516968 330.931458,662.903931   C332.825348,657.728333 335.017639,652.428955 337.611389,647.072388   C338.012848,647.015198 338.220520,647.213379 338.109070,647.536316   C337.322845,649.569702 336.648071,651.280212 335.973297,652.990662  z\",id:\"svg_96\"})),_path95||(_path95=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M237.412170,419.080902   C239.127686,413.651794 242.984253,411.964508 245.932327,415.700897   C243.204041,417.022461 240.477371,417.983643 237.412170,419.080902  z\",id:\"svg_97\"})),_path96||(_path96=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M400.008545,221.035858   C399.038513,219.458099 397.756012,217.982819 397.194611,216.271042   C396.722137,214.830338 397.088379,213.114578 397.070557,211.132095   C397.396820,210.638474 397.735840,210.533325 398.485901,210.658295   C398.896942,210.888443 399.213501,211.199097 399.312805,211.537354   C399.610901,214.929031 399.809723,217.982452 400.008545,221.035858  z\",id:\"svg_98\"})),_path97||(_path97=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M274.676453,501.531128   C279.923248,499.783173 280.401581,503.000397 280.027893,507.444916   C278.278168,505.868713 276.543365,503.859009 274.676453,501.531128  z\",id:\"svg_99\"})),_path98||(_path98=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M560.002197,644.718079   C559.821167,645.029602 559.652832,645.027649 558.882874,644.979736   C557.487061,645.593872 556.692871,646.253967 555.898621,646.914062   C555.154053,646.897034 554.409546,646.880005 552.969849,646.884277   C551.853333,646.992432 551.431885,647.079224 551.010437,647.166016   C551.010437,647.166016 550.831177,646.803589 550.868164,646.604675   C553.729370,645.087891 556.553711,643.770020 559.727661,642.489380   C560.056458,643.152527 560.035645,643.778625 560.002197,644.718079  z\",id:\"svg_100\"})),_path99||(_path99=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M379.141815,634.559692   C376.232056,633.561218 373.165253,632.252686 370.034912,630.608582   C372.975861,631.598572 375.980347,632.924133 379.141815,634.559692  z\",id:\"svg_101\"})),_path100||(_path100=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M543.027832,652.954041   C542.360657,652.515625 541.693542,652.077209 540.686951,651.411743   C542.657715,650.142273 544.967896,649.099976 547.636353,648.029419   C547.188416,649.212158 546.382141,650.423157 545.567566,652.082581   C544.715454,652.671997 543.871643,652.812988 543.027832,652.954041  z\",id:\"svg_102\"})),_path101||(_path101=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M605.851807,629.688599   C603.429443,629.340637 600.916687,628.667908 597.995728,627.888550   C600.894165,625.302063 603.416260,626.875854 605.851807,629.688599  z\",id:\"svg_103\"})),_path102||(_path102=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M339.021240,640.379150   C340.082062,641.798218 340.964386,643.544312 341.606567,645.758423   C340.586792,646.495178 339.807129,646.763977 338.820190,647.053894   C338.612946,647.075073 338.220520,647.213379 338.220520,647.213379   C338.220520,647.213379 338.012848,647.015198 337.908447,646.916626   C338.150269,644.780762 338.496490,642.743530 339.021240,640.379150  z\",id:\"svg_104\"})),_path103||(_path103=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M732.072388,455.364105   C732.296509,456.262390 732.520630,457.160645 733.033691,458.104858   C732.124573,459.435303 730.926575,460.719818 729.405945,462.083160   C729.055176,461.874298 729.026978,461.586578 728.932983,460.863770   C729.205872,459.198395 729.544556,457.968201 729.926514,456.138123   C729.981445,455.363678 729.993164,455.189117 730.356323,455.025757   C731.162598,455.145996 731.617493,455.255035 732.072388,455.364105  z\",id:\"svg_105\"})),_path104||(_path104=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M691.299805,772.484985   C688.838867,772.840759 685.612610,774.183533 685.002808,769.413696   C687.040649,770.072632 689.081543,771.131165 691.299805,772.484985  z\",id:\"svg_106\"})),_path105||(_path105=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M331.002991,566.245117   C332.972534,567.101440 334.948730,568.207825 336.965057,569.670715   C335.176971,569.155640 333.348785,568.284058 331.259857,567.203857   C331.002625,566.828674 331.006104,566.661926 331.002991,566.245117  z\",id:\"svg_107\"})),_path106||(_path106=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M698.726685,777.772705   C696.555908,776.671936 694.295410,775.260681 692.006958,773.509399   C694.198303,774.600342 696.417725,776.031250 698.726685,777.772705  z\",id:\"svg_108\"})),_path107||(_path107=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M530.970459,653.073242   C531.951599,652.943970 532.932739,652.814697 534.636230,652.828857   C535.602051,653.023376 535.845520,653.074463 535.989990,653.447388   C534.928162,654.176208 533.965271,654.583191 532.672119,654.991760   C531.902222,655.020752 531.462646,655.048218 530.747009,655.040894   C530.287720,654.977844 530.104614,654.949524 530.040527,654.682495   C530.429871,653.986877 530.700134,653.530090 530.970459,653.073242  z\",id:\"svg_109\"})),_path108||(_path108=/*#__PURE__*/React.createElement(\"path\",{fill:\"#574432\",opacity:1,stroke:\"none\",d:\" M195.487473,801.001099   C194.619110,801.421875 193.526550,801.666870 192.067093,801.885864   C192.250641,800.963501 192.801071,800.067139 193.657959,799.057983   C194.397354,799.571899 194.830307,800.198547 195.487473,801.001099  z\",id:\"svg_110\"})),_path109||(_path109=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M530.601685,652.997070   C530.700134,653.530090 530.429871,653.986877 529.731323,654.708374   C528.890381,655.008789 528.477539,655.044434 528.064758,655.080139   C527.484497,655.018005 526.904297,654.955933 525.905151,654.762329   C527.068542,654.060852 528.650696,653.490845 530.601685,652.997070  z\",id:\"svg_111\"})),_path110||(_path110=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M209.536377,330.934570   C209.163345,331.901367 208.478348,332.950348 207.418900,334.007690   C207.771118,333.016296 208.497772,332.016541 209.536377,330.934570  z\",id:\"svg_112\"})),_path111||(_path111=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M521.236450,201.555267   C520.070374,201.612900 518.653564,201.425293 517.094666,200.908798   C518.296936,200.823273 519.641296,201.066635 521.236450,201.555267  z\",id:\"svg_113\"})),_path112||(_path112=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M565.774658,640.729980   C564.852844,641.455139 563.626160,642.070312 562.233154,642.463684   C563.201233,641.701233 564.335449,641.160645 565.774658,640.729980  z\",id:\"svg_114\"})),_path113||(_path113=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M702.329163,780.477112   C701.341614,780.133972 700.188538,779.504150 698.983459,778.515015   C700.008850,778.833984 701.086243,779.512207 702.329163,780.477112  z\",id:\"svg_115\"})),_path114||(_path114=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M258.012512,480.328247   C258.986115,480.863922 259.979980,481.725647 260.910278,482.963928   C259.908752,482.445099 258.970764,481.549683 258.012512,480.328247  z\",id:\"svg_116\"})),_path115||(_path115=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M509.708069,655.471313   C509.061462,655.806702 508.061646,655.927673 507.009033,655.770203   C507.755768,655.413452 508.555298,655.335205 509.708069,655.471313  z\",id:\"svg_117\"})),_path116||(_path116=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M705.720459,782.763611   C704.906555,782.606995 703.988342,782.164307 703.033813,781.389893   C703.870422,781.531250 704.743347,782.004395 705.720459,782.763611  z\",id:\"svg_118\"})),_path117||(_path117=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M170.649567,836.578369   C170.704712,837.438110 170.501129,838.519714 170.016052,839.773804   C169.953323,838.897522 170.172089,837.848877 170.649567,836.578369  z\",id:\"svg_119\"})),_path118||(_path118=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M389.033051,215.270538   C389.333740,214.327927 389.666260,213.661621 390.348541,212.818604   C390.698303,212.641861 390.729279,212.706680 390.748779,212.671875   C390.200500,213.607010 389.632690,214.576950 389.033051,215.270538  z\",id:\"svg_120\"})),_path119||(_path119=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M538.950928,651.246704   C539.347656,652.022522 539.445190,652.735657 539.003418,653.600830   C537.953491,653.477783 537.442871,653.202698 536.962891,652.656250   C536.990173,652.202820 536.986755,652.020691 536.983398,651.838623   C537.539490,651.620422 538.095581,651.402161 538.950928,651.246704  z\",id:\"svg_121\"})),_path120||(_path120=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M393.668701,210.919159   C393.228638,211.507629 392.464630,212.013550 391.453308,212.183350   C391.918915,211.510361 392.631836,211.173508 393.668701,210.919159  z\",id:\"svg_122\"})),_path121||(_path121=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M630.564941,697.714417   C630.074707,697.351135 629.610901,696.674561 629.218872,695.654053   C629.724182,696.007141 630.157837,696.704163 630.564941,697.714417  z\",id:\"svg_123\"})),_path122||(_path122=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M517.782349,654.917114   C517.428406,655.243225 516.903687,655.441589 516.236328,655.442383   C516.599670,655.093018 517.105652,654.941162 517.782349,654.917114  z\",id:\"svg_124\"})),_path123||(_path123=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M400.763336,209.545441   C401.032288,209.904022 401.021271,210.209808 400.699310,210.777191   C400.000946,211.092392 399.607239,211.145752 399.213501,211.199097   C399.213501,211.199097 398.896942,210.888443 398.750122,210.720734   C399.232117,210.199646 399.860870,209.846268 400.763336,209.545441  z\",id:\"svg_125\"})),_path124||(_path124=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M211.676422,329.046997   C211.489182,329.604767 211.010437,330.233063 210.195709,330.857971   C210.368134,330.275574 210.876526,329.696503 211.676422,329.046997  z\",id:\"svg_126\"})),_path125||(_path125=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M219.248016,423.113647   C219.207932,422.419708 219.479172,421.894928 219.750427,421.370148   C220.145889,421.758270 220.541367,422.146393 220.914886,422.859283   C220.448410,423.216949 220.003891,423.249878 219.248016,423.113647  z\",id:\"svg_127\"})),_path126||(_path126=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M403.968323,592.341919   C404.168549,592.273987 404.361176,592.424377 404.601196,592.610962   C404.567078,592.808167 404.468994,592.993896 404.370911,593.179565   C404.239716,592.964905 404.108521,592.750183 403.968323,592.341919  z\",id:\"svg_128\"})),_path127||(_path127=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M607.859253,633.758545   C607.365784,633.498657 606.901184,632.945984 606.646912,632.221069   C607.200806,632.521179 607.544495,632.993469 607.859253,633.758545  z\",id:\"svg_129\"})),_path128||(_path128=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M594.717834,628.170044   C594.414978,628.800598 593.793884,629.355652 592.827515,629.817505   C593.121338,629.181091 593.760437,628.637817 594.717834,628.170044  z\",id:\"svg_130\"})),_path129||(_path129=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M192.865891,378.201538   C193.461197,377.805725 194.055359,377.712097 194.649506,377.618439   C194.553848,378.315155 194.458191,379.011871 194.086975,379.856201   C193.495865,379.503784 193.180298,379.003754 192.865891,378.201538  z\",id:\"svg_131\"})),_path130||(_path130=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E0C7AA\",opacity:1,stroke:\"none\",d:\" M724.180908,367.455811   C723.554565,367.475861 722.814148,367.193298 721.969360,366.611267   C722.598999,366.592255 723.332947,366.872711 724.180908,367.455811  z\",id:\"svg_132\"})),_path131||(_path131=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M536.787903,651.726440   C536.986755,652.020691 536.990173,652.202820 536.750977,652.700073   C536.508362,653.015259 536.089050,653.125610 536.089050,653.125610   C535.845520,653.074463 535.602051,653.023376 535.007690,652.846741   C535.301941,652.352173 535.947205,651.983276 536.787903,651.726440  z\",id:\"svg_133\"})),_path132||(_path132=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M192.631882,374.491638   C192.708115,374.485107 192.646713,374.570007 192.665710,374.575165   C192.684692,374.580322 192.555649,374.498199 192.631882,374.491638  z\",id:\"svg_134\"})),_path133||(_path133=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M442.981873,902.993652   C443.570160,899.116699 445.335785,894.977295 440.129944,891.893982   C439.107544,891.316833 438.551086,891.133545 437.994629,890.950195   C437.721985,890.454773 437.449371,889.959290 436.966125,889.002258   C436.569733,888.286438 436.323486,888.123657 436.016754,888.052307   C434.267151,886.698547 432.517548,885.344788 430.388672,883.616394   C430.005829,882.494568 430.002197,881.747253 430.387238,880.999634   C432.428070,881.554260 434.080261,882.109314 436.301605,882.855591   C438.242981,880.736328 440.431152,878.347656 442.619720,875.958557   C436.546844,870.346008 436.308197,869.919739 436.992523,865.990967   C436.998779,865.997559 436.988800,865.990601 437.214600,865.884766   C437.720520,865.574097 437.906464,865.304321 438.001038,864.605591   C438.779602,862.881714 439.359680,861.349792 440.372284,860.198181   C442.438751,857.848022 442.183899,856.517456 439.000916,855.681519   C438.993896,854.927917 438.990845,854.497742 438.955780,853.692871   C430.573883,844.364746 426.488037,850.917908 422.838013,858.709534   C421.486084,857.132385 420.712067,856.229492 420.447968,855.921387   C418.667694,856.753357 417.333832,857.376648 416.042267,857.634338   C416.731628,855.846252 417.378723,854.423828 418.046112,852.956848   C413.410980,851.462830 410.915405,848.281189 413.492371,845.755432   C413.838654,846.933960 414.192841,848.139465 414.547058,849.345032   C416.723053,846.225403 418.510193,843.783875 414.716248,842.523865   C412.483765,841.782349 409.990234,841.826782 407.013306,841.439575   C409.623962,844.765564 410.694916,847.831299 406.534454,850.409119   C406.235321,850.594543 406.867737,852.345032 407.154175,853.342712   C407.194000,853.481567 407.737610,853.475830 408.117859,853.550781   C408.774994,852.521973 409.435669,851.487671 409.435699,851.487610   C411.743134,853.776794 413.871582,855.888367 416.005920,858.371094   C416.509094,859.691895 417.277069,861.520569 417.464020,861.463013   C422.419678,859.936462 424.395386,863.610229 426.675873,866.637451   C428.217377,868.683838 429.573212,870.869995 431.006073,872.996338   C431.000031,872.999084 431.005859,872.990234 431.001434,873.386353   C431.012939,874.834778 431.028900,875.887024 430.732056,876.976318   C426.521790,877.948120 430.619049,879.723083 429.664612,881.049316   C429.549133,882.067383 429.769073,883.038574 429.989014,884.009766   C429.758881,885.451538 429.528748,886.893311 428.944275,888.865356   C427.315430,889.901855 425.427246,891.215149 424.863708,890.786621   C420.412994,887.401855 416.248901,889.548767 411.994873,890.636658   C411.767059,887.893616 411.070343,888.162415 409.233582,889.304199   C407.870300,890.151611 405.766846,889.808350 404.199585,889.875610   C404.390900,889.407898 404.375732,889.060120 404.360535,888.712341   C404.242767,889.143982 404.125000,889.575684 403.610962,890.048950   C398.964844,890.469482 395.258789,892.771729 390.405670,891.637390   C385.509735,890.493103 380.046295,891.912964 374.832520,891.895142   C373.551971,891.890747 372.275604,890.662964 371.137543,889.944885   C371.185974,889.928955 371.094238,889.965698 370.624207,890.040588   C367.328552,890.858887 364.336578,892.746948 361.689972,889.502991   C355.804291,892.249939 350.420288,888.751587 345.127808,887.487793   C340.434875,886.367188 336.208862,885.520874 331.265045,887.061707   C329.327026,887.666870 327.600708,889.033691 326.227020,888.741760   C319.608032,887.334656 319.517944,887.247009 319.000214,893.003357   C317.871826,892.504150 316.743439,892.004944 314.684326,891.093933   C315.871521,895.921021 316.869965,899.980652 317.973511,904.467529   C314.783783,904.980042 310.867401,905.609314 306.049408,906.383484   C303.845276,895.966003 301.494171,885.251953 299.428589,874.483093   C299.219269,873.391785 300.730713,871.970276 301.585175,870.450134   C300.654297,869.280212 299.531708,867.869324 298.374939,866.415466   C296.779388,866.919128 295.226746,867.409302 293.674072,867.899414   C293.481140,867.452148 293.288177,867.004883 293.095245,866.557556   C295.247589,865.543579 297.399933,864.529541 299.998352,863.305420   C299.008484,862.453064 298.233398,861.785645 297.168884,860.868958   C298.708130,859.625549 300.189453,858.428955 301.670746,857.232361   C301.148926,857.097595 300.627075,856.962891 300.105255,856.828125   C300.261230,854.997314 300.140961,853.089600 300.624725,851.349915   C302.107056,846.019226 303.821259,840.752991 305.984528,835.223633   C306.702820,834.975403 306.881836,834.965271 307.060852,834.955200   C308.040680,833.529297 309.051453,832.123413 309.990509,830.671265   C310.761322,829.479187 311.446808,828.231995 312.953369,826.995361   C320.836823,826.985474 319.361572,820.438599 322.674438,816.225525   C319.352386,816.556641 317.161743,816.775024 314.971130,816.993347   C314.990845,816.247803 315.010590,815.502197 315.359436,814.335632   C316.119080,813.265503 316.549530,812.616394 316.980011,811.967285   C317.833588,808.843262 318.687103,805.719177 320.114380,802.350830   C324.238831,806.270508 327.224152,810.682190 327.141174,816.609741   C327.764130,815.734131 328.387054,814.858521 329.352783,813.951660   C330.789368,813.604675 331.883179,813.288879 333.241333,813.161377   C333.924500,814.329529 334.343353,815.309448 334.816345,816.416138   C333.200226,816.495667 332.001495,816.554688 331.679291,816.570496   C333.377411,819.577271 335.061920,822.559875 337.088593,826.148376   C339.873047,824.276001 342.739319,822.348572 346.390076,819.893616   C346.689423,819.913513 348.449982,820.030396 350.459259,820.163757   C351.384003,821.991577 352.576599,824.348938 353.769226,826.706299   C354.276886,826.602905 354.784546,826.499512 355.292206,826.396057   C352.001312,820.308472 355.988403,814.107849 354.000610,808.000000   C354.000000,808.000000 353.998779,808.000000 354.354462,808.039673   C357.584167,812.455872 360.458221,816.832458 363.332245,821.209045   C363.561340,821.227600 363.790436,821.246155 364.019531,821.264709   C363.535095,818.678467 363.050629,816.092163 362.566193,813.505859   C362.791046,813.430481 363.015930,813.355042 363.240784,813.279602   C364.725708,815.794067 366.210663,818.308533 367.695587,820.822998   C368.044891,820.620728 368.394196,820.418396 368.743500,820.216125   C367.473206,816.781616 366.202942,813.347107 364.695587,809.271667   C366.630249,810.501221 367.813293,811.253052 369.008636,812.246094   C369.140747,812.762878 369.260590,813.038452 369.380402,813.314087   C369.504425,813.226135 369.628479,813.138184 369.752533,813.050232   C369.502930,812.699280 369.253296,812.348389 369.050873,811.673889   C373.367218,810.409119 372.955750,813.395813 372.667297,816.049316   C372.033386,816.793274 371.732178,817.487915 371.430969,818.182617   C371.795135,818.312744 372.159332,818.442932 372.523529,818.573120   C372.682343,817.715393 372.841156,816.857727 373.355103,816.042725   C374.838898,817.471069 375.967560,818.856812 377.096191,820.242493   C377.170410,820.014648 377.244629,819.786865 377.318848,819.559021   C379.211975,820.373535 381.105072,821.187988 383.043396,822.324463   C386.396362,824.737305 389.704102,826.828186 392.380127,828.519714   C393.376282,826.419983 394.187531,824.710022 395.381409,823.044189   C401.064331,824.546204 403.021698,822.664856 404.419800,815.440186   C407.276611,814.751160 409.740814,814.156799 412.551147,813.478943   C412.551147,815.347412 412.551147,817.397400 412.551147,819.447449   C412.829773,819.470520 413.108368,819.493591 413.386993,819.516663   C413.811646,818.105103 414.236298,816.693542 414.878021,814.560364   C416.186554,816.309021 417.009064,817.408203 417.941467,818.654175   C418.863617,817.914001 419.784027,817.175232 420.840302,816.327393   C422.605621,822.570923 422.605621,822.570923 430.430450,829.422485   C432.723724,825.068726 430.903076,819.203003 427.251740,819.119019   C426.312103,819.097473 425.377075,818.874084 424.439941,818.743469   C425.136688,818.049133 425.819275,817.339722 426.534302,816.664734   C427.192047,816.043823 427.884796,815.460083 428.070953,815.295105   C432.280334,820.645752 436.408752,825.893494 440.334869,830.884094   C445.681641,829.117737 447.608917,826.855652 444.410156,822.251648   C443.660431,821.172607 444.299316,819.128784 444.299316,817.528809   C444.601990,817.552612 444.904663,817.576416 445.207336,817.600220   C446.850677,822.096863 448.493988,826.593445 450.137329,831.090027   C450.541748,830.996765 450.946136,830.903503 451.350555,830.810181   C450.768463,825.465698 450.186371,820.121216 449.562317,814.391663   C447.465790,813.946289 445.232880,813.471924 443.000000,812.665833   C443.000397,811.891846 443.000793,811.449585 443.319580,810.963257   C444.418823,808.953186 445.199646,806.987122 446.359344,805.013672   C447.495819,805.000061 448.253387,804.993958 449.014160,805.361938   C450.703888,811.646179 451.651306,817.916199 454.300781,823.357544   C456.599579,828.078674 459.962128,832.164368 459.215759,837.844666   C459.185944,838.071655 459.532288,838.459473 459.795135,838.596863   C464.158936,840.878296 463.239624,845.277405 463.671936,848.839844   C460.911926,846.947632 458.475647,845.218445 454.722656,842.554749   C456.247742,848.117188 457.513245,852.732727 458.876556,857.705078   C456.845551,856.161316 455.422180,855.079468 453.999390,853.998779   C454.000000,854.000000 454.001221,854.001343 453.994385,853.625000   C453.120728,851.254517 452.253845,849.260315 451.283386,847.027771   C450.251099,848.197815 449.596069,848.940308 448.681366,849.977051   C447.330444,846.334473 446.160797,843.180542 445.309814,839.881592   C447.332214,839.821045 449.035889,839.905579 450.739594,839.990051   C450.891541,839.577209 451.043518,839.164368 451.195496,838.751526   C448.696991,837.909912 446.198486,837.068359 443.460938,836.146240   C443.460938,835.127563 443.460938,833.800537 443.460938,832.473511   C443.138367,832.364319 442.815796,832.255127 442.493225,832.145935   C441.657410,833.650757 440.821625,835.155579 440.129883,836.401062   C438.315582,834.832214 436.671783,833.410767 435.027985,831.989380   C434.708710,832.301697 434.389404,832.614014 434.070129,832.926331   C434.573547,834.461914 435.076996,835.997498 435.580444,837.533081   C435.190552,837.775208 434.800659,838.017273 434.410767,838.259399   C432.780273,836.143799 431.149780,834.028259 428.822510,831.008667   C429.176422,833.603699 429.368347,835.010986 429.570404,836.492676   C428.065369,836.871277 426.709930,837.212280 425.354523,837.553284   C425.222504,837.990967 425.090515,838.428589 424.958527,838.866211   C428.657959,840.238342 432.357361,841.610413 436.429718,843.030762   C439.355377,844.418396 443.768585,843.405273 443.766541,848.127014   C442.185486,848.127014 440.903778,848.127014 439.622101,848.127014   C440.063446,849.244934 440.461700,850.382385 440.956604,851.476013   C441.635132,852.975342 442.345581,854.463440 443.115326,855.917664   C445.239075,859.930054 447.400757,863.922302 449.547455,867.922546   C450.046906,867.692322 450.546326,867.462097 451.045776,867.231934   C450.189545,864.638733 449.333313,862.045593 448.477081,859.452454   C448.995880,859.200378 449.514679,858.948242 450.033478,858.696106   C451.808716,861.681335 453.583984,864.666504 455.531372,867.941162   C456.785248,866.935425 457.860291,866.073120 458.785767,865.330811   C460.146149,866.290039 461.192505,867.027893 462.238861,867.765686   C462.476807,867.541626 462.714752,867.317566 462.952728,867.093506   C461.909149,865.071838 460.865570,863.050110 459.151367,859.729309   C462.062531,860.355591 463.551788,860.675964 465.262207,861.137207   C465.660065,862.185059 465.836731,863.091980 466.013245,864.410767   C465.959229,867.977844 465.594574,871.305237 469.990723,872.398926   C469.996155,873.867920 469.997650,874.936401 469.604675,876.095215   C468.808716,879.016663 468.625549,881.900391 467.958710,884.667480   C466.706635,889.862854 465.174988,894.990784 464.136139,898.775208   C459.029510,899.378052 455.358002,899.590637 451.785614,900.301331   C448.790985,900.897034 445.912048,902.074036 442.981873,902.993652  M406.695007,868.897217   C407.130432,867.928345 407.565826,866.959412 408.636475,866.323242   C408.589539,867.972778 408.963623,869.790527 408.388977,871.229309   C407.672363,873.023682 406.173950,874.505798 405.122742,875.969971   C408.312988,876.328003 410.780670,876.671265 413.260193,876.842957   C414.005096,876.894470 415.215210,876.682739 415.447876,876.213013   C415.826691,875.448181 415.962738,874.065002 415.508392,873.493469   C414.666870,872.434631 413.324860,871.773560 412.129669,870.901917   C412.728668,869.526978 413.214203,868.412537 413.860870,866.928223   C415.246216,868.748413 416.269196,870.092468 417.292145,871.436523   C417.686005,871.210205 418.079834,870.983887 418.473694,870.757568   C416.537567,866.882263 414.601440,863.006958 412.665314,859.131653   C412.281403,859.217468 411.897461,859.303223 411.513550,859.389038   C411.342377,860.592712 411.171204,861.796326 410.256561,863.015808   C409.507446,864.010498 408.758331,865.005249 407.341187,865.997253   C406.896118,865.996521 406.451050,865.995789 405.931580,865.296021   C405.373322,864.296204 404.815094,863.296387 403.576508,861.077942   C403.275665,863.651855 403.138458,864.825928 402.217621,865.982910   C395.796539,864.456482 395.714111,864.494263 394.813782,869.160217   C396.553192,868.783813 398.426392,868.539185 400.177582,867.938782   C401.217316,867.582275 402.064850,866.665100 403.747620,865.996887   C404.496399,865.999573 405.245209,866.002258 405.990570,866.752258   C405.991699,867.499878 405.992798,868.247498 405.329254,869.095642   C405.029480,869.793396 404.729706,870.491211 404.429932,871.189026   C404.795288,871.316040 405.160645,871.443115 405.526001,871.570129   C405.686035,870.715027 405.846069,869.859985 406.695007,868.897217  M326.656189,852.899292   C326.749146,852.340698 326.958160,851.301636 326.918488,851.292053   C323.812531,850.541809 321.844666,851.387756 321.288391,854.921082   C317.419495,851.908936 313.550629,848.896790 309.609009,845.827942   C308.327759,850.032532 307.315796,853.353455 306.340973,856.552429   C306.704956,858.144653 306.916382,860.108521 307.643982,861.857666   C308.071472,862.885620 309.277832,864.246948 310.205109,864.304199   C316.787048,864.710693 319.458099,859.887268 322.665497,855.009827   C323.107483,855.009766 323.549469,855.009766 323.986786,855.762024   C320.853027,860.368103 323.873962,863.482605 326.906281,866.509888   C325.905548,867.827637 325.079071,868.915955 324.230225,870.033691   C327.888214,870.033691 331.204620,870.033691 335.147461,870.033691   C331.802429,866.505432 328.629883,863.159058 325.334534,859.683167   C328.239899,859.683167 330.901611,859.683167 333.633209,859.683167   C333.633209,861.139771 333.633209,862.453125 333.633209,865.350403   C336.641174,861.741943 338.762360,859.356262 340.685150,856.820190   C341.577972,855.642639 342.084991,854.172607 342.766937,852.835083   C341.365326,852.307007 339.816040,851.104309 338.588776,851.372925   C334.333313,852.304260 330.189789,853.747009 326.001587,854.333740   C326.003906,853.892822 326.006226,853.451965 326.656189,852.899292  M341.349304,860.170776   C340.263184,861.350342 339.177063,862.529907 338.083588,863.717468   C339.172333,864.970581 339.985657,865.906799 341.277679,867.393921   C339.609100,867.876404 338.229034,868.275452 336.848999,868.674500   C336.808716,869.798279 336.768463,870.921997 336.728180,872.045776   C343.827637,867.359436 340.900879,873.754578 344.058411,875.169373   C344.567566,871.882324 344.995087,869.122375 345.422607,866.362427   C344.984192,866.195923 344.545807,866.029419 344.107422,865.862915   C345.320129,865.299561 346.532837,864.736206 348.621765,863.765808   C345.899109,862.158447 343.882690,860.968018 341.349304,860.170776  M357.831970,824.878845   C358.356171,825.922607 358.880341,826.966431 359.404541,828.010193   C360.048096,827.734802 360.691681,827.459473 361.335236,827.184143   C360.593475,825.110291 359.851715,823.036438 359.109924,820.962646   C358.533600,821.133301 357.957306,821.303955 357.380981,821.474609   C357.441895,822.371155 357.502777,823.267639 357.831970,824.878845  M421.675293,864.824890   C420.632080,864.631348 419.588867,864.437744 417.676910,864.082947   C420.587219,867.816833 420.587219,867.816833 421.675293,864.824890  M415.445709,822.326660   C416.214844,822.208557 416.983978,822.090454 417.753113,821.972412   C417.669678,821.531067 417.586243,821.089661 417.502808,820.648315   C416.784454,820.991638 416.066101,821.334900 415.445709,822.326660  M419.393890,873.767334   C419.874390,874.444275 420.354889,875.121216 420.835388,875.798218   C421.175781,875.490479 421.516174,875.182739 421.856567,874.875000   C421.175995,874.370117 420.495392,873.865234 419.393890,873.767334  M344.780396,858.026672   C345.329987,858.143738 345.879547,858.260803 346.429138,858.377808   C346.423920,858.086792 346.443054,857.545349 346.409882,857.542053   C345.839386,857.486572 345.262482,857.497498 344.780396,858.026672  M419.799530,885.380615   C419.754944,885.738525 419.710358,886.096375 419.665771,886.454346   C419.921661,886.460449 420.177521,886.466553 420.433380,886.472595   C420.390594,886.112671 420.347809,885.752808 419.799530,885.380615  M457.426605,869.701416   C457.701447,869.989319 457.976318,870.277283 458.251190,870.565247   C458.370331,870.451233 458.599335,870.244507 458.592743,870.236633   C458.336182,869.932983 458.058136,869.647400 457.426605,869.701416  M338.791840,875.379517   C338.743439,875.738098 338.695007,876.096741 338.646606,876.455383   C338.903168,876.457764 339.159760,876.460144 339.416321,876.462524   C339.376831,876.102905 339.337341,875.743347 338.791840,875.379517  M403.389923,879.203735   C403.745972,879.251709 404.102051,879.299622 404.458099,879.347534   C404.461548,879.090698 404.464996,878.833801 404.468414,878.576904   C404.111084,878.617676 403.753723,878.658386 403.389923,879.203735  M304.393433,853.521484   C304.167450,853.464478 303.941437,853.407471 303.715454,853.350403   C303.860840,853.492554 304.006226,853.634705 304.393433,853.521484  M336.482269,879.594238   C336.482269,879.594238 336.410095,879.476135 336.482269,879.594238  M435.484283,848.592163   C435.484283,848.592163 435.414825,848.475769 435.484283,848.592163  z\",id:\"svg_135\"})),_path134||(_path134=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M354.001221,808.000000   C355.988403,814.107849 352.001312,820.308472 355.292206,826.396057   C354.784546,826.499512 354.276886,826.602905 353.769226,826.706299   C352.576599,824.348938 351.384003,821.991577 350.459259,820.163757   C348.449982,820.030396 346.689423,819.913513 346.390076,819.893616   C342.739319,822.348572 339.873047,824.276001 337.088593,826.148376   C335.061920,822.559875 333.377411,819.577271 331.679291,816.570496   C332.001495,816.554688 333.200226,816.495667 334.816345,816.416138   C334.343353,815.309448 333.924500,814.329529 333.250031,812.797424   C333.678955,811.272034 334.814270,809.385315 334.978516,809.466370   C336.679047,810.305481 338.222992,811.461975 339.903076,812.592529   C340.372467,812.254211 341.972137,811.101257 343.702393,809.854187   C343.493896,809.306824 343.280640,808.694641 343.030304,808.098022   C340.926453,803.083496 336.200043,798.986816 337.771729,792.623657   C337.910461,792.062012 336.139557,790.815430 335.069824,790.221863   C333.680267,789.450806 332.104523,789.015381 330.592834,788.429260   C325.088318,792.888855 323.479034,799.807861 327.279388,805.320435   C329.242126,808.167419 329.446167,810.895508 329.009949,813.982910   C328.387054,814.858521 327.764130,815.734131 327.141174,816.609741   C327.224152,810.682190 324.238831,806.270508 320.337036,802.056030   C320.001862,800.947083 320.017853,799.888550 320.363556,798.379639   C321.123474,797.279663 321.553711,796.629944 321.983948,795.980225   C322.310455,795.212036 322.636993,794.443848 323.240051,793.127563   C323.878387,789.264343 328.935913,787.170776 326.008667,783.000000   C326.800201,781.443237 327.591736,779.886475 328.750031,778.532227   C339.318298,783.982544 344.245789,794.121582 351.333466,802.853516   C349.407013,796.559082 355.948639,797.318848 357.945923,794.468445   C356.135925,793.201538 354.567352,792.103638 352.999329,790.591675   C352.906006,788.700439 353.397797,786.497498 352.618927,785.869019   C348.824310,782.806519 352.140289,780.274292 352.563232,776.914429   C353.786285,778.275513 354.573608,779.151672 355.595490,780.288879   C356.579437,779.064148 357.327667,778.132812 357.274902,778.198486   C361.353363,778.198486 364.383240,778.198486 366.528625,778.198486   C366.965240,775.674500 367.570953,774.025024 367.404541,772.457581   C367.300690,771.479431 366.160492,770.448608 365.240784,769.775818   C364.609802,769.314270 363.558411,769.427429 362.694885,769.283691   C362.895996,768.263184 362.774139,766.643982 363.356354,766.329895   C365.432373,765.210022 367.747620,764.533630 370.448181,763.508850   C370.494965,763.298035 370.750244,762.147461 371.337097,760.997070   C372.110718,760.997375 372.552826,760.997498 373.395386,760.998657   C374.863525,761.000610 375.931152,761.001587 377.051971,761.350098   C383.331207,765.612183 387.195679,773.356384 395.961823,773.227844   C396.958527,773.213257 397.954193,774.318420 398.979523,774.847900   C402.686859,776.762329 402.657501,778.262634 400.310425,781.518860   C397.504761,785.411438 395.408447,789.815247 392.696350,793.872192   C391.622284,793.984985 390.612244,793.995361 390.138031,794.504639   C388.813507,795.927307 387.710754,797.556458 386.285309,799.409851   C384.137909,795.108398 384.137909,795.108398 375.690582,797.567383   C375.301819,796.743530 374.842957,795.771057 374.384094,794.798645   C371.816010,802.083374 381.001251,799.561951 380.603149,804.299866   C384.282562,803.026306 387.696747,801.844482 391.110962,800.662720   C391.367584,801.286560 391.624237,801.910339 391.880859,802.534180   C389.524445,804.274109 387.168060,806.014038 384.075195,808.297729   C384.087006,808.030640 384.043488,809.014099 384.006592,810.385376   C384.245453,812.204163 384.952881,814.762207 384.637787,814.895081   C380.621002,816.588806 383.165863,819.587097 383.001221,821.998779   C383.000000,822.000000 382.998199,822.002441 382.998199,822.002441   C381.105072,821.187988 379.211975,820.373535 377.318848,819.559021   C377.244629,819.786865 377.170410,820.014648 377.096191,820.242493   C375.967560,818.856812 374.838898,817.471069 373.355103,816.042725   C372.955750,813.395813 373.367218,810.409119 369.049042,811.675171   C369.000000,812.000000 368.996338,812.004883 368.996338,812.004883   C367.813293,811.253052 366.630249,810.501221 364.695587,809.271667   C366.202942,813.347107 367.473206,816.781616 368.743500,820.216125   C368.394196,820.418396 368.044891,820.620728 367.695587,820.822998   C366.210663,818.308533 364.725708,815.794067 363.240784,813.279602   C363.015930,813.355042 362.791046,813.430481 362.566193,813.505859   C363.050629,816.092163 363.535095,818.678467 364.019531,821.264709   C363.790436,821.246155 363.561340,821.227600 363.332245,821.209045   C360.458221,816.832458 357.584167,812.455872 354.352661,807.699585   C353.644379,806.450684 353.293640,805.581421 352.942871,804.712219   C352.537537,804.959534 352.132202,805.206909 351.726868,805.454285   C352.484985,806.302856 353.243103,807.151428 354.001221,808.000000  M360.383850,808.366882   C360.216156,809.415710 360.048492,810.464478 359.880798,811.513245   C360.528717,811.471680 361.176666,811.430054 361.824585,811.388428   C361.545227,810.483643 361.265869,809.578857 360.383850,808.366882  M386.685181,784.528320   C387.024719,783.979980 387.364258,783.431580 387.703796,782.883240   C387.428925,782.747986 387.154022,782.612732 386.879089,782.477539   C386.673523,783.014587 386.467957,783.551575 386.685181,784.528320  M381.611877,811.796509   C381.215851,811.792297 380.819855,811.788025 380.423828,811.783813   C380.422394,811.948303 380.409912,812.255798 380.421112,812.256653   C380.815186,812.287170 381.211426,812.288818 381.611877,811.796509  z\",id:\"svg_136\"})),_path135||(_path135=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2E231C\",opacity:1,stroke:\"none\",d:\" M300.020508,758.022095   C299.369507,755.285522 298.718506,752.548950 297.688843,748.220581   C302.786987,749.633850 306.858551,750.480896 310.697449,751.940002   C312.757233,752.722778 314.417206,754.557556 316.638458,756.337646   C317.880798,757.452576 318.742279,758.147400 319.603760,758.842224   C319.898651,757.909546 320.739807,756.633118 320.403046,756.097961   C317.404999,751.333435 319.883331,747.469788 322.299377,742.585327   C323.299408,745.112793 323.988892,746.855408 324.847076,749.024292   C325.699219,748.221680 326.351624,747.607178 327.394714,747.002319   C333.191864,749.340515 338.598389,751.669067 344.009216,754.382019   C344.339935,758.178467 344.666321,761.590454 344.671997,765.176331   C343.305084,767.658875 342.845856,770.704285 341.080750,772.110657   C338.131409,774.460327 336.193085,776.626099 338.051697,781.121460   C334.835236,779.472534 332.409424,778.228943 329.983643,776.985352   C332.506897,773.693542 334.941528,770.328735 337.576904,767.129272   C340.527405,763.547119 338.160309,761.880371 335.347961,760.289185   C333.321228,759.142517 331.273682,758.032532 328.492004,756.495483   C327.230865,758.907532 320.119141,759.133728 325.380432,765.264282   C325.790741,765.742310 325.288971,767.659363 324.624908,768.297729   C320.065826,772.680481 320.079895,778.600525 318.627869,784.572815   C310.378387,780.008057 309.329163,777.843689 311.194885,769.735352   C313.021515,768.825134 314.319550,768.460999 312.807983,766.072449   C309.757050,761.251465 305.568359,758.664368 300.020508,758.022095  M313.517242,775.410461   C313.517242,775.410461 313.584473,775.522522 313.517242,775.410461  M313.482574,772.590881   C313.482574,772.590881 313.414307,772.477905 313.482574,772.590881  z\",id:\"svg_137\"})),_path136||(_path136=/*#__PURE__*/React.createElement(\"path\",{fill:\"#22201E\",opacity:1,stroke:\"none\",d:\" M310.991455,769.997559   C309.329163,777.843689 310.378387,780.008057 318.625122,784.990906   C317.583771,788.282471 316.055023,791.523071 314.806488,794.868225   C314.012115,796.996704 313.562531,799.264954 313.081909,801.497192   C311.618225,808.294739 310.606140,815.224304 308.590149,821.850586   C307.809387,824.416809 304.808838,826.307678 301.562592,828.415161   C301.877716,826.673584 302.301514,824.942871 302.477142,823.187378   C302.650818,821.451111 302.653595,819.686646 302.582214,817.940552   C302.522430,816.478333 301.887848,814.961670 302.130951,813.578613   C303.134399,807.869629 303.221619,807.884949 298.900818,803.131409   C298.335663,804.755920 297.850464,806.150696 297.365265,807.545410   C296.960114,807.635437 296.554962,807.725403 296.149780,807.815369   C295.782043,806.167114 294.616943,804.053162 295.241211,802.984436   C296.089355,801.532532 298.305969,800.880005 300.632446,799.459106   C300.426086,798.122864 300.075317,795.851990 299.724579,793.581116   C299.316620,793.594116 298.908661,793.607056 298.500671,793.619995   C297.419403,795.487610 296.338135,797.355225 295.256897,799.222839   C294.763733,799.161804 294.270599,799.100769 293.777466,799.039734   C294.819183,790.963989 295.860901,782.888245 297.351868,774.407471   C301.283447,775.038208 304.765808,776.074097 308.248169,777.109924   C308.427185,776.712036 308.606201,776.314087 308.785217,775.916138   C307.955933,774.883545 307.126678,773.850891 306.519836,773.095215   C307.503448,771.870056 308.254150,770.935059 309.335968,770.001709   C310.108551,770.001465 310.550018,769.999512 310.991455,769.997559  z\",id:\"svg_138\"})),_path137||(_path137=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M275.059692,894.917236   C274.874512,894.897034 274.689331,894.876770 274.304504,894.510376   C274.751709,893.077209 275.398529,891.990234 276.380737,890.339783   C272.315277,891.166199 269.238617,891.950562 266.112793,892.332336   C265.144257,892.450623 264.042145,891.474915 263.000610,891.000000   C263.000000,891.000000 262.997559,891.002441 263.355499,890.950378   C266.577057,889.808716 269.440643,888.719116 272.011444,887.740906   C270.261993,886.231934 268.112030,884.377563 265.229614,881.891357   C271.129608,880.620056 268.245483,877.504700 268.328979,875.132812   C270.524170,876.490479 272.391510,877.700684 274.611359,879.139343   C277.815704,877.332092 277.842102,877.339722 278.624023,880.999146   C277.590179,881.651672 276.926239,882.300232 276.262329,882.948730   C276.764404,883.221558 277.266479,883.494385 277.768555,883.767151   C278.181091,882.846680 278.593597,881.926208 279.360291,880.995483   C283.542480,878.628540 278.533539,874.278503 281.788025,871.792358   C280.801788,870.805359 279.976349,869.471375 278.787933,868.920715   C277.359863,868.258911 275.622772,868.264099 274.016663,867.580688   C274.009033,866.114563 274.004211,865.048340 274.371338,864.004028   C276.028473,864.093628 277.313660,864.161316 280.295258,864.318237   C278.237793,859.238220 276.489136,854.920715 274.593567,850.240540   C275.462738,849.629639 276.722015,848.744568 277.555817,848.158508   C276.979431,845.725952 276.503998,843.719543 276.028595,841.713135   C277.251343,842.391418 278.474091,843.069763 279.378448,843.571472   C281.801392,842.561707 284.047821,841.625549 286.607056,840.673645   C288.402069,840.061829 289.884308,839.465759 291.366547,838.869629   C291.887848,839.987610 292.409149,841.105652 292.570190,842.594666   C291.343689,842.748596 290.477386,842.531433 289.611115,842.314331   C289.463043,842.720642 289.315002,843.126953 289.166931,843.533264   C290.409271,844.009705 291.651642,844.486145 292.893982,844.962585   C292.689056,848.101379 292.484161,851.240112 291.736084,854.700562   C288.596130,854.888977 288.880188,860.762268 285.005341,857.739136   C284.866638,857.214539 284.737915,856.935913 284.609192,856.657288   C284.482697,856.748901 284.240814,856.912964 284.246338,856.921753   C284.479279,857.292969 284.734344,857.650391 285.031738,858.348633   C286.159698,860.264709 287.242584,861.841614 288.553619,863.750732   C287.192474,863.833252 286.114380,863.898560 285.018860,863.720825   C284.862885,863.206970 284.724426,862.936279 284.585968,862.665527   C284.712402,863.118652 284.838837,863.571838 284.978882,864.413452   C284.446777,866.423523 283.901062,868.045105 283.229828,870.039734   C283.964417,870.599182 284.927612,871.332764 285.890808,872.066345   C285.484192,872.209534 285.077606,872.352722 284.670990,872.495850   C285.112183,875.331909 285.553375,878.167969 285.997284,881.002014   C286.000000,881.000000 286.004150,880.994690 285.639221,880.996704   C283.527283,882.211426 281.780273,883.424072 280.033264,884.636658   C280.323792,885.029663 280.614319,885.422607 280.904846,885.815552   C282.255829,885.281921 283.606781,884.748291 285.051849,884.177429   C286.456177,885.684753 287.753326,887.076965 289.967316,889.453308   C284.485779,891.462402 279.772736,893.189819 275.059692,894.917236  M271.737854,883.123474   C271.596924,882.571533 271.456024,882.019531 271.315094,881.467590   C270.952393,881.658020 270.589722,881.848389 270.227020,882.038818   C270.583466,882.546204 270.939911,883.053528 271.737854,883.123474  M278.476227,889.898010   C278.822662,889.496094 279.169067,889.094177 279.515472,888.692261   C278.967224,888.549255 278.418976,888.406311 277.870697,888.263367   C277.869354,888.765503 277.868011,889.267639 278.476227,889.898010  z\",id:\"svg_139\"})),_path138||(_path138=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M291.522095,838.507935   C289.884308,839.465759 288.402069,840.061829 286.582092,840.385254   C286.109314,839.375916 286.225861,838.222839 285.800964,837.966187   C280.737061,834.907288 275.592621,831.981750 270.481995,829.028625   C270.534760,829.701294 270.636353,830.995728 270.750397,832.448792   C267.421112,829.687561 263.885742,827.569458 261.532196,824.534790   C259.784576,822.281372 258.284698,822.353455 256.093536,822.442993   C255.053116,820.930054 254.090546,819.738892 253.095734,818.223022   C252.177139,816.257690 251.290771,814.617065 250.342743,812.627563   C249.271210,811.132446 248.261353,809.986389 247.226044,808.542969   C247.171234,807.656616 247.141876,807.067749 247.471619,806.456909   C248.544861,806.357605 249.258987,806.280151 249.973114,806.202759   C253.577454,807.601196 257.478027,808.513306 260.728241,810.493103   C269.083344,815.582642 277.522003,820.677429 285.154419,826.742676   C288.338684,829.273071 289.562469,834.270569 291.522095,838.507935  M257.646057,819.531250   C257.646057,819.531250 257.453247,819.423828 257.453247,819.423828   C257.453247,819.423828 257.484192,819.651550 257.646057,819.531250  z\",id:\"svg_140\"})),_path139||(_path139=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2113\",opacity:1,stroke:\"none\",d:\" M249.954636,805.826721   C249.258987,806.280151 248.544861,806.357605 247.354599,806.118896   C245.925980,805.176331 244.973511,804.549927 244.021027,803.923523   C242.030670,799.297668 238.569000,797.026611 233.149139,797.889587   C233.055740,797.279663 232.962357,796.669739 232.868973,796.059875   C234.191742,795.518250 235.598526,794.369263 236.822952,794.538574   C242.601837,795.338013 248.312241,796.638062 254.093933,797.407288   C255.198456,797.554138 257.145355,796.394592 257.606873,795.352234   C258.733276,792.808044 259.217133,789.979370 259.984314,787.175171   C261.827179,787.907288 262.794159,788.291443 264.384003,788.923035   C264.576385,784.870789 262.299896,780.042542 268.611328,779.032349   C271.249542,782.390076 273.520203,785.788818 276.221802,789.832581   C273.495392,790.640808 272.146606,791.040649 270.833557,791.429932   C269.947754,793.587646 269.061005,795.747681 267.800995,798.816833   C264.729218,793.474121 261.372589,795.113953 259.617828,797.798340   C257.964539,800.327393 256.348358,800.879089 253.714905,801.165588   C251.614822,801.393982 248.174866,801.401733 249.954636,805.826721  z\",id:\"svg_141\"})),_path140||(_path140=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2113\",opacity:1,stroke:\"none\",d:\" M269.366760,778.991455   C270.366608,772.514160 273.769928,767.641174 279.673401,764.636108   C281.016541,768.801941 282.303436,772.793274 283.989288,778.022095   C284.782867,775.229492 285.191833,773.790405 285.635590,772.228821   C286.680328,773.655029 287.520355,774.801697 288.678955,775.974243   C288.951233,781.516541 288.904907,787.033020 288.857910,792.632324   C281.890747,792.313171 280.053406,788.838623 279.776733,783.556702   C278.635925,783.891479 277.684357,784.170715 276.732788,784.449951   C276.918030,784.120789 277.103271,783.791687 277.288483,783.462524   C274.773407,781.976135 272.258331,780.489746 269.366760,778.991455  z\",id:\"svg_142\"})),_path141||(_path141=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392B1F\",opacity:1,stroke:\"none\",d:\" M329.763733,777.101685   C332.409424,778.228943 334.835236,779.472534 338.051697,781.121460   C336.193085,776.626099 338.131409,774.460327 341.080750,772.110657   C342.845856,770.704285 343.305084,767.658875 344.968597,765.466064   C345.577148,769.662292 345.900818,773.777771 345.474487,777.814087   C344.956482,782.717773 348.518768,789.486328 352.998779,791.005737   C354.567352,792.103638 356.135925,793.201538 357.945923,794.468445   C355.948639,797.318848 349.407013,796.559082 351.333466,802.853516   C344.245789,794.121582 339.318298,783.982544 329.058685,778.385254   C329.087769,777.700745 329.268860,777.428162 329.763733,777.101685  z\",id:\"svg_143\"})),_path142||(_path142=/*#__PURE__*/React.createElement(\"path\",{fill:\"#615337\",opacity:1,stroke:\"none\",d:\" M285.015320,857.985107   C288.880188,860.762268 288.596130,854.888977 291.558899,855.015747   C291.929810,857.835999 292.667419,860.914490 291.799072,863.441040   C289.420685,870.360901 289.406921,877.351501 291.203674,884.109863   C292.637054,889.501404 291.051971,892.625122 286.663910,895.184509   C286.037445,895.549866 285.783691,896.554077 285.357452,897.262634   C285.129883,896.787170 284.902283,896.311646 284.674713,895.836182   C282.931213,896.051208 281.186584,896.438721 279.444611,896.427185   C278.021149,896.417725 276.600861,895.931885 275.119446,895.287231   C279.772736,893.189819 284.485779,891.462402 289.967316,889.453308   C287.753326,887.076965 286.456177,885.684753 285.051849,884.177429   C283.606781,884.748291 282.255829,885.281921 280.904846,885.815552   C280.614319,885.422607 280.323792,885.029663 280.033264,884.636658   C281.780273,883.424072 283.527283,882.211426 285.691589,881.139709   C286.195587,881.332214 286.282349,881.383789 286.369080,881.435364   C286.244232,881.291626 286.119385,881.147827 285.994568,881.004028   C285.553375,878.167969 285.112183,875.331909 284.670990,872.495850   C285.077606,872.352722 285.484192,872.209534 285.890808,872.066345   C284.927612,871.332764 283.964417,870.599182 283.229828,870.039734   C283.901062,868.045105 284.446777,866.423523 284.997498,864.399170   C285.002533,863.996460 285.036316,863.963867 285.036316,863.963867   C286.114380,863.898560 287.192474,863.833252 288.553619,863.750732   C287.242584,861.841614 286.159698,860.264709 285.039062,858.343384   C285.001312,857.998901 285.015320,857.985107 285.015320,857.985107  z\",id:\"svg_144\"})),_path143||(_path143=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M235.372742,893.947754   C234.807541,893.682617 234.610474,893.416748 234.206909,892.657654   C234.761642,888.669312 235.522903,885.174255 236.296295,881.623413   C242.585709,884.146179 238.458878,887.865967 235.916473,891.512329   C238.003235,891.512329 239.794220,890.953003 240.759308,891.608887   C245.002274,894.492554 246.328003,891.885498 248.122910,888.598267   C249.597046,885.898560 251.984161,883.689209 254.038666,881.325134   C254.280304,881.047180 255.335526,880.979614 255.413788,881.128906   C257.372192,884.864929 262.893372,885.871643 262.997559,891.002441   C262.997559,891.002441 263.000000,891.000000 262.633972,890.999695   C260.828094,892.349243 259.388245,893.699158 257.948364,895.049011   C255.579559,895.019226 253.206039,895.073853 250.842896,894.942261   C245.806046,894.661865 240.774567,894.284668 235.372742,893.947754  z\",id:\"svg_145\"})),_path144||(_path144=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2E231C\",opacity:1,stroke:\"none\",d:\" M309.004822,770.000000   C308.254150,770.935059 307.503448,771.870056 306.519836,773.095215   C307.126678,773.850891 307.955933,774.883545 308.785217,775.916138   C308.606201,776.314087 308.427185,776.712036 308.248169,777.109924   C304.765808,776.074097 301.283447,775.038208 297.404816,774.000000   C296.365631,770.929321 295.722717,767.861145 295.023712,764.418945   C296.392242,762.366333 297.816895,760.687683 299.664307,759.385803   C300.729279,762.106873 301.048859,764.615845 302.130524,766.735901   C302.817139,768.081604 304.540588,769.028809 305.986694,769.805176   C306.794708,770.239014 307.986145,769.958618 309.004822,770.000000  z\",id:\"svg_146\"})),_path145||(_path145=/*#__PURE__*/React.createElement(\"path\",{fill:\"#615337\",opacity:1,stroke:\"none\",d:\" M319.045349,893.351562   C319.517944,887.247009 319.608032,887.334656 326.227020,888.741760   C327.600708,889.033691 329.327026,887.666870 331.350494,887.396729   C332.515839,888.405884 333.221497,889.082947 333.927155,889.759949   C334.586609,893.905823 331.881317,895.504761 328.328979,896.855347   C327.995422,896.995728 327.987213,896.987793 327.950928,896.636719   C326.295532,893.819092 325.500366,890.361938 320.957184,889.972717   C322.236206,892.929749 323.117004,894.966125 323.961365,897.037109   C323.924927,897.071838 323.851349,897.140503 323.851349,897.140503   C322.264404,895.993591 320.677460,894.846741 319.045349,893.351562  z\",id:\"svg_147\"})),_path146||(_path146=/*#__PURE__*/React.createElement(\"path\",{fill:\"#615337\",opacity:1,stroke:\"none\",d:\" M258.069061,895.271362   C259.388245,893.699158 260.828094,892.349243 262.634583,890.999695   C264.042145,891.474915 265.144257,892.450623 266.112793,892.332336   C269.238617,891.950562 272.315277,891.166199 276.380737,890.339783   C275.398529,891.990234 274.751709,893.077209 274.026062,894.486572   C273.104462,895.528137 272.315704,896.771912 271.408417,896.865417   C268.947388,897.118958 266.436096,896.884705 263.466156,896.496643   C261.663757,896.113281 260.339966,896.077148 259.016174,896.041016   C258.740692,895.858521 258.465210,895.676086 258.069061,895.271362  z\",id:\"svg_148\"})),_path147||(_path147=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M314.687805,817.267456   C317.161743,816.775024 319.352386,816.556641 322.674438,816.225525   C319.361572,820.438599 320.836823,826.985474 313.349426,826.978394   C313.442963,823.830750 313.923737,820.686096 314.687805,817.267456  z\",id:\"svg_149\"})),_path148||(_path148=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M325.691467,783.161377   C328.935913,787.170776 323.878387,789.264343 323.239380,792.792419   C323.766235,789.777771 324.570282,786.550293 325.691467,783.161377  z\",id:\"svg_150\"})),_path149||(_path149=/*#__PURE__*/React.createElement(\"path\",{fill:\"#615337\",opacity:1,stroke:\"none\",d:\" M336.295593,905.133545   C335.992859,903.012634 336.400146,901.261108 338.639313,902.960327   C340.053680,904.033630 340.878784,905.883484 342.020386,907.755981   C340.235596,907.203979 338.398621,906.281128 336.295593,905.133545  z\",id:\"svg_151\"})),_path150||(_path150=/*#__PURE__*/React.createElement(\"path\",{fill:\"#615337\",opacity:1,stroke:\"none\",d:\" M327.997711,896.997864   C328.708405,898.211792 329.416840,899.423584 330.020660,900.918274   C329.487335,901.175171 329.058624,901.149231 328.277344,900.764038   C327.301117,899.927734 326.677429,899.450562 326.053772,898.973389   C325.368469,898.569946 324.683167,898.166504 323.924591,897.451782   C323.851349,897.140503 323.924927,897.071838 324.360535,897.030151   C325.859833,896.988281 326.923523,896.988037 327.987213,896.987793   C327.987213,896.987793 327.995422,896.995728 327.997711,896.997864  z\",id:\"svg_152\"})),_path151||(_path151=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M292.928772,844.643555   C291.651642,844.486145 290.409271,844.009705 289.166931,843.533264   C289.315002,843.126953 289.463043,842.720642 289.611115,842.314331   C290.477386,842.531433 291.343689,842.748596 292.530731,843.007202   C292.888855,843.473938 292.926208,843.899231 292.928772,844.643555  z\",id:\"svg_153\"})),_path152||(_path152=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M259.268005,896.310059   C260.339966,896.077148 261.663757,896.113281 263.109009,896.470337   C261.993561,896.720581 260.756744,896.649841 259.268005,896.310059  z\",id:\"svg_154\"})),_path153||(_path153=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M321.662750,796.026184   C321.553711,796.629944 321.123474,797.279663 320.378601,797.983032   C320.489807,797.381836 320.915680,796.726990 321.662750,796.026184  z\",id:\"svg_155\"})),_path154||(_path154=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M316.661438,812.016968   C316.549530,812.616394 316.119080,813.265503 315.373352,813.963013   C315.486359,813.363098 315.914612,812.714905 316.661438,812.016968  z\",id:\"svg_156\"})),_path155||(_path155=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M326.087860,899.296082   C326.677429,899.450562 327.301117,899.927734 327.956238,900.730469   C327.365814,900.577026 326.743896,900.097900 326.087860,899.296082  z\",id:\"svg_157\"})),_path156||(_path156=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M307.026306,834.708008   C306.881836,834.965271 306.702820,834.975403 306.254639,834.989014   C306.152039,834.558472 306.318604,834.124451 306.485168,833.690430   C306.654022,833.947205 306.822906,834.203979 307.026306,834.708008  z\",id:\"svg_158\"})),_path157||(_path157=/*#__PURE__*/React.createElement(\"path\",{fill:\"#35221B\",opacity:1,stroke:\"none\",d:\" M639.982544,899.724121   C637.837769,900.749695 635.096802,900.957031 633.680176,902.434326   C630.583313,905.663757 627.331848,905.644958 623.580322,904.301208   C621.893494,896.277527 611.610962,890.689697 603.630493,892.326904   C598.530579,893.373169 592.988708,892.157410 587.645264,892.162354   C583.984863,892.165710 580.324829,892.524719 575.954346,892.817749   C571.098755,892.614685 566.948669,892.373291 562.810059,892.002380   C560.246033,891.772522 557.699585,891.346130 554.775635,890.996643   C550.972717,888.703491 547.229675,888.307983 543.231628,888.938965   C542.174255,889.105835 541.013977,888.462280 539.899292,888.455139   C536.938538,888.436279 533.976929,888.561707 531.015625,888.629761   C531.052979,889.168030 531.090332,889.706299 531.127686,890.244568   C528.667297,894.613953 527.044250,889.501587 524.861511,889.463501   C522.463257,889.421631 520.101685,887.281860 517.312134,885.638672   C514.829346,882.401855 508.377167,880.831238 505.627289,882.725220   C503.010071,884.527893 501.799286,883.523743 501.008057,880.613953   C502.481293,879.387512 503.946472,878.524719 505.441895,877.644104   C503.464691,873.626282 505.946106,868.800537 510.515350,867.850159   C511.808167,867.581177 512.875244,866.226929 514.942688,864.714172   C510.653229,864.416199 508.011200,864.232666 504.771332,864.007568   C507.661804,858.583191 510.473450,853.306702 513.285156,848.030212   C512.923401,847.797241 512.561646,847.564209 512.199951,847.331238   C511.136688,848.164368 510.073395,848.997498 508.841675,849.962646   C507.817963,848.497925 506.997223,847.323669 506.402069,846.472107   C506.620239,843.996521 511.653351,842.481018 507.000610,839.998779   C507.000000,840.000000 507.002441,839.997620 507.006287,839.628052   C507.545044,837.697205 508.080017,836.135803 508.732544,834.231323   C507.198303,834.136169 506.099762,834.068054 504.946838,833.861023   C504.806366,833.672485 504.720245,833.622925 504.634155,833.573303   C504.755707,833.715515 504.877228,833.857788 504.998138,834.416809   C504.998718,836.223206 504.999969,837.612854 504.665833,838.953003   C503.564972,837.978760 502.799469,837.053955 501.988281,836.074036   C500.277039,838.380432 498.860352,840.289795 497.179718,842.554932   C498.882355,842.554932 500.208313,842.554932 501.534241,842.554932   C501.669250,842.992065 501.804230,843.429199 501.939209,843.866272   C499.797668,844.633240 497.656097,845.400208 495.217804,846.273438   C495.413422,847.209778 495.703644,848.599060 495.995850,849.993652   C495.997803,849.998901 496.000000,849.995117 495.668640,849.997681   C494.895691,849.992432 494.454132,849.984680 494.005035,849.607056   C493.436096,847.409546 492.874634,845.581970 492.320160,843.777039   C493.334198,843.317322 494.172913,842.937134 496.264557,841.988892   C493.701691,839.949402 491.859406,838.483337 490.425354,837.008179   C493.555359,835.999451 496.277069,834.999695 499.052216,834.139282   C499.191742,834.328430 499.277832,834.378235 499.363922,834.427979   C499.243042,834.285278 499.122131,834.142578 498.961182,833.631104   C498.342072,831.831055 497.763000,830.399719 497.327179,829.322449   C494.570221,830.722473 492.307312,831.871643 490.086090,832.663330   C490.973114,830.283020 494.824768,827.626343 488.783173,826.861450   C488.705780,826.142944 488.855927,825.570251 489.321960,825.022217   C490.424866,824.358093 491.211823,823.669312 491.997742,822.737183   C491.996735,822.493896 491.996338,822.007324 492.364288,821.966797   C494.821503,820.953613 496.910767,819.980957 499.348663,818.952332   C502.872284,818.357666 506.047272,817.818970 509.094940,817.301880   C510.208649,818.722290 511.215790,820.006836 511.425079,820.273743   C516.229004,819.815063 519.664917,819.487000 522.070679,819.257263   C525.174377,821.626038 527.565552,823.450867 529.965393,825.282410   C530.285278,824.900330 530.564148,824.681580 530.694275,824.395325   C534.589478,815.828430 539.335449,814.762817 546.540039,820.849609   C548.726440,822.696777 553.910767,822.262695 555.778442,820.128235   C556.338623,819.488098 556.976257,818.747131 557.730774,818.475525   C560.542969,817.463257 563.495300,816.815002 566.255432,815.688232   C573.496338,812.732239 574.435547,812.998413 579.477661,818.975098   C580.520630,820.211365 582.388489,821.188354 584.003113,821.427490   C589.940369,822.307068 591.916199,817.785828 593.812439,813.293579   C598.012451,819.318542 605.156433,820.992065 606.842712,817.898499   C605.255005,815.876526 603.585327,814.588318 603.149719,812.968201   C602.679626,811.219971 602.838379,808.894653 603.651428,807.292297   C605.489258,803.670044 608.244080,800.413330 605.995422,795.637573   C605.391602,793.991516 604.792297,792.705444 604.193054,791.419373   C603.462036,791.947876 602.731018,792.476379 601.680115,792.864929   C600.243408,792.471924 599.126587,792.218872 598.008789,791.540649   C598.163940,789.166748 598.094482,787.166138 598.529175,785.281738   C599.172913,782.491272 600.174438,779.783325 601.349365,777.037109   C602.109558,777.032837 602.543884,777.031677 603.024902,777.393188   C603.480774,784.259949 604.661072,790.387878 610.997253,794.257385   C610.995667,794.686340 610.994446,794.857971 610.617859,795.095825   C608.412598,798.851929 610.083252,804.767395 613.250610,808.913940   C615.845764,812.311218 618.494751,816.063965 619.652344,820.081909   C622.214417,828.974976 623.322021,829.154114 627.387512,836.302734   C630.698364,842.124695 635.383301,847.764099 635.638306,855.036377   C634.647827,855.832214 633.998718,856.592529 633.349609,857.352783   C634.556030,857.905701 635.762573,858.458618 637.016724,859.332825   C637.709167,860.107727 638.354004,860.561279 638.999756,861.007080   C639.000732,860.999329 638.985168,861.000610 638.986450,861.375305   C638.985291,862.499329 638.982849,863.248718 638.622437,864.039612   C636.761780,865.873962 635.259155,867.666748 633.856323,869.340454   C642.146118,880.023438 642.146118,880.023438 637.845642,885.423401   C638.619385,890.302368 639.308838,894.649963 639.998291,898.997559   C639.998291,898.997559 639.987000,899.481934 639.982544,899.724121  M520.101868,843.663635   C520.795288,843.964478 521.488647,844.265320 522.182068,844.566223   C522.309082,844.202942 522.436157,843.839722 522.563171,843.476440   C521.708801,843.317627 520.854370,843.158813 519.990845,842.309204   C519.469055,841.758423 518.680176,840.643433 518.466858,840.744385   C516.366577,841.738464 514.361877,842.934570 512.330078,844.073364   C513.665588,845.143799 515.056335,845.421448 516.263367,845.069397   C517.596680,844.680481 518.761658,843.714600 520.101868,843.663635  M524.334900,842.243103   C526.163269,840.869263 527.991638,839.495422 529.710449,838.203918   C528.295166,836.404358 527.166016,834.968567 525.458984,832.798035   C523.743469,834.512878 522.300049,835.955627 521.063599,837.191528   C522.452454,839.234680 523.255005,840.415222 524.334900,842.243103  M638.809082,879.740906   C638.968384,879.624817 639.127686,879.508728 639.286926,879.392578   C639.064941,879.416382 638.842957,879.440186 638.809082,879.740906  z\",id:\"svg_159\"})),_path158||(_path158=/*#__PURE__*/React.createElement(\"path\",{fill:\"#160E0B\",opacity:1,stroke:\"none\",d:\" M638.998840,861.014832   C638.354004,860.561279 637.709167,860.107727 637.221313,859.055420   C637.854065,857.700928 638.329895,856.945190 638.805664,856.189392   C637.863647,855.793274 636.921631,855.397095 635.979614,855.000916   C635.383301,847.764099 630.698364,842.124695 627.387512,836.302734   C623.322021,829.154114 622.214417,828.974976 619.652344,820.081909   C618.494751,816.063965 615.845764,812.311218 613.250610,808.913940   C610.083252,804.767395 608.412598,798.851929 610.766846,795.390015   C612.991211,795.771667 614.691162,795.925415 616.083008,796.051331   C617.964661,799.871033 619.972290,803.946411 621.990051,808.387878   C624.000854,811.834351 626.001648,814.914734 628.000977,818.395569   C628.405396,826.056152 632.824768,830.589722 639.116333,835.204163   C638.841309,832.315552 639.249390,830.054932 638.360962,828.569824   C636.195984,824.950684 638.881958,824.722046 641.023987,824.043396   C643.368713,823.300598 645.763672,822.716431 648.483093,821.967712   C649.016235,822.831482 649.903625,824.268982 650.816284,825.747620   C651.256775,825.389160 651.473633,825.302246 651.490967,825.185608   C652.288635,819.817932 656.870117,816.607910 659.054810,812.354492   C661.172180,816.609192 664.330872,813.789368 667.361206,814.000977   C670.152283,813.669739 672.577393,813.332458 675.401672,812.997681   C676.865662,813.002625 677.930359,813.004944 679.032593,813.347046   C679.648071,814.334473 680.226013,814.982178 680.804077,815.629883   C681.203979,814.754883 681.603882,813.879883 682.251465,813.000977   C682.499146,812.997070 682.994568,812.988708 683.252075,813.190430   C683.943176,814.160950 684.376892,814.929810 685.287659,816.544434   C685.652222,814.731812 685.826111,813.867126 686.337891,813.004761   C687.449707,813.339417 688.223633,813.671753 689.005371,814.372192   C689.823425,815.397583 690.577454,816.514709 691.454834,816.621826   C693.679260,816.893433 695.958923,816.712036 698.432678,816.712036   C697.862122,817.958862 697.426147,818.911560 696.617249,819.932068   C695.489319,819.956848 694.734253,819.913818 693.879517,819.721252   C693.521973,819.710205 693.264038,819.848694 692.601196,820.066833   C690.822998,820.161682 689.449646,820.176941 687.839172,819.876465   C684.037720,819.152710 680.410095,815.629517 676.912231,819.992188   C676.886230,820.207153 676.900513,820.639954 676.535645,820.610352   C675.449036,820.502747 674.727295,820.424744 673.852417,820.039673   C670.993042,819.143494 668.126038,817.436279 665.732544,821.047241   C664.638855,821.478455 663.807129,821.703430 662.844482,821.628418   C662.147400,820.664185 661.581116,819.999939 660.369080,818.578247   C660.249329,820.808167 660.183105,822.041077 659.910278,823.490967   C659.166809,824.476929 658.629944,825.245911 657.714172,826.010986   C655.548096,827.565186 653.760925,829.123413 651.658813,830.840576   C649.071350,832.835693 646.670898,834.536194 644.553589,836.536560   C640.337158,840.520447 640.628601,848.591736 644.995117,853.307861   C645.764343,858.815247 646.530273,863.924377 647.237305,869.419861   C648.539185,875.833496 649.899963,881.860718 651.260742,887.888000   C648.793396,888.258850 646.325989,888.629639 643.429077,888.602661   C643.468323,883.711243 643.937134,879.217651 644.405884,874.724121   C644.846619,874.722412 645.287292,874.720764 645.728027,874.719116   C643.478821,871.145447 641.229614,867.571716 638.980408,863.998047   C638.982849,863.248718 638.985291,862.499329 639.300293,861.349731   C640.184998,860.506958 640.757141,860.064453 641.329285,859.622009   C641.036072,859.378357 640.742859,859.134766 640.449585,858.891113   C639.966003,859.598999 639.482422,860.306946 638.998840,861.014832  z\",id:\"svg_160\"})),_path159||(_path159=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M651.630188,887.911865   C649.899963,881.860718 648.539185,875.833496 647.580872,869.357849   C649.645996,868.604492 651.308716,868.299438 653.331421,867.938354   C655.453186,866.921509 657.214844,865.960754 658.983948,864.998779   C658.991394,864.997620 658.995117,865.009338 658.995605,865.416870   C658.754395,867.889954 658.512695,869.955444 658.371033,871.165649   C659.817261,873.101379 660.666992,874.595642 661.851990,875.743774   C663.784607,877.616272 665.936035,879.262939 667.997559,881.002441   C668.000000,881.000000 667.995117,881.004883 668.035400,881.361206   C669.384644,882.479126 670.693542,883.240784 672.298767,884.022522   C673.075012,884.345459 673.554932,884.648315 674.126831,885.185669   C674.490967,885.606323 674.763123,885.792358 675.406189,885.982056   C677.851440,885.323853 679.925720,884.661926 682.014771,884.254150   C682.188049,884.777588 682.346558,885.046936 682.505005,885.316284   C682.670044,884.877563 682.835022,884.438782 683.399597,883.999390   C684.864502,884.004028 685.929810,884.009216 686.870422,884.306763   C686.495178,885.394470 686.244690,886.189819 685.994141,886.985168   C681.973633,888.856079 678.180725,890.944824 673.276733,889.952332   C670.699219,889.430725 667.681274,891.339722 665.001465,891.012085   C660.607849,890.474915 656.327637,889.009583 651.630188,887.911865  z\",id:\"svg_161\"})),_path160||(_path160=/*#__PURE__*/React.createElement(\"path\",{fill:\"#160E0B\",opacity:1,stroke:\"none\",d:\" M731.260376,854.133301   C732.185547,853.850708 733.110657,853.568115 734.588074,853.116760   C735.062012,855.556885 735.512512,857.876648 735.628479,860.745483   C733.187744,862.694885 731.081543,864.095093 728.975342,865.495300   C729.200745,865.910645 729.426147,866.326050 729.651550,866.741394   C730.421753,866.829346 731.191956,866.917236 731.962158,867.005127   C731.974976,867.448364 731.987854,867.891663 731.629395,868.671997   C729.599731,870.220520 726.921692,871.138611 726.472900,872.698181   C725.090759,877.500916 722.268005,878.493958 717.940430,877.097290   C718.277832,881.555115 715.160522,883.900085 709.171265,885.109924   C705.977051,885.755249 703.037476,887.661133 699.982910,888.998108   C697.352539,889.211975 694.722107,889.425903 692.346558,889.158997   C695.408630,886.812195 698.215881,884.946228 701.393311,883.072510   C708.682739,878.180481 715.468018,873.088318 722.580017,868.502930   C725.939392,866.337036 727.281189,863.755859 727.147827,859.723328   C728.661438,857.677185 729.960938,855.905212 731.260376,854.133301  z\",id:\"svg_162\"})),_path161||(_path161=/*#__PURE__*/React.createElement(\"path\",{fill:\"#281C17\",opacity:1,stroke:\"none\",d:\" M700.236694,889.161987   C703.037476,887.661133 705.977051,885.755249 709.171265,885.109924   C715.160522,883.900085 718.277832,881.555115 717.940430,877.097290   C722.268005,878.493958 725.090759,877.500916 726.472900,872.698181   C726.921692,871.138611 729.599731,870.220520 731.633972,869.004517   C734.103088,868.844482 736.196411,868.689026 738.509338,868.517212   C738.509338,869.876770 738.509338,871.235535 738.759521,872.808472   C734.218933,876.364990 729.403992,879.673340 724.649292,883.066162   C722.671021,884.477783 720.984314,886.396545 718.852905,887.458191   C717.549866,888.107300 715.600647,887.307800 714.037842,887.628113   C712.328735,887.978455 709.721924,888.469421 709.273071,889.600281   C707.925598,892.995789 706.415649,892.415771 704.131104,890.834290   C703.075439,890.103455 701.713623,889.814941 700.236694,889.161987  z\",id:\"svg_163\"})),_path162||(_path162=/*#__PURE__*/React.createElement(\"path\",{fill:\"#281C17\",opacity:1,stroke:\"none\",d:\" M638.622437,864.039612   C641.229614,867.571716 643.478821,871.145447 645.728027,874.719116   C645.287292,874.720764 644.846619,874.722412 644.405884,874.724121   C643.937134,879.217651 643.468323,883.711243 642.998657,888.603638   C642.254272,892.279480 641.510742,895.556519 640.382690,898.915527   C639.308838,894.649963 638.619385,890.302368 637.845642,885.423401   C642.146118,880.023438 642.146118,880.023438 633.856323,869.340454   C635.259155,867.666748 636.761780,865.873962 638.622437,864.039612  z\",id:\"svg_164\"})),_path163||(_path163=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M701.023193,883.080200   C698.215881,884.946228 695.408630,886.812195 692.296997,888.826172   C690.207092,888.409790 688.421509,887.845276 686.315002,887.132996   C686.244690,886.189819 686.495178,885.394470 687.176636,884.153931   C689.200195,882.379578 690.792908,881.050293 692.657776,879.493896   C693.945984,881.228516 694.871277,882.474426 696.267273,884.354248   C696.619812,882.742432 696.811157,881.867981 697.356201,880.992188   C698.814331,881.687317 699.918762,882.383789 701.023193,883.080200  z\",id:\"svg_165\"})),_path164||(_path164=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M745.427368,865.582397   C745.246338,866.492615 744.821899,867.152588 744.397522,867.812622   C743.993713,867.400635 743.589966,866.988586 743.186279,866.576538   C743.852173,866.161804 744.518066,865.747009 745.427368,865.582397  z\",id:\"svg_166\"})),_path165||(_path165=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M334.009521,889.437378   C333.221497,889.082947 332.515839,888.405884 331.724731,887.393921   C336.208862,885.520874 340.434875,886.367188 345.127808,887.487793   C350.420288,888.751587 355.804291,892.249939 361.689972,889.502991   C364.336578,892.746948 367.328552,890.858887 370.622986,890.039368   C371.000000,890.000000 370.997345,889.997559 370.997345,889.997559   C372.275604,890.662964 373.551971,891.890747 374.832520,891.895142   C380.046295,891.912964 385.509735,890.493103 390.405670,891.637390   C395.258789,892.771729 398.964844,890.469482 403.607483,890.045288   C404.000214,890.000000 403.993103,889.995483 403.993103,889.995483   C405.766846,889.808350 407.870300,890.151611 409.233582,889.304199   C411.070343,888.162415 411.767059,887.893616 411.991638,890.950500   C411.679443,892.758423 411.362915,893.900635 411.046387,895.042847   C403.345764,895.375854 395.633942,896.143127 387.946960,895.945129   C374.787842,895.606323 361.618134,894.955994 348.510986,893.785767   C344.852203,893.459167 341.435242,890.751282 337.826263,889.343628   C336.720093,888.912109 335.344269,889.171753 334.009521,889.437378  z\",id:\"svg_167\"})),_path166||(_path166=/*#__PURE__*/React.createElement(\"path\",{fill:\"#160E0B\",opacity:1,stroke:\"none\",d:\" M411.463562,895.033203   C411.362915,893.900635 411.679443,892.758423 411.999207,891.302368   C416.248901,889.548767 420.412994,887.401855 424.863708,890.786621   C425.427246,891.215149 427.315430,889.901855 428.800476,889.205688   C430.671844,889.864990 432.332703,890.714294 434.945862,892.050476   C431.867767,892.050476 429.799530,892.050476 427.293854,892.108643   C426.481689,892.165588 426.106964,892.164368 425.046295,892.117798   C422.877106,892.647339 421.393799,893.222168 419.910492,893.796997   C417.233917,894.205811 414.557343,894.614685 411.463562,895.033203  z\",id:\"svg_168\"})),_path167||(_path167=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M362.651001,903.858887   C362.560577,904.917114 362.157104,905.839355 361.753662,906.761658   C361.116547,906.202576 360.545166,905.531982 359.827911,905.108643   C358.521088,904.337158 357.127777,903.712280 355.391357,903.005310   C357.940430,898.407349 359.909027,903.348206 362.651001,903.858887  z\",id:\"svg_169\"})),_path168||(_path168=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M352.995972,902.671631   C351.783234,902.216919 350.534912,901.424011 349.125305,900.322571   C350.296143,900.787231 351.628265,901.560364 352.995972,902.671631  z\",id:\"svg_170\"})),_path169||(_path169=/*#__PURE__*/React.createElement(\"path\",{fill:\"#312216\",opacity:1,stroke:\"none\",d:\" M420.307251,893.860962   C421.393799,893.222168 422.877106,892.647339 424.764404,892.131226   C423.680237,892.768311 422.192108,893.346680 420.307251,893.860962  z\",id:\"svg_171\"})),_path170||(_path170=/*#__PURE__*/React.createElement(\"path\",{fill:\"#615337\",opacity:1,stroke:\"none\",d:\" M332.988251,897.237793   C333.103241,897.411133 333.046906,897.586243 332.990540,897.761414   C332.932678,897.587524 332.874786,897.413574 332.988251,897.237793  z\",id:\"svg_172\"})),_path171||(_path171=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M555.145264,891.007996   C557.699585,891.346130 560.246033,891.772522 562.810059,892.002380   C566.948669,892.373291 571.098755,892.614685 575.638184,892.955688   C576.033203,893.716431 576.033997,894.432312 575.994263,895.862244   C574.972900,898.411987 573.992065,900.247681 572.988770,902.370728   C572.652344,903.106750 572.338379,903.555420 572.024353,904.004028   C570.441223,904.461609 568.858154,904.919312 566.785583,905.518494   C566.423340,905.051453 565.671936,904.082825 564.804504,902.964478   C562.649292,903.561523 560.994751,909.889709 558.515442,903.520203   C557.089722,904.470459 555.887268,905.271912 555.011475,905.855652   C553.535767,904.035278 552.262268,902.464233 550.814636,900.678345   C551.070496,900.607239 552.146484,900.308289 553.644958,900.341309   C555.483276,900.450134 556.971680,900.405884 558.265076,899.881042   C558.597290,899.746155 558.314941,898.096619 558.314941,896.438599   C556.286194,898.113281 555.141907,899.057861 553.997559,900.002441   C553.332275,898.274841 552.666992,896.547180 552.362061,894.418396   C553.530029,893.014160 554.337646,892.011108 555.145264,891.007996  z\",id:\"svg_173\"})),_path172||(_path172=/*#__PURE__*/React.createElement(\"path\",{fill:\"#160E0B\",opacity:1,stroke:\"none\",d:\" M554.775635,890.996643   C554.337646,892.011108 553.530029,893.014160 552.345276,894.060608   C546.541748,894.580139 541.189148,894.421204 536.089050,892.199829   C534.657349,891.576294 533.249023,890.899414 531.478821,890.245728   C531.090332,889.706299 531.052979,889.168030 531.015625,888.629761   C533.976929,888.561707 536.938538,888.436279 539.899292,888.455139   C541.013977,888.462280 542.174255,889.105835 543.231628,888.938965   C547.229675,888.307983 550.972717,888.703491 554.775635,890.996643  z\",id:\"svg_174\"})),_path173||(_path173=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M581.107910,895.913330   C585.481140,896.613159 589.854370,897.312927 594.634155,898.044556   C592.267578,900.569763 589.494385,903.063110 586.745544,905.534607   C584.312683,903.622437 582.029968,901.828247 579.373596,900.016968   C579.000000,900.000000 578.995117,899.995117 579.018188,899.662354   C579.730164,898.190857 580.419067,897.052063 581.107910,895.913330  z\",id:\"svg_175\"})),_path174||(_path174=/*#__PURE__*/React.createElement(\"path\",{fill:\"#281C17\",opacity:1,stroke:\"none\",d:\" M500.963165,896.884033   C498.432739,895.718262 495.905090,894.169617 493.125305,891.996338   C492.114563,891.042236 491.355988,890.712830 490.597412,890.383545   C490.597412,890.383545 490.974396,890.072571 490.910614,889.847290   C490.898682,889.081360 490.950562,888.540649 491.364868,887.960938   C494.490051,886.947937 497.252777,885.973938 500.007080,885.001221   C499.998657,885.002441 499.994934,884.985413 500.079834,885.156738   C500.438873,885.221130 500.712982,885.114197 501.245056,885.171204   C502.003998,886.227478 502.504974,887.119873 503.005920,888.012268   C502.325928,890.841919 501.645966,893.671570 500.963165,896.884033  z\",id:\"svg_176\"})),_path175||(_path175=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M602.043579,899.408386   C602.304565,898.495422 602.641785,897.465881 602.897766,897.485718   C606.838684,897.790894 610.769104,898.232483 614.791748,899.350342   C611.439819,901.071411 611.401306,907.384583 605.532959,905.118896   C604.157349,903.313904 603.119629,901.546936 602.043579,899.408386  z\",id:\"svg_177\"})),_path176||(_path176=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M503.336365,888.000366   C502.504974,887.119873 502.003998,886.227478 500.997131,885.165161   C500.491211,884.995239 499.994934,884.985413 499.994934,884.985413   C499.994934,884.985413 499.998657,885.002441 499.876709,884.707153   C499.484894,883.609558 499.215027,882.807190 499.119934,881.756348   C499.863129,881.331055 500.431580,881.154297 501.000000,880.977600   C501.799286,883.523743 503.010071,884.527893 505.627289,882.725220   C508.377167,880.831238 514.829346,882.401855 516.930664,885.576416   C514.247925,885.958801 511.534760,885.986084 508.080505,886.015381   C506.555511,886.651672 505.771606,887.285889 504.987701,887.920166   C504.547394,887.942871 504.107117,887.965637 503.336365,888.000366  z\",id:\"svg_178\"})),_path177||(_path177=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M572.071899,904.353027   C572.338379,903.555420 572.652344,903.106750 573.345459,902.315796   C575.481506,901.314026 577.238281,900.654541 578.995117,899.995117   C578.995117,899.995117 579.000000,900.000000 579.002441,900.002441   C577.949280,902.996948 574.318481,905.473816 572.071899,904.353027  z\",id:\"svg_179\"})),_path178||(_path178=/*#__PURE__*/React.createElement(\"path\",{fill:\"#281C17\",opacity:1,stroke:\"none\",d:\" M505.311523,887.929077   C505.771606,887.285889 506.555511,886.651672 507.694214,886.023010   C507.244446,886.665039 506.439911,887.301514 505.311523,887.929077  z\",id:\"svg_180\"})),_path179||(_path179=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M600.999451,905.701538   C600.701599,905.341980 600.403137,904.683960 600.104736,904.025940   C600.318176,903.956665 600.531616,903.887390 600.745117,903.818115   C600.829712,904.346436 600.914307,904.874817 600.999451,905.701538  z\",id:\"svg_181\"})),_path180||(_path180=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M600.263184,899.012207   C600.293274,898.894104 600.554932,898.779114 600.887329,898.842285   C600.958069,899.020447 600.494812,899.015259 600.263184,899.012207  z\",id:\"svg_182\"})),_path181||(_path181=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M491.002441,888.000000   C490.950562,888.540649 490.898682,889.081360 490.731720,890.013794   C488.427032,888.993103 486.297333,887.475281 484.035583,886.189941   C479.128601,883.401367 475.293671,884.892822 473.425873,890.123352   C472.095184,893.849792 470.992706,897.713562 469.157471,901.182251   C468.114166,903.154175 465.963898,905.573181 464.031219,905.853394   C457.562500,906.791321 450.968658,906.882202 444.419769,907.242981   C441.967285,907.378113 439.506531,907.363647 436.597900,907.409180   C436.215729,906.306946 436.285217,905.213074 436.305969,904.886597   C438.686340,904.179932 440.498505,903.641968 442.646271,903.048828   C445.912048,902.074036 448.790985,900.897034 451.785614,900.301331   C455.358002,899.590637 459.029510,899.378052 464.136139,898.775208   C465.174988,894.990784 466.706635,889.862854 467.958710,884.667480   C468.625549,881.900391 468.808716,879.016663 469.749207,876.426880   C470.895599,879.282349 471.503021,881.896606 472.100861,884.469604   C476.626160,882.431885 477.551483,881.598083 479.058289,878.239380   C479.140289,878.056641 479.670898,878.075195 480.046417,878.337280   C483.734253,881.783020 487.368347,884.891541 491.002441,888.000000  z\",id:\"svg_183\"})),_path182||(_path182=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M432.301880,908.980957   C432.571503,908.475464 433.136169,908.028198 433.858521,907.818420   C433.543121,908.383728 433.070038,908.711487 432.301880,908.980957  z\",id:\"svg_184\"})),_path183||(_path183=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M490.672333,890.700684   C491.355988,890.712830 492.114563,891.042236 492.920776,891.729065   C492.227997,891.730347 491.487610,891.374084 490.672333,890.700684  z\",id:\"svg_185\"})),_path184||(_path184=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M579.018188,899.662354   C577.238281,900.654541 575.481506,901.314026 573.367920,902.028442   C573.992065,900.247681 574.972900,898.411987 575.997498,896.220459   C577.576477,895.712158 579.111694,895.559753 580.877441,895.660339   C580.419067,897.052063 579.730164,898.190857 579.018188,899.662354  z\",id:\"svg_186\"})),_path185||(_path185=/*#__PURE__*/React.createElement(\"path\",{fill:\"#160E0B\",opacity:1,stroke:\"none\",d:\" M438.147736,891.212402   C438.551086,891.133545 439.107544,891.316833 439.828796,891.747681   C439.429321,891.821594 438.865082,891.648071 438.147736,891.212402  z\",id:\"svg_187\"})),_path186||(_path186=/*#__PURE__*/React.createElement(\"path\",{fill:\"#160E0B\",opacity:1,stroke:\"none\",d:\" M436.120392,888.251770   C436.323486,888.123657 436.569733,888.286438 436.856140,888.741089   C436.650391,888.870972 436.406128,888.707520 436.120392,888.251770  z\",id:\"svg_188\"})),_path187||(_path187=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M354.334351,905.289001   C354.350006,905.006470 354.497803,904.851990 354.645569,904.697510   C354.585876,904.937378 354.526184,905.177185 354.334351,905.289001  z\",id:\"svg_189\"})),_path188||(_path188=/*#__PURE__*/React.createElement(\"path\",{fill:\"#281C17\",opacity:1,stroke:\"none\",d:\" M628.002441,817.995117   C626.001648,814.914734 624.000854,811.834351 622.315186,808.335449   C622.630188,806.141113 622.630188,804.365356 622.630188,802.438538   C623.830933,802.555664 625.052307,802.674866 626.407776,802.807068   C626.407776,800.864014 626.407776,799.210938 626.407776,796.416199   C628.025269,798.407898 628.953430,799.550781 629.881592,800.693726   C630.240356,800.564636 630.599121,800.435608 630.957886,800.306519   C630.063293,796.518372 629.168701,792.730225 628.210449,788.672729   C629.539246,788.541199 630.681702,788.428040 632.001465,788.297363   C632.001465,786.611145 632.001465,785.299988 632.362549,783.981323   C633.391724,782.710266 634.059814,781.446716 634.727844,780.183105   C634.366394,780.000244 634.004944,779.817444 633.643494,779.634583   C634.757385,779.089233 635.871277,778.543823 637.354614,778.004272   C639.137939,778.344604 640.551819,778.679199 642.008057,779.367188   C643.362122,781.972107 644.854553,784.139832 645.946960,786.493164   C648.089722,791.108948 652.691345,792.375305 657.496460,789.547729   C656.986267,787.349548 656.483398,785.182922 656.044312,782.664978   C658.224365,781.537659 658.224365,781.537659 659.114868,783.847290   C660.913208,788.511353 664.096985,788.980408 667.471924,785.367310   C668.568115,784.193848 670.466187,783.769409 672.038330,783.323364   C672.718567,784.093750 673.358093,784.543091 673.997559,784.992493   C679.117554,785.303528 676.305969,788.910583 676.921936,791.210632   C671.300476,791.558838 670.771057,792.415894 672.395752,797.182800   C672.760010,798.251587 672.277954,799.611450 672.174255,800.836365   C672.020081,802.657593 671.855835,804.477966 671.500305,806.705566   C669.868225,809.406555 668.431641,811.700745 666.995117,813.994934   C664.330872,813.789368 661.172180,816.609192 659.017761,811.995605   C657.880554,809.780090 656.837646,808.275513 655.203369,805.917603   C653.171997,810.796509 651.606873,814.555603 649.944458,818.548462   C649.377014,817.874329 648.736877,817.113892 648.093811,816.349976   C646.978394,817.263306 646.031006,818.039001 644.830994,819.021606   C642.999207,815.475647 641.222778,812.369446 639.836365,809.097839   C639.524719,808.362488 640.576050,807.049622 641.133789,806.307373   C641.828674,807.298462 642.389832,807.984741 643.178528,808.949402   C644.919922,797.797729 644.351501,796.288574 637.250183,792.781433   C638.182129,796.587036 639.088623,800.288635 639.616699,803.987427   C637.692078,803.718567 636.145874,803.452393 634.250488,803.126099   C634.897339,805.215698 635.379028,806.771851 636.276001,809.669312   C634.502441,808.334778 633.922729,807.881165 633.325012,807.452637   C632.288147,806.709473 631.240234,805.981812 630.196960,805.247620   C629.813599,806.577698 628.901428,808.023804 629.162170,809.212646   C629.636169,811.374146 630.807129,813.382751 631.507324,815.031494   C632.982666,815.031494 634.132385,815.031494 635.282043,815.031494   C635.190125,816.768250 635.267517,818.537781 634.940308,820.228943   C634.756470,821.178894 633.903992,821.999451 633.352783,822.878174   C632.536621,822.255188 631.666260,821.690430 630.917419,820.994873   C629.897217,820.047241 628.969666,818.999817 628.002441,817.995117  z\",id:\"svg_190\"})),_path189||(_path189=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M696.990173,819.864319   C697.426147,818.911560 697.862122,817.958862 698.432678,816.712036   C695.958923,816.712036 693.679260,816.893433 691.454834,816.621826   C690.577454,816.514709 689.823425,815.397583 689.377441,814.208435   C694.399292,812.808472 699.590210,813.477356 703.027283,809.055054   C703.157227,808.887878 703.663940,809.013489 703.995117,809.002625   C703.915405,810.098999 703.835693,811.195312 703.653503,813.701538   C707.896729,814.771606 712.618958,815.921936 717.308838,817.191711   C717.959656,817.367981 718.404968,818.203064 719.024963,818.612732   C720.713135,819.728149 722.341125,821.447510 724.177246,821.729919   C729.617126,822.566589 733.631653,825.771912 735.235657,830.877136   C735.885315,832.944641 737.904053,834.675537 738.227722,836.728638   C738.643799,839.368469 737.981689,842.178284 737.783997,844.914917   C737.050354,844.739624 736.316711,844.564392 735.146545,843.888611   C733.657288,840.917236 732.604492,838.446350 731.474365,835.611389   C727.686890,831.612854 724.479614,827.145081 720.152039,824.534241   C713.203857,820.342407 705.153870,819.253906 696.990173,819.864319  z\",id:\"svg_191\"})),_path190||(_path190=/*#__PURE__*/React.createElement(\"path\",{fill:\"#281C17\",opacity:1,stroke:\"none\",d:\" M703.840332,808.692139   C703.663940,809.013489 703.157227,808.887878 703.027283,809.055054   C699.590210,813.477356 694.399292,812.808472 689.369568,813.840332   C688.223633,813.671753 687.449707,813.339417 686.330200,812.635498   C685.372437,811.592163 684.760132,810.920410 684.147827,810.248657   C683.763428,811.162048 683.379028,812.075378 682.994568,812.988708   C682.994568,812.988708 682.499146,812.997070 681.875366,812.998657   C680.499451,813.002563 679.747253,813.004944 678.995117,813.007324   C677.930359,813.004944 676.865662,813.002625 675.274902,812.702332   C674.504578,811.596741 674.260376,810.789062 674.016174,809.981384   C676.263000,808.535339 678.509827,807.089233 681.075684,805.437805   C681.583679,805.999084 682.336304,806.830627 684.111877,808.792419   C683.752502,805.138306 683.537476,802.951904 683.305786,800.596680   C691.838318,798.854614 698.105164,802.703064 703.840332,808.692139  z\",id:\"svg_192\"})),_path191||(_path191=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392B1F\",opacity:1,stroke:\"none\",d:\" M674.019165,784.694702   C673.358093,784.543091 672.718567,784.093750 672.038696,782.937012   C671.294678,781.244629 670.650024,779.480164 669.876038,779.421509   C667.611694,779.249878 665.295715,779.758118 663.182739,779.667236   C664.858887,778.877014 666.394836,778.521362 667.828430,777.921021   C668.603882,777.596313 669.204407,776.853760 669.883850,776.299744   C669.256714,775.534790 668.629578,774.769836 668.001953,773.573181   C668.011108,771.408142 668.020630,769.674744 668.030151,767.941406   C669.962280,769.049072 671.894287,770.156799 673.826294,771.264526   C674.260254,770.730469 674.694153,770.196411 675.128052,769.662292   C673.074402,767.916992 671.020752,766.171753 668.967102,764.426453   C669.188538,763.897278 669.409973,763.368164 669.631348,762.839050   C671.974243,763.660400 674.317078,764.481689 676.858337,765.946899   C677.726562,767.409241 678.396362,768.227722 679.066162,769.046204   C679.049866,769.480347 679.033508,769.914429 679.007385,770.674316   C675.487366,771.060547 675.262085,772.571106 677.441528,774.829407   C678.409241,775.832214 679.731323,776.492920 680.614136,777.657715   C679.889771,778.000854 679.443848,777.995178 678.798096,777.735718   C677.732178,777.988037 676.866089,778.494019 675.729248,779.232544   C675.308167,780.642639 675.157776,781.820068 675.007324,782.997559   C674.685120,783.463989 674.362976,783.930481 674.019165,784.694702  z\",id:\"svg_193\"})),_path192||(_path192=/*#__PURE__*/React.createElement(\"path\",{fill:\"#574432\",opacity:1,stroke:\"none\",d:\" M731.551697,835.975464   C732.604492,838.446350 733.657288,840.917236 734.878052,843.693970   C734.636963,845.297119 733.498047,846.993835 733.950134,847.819763   C735.563293,850.766968 733.475525,850.616638 731.405029,850.702637   C730.911926,850.177124 730.796326,849.923096 730.680786,849.669067   C730.515442,849.808289 730.193542,850.048645 730.208252,850.071289   C730.428162,850.411194 730.692261,850.722534 730.946045,851.040527   C730.999146,851.815979 731.052246,852.591431 731.182861,853.750061   C729.960938,855.905212 728.661438,857.677185 726.783630,859.724609   C725.474548,860.000916 724.743835,860.001648 724.156006,859.696655   C725.853882,857.323181 727.408936,855.255493 728.803528,853.401123   C726.694641,851.080505 724.915039,849.122131 722.706848,846.692261   C724.230713,846.383179 725.109558,846.204895 726.039185,846.359436   C726.914856,846.910278 727.739746,847.128357 728.564636,847.346375   C728.063416,846.885864 727.562195,846.425354 727.007141,845.602539   C726.646179,843.824219 726.338989,842.408142 726.300049,840.758484   C726.707397,839.345459 726.846619,838.166077 727.187561,836.889160   C727.642517,836.615784 727.820312,836.382324 728.376038,836.081299   C729.736938,836.039307 730.644287,836.007385 731.551697,835.975464  z\",id:\"svg_194\"})),_path193||(_path193=/*#__PURE__*/React.createElement(\"path\",{fill:\"#281C17\",opacity:1,stroke:\"none\",d:\" M675.398560,782.996948   C675.157776,781.820068 675.308167,780.642639 676.067871,779.230713   C677.450745,778.660706 678.224304,778.325073 678.997864,777.989441   C679.443848,777.995178 679.889771,778.000854 680.670288,778.006958   C683.375916,778.007324 685.746948,778.007324 689.057556,778.007324   C686.942261,780.898193 685.586975,782.750549 683.730347,785.287903   C682.551758,776.869080 678.505920,783.674438 675.398560,782.996948  z\",id:\"svg_195\"})),_path194||(_path194=/*#__PURE__*/React.createElement(\"path\",{fill:\"#281C17\",opacity:1,stroke:\"none\",d:\" M732.353760,867.001587   C731.191956,866.917236 730.421753,866.829346 729.651550,866.741394   C729.426147,866.326050 729.200745,865.910645 728.975342,865.495300   C731.081543,864.095093 733.187744,862.694885 735.628540,861.148071   C737.054443,861.671265 738.145813,862.341064 740.441284,863.750000   C737.006958,865.199463 734.876099,866.098816 732.353760,867.001587  z\",id:\"svg_196\"})),_path195||(_path195=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M673.892151,809.700562   C674.260376,810.789062 674.504578,811.596741 674.875610,812.699829   C672.577393,813.332458 670.152283,813.669739 667.361206,814.000977   C668.431641,811.700745 669.868225,809.406555 671.651184,807.057251   C672.587708,807.807922 673.177917,808.613831 673.892151,809.700562  z\",id:\"svg_197\"})),_path196||(_path196=/*#__PURE__*/React.createElement(\"path\",{fill:\"#281C17\",opacity:1,stroke:\"none\",d:\" M699.378906,798.418213   C697.286865,798.645935 695.428772,798.645935 693.372314,798.645935   C694.655518,796.779114 695.739502,795.202148 697.178711,793.108337   C698.047668,794.922546 698.830322,796.556519 699.378906,798.418213  z\",id:\"svg_198\"})),_path197||(_path197=/*#__PURE__*/React.createElement(\"path\",{fill:\"#312216\",opacity:1,stroke:\"none\",d:\" M327.004028,746.992676   C326.351624,747.607178 325.699219,748.221680 324.847076,749.024292   C323.988892,746.855408 323.299408,745.112793 322.299377,742.585327   C319.883331,747.469788 317.404999,751.333435 320.403046,756.097961   C320.739807,756.633118 319.898651,757.909546 319.603760,758.842224   C318.742279,758.147400 317.880798,757.452576 317.008423,756.374023   C316.997559,752.001953 316.997559,748.013489 316.997559,742.735840   C312.903168,744.063721 308.599396,745.459534 304.007324,746.948853   C304.007324,746.011780 304.007324,744.900085 304.372406,743.338806   C306.489624,739.594482 308.241791,736.299683 309.996948,733.002441   C310.000000,733.000000 310.004883,732.993469 310.346863,733.047791   C310.940765,735.186829 311.192719,737.271545 311.462799,739.506470   C314.916351,739.080933 318.235626,738.671936 322.166412,738.187561   C320.666199,735.415161 319.272064,732.838867 317.677429,729.891968   C318.717834,729.693542 320.115662,729.427002 321.578857,729.148010   C320.791443,728.000916 320.043671,726.911560 319.191162,725.669617   C320.738770,725.426270 321.825165,725.255432 322.911530,725.084656   C322.987366,724.686890 323.063171,724.289124 323.139008,723.891357   C321.294891,723.071716 319.450806,722.252014 318.205353,721.698425   C318.092041,719.209839 317.994507,717.068237 317.897003,714.926636   C317.897003,714.926636 317.968262,714.968872 318.331696,714.966187   C319.462280,714.977356 320.229401,714.991089 321.051941,715.144409   C321.195404,715.332275 321.283447,715.380737 321.371521,715.429138   C321.249298,715.284973 321.127106,715.140808 321.013062,714.628662   C322.985657,710.863647 330.270630,711.067810 333.299377,714.462341   C334.587280,715.905701 336.034943,719.170898 338.434387,715.028442   C339.530609,716.724915 340.265259,718.365967 340.864441,720.322876   C340.572327,727.315125 343.006897,729.734253 349.411194,730.096924   C352.448730,730.268860 356.259308,730.409607 358.294739,732.191833   C365.373596,738.390137 373.979950,736.873535 382.060760,737.862854   C384.209442,738.125854 385.965851,736.652771 383.960815,733.696350   C381.465668,730.231506 379.920166,726.420959 376.098877,724.338684   C375.058746,723.771851 375.320953,721.162415 374.342712,720.061768   C372.359100,717.829712 369.746185,716.151306 367.805695,713.890198   C367.188965,713.171570 367.880524,711.330078 368.380432,710.004028   C372.207794,711.654358 375.628143,713.303162 378.771393,715.185852   C378.744904,722.908691 383.210144,727.176392 393.507507,728.254333   C389.094635,723.165283 385.537628,719.063232 382.187012,714.723267   C386.958344,715.202759 387.095367,712.204590 387.394958,709.001099   C389.042999,708.875488 390.288330,708.753662 391.652679,708.620178   C391.197815,705.760620 390.797546,703.244019 390.404785,700.774902   C392.013977,699.800598 393.519196,698.889282 395.359955,698.175415   C395.923859,698.610107 396.324066,698.826843 396.355133,699.087646   C396.961090,704.172668 397.469360,709.269958 398.132263,714.347168   C398.308929,715.700439 398.931976,716.995422 399.238403,717.964172   C401.856781,717.585388 403.871826,717.293945 406.186676,717.248291   C406.647614,719.330505 406.808777,721.166870 406.685455,723.225891   C404.883209,726.018433 404.992340,730.458923 399.641388,729.017090   C398.194061,729.342957 397.096436,729.675415 395.780762,729.743286   C393.632324,730.651672 391.701874,731.824463 389.161652,733.367676   C391.786957,736.282654 393.899872,738.628723 396.157776,741.275818   C398.859619,744.057190 401.416473,746.537537 404.015717,749.377686   C405.406830,751.212524 406.736755,752.705200 408.109924,754.157043   C409.328339,755.445312 410.840515,756.528320 411.788208,757.984863   C413.680298,760.892761 415.274384,763.994629 417.035858,767.335938   C417.723389,768.101196 418.366577,768.546936 419.255554,768.996338   C419.501343,769.000000 419.992889,769.010986 419.996277,769.347168   C420.329224,770.454895 420.658813,771.226379 420.988007,772.373535   C420.986053,773.500366 420.984497,774.251648 420.722687,775.224121   C421.908600,777.012390 424.108185,778.358154 424.646545,780.191711   C425.825714,784.207886 428.423553,783.211914 430.827972,782.488647   C435.609833,781.050293 438.661652,779.131531 434.993500,770.995483   C435.000000,771.000000 434.990631,770.988098 435.312195,770.951477   C436.090759,770.279480 436.547699,769.644165 437.112122,768.789185   C437.416290,768.294495 437.675232,768.103821 438.382538,767.992188   C439.847870,766.989014 440.982819,766.044067 441.991547,764.979431   C443.160553,763.745667 443.981506,761.691956 445.364594,761.233032   C452.698090,758.799683 453.154907,757.981812 448.761139,751.027527   C450.844696,749.933472 452.938324,748.834045 455.031982,747.734680   C454.563690,749.579346 454.095367,751.424011 453.559692,753.534058   C455.932129,756.873169 454.479248,764.904480 451.095398,764.533325   C444.518890,763.812134 445.292816,769.064941 442.465668,772.068542   C444.773560,772.458801 446.201965,772.700378 447.913208,772.989807   C446.400696,775.524231 445.222778,777.498047 443.881226,779.746033   C443.109192,777.720337 442.432587,775.945129 441.755981,774.169861   C441.107758,774.202759 440.459534,774.235718 439.811310,774.268616   C439.164459,778.582214 438.517578,782.895813 437.806732,787.636353   C434.202515,789.224670 430.094574,790.128113 426.906616,785.279114   C426.673187,784.924072 425.652710,785.086487 424.606384,785.017517   C421.618805,787.456238 419.022980,789.885681 416.427124,792.315186   C415.957489,792.004028 415.487823,791.692871 415.018188,791.381775   C414.491943,787.998840 414.863464,784.082214 413.240082,781.351501   C410.437622,776.637329 406.324402,772.715637 402.908417,768.346375   C401.514618,766.563538 400.397766,764.536255 399.345673,762.520630   C397.760193,759.482971 396.144196,756.435364 394.899872,753.251770   C393.106689,748.663879 390.366638,749.627991 387.687286,751.958252   C384.253387,754.944885 381.416779,754.524719 377.992554,751.794739   C376.226074,750.386536 373.322540,749.167786 371.274017,749.575989   C364.389130,750.947937 357.703247,752.579285 351.731750,746.957336   C351.053497,749.085571 350.589874,750.540283 349.894806,752.721313   C342.808167,745.811401 335.294739,741.780090 325.296387,742.893250   C326.017273,744.623779 326.510651,745.808228 327.004028,746.992676  M326.846863,721.535034   C328.597626,722.408020 330.348419,723.281006 332.099182,724.153931   C332.346039,723.778381 332.592896,723.402832 332.839752,723.027283   C330.838470,720.277893 328.837158,717.528564 326.586243,714.436279   C324.941284,717.023254 323.931000,718.612122 322.781097,720.420532   C324.002441,720.702393 325.093719,720.954224 326.846863,721.535034  z\",id:\"svg_199\"})),_path198||(_path198=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M309.993896,733.004883   C308.241791,736.299683 306.489624,739.594482 304.380005,742.958984   C299.803802,744.561401 293.992554,743.279541 292.475464,749.650024   C292.340393,750.217163 291.117249,750.453674 290.556152,751.003662   C288.436401,753.081604 286.368073,755.212646 284.306091,757.348572   C282.730408,758.980652 281.347656,760.873535 279.522217,762.133362   C279.106354,762.420349 277.219238,760.575623 276.002258,759.349915   C276.850830,756.894531 277.706390,754.801331 278.790253,752.462646   C280.113739,751.598145 281.524536,751.231812 282.254608,750.320251   C288.460510,742.571899 294.793060,735.015625 304.667267,730.831360   C302.631134,730.068176 300.594971,729.304993 298.429169,728.493225   C299.572052,721.893555 304.375854,724.709717 308.446564,724.907715   C308.051971,723.496643 307.760284,722.453430 307.288452,720.766174   C309.440704,721.549500 310.866394,722.068359 313.404633,722.992126   C311.984863,721.088257 311.264221,720.121887 310.299591,718.828308   C311.396851,718.287659 312.452820,717.767273 313.786591,717.110046   C312.815460,716.275818 312.054871,715.622437 311.294250,714.969055   C311.406403,714.660217 311.518585,714.351379 311.630737,714.042542   C313.468018,714.336487 315.305328,714.630493 317.519806,714.925537   C317.994507,717.068237 318.092041,719.209839 318.205353,721.698425   C319.450806,722.252014 321.294891,723.071716 323.139008,723.891357   C323.063171,724.289124 322.987366,724.686890 322.911530,725.084656   C321.825165,725.255432 320.738770,725.426270 319.191162,725.669617   C320.043671,726.911560 320.791443,728.000916 321.578857,729.148010   C320.115662,729.427002 318.717834,729.693542 317.677429,729.891968   C319.272064,732.838867 320.666199,735.415161 322.166412,738.187561   C318.235626,738.671936 314.916351,739.080933 311.462799,739.506470   C311.192719,737.271545 310.940765,735.186829 310.293030,732.906494   C309.808258,732.661743 309.719269,732.612671 309.630249,732.563599   C309.751495,732.710632 309.872711,732.857788 309.993896,733.004883  z\",id:\"svg_200\"})),_path199||(_path199=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D1A0E\",opacity:1,stroke:\"none\",d:\" M231.995056,892.981079   C229.568756,892.666626 227.142426,892.352173 224.011749,891.855530   C220.541046,891.108093 217.774704,890.542908 215.008362,889.977661   C215.008362,889.977661 214.999695,889.993896 215.010971,889.990601   C213.353622,887.718323 211.860580,885.290833 209.983459,883.209839   C204.338440,876.951477 198.278488,871.048279 192.901581,864.573730   C189.378952,860.332031 185.481934,855.685791 184.100922,850.584900   C182.756180,845.617920 183.121857,839.266907 185.203934,834.631897   C186.492691,831.763000 184.357468,831.879700 184.159363,830.301941   C184.022430,830.009094 184.000015,830.004028 184.360809,829.974182   C188.480087,826.629150 192.238556,823.313965 195.997009,819.998779   C199.776306,818.134094 203.498901,816.136169 207.370499,814.488403   C208.489700,814.012146 210.036942,814.541687 211.525513,815.042419   C211.417664,815.951111 211.172226,816.427551 210.949005,816.953613   C210.971222,817.003174 210.911148,816.910217 210.563538,816.871826   C209.174820,817.570984 208.133698,818.308411 206.860413,819.217041   C206.089645,819.936646 205.551056,820.484985 204.695679,821.033203   C203.831207,821.615723 203.283539,822.198486 202.431976,822.935059   C200.401993,824.706787 198.675888,826.324524 196.612000,827.985046   C195.751312,828.944336 195.228424,829.860901 194.473694,831.022095   C193.366119,832.212952 192.332642,833.056702 191.640106,834.122009   C186.927795,841.370789 184.514008,843.756958 191.092194,850.279785   C191.327255,850.743530 191.557053,850.916565 191.881592,851.345154   C191.932495,852.133362 191.949997,852.584534 191.980682,853.331848   C192.321869,854.084595 192.649872,854.541199 192.999969,855.359863   C197.670807,861.517822 202.319534,867.313782 207.144669,873.413208   C208.661194,874.997559 209.888016,876.429993 211.361816,877.532043   C216.551498,881.413086 221.841705,885.159241 227.059280,889.003296   C228.758850,890.255554 230.352798,891.651123 231.995056,892.981079  M200.592911,820.513855   C200.592911,820.513855 200.479004,820.579712 200.592911,820.513855  z\",id:\"svg_201\"})),_path200||(_path200=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M205.012482,821.033386   C205.551056,820.484985 206.089645,819.936646 207.233246,819.219238   C208.862549,818.336853 209.886841,817.623535 210.911133,816.910156   C210.911148,816.910217 210.971222,817.003174 211.288376,816.999634   C212.455887,816.476624 213.306229,815.957153 214.156555,815.437622   C214.864258,815.126526 215.571976,814.815491 216.540741,814.716248   C216.833572,815.285767 216.865356,815.643372 216.643066,816.206970   C216.251175,817.267212 216.113358,818.121582 215.657715,819.018799   C214.878448,819.694458 214.417023,820.327209 213.657043,821.122803   C209.437042,824.985779 205.374329,828.549866 201.640579,832.430481   C198.849686,835.331360 196.483246,838.640625 193.593719,841.965820   C189.392471,843.916992 191.383377,847.325562 191.025558,850.070496   C184.514008,843.756958 186.927795,841.370789 191.640106,834.122009   C192.332642,833.056702 193.366119,832.212952 194.850601,831.057251   C195.956161,829.879272 196.452972,828.910828 196.949768,827.942322   C198.675888,826.324524 200.401993,824.706787 202.777588,822.986084   C203.955551,822.266663 204.484009,821.650024 205.012482,821.033386  z\",id:\"svg_202\"})),_path201||(_path201=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M247.251465,808.840332   C248.261353,809.986389 249.271210,811.132446 249.986603,812.636353   C249.457214,813.009583 249.222290,813.025085 248.626892,812.984192   C242.238464,811.810242 240.395691,812.937988 239.683105,818.009766   C238.230667,818.168945 237.129608,818.325256 236.023163,818.391357   C234.804153,818.464294 233.580200,818.454468 232.358398,818.480652   C232.963455,819.624817 233.515167,820.802246 234.196869,821.898743   C234.521912,822.421631 235.094040,822.790955 236.636276,824.261597   C233.940231,823.752258 232.704956,823.462158 231.453186,823.297180   C229.973953,823.102234 228.480453,823.015381 227.039581,822.525757   C229.359528,817.537537 224.603302,815.972717 222.728378,812.980835   C221.901855,812.931946 221.429901,812.898193 220.957947,812.864380   C221.246979,806.254578 222.493469,805.639465 229.783401,808.769531   C229.268829,809.905945 228.756485,811.037354 227.965652,812.783875   C230.619095,813.419983 232.947556,813.978149 235.276016,814.536377   C235.665009,814.220581 236.054016,813.904846 236.443008,813.589050   C235.060287,811.472717 233.677582,809.356384 231.805405,806.490845   C234.457718,806.309570 236.781372,806.150757 239.573639,806.265137   C240.412186,806.890503 240.782104,807.242676 241.152023,807.594849   C241.099854,807.050903 241.047684,806.507019 240.995529,805.963135   C241.459900,805.651184 241.924255,805.339294 242.699951,805.374512   C244.424667,806.761169 245.838058,807.800781 247.251465,808.840332  z\",id:\"svg_203\"})),_path202||(_path202=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M309.335968,770.001709   C307.986145,769.958618 306.794708,770.239014 305.986694,769.805176   C304.540588,769.028809 302.817139,768.081604 302.130524,766.735901   C301.048859,764.615845 300.729279,762.106873 300.042908,759.381287   C299.998779,759.000000 300.010834,758.510803 300.015686,758.266479   C305.568359,758.664368 309.757050,761.251465 312.807983,766.072449   C314.319550,768.460999 313.021515,768.825134 311.194885,769.735352   C310.550018,769.999512 310.108551,770.001465 309.335968,770.001709  z\",id:\"svg_204\"})),_path203||(_path203=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M195.583206,819.995239   C192.238556,823.313965 188.480087,826.629150 184.364868,829.981934   C184.459183,825.521606 190.479034,820.113098 195.583206,819.995239  z\",id:\"svg_205\"})),_path204||(_path204=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M220.640244,812.930603   C221.429901,812.898193 221.901855,812.931946 222.667511,813.349426   C222.257538,817.376831 220.085846,819.288635 216.249664,819.252197   C216.158340,819.160095 215.975525,818.975891 215.975525,818.975891   C216.113358,818.121582 216.251175,817.267212 216.992722,816.150391   C218.073135,814.946716 218.549820,814.005493 219.026505,813.064331   C219.458511,813.041809 219.890533,813.019287 220.640244,812.930603  z\",id:\"svg_206\"})),_path205||(_path205=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6F4B30\",opacity:1,stroke:\"none\",d:\" M247.226028,808.542969   C245.838058,807.800781 244.424667,806.761169 242.992706,805.351013   C243.178040,804.716064 243.381943,804.451599 243.803436,804.055298   C244.973511,804.549927 245.925980,805.176331 246.995483,806.140808   C247.141876,807.067749 247.171234,807.656616 247.226028,808.542969  z\",id:\"svg_207\"})),_path206||(_path206=/*#__PURE__*/React.createElement(\"path\",{fill:\"#574432\",opacity:1,stroke:\"none\",d:\" M233.332840,787.826355   C233.307465,787.206787 233.492691,786.506714 233.946686,786.179321   C234.150711,786.032104 234.891830,786.629639 235.389282,786.889282   C234.810516,787.225403 234.231750,787.561584 233.332840,787.826355  z\",id:\"svg_208\"})),_path207||(_path207=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M218.836639,812.815674   C218.549820,814.005493 218.073135,814.946716 217.246796,815.944458   C216.865356,815.643372 216.833572,815.285767 216.828247,814.665649   C217.452042,813.791077 218.049408,813.179016 218.836639,812.815674  z\",id:\"svg_209\"})),_path208||(_path208=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M190.986526,815.297119   C192.031097,815.303467 192.832336,815.494019 193.633560,815.684509   C193.462433,816.093628 193.291306,816.502747 193.120193,816.911804   C192.327850,816.434937 191.535507,815.958130 190.986526,815.297119  z\",id:\"svg_210\"})),_path209||(_path209=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M213.796295,815.302002   C213.306229,815.957153 212.455887,816.476624 211.266174,816.950073   C211.172226,816.427551 211.417664,815.951111 211.784668,815.230835   C212.416153,815.046814 212.926086,815.106567 213.796295,815.302002  z\",id:\"svg_211\"})),_path210||(_path210=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6F4B30\",opacity:1,stroke:\"none\",d:\" M240.742096,805.970581   C241.047684,806.507019 241.099854,807.050903 241.152023,807.594849   C240.782104,807.242676 240.412186,806.890503 240.012024,806.264038   C240.150757,805.985779 240.319733,805.981934 240.742096,805.970581  z\",id:\"svg_212\"})),_path211||(_path211=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M297.910706,440.933350   C297.258179,440.876770 296.193756,441.051025 296.013733,440.729706   C292.071930,433.694092 289.405334,439.952484 285.954132,441.806854   C284.899017,439.093750 283.145660,438.058563 280.590637,440.931824   C281.082642,433.931335 275.177612,433.050842 271.357422,429.627380   C270.039978,427.888000 269.089264,426.564484 268.117249,425.211334   C270.931091,424.331665 271.034546,424.241150 274.479248,428.178680   C276.924469,430.973755 277.789398,430.263885 278.340118,426.995026   C279.294708,426.660126 279.905548,426.326538 280.516388,425.992981   C280.212616,425.710144 279.908813,425.427277 279.605042,425.144440   C279.070984,425.764038 278.536926,426.383667 277.631287,427.004547   C276.663300,426.192871 275.588989,425.393463 275.565552,424.564301   C275.508789,422.556793 275.941833,420.535431 276.177460,418.519623   C275.846680,418.462128 275.515900,418.404602 275.185089,418.347076   C276.175873,416.995697 277.166687,415.644348 278.493042,413.835266   C279.352539,414.919861 280.178467,415.962128 280.633301,417.008240   C279.595886,417.657288 278.929565,418.302490 278.263275,418.947693   C278.765869,419.222748 279.268494,419.497772 279.771118,419.772797   C280.179291,418.847076 280.587463,417.921326 281.340942,416.938232   C282.126190,415.922180 282.566132,414.963501 283.422485,413.999939   C285.227661,413.995026 286.616394,413.994965 288.002411,414.348785   C288.623810,415.387909 289.247894,416.073181 289.871979,416.758423   C290.154297,416.425110 290.436584,416.091827 290.718903,415.758514   C289.810944,415.173523 288.902985,414.588531 287.861053,413.718201   C287.272095,412.545746 286.817108,411.658630 286.123322,410.305939   C288.622162,411.368256 290.455994,412.147858 292.652191,413.081482   C292.509399,411.382507 292.432312,410.465363 292.402496,410.110565   C294.510895,409.819977 296.421661,409.556641 299.288727,409.161469   C301.431396,410.636993 304.641937,412.847870 307.914093,415.409912   C309.171509,417.636627 310.367371,419.512207 311.003326,420.509583   C309.877258,423.560883 308.976379,426.002014 308.023865,428.602966   C307.840240,428.984497 307.647736,429.070251 307.018860,429.020935   C303.732208,432.992310 300.821442,436.962830 297.910706,440.933350  M295.636047,416.269684   C295.403564,415.759125 295.187653,415.238953 294.908142,414.755615   C294.884918,414.715424 294.432068,414.923706 294.178802,415.016541   C294.519135,415.556183 294.859467,416.095856 295.636047,416.269684  M286.933319,418.362091   C286.676483,418.036224 286.419647,417.710358 286.162811,417.384460   C286.031189,417.712982 285.706360,418.234436 285.804901,418.333130   C286.077118,418.605774 286.526245,418.701813 286.933319,418.362091  z\",id:\"svg_213\"})),_path212||(_path212=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M277.996338,426.996368   C277.789398,430.263885 276.924469,430.973755 274.479248,428.178680   C271.034546,424.241150 270.931091,424.331665 268.117249,425.211334   C269.089264,426.564484 270.039978,427.888000 270.999634,429.581024   C269.740417,431.904297 268.472290,433.858124 267.204163,435.811920   C266.759796,435.970673 266.315399,436.129425 265.871002,436.288177   C267.337830,427.899628 261.424835,424.372192 256.339996,420.035828   C255.991806,420.001801 256.000427,420.000244 255.863632,419.679047   C254.155136,415.568939 252.583420,411.780029 251.011719,407.991119   C251.011719,407.991119 250.979599,407.511444 251.332596,407.292694   C252.856155,407.361786 254.026718,407.649628 255.548706,407.957001   C257.186493,409.059692 258.400085,410.247681 259.775360,411.202911   C262.182770,412.875183 264.689423,414.404602 267.364685,415.995117   C267.574829,415.996338 267.995148,415.997559 268.002563,416.363251   C269.339600,418.153015 270.669189,419.577118 272.045929,421.338226   C272.802765,421.976318 273.512451,422.277405 274.222137,422.578491   C274.351013,422.205627 274.479919,421.832764 274.608826,421.459869   C273.739624,421.306183 272.870422,421.152466 272.012573,420.645630   C272.021790,418.195404 272.019653,416.098297 272.330719,413.977783   C273.412903,413.636200 274.181915,413.318115 275.157532,413.196228   C277.246002,412.597839 279.127838,411.803223 281.004822,411.004303   C281.000000,411.000000 280.991272,410.990387 280.999329,411.346130   C281.673767,412.469818 282.340149,413.237701 283.003357,414.002930   C283.000183,414.000214 283.006042,414.004791 283.006042,414.004791   C282.566132,414.963501 282.126190,415.922180 281.343140,416.940430   C281.000000,417.000000 281.004425,417.004395 281.004425,417.004395   C280.178467,415.962128 279.352539,414.919861 278.493042,413.835266   C277.166687,415.644348 276.175873,416.995697 275.185089,418.347076   C275.515900,418.404602 275.846680,418.462128 276.177460,418.519623   C275.941833,420.535431 275.508789,422.556793 275.565552,424.564301   C275.588989,425.393463 276.663300,426.192871 277.629822,427.002899   C278.000000,427.000000 277.996338,426.996368 277.996338,426.996368  M256.633667,415.558380   C256.940674,415.170563 257.247681,414.782745 257.554688,414.394897   C257.179413,414.194611 256.804138,413.994354 256.428864,413.794067   C256.368958,414.250183 256.309082,414.706329 256.633667,415.558380  M256.845245,410.041809   C256.588409,410.194489 256.201935,410.296631 256.116425,410.516083   C256.049927,410.686737 256.358490,411.003540 256.500366,411.255402   C256.642303,411.003265 256.784241,410.751160 256.845245,410.041809  z\",id:\"svg_214\"})),_path213||(_path213=/*#__PURE__*/React.createElement(\"path\",{fill:\"#431E11\",opacity:1,stroke:\"none\",d:\" M297.918823,441.318726   C300.821442,436.962830 303.732208,432.992310 306.999939,429.421448   C305.801086,433.781464 304.245300,437.741852 302.329346,441.773071   C300.345520,446.209106 297.874908,450.461060 297.272949,454.962891   C295.987396,464.576752 295.669830,474.320068 294.560120,483.918640   C293.773163,482.019745 293.226807,480.229950 293.021820,478.401917   C292.559265,474.277222 292.265503,470.133606 291.903076,465.997711   C291.903046,465.997711 291.446075,466.025665 291.252563,465.686340   C291.048767,463.902985 291.038483,462.458954 291.028198,461.014923   C293.327789,454.577972 295.627380,448.141022 297.918823,441.318726  z\",id:\"svg_215\"})),_path214||(_path214=/*#__PURE__*/React.createElement(\"path\",{fill:\"#160E0B\",opacity:1,stroke:\"none\",d:\" M291.912262,466.313660   C292.265503,470.133606 292.559265,474.277222 293.021820,478.401917   C293.226807,480.229950 293.773163,482.019745 294.613892,484.252869   C295.072571,485.130035 295.081940,485.581177 294.771942,486.166016   C294.328278,487.192932 294.204010,488.086151 293.801575,489.168121   C292.670227,490.244965 291.817078,491.133087 290.963928,492.021240   C290.642975,491.906830 290.383820,491.710785 290.066254,491.217163   C290.207001,485.833160 290.470276,480.665161 290.727173,475.496796   C290.789001,474.252655 290.829559,473.007416 291.199371,471.189331   C291.644409,469.708405 291.769989,468.800781 291.895569,467.893188   C291.904175,467.471985 291.912811,467.050781 291.912262,466.313660  z\",id:\"svg_216\"})),_path215||(_path215=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M268.013336,458.859894   C266.130280,456.016357 264.247253,453.172821 263.048798,451.363098   C263.978821,447.011505 264.695038,443.660309 265.411255,440.309113   C265.878906,440.403839 266.346558,440.498566 266.814209,440.593292   C266.620453,443.590790 266.026672,446.636230 266.378143,449.568390   C266.600464,451.422607 268.238281,453.104858 269.231384,454.869812   C269.813660,455.904602 270.376587,456.950226 270.578125,458.411530   C269.476471,458.841339 268.744904,458.850616 268.013336,458.859894  z\",id:\"svg_217\"})),_path216||(_path216=/*#__PURE__*/React.createElement(\"path\",{fill:\"#503428\",opacity:1,stroke:\"none\",d:\" M290.657074,460.943298   C291.038483,462.458954 291.048767,463.902985 291.023804,465.678253   C288.614014,465.684052 286.239410,465.358643 283.432251,465.018738   C282.999664,465.004211 282.947113,464.957611 282.947113,464.957611   C286.522308,461.686432 288.622620,457.867340 286.698547,452.553192   C287.292084,452.538513 287.885590,452.523834 288.479095,452.509155   C288.813934,453.682617 289.217255,454.841766 289.466858,456.033081   C289.802032,457.632904 290.018494,459.257629 290.657074,460.943298  z\",id:\"svg_218\"})),_path217||(_path217=/*#__PURE__*/React.createElement(\"path\",{fill:\"#503428\",opacity:1,stroke:\"none\",d:\" M274.996338,466.996338   C274.469666,464.652435 274.521729,461.611633 270.605194,463.349640   C270.665924,462.749847 270.726685,462.150024 270.893707,461.275116   C271.000000,461.000000 270.996338,461.003662 270.996338,461.003662   C272.220856,460.861298 273.445343,460.718933 274.813690,460.559814   C274.676514,458.934418 274.572235,457.698822 274.908752,456.497681   C276.222076,456.348206 277.094574,456.164276 277.967102,455.980316   C278.166779,455.986664 278.366486,455.993011 278.826202,456.385620   C278.719543,458.186005 278.352875,459.600159 277.993042,461.007202   C277.999908,461.000092 278.013306,460.985870 277.677124,461.037964   C277.546814,462.045502 277.752686,463.000977 277.968933,463.967377   C277.979340,463.978302 278.000092,464.000092 278.000092,464.000092   C277.227936,464.979095 276.455780,465.958099 275.341797,466.968567   C275.000000,467.000000 274.996338,466.996338 274.996338,466.996338  z\",id:\"svg_219\"})),_path218||(_path218=/*#__PURE__*/React.createElement(\"path\",{fill:\"#503428\",opacity:1,stroke:\"none\",d:\" M283.955994,455.008545   C286.291901,460.376251 281.757202,461.746796 278.364380,463.996826   C278.000092,464.000092 277.979340,463.978302 277.973450,463.597290   C277.982819,462.472809 277.998077,461.729340 278.013306,460.985870   C278.013306,460.985870 277.999908,461.000092 278.325623,460.948242   C280.419586,458.933777 282.187805,456.971161 283.955994,455.008545  z\",id:\"svg_220\"})),_path219||(_path219=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M255.003357,458.003235   C255.313980,456.898132 255.624588,455.793030 255.968933,454.342712   C256.002655,453.997467 256.000000,454.000000 255.998703,454.001404   C257.464996,453.173004 258.932556,452.343262 260.400146,451.513489   C258.921448,453.809631 260.988159,458.691345 255.328781,458.021637   C255.000000,458.000000 255.003357,458.003235 255.003357,458.003235  z\",id:\"svg_221\"})),_path220||(_path220=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M283.602386,455.043884   C282.187805,456.971161 280.419586,458.933777 278.318787,460.955353   C278.352875,459.600159 278.719543,458.186005 279.125275,456.404907   C280.525818,455.718353 281.887299,455.398804 283.602386,455.043884  z\",id:\"svg_222\"})),_path221||(_path221=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M277.784058,455.707458   C277.094574,456.164276 276.222076,456.348206 275.157623,456.281921   C273.997528,454.907806 273.029358,453.783905 272.030579,452.330017   C271.999969,452.000000 272.007629,451.991455 272.007629,451.991455   C273.872101,453.139160 275.736542,454.286896 277.784058,455.707458  z\",id:\"svg_223\"})),_path222||(_path222=/*#__PURE__*/React.createElement(\"path\",{fill:\"#503428\",opacity:1,stroke:\"none\",d:\" M275.001831,467.001831   C274.440521,467.930847 273.877350,468.858002 273.314209,469.785187   C272.888947,469.204956 272.463684,468.624725 272.038422,468.044556   C272.804932,467.678894 273.571411,467.313232 274.667114,466.971954   C274.996338,466.996338 275.000000,467.000000 275.001831,467.001831  z\",id:\"svg_224\"})),_path223||(_path223=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M261.994720,467.005829   C262.975128,467.769440 263.955536,468.533051 264.935944,469.296661   C264.497833,469.684601 264.059692,470.072510 263.621552,470.460449   C263.098877,469.521973 262.576202,468.583527 262.026733,467.322510   C262.000000,467.000000 261.994720,467.005829 261.994720,467.005829  z\",id:\"svg_225\"})),_path224||(_path224=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M264.565125,475.112305   C263.749481,475.250488 262.981018,475.084076 262.212585,474.917694   C262.348694,474.503448 262.484772,474.089233 262.620850,473.674988   C263.284668,474.052551 263.948517,474.430145 264.565125,475.112305  z\",id:\"svg_226\"})),_path225||(_path225=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M262.697388,437.468567   C263.455017,437.462799 263.993073,437.669434 264.531128,437.876068   C264.396454,438.151825 264.261780,438.427582 264.127075,438.703339   C263.577332,438.362518 263.027557,438.021729 262.697388,437.468567  z\",id:\"svg_227\"})),_path226||(_path226=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M278.472229,453.331543   C278.467133,452.568298 278.673553,452.027527 278.879944,451.486725   C279.155182,451.623474 279.430450,451.760193 279.705688,451.896912   C279.365021,452.449280 279.024384,453.001648 278.472229,453.331543  z\",id:\"svg_228\"})),_path227||(_path227=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M271.995605,452.004272   C271.117279,451.382141 270.243256,450.755737 269.369263,450.129364   C269.669220,449.820740 269.969147,449.512115 270.269104,449.203491   C270.825623,449.924164 271.382111,450.644836 271.973145,451.678467   C272.007629,451.991455 271.999969,452.000000 271.995605,452.004272  z\",id:\"svg_229\"})),_path228||(_path228=/*#__PURE__*/React.createElement(\"path\",{fill:\"#431E11\",opacity:1,stroke:\"none\",d:\" M291.588074,467.976685   C291.769989,468.800781 291.644409,469.708405 291.227966,470.812378   C291.051575,470.025909 291.166077,469.043030 291.588074,467.976685  z\",id:\"svg_230\"})),_path229||(_path229=/*#__PURE__*/React.createElement(\"path\",{fill:\"#503428\",opacity:1,stroke:\"none\",d:\" M268.123718,459.176208   C268.744904,458.850616 269.476471,458.841339 270.571014,458.787964   C270.958282,459.246857 270.982574,459.749908 271.001587,460.628296   C270.996338,461.003662 271.000000,461.000000 271.001831,460.998169   C270.080475,460.495087 269.157288,459.993805 268.123718,459.176208  z\",id:\"svg_231\"})),_path230||(_path230=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M254.998383,457.998169   C254.770752,458.518829 254.562393,459.051117 254.287048,459.546204   C254.263535,459.588470 253.794052,459.382721 253.531738,459.292206   C253.829910,458.884491 254.128082,458.476776 254.714813,458.036163   C255.003357,458.003235 255.000000,458.000000 254.998383,457.998169  z\",id:\"svg_232\"})),_path231||(_path231=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M262.002869,466.997314   C261.488312,466.762939 260.958984,466.551697 260.471497,466.268402   C260.421539,466.239380 260.622467,465.778564 260.706970,465.518127   C261.106964,465.823578 261.506989,466.129028 261.950867,466.720154   C261.994720,467.005829 262.000000,467.000000 262.002869,466.997314  z\",id:\"svg_233\"})),_path232||(_path232=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M253.765045,434.370850   C253.884872,433.890839 254.109100,433.642059 254.333328,433.393311   C254.488983,433.911041 254.644623,434.428772 254.800278,434.946503   C254.490005,434.831696 254.179718,434.716888 253.765045,434.370850  z\",id:\"svg_234\"})),_path233||(_path233=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M256.738586,461.359680   C256.991638,461.374969 257.129730,461.510559 257.267822,461.646149   C257.053101,461.590759 256.838379,461.535370 256.738586,461.359680  z\",id:\"svg_235\"})),_path234||(_path234=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M266.541046,477.567139   C266.470703,477.613068 266.449554,477.426147 266.449554,477.426147   C266.449554,477.426147 266.611389,477.521179 266.541046,477.567139  z\",id:\"svg_236\"})),_path235||(_path235=/*#__PURE__*/React.createElement(\"path\",{fill:\"#503428\",opacity:1,stroke:\"none\",d:\" M283.022888,465.030518   C282.916199,465.070953 282.786255,465.085083 282.801697,465.028381   C282.947113,464.957611 282.999664,465.004211 283.022888,465.030518  z\",id:\"svg_237\"})),_path236||(_path236=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M256.536621,432.542480   C256.481995,432.574493 256.591278,432.510498 256.536621,432.542480  z\",id:\"svg_238\"})),_path237||(_path237=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M703.030212,407.055450   C702.177979,408.324768 701.070007,409.500427 700.559326,410.894806   C700.190247,411.902802 700.614624,413.201294 700.572388,414.789764   C698.308105,416.804596 696.156494,418.399872 694.001953,419.621277   C694.000916,418.499512 694.002869,417.751587 694.347778,416.996826   C695.303528,416.664398 695.916260,416.338806 696.529053,416.013184   C696.231567,415.731934 695.934082,415.450684 695.636536,415.169434   C695.089844,415.778412 694.543091,416.387390 693.604492,416.997986   C692.217407,417.546143 691.222351,418.092621 690.227234,418.639099   C691.483215,419.094360 692.739136,419.549622 693.997498,420.352417   C694.773071,421.177032 695.696960,422.189606 696.289124,422.023010   C697.646729,421.641022 698.842468,420.683716 700.104004,419.960022   C701.214539,421.212646 702.325073,422.465240 702.788330,423.881744   C695.125366,424.741180 698.359802,431.639801 695.727844,435.237183   C692.954346,439.027893 693.013245,444.890869 691.834656,449.848450   C691.439636,449.915100 691.044678,449.981781 690.063171,450.240753   C685.001404,454.887634 680.526062,459.342163 675.958923,463.888092   C674.708313,463.008606 673.655396,462.268127 672.604431,461.529022   C669.077820,466.417877 665.170410,465.849792 655.231140,469.219635   C648.206177,471.601379 641.894531,467.274445 635.174866,468.571045   C635.054199,467.853882 635.002747,467.440735 635.183472,466.870819   C635.223206,466.134399 635.030640,465.554688 634.868530,464.585541   C632.981323,459.124786 631.063782,454.053467 629.356201,448.738678   C627.643066,443.548706 625.720093,438.602234 623.594299,433.134094   C623.426514,433.003876 622.436035,432.353516 621.583862,431.555481   C613.646179,424.121887 605.732300,416.662872 597.474670,409.107208   C596.668030,408.009644 596.198120,407.016144 595.828979,405.651611   C595.962036,404.768982 595.994446,404.257416 596.403076,403.853333   C597.536316,404.149139 598.293274,404.337372 599.371582,404.608429   C600.792847,404.796021 601.892761,404.900818 603.030151,405.278992   C604.372070,406.039764 605.676575,406.527161 607.091553,407.232422   C607.401062,407.718842 607.654053,407.919403 607.977539,408.378784   C608.001526,409.141418 608.008850,409.577332 608.105225,410.187683   C608.492554,410.245789 608.790710,410.129364 609.303955,410.011902   C609.518921,410.010834 609.948669,410.024963 610.188232,409.923279   C610.622314,409.541565 610.816833,409.261505 611.010132,408.744415   C611.008972,408.507385 611.024536,408.033539 611.033813,407.777161   C611.052002,407.349945 611.060913,407.179108 611.272217,406.914062   C611.731140,406.646729 611.909973,406.413940 612.369141,406.092163   C614.165161,405.381531 615.603210,404.700287 617.271362,404.001709   C617.501465,403.984436 617.961304,403.944794 617.985352,403.975769   C618.009338,404.006714 618.061951,404.064850 618.006836,404.411804   C617.290100,406.230408 616.628418,407.702057 615.580383,410.033020   C618.440796,408.594391 620.199280,407.709961 621.957764,406.825562   C622.132446,407.087830 622.307129,407.350128 622.481812,407.612396   C621.600342,408.944489 620.718872,410.276611 619.837830,411.608521   C620.809998,412.359192 621.781799,413.109985 622.807922,413.902802   C621.377869,415.067902 620.160278,415.881439 619.162048,416.908264   C616.632446,419.510223 619.306702,421.707153 620.770630,421.514343   C623.176147,421.197449 626.776306,421.015167 626.988464,417.011780   C626.998718,417.001282 627.018616,416.980469 627.385620,416.987671   C630.300110,414.671265 632.847534,412.347687 635.551636,409.881226   C635.411316,408.816711 635.224792,407.402161 634.899292,404.933533   C637.513916,407.321594 639.360229,409.007904 641.457642,410.923615   C642.458435,410.323395 643.633362,409.618774 644.750366,408.948853   C646.900635,410.607361 648.783508,412.059601 651.545898,414.190186   C653.310242,412.524933 655.056702,410.876526 657.187622,408.865295   C657.280640,408.905182 658.574768,409.459808 660.306519,410.202026   C660.306519,408.462616 660.306519,407.175201 660.306519,405.895966   C661.542542,406.749542 662.561218,407.452972 663.618042,408.182770   C664.280334,406.879333 664.777039,405.901733 665.336060,404.801483   C670.471985,409.507812 671.211609,409.206757 674.673462,400.981842   C673.159302,401.819275 672.090759,402.410248 670.634277,402.999329   C669.469177,403.004303 668.691833,403.011230 667.708984,402.895691   C667.254639,402.556976 667.086853,402.289917 666.996094,401.602661   C666.008362,400.489380 665.024475,399.745392 663.776245,398.999390   C663.335449,398.998657 663.159180,398.999939 662.974854,398.771271   C662.966858,398.541321 662.959473,398.081177 663.086792,397.781830   C663.468750,396.677460 663.723389,395.872437 664.336182,395.017578   C670.219727,394.508636 675.069275,393.008057 676.991699,386.998352   C676.994934,387.005676 676.978760,387.005798 677.363403,386.998230   C680.277832,388.309326 682.807678,389.627991 684.940430,390.739655   C685.211853,388.674133 685.583008,385.850281 686.222656,383.020599   C686.670349,383.011780 686.849426,383.008850 687.207275,383.265625   C688.430725,384.165955 689.475281,384.806519 690.031555,385.147644   C690.758728,383.242310 691.378174,381.619415 692.277100,380.195892   C694.497070,383.087830 696.195740,381.681152 697.759460,380.006439   C698.623047,379.081543 699.278503,377.962341 700.282959,376.959259   C700.707153,377.014832 700.876221,377.041870 701.056641,377.425110   C701.451416,382.242035 701.603088,386.737488 702.266357,391.156128   C703.625244,400.209808 703.481323,402.437500 700.610413,403.941315   C701.429016,404.994812 702.229614,406.025146 703.030212,407.055450  M680.576599,416.934601   C680.903137,416.627350 681.229675,416.320099 681.556152,416.012817   C681.345215,415.828369 681.134277,415.643921 680.923401,415.459473   C680.614807,415.972168 680.306152,416.484863 679.392761,417.073395   C678.927002,417.683258 678.461243,418.293152 677.995483,418.903015   C678.214905,419.051422 678.434265,419.199829 678.653625,419.348236   C679.103210,418.566284 679.552795,417.784363 680.576599,416.934601  M690.684082,426.924988   C691.326538,426.319672 691.969055,425.714355 692.611511,425.109039   C692.148438,424.804993 691.685303,424.500946 691.222229,424.196899   C690.814819,425.131256 690.407410,426.065643 689.331238,427.093079   C689.027405,427.788116 688.723511,428.483124 688.419678,429.178131   C688.785583,429.307922 689.151489,429.437683 689.517395,429.567474   C689.678284,428.711639 689.839111,427.855804 690.684082,426.924988  M682.235291,398.266541   C678.350220,395.671143 678.350220,395.671143 676.542419,399.346558   C678.165222,399.750641 679.783875,400.270569 681.441162,400.470734   C681.784912,400.512238 682.271973,399.367340 682.235291,398.266541  M686.539490,397.334595   C686.047729,396.970673 685.555908,396.606750 685.064148,396.242828   C684.863037,396.598022 684.661926,396.953217 684.460754,397.308411   C685.004822,397.459015 685.548889,397.609619 686.539490,397.334595  M688.248596,433.789856   C688.387756,434.291229 688.526978,434.792633 688.666199,435.294006   C688.991882,435.009247 689.317566,434.724487 689.643250,434.439728   C689.313660,434.091919 688.984131,433.744080 688.248596,433.789856  M685.629333,430.795837   C685.271057,430.747040 684.912720,430.698242 684.554382,430.649445   C684.553040,430.906006 684.551697,431.162598 684.550354,431.419128   C684.909668,431.380127 685.268982,431.341095 685.629333,430.795837  M692.819153,384.252106   C692.875671,384.423187 692.932129,384.594299 692.988647,384.765381   C693.045288,384.592529 693.101868,384.419678 692.819153,384.252106  M683.410706,417.477814   C683.410706,417.477814 683.527100,417.407623 683.410706,417.477814  z\",id:\"svg_239\"})),_path238||(_path238=/*#__PURE__*/React.createElement(\"path\",{fill:\"#503428\",opacity:1,stroke:\"none\",d:\" M635.244080,468.875000   C641.894531,467.274445 648.206177,471.601379 655.231140,469.219635   C665.170410,465.849792 669.077820,466.417877 672.604431,461.529022   C673.655396,462.268127 674.708313,463.008606 675.958923,463.888092   C680.526062,459.342163 685.001404,454.887634 689.765015,450.277893   C689.951538,454.110168 689.756226,457.991730 685.095276,459.702362   C684.292847,459.996857 683.815369,461.176727 683.187744,461.947571   C683.187744,461.947601 681.341370,469.081940 681.341370,469.081940   C680.228821,471.942139 679.215515,474.845795 677.984314,477.653961   C674.719849,485.100006 671.451111,492.547668 667.945740,499.880798   C667.403564,501.015106 665.510437,501.440369 664.416992,502.394104   C663.508789,503.186249 662.000854,504.623383 662.226318,505.175476   C664.346313,510.367828 659.712524,512.469666 657.589722,515.597412   C655.859985,518.145996 653.558167,520.306274 650.967590,523.068665   C650.283752,524.670349 650.142334,525.842163 650.000977,527.013977   C650.000977,527.013977 649.997559,526.997559 649.627686,526.986084   C647.662659,526.421814 646.074768,525.432678 644.470886,525.405884   C640.989380,525.347839 637.499756,525.781494 634.006958,526.007324   C634.000488,526.000671 633.987793,525.987793 633.930420,525.644470   C633.008728,523.583313 632.144531,521.865479 631.280273,520.147583   C631.625488,519.837219 631.970642,519.526855 632.315857,519.216431   C631.536499,519.139343 630.757141,519.062317 630.000977,518.645264   C630.407349,515.208618 631.060242,512.340210 632.212402,509.278137   C634.841370,502.291748 635.896484,494.677948 637.219604,487.252869   C637.750854,484.271454 637.307068,481.116302 637.307068,477.340302   C633.557007,476.286072 636.129883,471.963806 635.244080,468.875000  M638.474792,497.581146   C638.474792,497.581146 638.408508,497.472382 638.474792,497.581146  z\",id:\"svg_240\"})),_path239||(_path239=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M596.002441,572.031311   C595.924316,573.486023 595.846191,574.940735 595.730774,577.089905   C593.752563,576.084595 592.262451,575.327332 590.586609,574.475708   C589.531433,580.109558 586.223328,583.617920 580.100586,584.798340   C580.434204,583.563538 581.373474,582.517456 582.210815,581.584961   C580.799133,580.281067 579.430359,579.016724 577.986267,577.682861   C576.652649,578.846252 575.319214,580.009521 574.200439,580.985535   C575.237671,582.875793 576.099121,584.445862 576.960632,586.015930   C575.009521,587.077515 573.114624,588.273193 571.076294,589.126404   C570.381592,589.417175 569.326294,588.846558 568.836914,589.388184   C567.137817,589.891663 565.447998,590.429382 563.737244,590.889343   C561.854919,591.395569 559.953430,591.830200 557.613159,592.406006   C557.458801,591.736877 557.227234,590.732666 557.113159,589.073486   C557.188904,587.733032 557.147156,587.047668 557.105469,586.362305   C556.406921,587.253296 555.708435,588.144348 555.009949,589.035339   C554.760254,594.510620 550.060242,593.726929 546.309937,594.590149   C544.577332,593.849487 543.289917,593.423523 542.000122,592.628540   C541.542419,591.224609 541.087036,590.189697 540.631714,589.154785   C540.247253,589.233643 539.862732,589.312439 539.478271,589.391296   C539.327332,590.587158 539.176392,591.783020 538.756470,593.101929   C537.991638,593.815735 537.495789,594.406433 536.696533,594.885498   C534.661438,594.254333 531.453979,596.055237 531.989807,591.986694   C531.990967,592.000793 531.970398,591.992126 532.356323,591.983765   C533.491089,590.658203 534.239990,589.340942 535.312012,587.875977   C540.618103,584.078735 546.036133,583.027588 552.313721,584.960083   C554.118774,584.013184 555.569702,583.100647 556.845154,582.298523   C558.400330,582.892029 558.965088,587.798889 561.294556,582.969055   C561.903442,582.533264 562.220276,582.130859 562.537109,581.728455   C562.276978,581.635315 561.819153,581.417786 561.787292,581.468384   C561.482910,581.952148 561.250549,582.481384 560.672424,582.963318   C559.896606,582.274292 559.445862,581.619446 559.042358,580.609375   C560.078613,579.852905 561.067566,579.451782 562.317505,579.321411   C564.383240,579.730530 566.187927,579.868958 567.993530,580.340454   C568.165222,581.282043 568.200806,582.293396 568.537903,582.406616   C569.071411,582.585632 569.806824,582.163208 571.236694,581.793823   C569.664429,580.918640 568.834900,580.456848 567.975342,579.661621   C567.252930,578.490723 566.560547,577.653259 565.959351,576.454590   C570.233582,574.150269 574.356384,572.059692 578.621643,570.318176   C581.259888,569.240906 584.114868,568.694458 587.022644,568.181763   C589.542847,570.630066 589.709106,568.691162 589.990479,566.975037   C589.999756,567.000305 589.950073,566.979187 590.331909,566.982483   C591.476685,566.989685 592.239563,566.993652 593.004333,567.344727   C593.342896,568.311523 593.679565,568.931213 594.016235,569.550903   C594.300598,569.247498 594.584900,568.944092 594.869263,568.640686   C594.245361,568.094604 593.621460,567.548523 592.952881,566.670898   C592.236145,565.849976 591.564148,565.360474 590.975525,564.545288   C593.996643,561.777283 596.934387,559.334961 600.040955,557.205444   C601.955017,558.321289 603.700195,559.124329 605.445435,559.927368   C605.776794,559.557068 606.108154,559.186768 606.439514,558.816406   C606.621460,559.878845 606.803406,560.941223 606.643555,562.057129   C605.869812,563.068420 605.437927,564.026123 604.689575,565.034851   C604.377930,565.711731 604.213806,566.402344 604.423462,566.949707   C604.830627,568.012268 605.447876,568.994324 605.978027,570.009766   C603.274353,571.897888 600.570740,573.786072 597.185425,576.150330   C597.546875,574.469543 597.735962,573.590332 598.140930,572.194824   C597.998169,571.227173 597.639526,570.775940 597.280884,570.324646   C596.854736,570.893555 596.428589,571.462463 596.002441,572.031311  M572.135132,577.274109   C571.318359,577.520447 570.501587,577.766785 569.684753,578.013062   C569.892761,578.411133 570.100708,578.809143 570.308655,579.207214   C571.057922,578.715149 571.807129,578.223083 572.135132,577.274109  M566.473267,585.247009   C566.602905,584.850586 566.753845,584.458984 566.844177,584.053772   C566.862122,583.973145 566.647400,583.840698 566.539978,583.732178   C566.411072,584.128296 566.282227,584.524414 566.473267,585.247009  z\",id:\"svg_241\"})),_path240||(_path240=/*#__PURE__*/React.createElement(\"path\",{fill:\"#604234\",opacity:1,stroke:\"none\",d:\" M629.977783,518.985229   C630.757141,519.062317 631.536499,519.139343 632.315857,519.216431   C631.970642,519.526855 631.625488,519.837219 631.280273,520.147583   C632.144531,521.865479 633.008728,523.583313 633.647217,525.686829   C633.098206,526.381348 632.775024,526.690247 632.451843,526.999084   C632.662109,527.179871 632.872375,527.360596 633.082642,527.541321   C633.392883,527.032227 633.703125,526.523132 634.013428,526.014038   C637.499756,525.781494 640.989380,525.347839 644.470886,525.405884   C646.074768,525.432678 647.662659,526.421814 649.635864,526.987976   C648.363525,529.300110 647.132629,532.903687 644.966980,533.600037   C641.481506,534.720764 641.080322,537.405334 639.018433,539.684143   C636.566711,539.029053 634.727966,538.359253 632.889160,537.689392   C632.722473,538.076233 632.555725,538.463135 632.389038,538.850037   C631.202271,537.968262 630.015564,537.086487 628.828857,536.204712   C628.500366,536.498291 628.171936,536.791931 627.843445,537.085510   C628.892578,538.644592 629.941772,540.203613 631.169250,542.027649   C629.319336,542.858215 627.759399,543.558533 625.167236,544.722290   C624.786194,541.555054 624.456604,538.814758 623.994690,534.974670   C622.209351,537.851990 621.193054,539.489990 619.862976,541.633728   C619.990601,541.955322 620.443909,543.098022 621.340576,545.357910   C618.795532,543.720154 617.435730,542.845032 616.082153,541.619751   C616.722717,539.788452 617.357056,538.307495 617.999939,536.481140   C618.839478,535.018677 619.590149,533.829346 620.517578,532.799133   C622.687927,530.388306 621.616577,529.436707 618.791443,528.937012   C618.819885,528.214844 619.024719,527.651306 619.547485,527.069214   C620.591309,526.695496 621.317139,526.340454 622.416382,526.005066   C624.155701,525.056335 625.667847,524.236938 626.846680,523.078369   C628.059631,521.886230 628.947632,520.363342 629.977783,518.985229  M626.240234,540.803955   C626.363464,540.972046 626.486694,541.140137 626.609863,541.308228   C626.583618,541.073120 626.557373,540.837952 626.240234,540.803955  z\",id:\"svg_242\"})),_path241||(_path241=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M523.024963,595.025818   C521.721741,595.667053 520.451172,596.784973 519.110229,596.876953   C502.726196,598.001343 486.331757,598.975342 469.430481,599.614380   C467.566833,596.272522 469.290161,596.288208 471.612427,595.879517   C475.078064,595.269592 479.212860,598.182068 482.488525,594.038269   C490.300629,594.014771 497.646576,593.998474 505.234192,594.261536   C507.805725,595.287720 509.943939,595.663025 510.446106,592.135254   C511.533203,592.099060 512.258545,592.091919 512.992310,592.429565   C513.369934,593.386536 513.739136,593.998779 514.108398,594.610962   C517.199585,591.598083 520.040222,594.529236 522.994751,594.994812   C523.004333,595.004578 523.024963,595.025818 523.024963,595.025818  z\",id:\"svg_243\"})),_path242||(_path242=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M616.075928,541.969971   C617.435730,542.845032 618.795532,543.720154 621.340576,545.357910   C620.443909,543.098022 619.990601,541.955322 619.862976,541.633728   C621.193054,539.489990 622.209351,537.851990 623.994690,534.974670   C624.456604,538.814758 624.786194,541.555054 625.167236,544.722290   C627.759399,543.558533 629.319336,542.858215 631.169250,542.027649   C629.941772,540.203613 628.892578,538.644592 627.843445,537.085510   C628.171936,536.791931 628.500366,536.498291 628.828857,536.204712   C630.015564,537.086487 631.202271,537.968262 632.389038,538.850037   C632.555725,538.463135 632.722473,538.076233 632.889160,537.689392   C634.727966,538.359253 636.566711,539.029053 638.701660,539.853149   C636.219177,542.777405 633.587646,545.727417 630.565125,548.199341   C629.741821,548.872681 627.741150,548.106445 626.066101,547.985352   C625.631531,549.531921 625.155945,551.224548 624.205322,552.664551   C623.281189,550.249634 622.832153,548.087341 622.383118,545.924988   C622.724121,546.225647 623.065125,546.526245 623.406189,546.826904   C621.373474,548.833801 619.340820,550.840759 616.785156,553.364014   C616.874390,553.626892 617.444519,555.306152 618.006836,556.993164   C617.999023,557.000977 617.985229,557.014648 617.643433,556.962036   C615.192078,554.593689 613.082581,552.277954 611.377197,549.976929   C613.793762,549.045105 615.806274,548.098450 617.818787,547.151794   C615.918823,546.457825 614.018921,545.763916 612.234741,544.760498   C613.592346,543.623962 614.834167,542.796997 616.075928,541.969971  z\",id:\"svg_244\"})),_path243||(_path243=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352214\",opacity:1,stroke:\"none\",d:\" M692.044861,450.077820   C693.013245,444.890869 692.954346,439.027893 695.727844,435.237183   C698.359802,431.639801 695.125366,424.741180 702.525879,424.029602   C702.628540,431.473419 702.346313,438.933228 702.041687,446.747803   C700.944580,448.434296 699.869812,449.766113 698.435974,451.176147   C698.279846,449.374908 698.482788,447.495392 698.692261,445.555847   C696.381287,447.261627 694.318176,448.784424 692.044861,450.077820  z\",id:\"svg_245\"})),_path244||(_path244=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M443.404480,595.017578   C443.026978,594.249390 443.014740,593.484070 443.049713,592.002380   C443.732086,590.941162 444.439850,590.209473 444.990936,590.312866   C449.350464,591.130676 453.680145,592.107544 458.019958,593.390503   C458.678589,595.163696 459.336243,596.581848 459.993896,598.000000   C454.119995,599.543579 448.809448,598.019531 443.404480,595.017578  z\",id:\"svg_246\"})),_path245||(_path245=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M542.002441,592.997559   C543.289917,593.423523 544.577332,593.849487 545.925171,594.632812   C539.361816,595.243652 532.738159,595.497070 526.421692,595.373169   C527.674927,594.756470 528.620972,594.517212 529.567078,594.277954   C529.338989,593.800720 529.110962,593.323486 528.882935,592.846252   C527.918701,593.565125 526.954529,594.284058 525.990295,595.002991   C525.248596,595.013550 524.506958,595.024109 523.395142,595.030273   C523.024963,595.025818 523.004333,595.004578 522.966492,594.650146   C521.612976,593.192200 520.297302,592.088745 519.412720,590.973511   C522.782349,590.526978 525.720947,590.092285 529.141052,589.586304   C529.723694,590.074585 530.856140,591.023560 531.988647,591.972534   C531.453979,596.055237 534.661438,594.254333 537.092163,594.888550   C539.192505,594.337097 540.593811,593.670959 541.997559,593.002441   C542.000000,593.000000 542.002441,592.997559 542.002441,592.997559  z\",id:\"svg_247\"})),_path246||(_path246=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M482.022400,594.045532   C479.212860,598.182068 475.078064,595.269592 471.612427,595.879517   C469.290161,596.288208 467.566833,596.272522 468.969238,599.611755   C468.152557,599.839539 467.287598,599.695923 466.211853,598.933960   C465.333710,596.844666 464.666351,595.373840 464.176544,593.601685   C470.243500,593.548767 476.132965,593.797180 482.022400,594.045532  z\",id:\"svg_248\"})),_path247||(_path247=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M606.359009,570.006653   C605.447876,568.994324 604.830627,568.012268 604.423462,566.949707   C604.213806,566.402344 604.377930,565.711731 605.070312,565.034302   C609.168396,564.006958 612.569336,563.031128 615.996277,562.347229   C616.345764,563.093567 616.669250,563.548035 616.992676,564.002441   C613.575073,566.002808 610.157471,568.003174 606.359009,570.006653  z\",id:\"svg_249\"})),_path248||(_path248=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M618.014648,556.985352   C617.444519,555.306152 616.874390,553.626892 616.785156,553.364014   C619.340820,550.840759 621.373474,548.833801 623.406189,546.826904   C623.065125,546.526245 622.724121,546.225647 622.383118,545.924988   C622.832153,548.087341 623.281189,550.249634 623.891602,552.718018   C624.044678,553.467529 624.036316,553.910950 623.662109,554.735413   C621.535706,555.739380 619.775208,556.362366 618.014648,556.985352  z\",id:\"svg_250\"})),_path249||(_path249=/*#__PURE__*/React.createElement(\"path\",{fill:\"#604234\",opacity:1,stroke:\"none\",d:\" M577.301514,586.021057   C576.099121,584.445862 575.237671,582.875793 574.200439,580.985535   C575.319214,580.009521 576.652649,578.846252 577.986267,577.682861   C579.430359,579.016724 580.799133,580.281067 582.210815,581.584961   C581.373474,582.517456 580.434204,583.563538 579.717407,584.806030   C579.174072,585.343750 578.408264,585.684937 577.301514,586.021057  z\",id:\"svg_251\"})),_path250||(_path250=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M618.006836,556.993164   C619.775208,556.362366 621.535706,555.739380 623.653748,555.068176   C623.050659,558.766663 622.458923,562.783142 617.322266,563.859924   C616.669250,563.548035 616.345764,563.093567 616.009888,562.077881   C616.002502,561.337219 616.007629,561.157898 616.369873,560.916565   C617.146423,559.574524 617.565796,558.294617 617.985229,557.014648   C617.985229,557.014648 617.999023,557.000977 618.006836,556.993164  z\",id:\"svg_252\"})),_path251||(_path251=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M463.999023,593.903015   C464.666351,595.373840 465.333710,596.844666 466.000854,598.676880   C464.251770,598.721375 462.502869,598.404541 460.373962,598.043823   C459.336243,596.581848 458.678589,595.163696 458.297302,593.251404   C459.739716,593.138672 460.905823,593.520020 462.126007,594.089722   C462.446899,594.171082 462.713715,594.064087 463.235016,593.940918   C463.659332,593.917480 463.829193,593.910217 463.999023,593.903015  z\",id:\"svg_253\"})),_path252||(_path252=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M430.227112,595.270691   C431.116119,594.653625 432.226166,594.299561 433.671082,593.981323   C432.820007,594.522583 431.634094,595.028137 430.227112,595.270691  z\",id:\"svg_254\"})),_path253||(_path253=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M555.338928,589.024292   C555.708435,588.144348 556.406921,587.253296 557.105469,586.362305   C557.147156,587.047668 557.188904,587.733032 557.107178,588.698181   C556.545105,588.989746 556.106506,589.001526 555.338928,589.024292  z\",id:\"svg_255\"})),_path254||(_path254=/*#__PURE__*/React.createElement(\"path\",{fill:\"#604234\",opacity:1,stroke:\"none\",d:\" M650.322632,526.963867   C650.142334,525.842163 650.283752,524.670349 650.687195,523.264893   C650.847595,524.325439 650.745911,525.619568 650.322632,526.963867  z\",id:\"svg_256\"})),_path255||(_path255=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M596.332764,572.027100   C596.428589,571.462463 596.854736,570.893555 597.280884,570.324646   C597.639526,570.775940 597.998169,571.227173 598.170044,571.865662   C597.543213,572.042908 597.103088,572.032959 596.332764,572.027100  z\",id:\"svg_257\"})),_path256||(_path256=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M636.985168,777.998474   C635.871277,778.543823 634.757385,779.089233 633.643494,779.634583   C634.004944,779.817444 634.366394,780.000244 634.727844,780.183105   C634.059814,781.446716 633.391724,782.710266 632.214233,783.681946   C629.147156,780.319092 626.589478,777.248230 624.031799,774.177307   C623.706360,774.380859 623.380859,774.584473 623.055420,774.788086   C623.999878,776.933716 624.944336,779.079407 625.888794,781.225098   C625.144592,781.503967 624.400452,781.782837 623.656311,782.061768   C621.437195,776.696289 619.218079,771.330811 616.991211,765.573730   C616.571594,763.614380 615.847046,762.048340 615.837769,760.478149   C615.828857,758.978394 616.564575,757.474182 617.372925,755.968506   C618.510681,755.138306 619.901917,754.289734 619.875244,753.488403   C619.748535,749.687317 621.732178,748.690063 625.344727,748.987854   C626.114929,748.995667 626.555054,749.001526 626.995117,749.007324   C627.953308,752.756775 628.911499,756.506226 629.561401,760.631714   C627.766846,762.139282 626.280518,763.270691 624.581055,764.564392   C627.966858,767.113525 629.564331,771.127930 633.923645,769.042664   C634.470215,770.254822 635.813904,772.077698 635.430847,772.577637   C633.324341,775.327209 634.693176,776.711304 636.985168,777.998474  z\",id:\"svg_258\"})),_path257||(_path257=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M627.370789,749.003601   C626.555054,749.001526 626.114929,748.995667 625.335571,748.613708   C624.239258,743.937744 621.668701,744.102783 619.839111,746.931580   C618.183228,749.491943 617.875305,752.924133 616.973022,755.971863   C616.564575,757.474182 615.828857,758.978394 615.837769,760.478149   C615.847046,762.048340 616.571594,763.614380 616.658264,765.573364   C615.889282,765.948242 615.445496,765.931885 614.963013,765.554565   C611.523438,761.713379 611.883728,757.329224 611.964355,752.657349   C611.242615,750.372253 610.551575,748.434631 609.860535,746.497070   C608.777893,747.161621 607.695251,747.826172 606.612671,748.490723   C602.983948,742.549255 601.638977,742.403687 610.982544,739.014648   C613.079407,739.343994 615.176270,739.673340 617.635620,739.997314   C622.381958,740.664307 626.765808,741.336609 631.513428,742.357178   C630.725830,743.450867 629.574402,744.196350 628.409424,744.950562   C628.943542,746.305481 629.471802,747.645386 630.000000,748.985352   C629.248840,748.990173 628.497620,748.994995 627.370789,749.003601  z\",id:\"svg_259\"})),_path258||(_path258=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M663.000000,780.000000   C665.295715,779.758118 667.611694,779.249878 669.876038,779.421509   C670.650024,779.480164 671.294678,781.244629 671.997925,782.616089   C670.466187,783.769409 668.568115,784.193848 667.471924,785.367310   C664.096985,788.980408 660.913208,788.511353 659.114868,783.847290   C658.224365,781.537659 658.224365,781.537659 655.680725,782.666748   C653.715759,784.181152 652.178101,785.342590 650.380371,786.700500   C649.196777,781.696777 648.427124,776.878540 646.844360,772.344055   C645.906494,769.656982 643.685425,767.417847 642.041382,764.977234   C641.743530,763.881226 641.476807,762.775452 641.138794,761.692017   C640.828979,760.698792 640.442200,759.729614 639.707153,757.688782   C644.832336,759.300598 647.609070,761.295959 647.135864,766.868225   C648.186035,767.382141 649.099792,767.199646 650.013489,767.017090   C650.673279,767.776489 651.333008,768.535828 651.736816,769.855591   C652.605103,771.399109 653.729370,772.382263 655.601440,774.019409   C655.250488,777.835205 658.959229,779.087036 663.000000,780.000000  z\",id:\"svg_260\"})),_path259||(_path259=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M641.920288,765.205994   C643.685425,767.417847 645.906494,769.656982 646.844360,772.344055   C648.427124,776.878540 649.196777,781.696777 650.380371,786.700500   C652.178101,785.342590 653.715759,784.181152 655.616943,783.017944   C656.483398,785.182922 656.986267,787.349548 657.496460,789.547729   C652.691345,792.375305 648.089722,791.108948 645.946960,786.493164   C644.854553,784.139832 643.362122,781.972107 642.306946,779.087891   C642.456604,775.235046 644.983704,771.579224 640.999634,768.629639   C640.992249,767.519836 640.985168,766.780457 640.978027,766.041016   C641.251831,765.838928 641.525574,765.636841 641.920288,765.205994  z\",id:\"svg_261\"})),_path260||(_path260=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392B1F\",opacity:1,stroke:\"none\",d:\" M641.000000,769.000000   C644.983704,771.579224 642.456604,775.235046 642.264526,778.734558   C640.551819,778.679199 639.137939,778.344604 637.354614,778.004272   C634.693176,776.711304 633.324341,775.327209 635.430847,772.577637   C635.813904,772.077698 634.470215,770.254822 633.923645,769.042664   C629.564331,771.127930 627.966858,767.113525 624.581055,764.564392   C626.280518,763.270691 627.766846,762.139282 629.626587,761.002686   C631.951355,762.001648 633.873413,763.069031 635.863770,763.988647   C637.305725,764.654907 638.838135,765.125244 640.654175,765.862000   C640.985168,766.780457 640.992249,767.519836 640.657837,768.665833   C639.676208,769.678833 639.036011,770.285278 638.395752,770.891785   C638.857605,771.195618 639.319397,771.499390 639.781250,771.803101   C640.187500,770.868713 640.593750,769.934387 641.000000,769.000000  z\",id:\"svg_262\"})),_path261||(_path261=/*#__PURE__*/React.createElement(\"path\",{fill:\"#615337\",opacity:1,stroke:\"none\",d:\" M630.389526,748.944153   C629.471802,747.645386 628.943542,746.305481 628.409424,744.950562   C629.574402,744.196350 630.725830,743.450867 631.939209,742.364929   C636.276306,742.285583 640.607361,742.232605 644.795959,742.979065   C646.253357,743.238770 647.358398,745.475586 648.624329,746.809387   C646.959778,747.879333 645.399841,749.541931 643.602478,749.859009   C641.653198,750.202759 639.495300,749.148376 637.405640,748.970337   C635.210815,748.783264 632.989075,748.912109 630.389526,748.944153  z\",id:\"svg_263\"})),_path262||(_path262=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M663.182739,779.667297   C658.959229,779.087036 655.250488,777.835205 655.601440,774.019409   C653.729370,772.382263 652.605103,771.399109 651.739624,770.207947   C653.645386,769.234680 655.292358,768.469421 657.357605,767.384888   C659.169067,768.269043 661.637695,769.370911 661.762573,770.694031   C662.215027,775.486755 664.937195,774.801697 668.002441,774.004883   C668.629578,774.769836 669.256714,775.534790 669.883850,776.299744   C669.204407,776.853760 668.603882,777.596313 667.828430,777.921021   C666.394836,778.521362 664.858887,778.877014 663.182739,779.667297  z\",id:\"svg_264\"})),_path263||(_path263=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M668.001953,773.573181   C664.937195,774.801697 662.215027,775.486755 661.762573,770.694031   C661.637695,769.370911 659.169067,768.269043 657.412354,767.016418   C658.021973,763.896484 662.206543,762.335327 664.663635,764.232056   C665.803894,765.112244 666.706482,766.300354 667.873413,767.645142   C668.020630,769.674744 668.011108,771.408142 668.001953,773.573181  z\",id:\"svg_265\"})),_path264||(_path264=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392B1F\",opacity:1,stroke:\"none\",d:\" M666.324829,758.470825   C665.239380,758.815125 663.928284,758.932068 662.617188,759.048950   C662.611633,758.494507 662.606018,757.940002 662.600464,757.385559   C663.766663,757.671509 664.932922,757.957458 666.324829,758.470825  z\",id:\"svg_266\"})),_path265||(_path265=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M679.303467,768.846924   C678.396362,768.227722 677.726562,767.409241 677.044800,766.254700   C677.868774,766.828308 678.704834,767.737915 679.303467,768.846924  z\",id:\"svg_267\"})),_path266||(_path266=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M649.637146,767.009277   C649.099792,767.199646 648.186035,767.382141 647.138184,767.279907   C647.756226,766.997253 648.508545,766.999390 649.637146,767.009277  z\",id:\"svg_268\"})),_path267||(_path267=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M602.656494,660.966064   C603.813660,660.954895 604.546692,660.962646 605.647949,660.975342   C606.832153,671.821472 611.637146,680.893494 618.383911,689.141663   C618.734741,689.570618 618.316162,690.628845 618.127930,691.698242   C617.687317,693.381592 617.252441,694.746704 617.091614,696.143372   C616.870667,698.062134 616.857178,700.004822 616.754822,701.937195   C615.969910,701.985840 615.184937,702.034424 614.400024,702.083008   C612.969299,695.986694 612.427795,689.479736 609.856079,683.910278   C607.316956,678.411499 602.724609,673.860901 598.721619,668.475342   C598.142029,668.629150 596.923279,668.952576 595.908752,669.221741   C594.022339,671.610291 597.614868,679.051331 601.636780,681.282471   C601.406555,684.668213 599.264526,688.751160 604.456055,690.835632   C605.322388,691.183472 605.369446,693.523682 605.836121,694.929626   C606.244812,696.160950 606.342651,697.920166 607.211487,698.505554   C613.057861,702.444275 612.930298,707.184570 609.008362,712.597595   C607.653198,711.421997 606.833740,710.203918 605.969604,708.627563   C603.153137,704.706970 600.381470,701.144653 597.896057,697.950256   C598.808105,696.238342 599.755432,694.460205 600.702698,692.682007   C598.110596,691.364563 595.518494,690.047119 592.680969,688.604919   C591.222351,696.733765 599.108215,702.156433 596.245789,710.007812   C594.014587,707.609375 592.134033,705.587830 590.253479,703.566284   C590.634460,700.152710 590.907898,695.473145 588.903320,694.086426   C582.592529,689.720581 583.424622,682.739258 581.259033,676.788391   C580.669861,672.921021 579.826538,669.270142 578.983154,665.619202   C579.505798,665.271423 580.028381,664.923584 580.551025,664.575806   C582.036438,666.047058 583.521912,667.518311 585.005249,669.373657   C585.423889,671.092834 585.844604,672.427917 586.265381,673.762939   C586.751587,673.732239 587.237854,673.701477 587.724060,673.670776   C588.142273,671.444824 588.560486,669.218811 588.940308,666.628967   C588.600464,664.845886 588.299011,663.426575 587.997559,662.007324   C589.446472,662.317078 590.895447,662.626831 593.027466,663.002258   C594.823425,663.625977 595.936279,664.184021 597.523193,664.979797   C597.716797,663.405273 597.864502,662.203857 598.012207,661.002441   C599.418884,660.996643 600.825623,660.990845 602.656494,660.966064  z\",id:\"svg_269\"})),_path268||(_path268=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M553.982544,674.993103   C554.962280,674.923889 556.042786,675.095276 556.900879,674.735779   C558.725342,673.971313 560.434143,672.930664 562.739929,672.345581   C563.850037,674.579346 564.551575,676.442139 564.943665,678.367920   C565.952759,683.324280 567.594910,688.327087 567.476257,693.275146   C567.399231,696.482544 568.121277,697.592834 570.735779,697.931458   C574.256653,698.387512 576.372986,699.970947 577.091858,703.630554   C577.275574,704.566162 578.978149,705.203430 579.987305,706.235657   C579.993652,706.665405 579.995605,706.837341 579.696167,707.159119   C577.103821,710.873962 579.956055,712.252136 582.154358,714.005066   C583.220764,714.855530 584.058655,715.992676 584.555908,717.000366   C581.742065,717.001587 579.372253,717.002441 576.799194,716.740479   C575.736816,716.314331 574.877625,716.151062 573.906677,715.767517   C573.593567,715.274292 573.335693,715.074341 573.017395,714.521484   C572.908264,712.508057 572.803101,710.920410 572.675110,708.988831   C568.936218,708.988831 565.520020,709.662903 562.562317,708.787598   C559.927246,708.007812 557.799500,705.513611 554.134827,702.805908   C555.388672,707.242188 555.497742,711.082092 557.407959,713.497437   C559.708801,716.406860 560.306213,718.801208 558.630127,721.922852   C556.885986,719.147766 556.403748,715.475708 552.001648,715.606079   C552.538391,712.087646 553.073486,708.960693 553.678650,705.424255   C551.222046,705.792480 550.254456,705.937500 549.286804,706.082520   C549.523743,705.388306 549.760620,704.694153 550.356323,703.958496   C551.228821,702.685425 552.469604,701.189453 552.133972,700.266846   C550.418518,695.550720 548.013916,691.077026 546.424805,686.326355   C545.504150,683.574097 545.666870,680.459351 545.178772,676.023560   C547.670288,678.866211 549.121033,680.521484 550.808228,682.446411   C552.093018,679.429749 553.037781,677.211426 553.982544,674.993103  z\",id:\"svg_270\"})),_path269||(_path269=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M553.986328,674.565430   C553.037781,677.211426 552.093018,679.429749 550.808228,682.446411   C549.121033,680.521484 547.670288,678.866211 545.178772,676.023560   C545.666870,680.459351 545.504150,683.574097 546.424805,686.326355   C548.013916,691.077026 550.418518,695.550720 552.133972,700.266846   C552.469604,701.189453 551.228821,702.685425 550.340881,703.562012   C547.986450,702.463989 546.006287,701.720947 544.017029,700.567017   C543.660400,698.095581 543.266663,696.041626 542.976990,693.973022   C542.605103,691.317444 542.316895,688.650085 542.360901,685.984253   C543.172424,684.807800 543.849792,683.666443 544.012451,682.455872   C544.405945,679.529419 542.675171,678.283691 539.767090,677.722778   C536.404724,677.024475 534.472107,675.479736 533.940918,672.159912   C533.759705,671.027344 532.674561,670.039368 532.001160,668.528442   C531.674316,663.739624 531.348755,659.407654 531.023132,655.075684   C531.462646,655.048218 531.902222,655.020752 532.678223,655.368408   C534.650024,659.207642 535.863708,662.970703 538.045044,666.047668   C540.027405,668.843933 541.159912,673.311951 546.060486,672.706848   C547.786133,672.493713 549.463501,671.889709 551.820251,671.299500   C551.825867,671.232666 551.920044,670.111694 552.014221,668.990662   C552.455994,668.993347 552.897827,668.995972 553.671021,669.000488   C553.998352,670.714233 553.994263,672.426025 553.986328,674.565430  M544.607544,689.791382   C544.208496,689.786072 543.809509,689.780762 543.410400,689.775391   C543.410034,689.941040 543.397949,690.250366 543.411072,690.251404   C543.807495,690.283752 544.206299,690.285767 544.607544,689.791382  z\",id:\"svg_271\"})),_path270||(_path270=/*#__PURE__*/React.createElement(\"path\",{fill:\"#281C17\",opacity:1,stroke:\"none\",d:\" M603.985413,647.985413   C602.408997,649.046204 600.896790,650.224182 599.237427,651.133667   C597.681519,651.986633 595.954895,652.522461 594.332581,653.261902   C593.378296,653.696838 592.332214,654.095520 591.583008,654.787292   C587.779602,658.298950 584.149780,658.041443 581.664001,653.551025   C580.081421,650.692139 576.504150,647.366333 581.694458,644.421448   C582.554382,643.933533 583.726807,644.027893 584.723511,643.743347   C587.325562,643.000854 589.896545,642.147278 592.506470,641.435486   C594.349976,640.932739 596.237000,640.589355 598.104614,640.174927   C598.421082,641.719238 598.739258,643.263245 599.053040,644.808105   C599.149048,645.280579 599.232971,645.755493 599.188354,645.518921   C601.060547,646.209473 602.520447,646.747925 603.990173,647.643188   C604.000000,648.000000 603.985413,647.985413 603.985413,647.985413  z\",id:\"svg_272\"})),_path271||(_path271=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M579.997559,707.009338   C579.995605,706.837341 579.993652,706.665405 579.981812,705.832642   C578.028931,698.806580 576.096863,692.437927 574.128906,686.080444   C573.890320,685.309631 573.576721,684.046570 573.097839,683.943787   C566.825439,682.597900 568.090088,677.153503 566.997559,673.000000   C568.437317,672.334229 569.877014,671.668518 571.965698,671.143005   C574.415527,673.188843 576.216431,675.094421 577.667175,677.056702   C576.976257,677.746338 576.635498,678.379211 576.294678,679.012085   C580.970093,681.353149 578.537598,683.581970 575.343384,685.953369   C577.813843,687.637939 579.777771,688.977112 581.741760,690.316345   C581.376343,690.516357 581.010925,690.716370 580.645508,690.916382   C581.247681,692.675171 581.816833,694.446167 582.461426,696.189270   C583.081726,697.867004 583.985413,699.465942 584.404419,701.187195   C585.539246,705.848877 584.002930,707.782898 579.997559,707.009338  z\",id:\"svg_273\"})),_path272||(_path272=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M566.751343,672.798584   C568.090088,677.153503 566.825439,682.597900 573.097839,683.943787   C573.576721,684.046570 573.890320,685.309631 574.128906,686.080444   C576.096863,692.437927 578.028931,698.806580 579.977417,705.574829   C578.978149,705.203430 577.275574,704.566162 577.091858,703.630554   C576.372986,699.970947 574.256653,698.387512 570.735779,697.931458   C568.121277,697.592834 567.399231,696.482544 567.476257,693.275146   C567.594910,688.327087 565.952759,683.324280 564.943665,678.367920   C564.551575,676.442139 563.850037,674.579346 563.130127,672.345154   C563.748230,671.028442 564.525818,670.054382 565.303345,669.080383   C565.703918,670.252625 566.104492,671.424927 566.751343,672.798584  z\",id:\"svg_274\"})),_path273||(_path273=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M578.017273,677.000000   C576.216431,675.094421 574.415527,673.188843 572.325684,671.132935   C572.023132,670.540955 572.009521,670.099426 571.995483,668.994019   C571.995850,667.886841 571.996704,667.443420 571.997559,667.000000   C572.786133,666.679688 573.574768,666.359375 574.736694,666.154175   C575.193298,666.319153 575.276611,666.369019 575.359924,666.418884   C575.238098,666.280640 575.116333,666.142395 574.994507,666.004150   C575.005615,663.040405 574.923218,660.089417 579.491516,661.528442   C580.012634,661.692627 581.021790,660.307190 581.733887,659.700562   C583.512573,660.437378 585.385498,661.213196 587.628052,661.998169   C588.299011,663.426575 588.600464,664.845886 588.695801,666.794556   C587.328796,667.879150 586.168091,668.434326 585.007324,668.989563   C583.521912,667.518311 582.036438,666.047058 580.551025,664.575806   C580.028381,664.923584 579.505798,665.271423 578.983154,665.619202   C579.826538,669.270142 580.669861,672.921021 580.885254,676.786133   C579.510620,677.000244 578.763977,677.000122 578.017273,677.000000  z\",id:\"svg_275\"})),_path274||(_path274=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M597.962036,660.631470   C597.864502,662.203857 597.716797,663.405273 597.523193,664.979797   C595.936279,664.184021 594.823425,663.625977 593.360168,663.030273   C593.409180,661.403931 593.808533,659.815186 594.207886,658.226440   C595.442505,658.904480 596.677185,659.582520 597.962036,660.631470  z\",id:\"svg_276\"})),_path275||(_path275=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392B1F\",opacity:1,stroke:\"none\",d:\" M556.318237,655.001831   C554.701172,653.269348 554.701172,653.269348 559.416992,649.797791   C558.978088,651.308044 558.539124,652.818298 558.056213,654.660645   C557.560486,654.995117 557.108826,654.997559 556.318237,655.001831  z\",id:\"svg_277\"})),_path276||(_path276=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M610.021729,652.707458   C608.276917,652.628235 606.528564,652.316345 604.392578,652.005859   C604.001831,650.934998 603.998718,649.862732 603.990540,648.387939   C603.985413,647.985413 604.000000,648.000000 603.992798,647.992676   C605.779541,649.228760 607.573547,650.472229 609.683228,651.857361   C609.999023,651.999023 610.014465,652.009399 610.014465,652.009399   C610.014465,652.009399 610.018250,652.474792 610.021729,652.707458  z\",id:\"svg_278\"})),_path277||(_path277=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M571.753723,666.845703   C571.996704,667.443420 571.995850,667.886841 571.987366,668.662720   C570.986023,667.928589 569.992310,666.862000 569.246826,665.399658   C569.661682,665.002625 569.828369,665.001282 569.995117,665.000000   C570.500061,665.563843 571.004944,666.127625 571.753723,666.845703  z\",id:\"svg_279\"})),_path278||(_path278=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2113\",opacity:1,stroke:\"none\",d:\" M569.948486,664.674072   C569.828369,665.001282 569.661682,665.002625 569.245117,665.011719   C568.492920,664.586670 567.990784,664.153809 567.488586,663.720947   C568.293030,663.930054 569.097473,664.139160 569.948486,664.674072  z\",id:\"svg_280\"})),_path279||(_path279=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392B1F\",opacity:1,stroke:\"none\",d:\" M560.042480,655.326782   C560.642395,655.450256 561.284851,655.895691 561.978271,656.658936   C561.381165,656.534058 560.733032,656.091370 560.042480,655.326782  z\",id:\"svg_281\"})),_path280||(_path280=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M609.992188,651.992188   C610.037170,651.259155 610.088928,650.532959 610.140747,649.806763   C610.349548,649.830627 610.558289,649.854431 610.767029,649.878296   C610.672852,650.474060 610.578674,651.069885 610.249512,651.837524   C610.014465,652.009399 609.999023,651.999023 609.992188,651.992188  z\",id:\"svg_282\"})),_path281||(_path281=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M561.651001,645.001221   C561.861450,645.431824 561.735962,645.861145 561.610474,646.290527   C561.131348,646.037170 560.652283,645.783813 560.072266,645.270020   C560.419312,645.006409 560.867249,645.003174 561.651001,645.001221  z\",id:\"svg_283\"})),_path282||(_path282=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M184.882812,818.277344   C184.782288,818.757141 184.642303,819.008972 184.502319,819.260864   C184.362656,819.009216 184.060913,818.699402 184.125031,818.520935   C184.202377,818.305603 184.590012,818.201599 184.882812,818.277344  z\",id:\"svg_284\"})),_path283||(_path283=/*#__PURE__*/React.createElement(\"path\",{fill:\"#431E11\",opacity:1,stroke:\"none\",d:\" M721.753723,432.596436   C719.938660,431.861725 717.479553,436.280548 716.449463,431.446228   C722.424438,428.057495 724.848877,423.509460 725.796143,417.072418   C727.168884,407.743530 722.790649,401.382019 713.528137,398.245453   C710.676208,397.279694 709.675110,396.103516 710.513428,393.291687   C717.110046,391.829803 723.128601,391.017029 727.310181,397.471222   C727.539673,397.825439 728.446533,397.740692 729.304199,398.023773   C730.251587,398.808716 730.932922,399.430145 731.708496,400.488098   C732.962646,409.320465 732.908569,417.521179 727.655640,425.104126   C725.496521,427.716064 723.625122,430.156250 721.753723,432.596436  z\",id:\"svg_285\"})),_path284||(_path284=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M710.100952,393.363495   C709.675110,396.103516 710.676208,397.279694 713.528137,398.245453   C722.790649,401.382019 727.168884,407.743530 725.796143,417.072418   C724.848877,423.509460 722.424438,428.057495 716.434448,431.092957   C717.078735,429.199005 718.250671,427.278442 718.999023,425.204987   C719.657959,423.379333 719.843506,421.382812 720.472778,419.184937   C721.130493,418.930634 721.553711,418.953186 722.035156,419.119751   C722.181763,419.315857 722.270142,419.367950 722.358521,419.420044   C722.230896,419.272400 722.103271,419.124756 721.971436,418.576385   C724.461243,410.182678 719.952087,405.892944 713.529602,402.440613   C712.697754,403.603607 711.845520,404.795135 710.993225,405.986664   C709.125366,406.237305 707.257446,406.487976 705.253479,406.031494   C706.378784,400.870880 707.640198,396.417389 709.178284,392.122009   C709.670288,392.641205 709.885620,393.002350 710.100952,393.363495  z\",id:\"svg_286\"})),_path285||(_path285=/*#__PURE__*/React.createElement(\"path\",{fill:\"#341D0D\",opacity:1,stroke:\"none\",d:\" M708.901611,391.963928   C707.640198,396.417389 706.378784,400.870880 705.085144,405.748596   C704.496704,406.309052 703.940491,406.445251 703.207275,406.818481   C702.229614,406.025146 701.429016,404.994812 700.610413,403.941315   C703.481323,402.437500 703.625244,400.209808 702.266357,391.156128   C701.603088,386.737488 701.451416,382.242035 701.249756,377.197449   C702.065857,376.121582 702.700256,375.629608 703.334717,375.137634   C703.901367,372.804779 704.347778,370.433380 705.078491,368.153137   C705.536682,366.723328 706.421997,365.430420 707.521118,364.066895   C707.926575,364.057709 708.224792,364.181458 708.431091,364.676086   C708.787476,366.960114 709.057739,368.748993 709.065247,370.538971   C709.088196,376.023926 709.010315,381.509277 708.745972,387.126343   C708.637817,387.848175 708.755310,388.438141 708.840576,389.394531   C708.839355,390.495270 708.870483,391.229584 708.901611,391.963928  z\",id:\"svg_287\"})),_path286||(_path286=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M730.004883,455.014526   C729.993164,455.189117 729.981445,455.363678 729.940186,455.799744   C728.823853,455.705933 727.737061,455.350616 726.315430,454.739319   C725.980469,454.483337 725.996582,454.077484 725.996582,454.077515   C726.740051,452.642639 727.483521,451.207764 728.357117,449.521637   C727.355835,449.609558 726.205933,449.710541 725.055969,449.811523   C725.419678,449.536621 725.783386,449.261719 726.147095,448.986816   C724.952820,447.150299 723.758606,445.313782 722.442078,443.289246   C723.099304,442.376160 724.050354,441.054901 725.353821,439.378967   C727.154907,439.975128 728.603577,440.925964 730.052185,441.876801   C731.821228,440.764526 733.472900,440.977570 735.033325,440.691803   C736.124390,440.491943 737.090576,439.610107 738.389282,438.895142   C739.438782,438.499420 740.211670,438.241486 740.991089,438.387512   C740.946655,440.133850 740.895691,441.476196 740.486206,442.861542   C735.499573,444.148193 733.746948,447.668549 732.673889,451.983032   C731.899475,452.286133 731.413147,452.561218 730.714661,452.981201   C730.330994,453.416046 730.159424,453.705963 729.986877,454.250610   C729.992249,454.675079 729.998596,454.844818 730.004883,455.014526  z\",id:\"svg_288\"})),_path287||(_path287=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M721.976868,418.975769   C721.553711,418.953186 721.130493,418.930634 720.391479,418.882477   C719.407593,417.259613 718.739624,415.662354 717.802124,413.420471   C716.465759,415.207672 715.555908,416.424438 714.128601,418.333191   C713.013489,415.038086 706.823425,413.926025 712.023560,409.257263   C712.265259,409.040283 711.372253,407.559448 711.000488,406.326935   C711.845520,404.795135 712.697754,403.603607 713.529602,402.440613   C719.952087,405.892944 724.461243,410.182678 721.983643,418.587830   C722.000000,419.000000 721.976868,418.975769 721.976868,418.975769  z\",id:\"svg_289\"})),_path288||(_path288=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M718.309814,443.790039   C719.362244,445.050354 720.174133,446.079193 721.059875,447.201691   C719.087830,449.284821 717.693848,452.947662 713.853638,449.456390   C713.689148,449.306824 712.448914,450.113770 711.892334,450.660828   C709.216614,453.291016 707.570984,451.055969 706.477051,449.178925   C705.415894,447.358246 705.539429,445.363586 708.489563,444.849976   C709.501892,444.673767 710.375610,443.700806 711.569275,442.925049   C712.501892,443.983643 713.392822,444.994904 713.957642,445.636078   C715.558044,444.827423 716.813599,444.192993 718.309814,443.790039  z\",id:\"svg_290\"})),_path289||(_path289=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M721.828979,432.945740   C723.625122,430.156250 725.496521,427.716064 727.845215,425.342834   C728.891968,425.551361 729.461365,425.692902 730.056519,426.200378   C730.682739,428.412231 731.283264,430.258118 731.539917,432.161682   C730.766968,433.460999 730.337830,434.702637 729.677368,435.959839   C729.445984,435.975342 728.982910,436.001190 728.594482,436.000946   C727.176880,436.006226 726.147705,436.011719 725.118469,436.017273   C724.047058,435.109863 722.975647,434.202454 721.828979,432.945740  z\",id:\"svg_291\"})),_path290||(_path290=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D38E5A\",opacity:1,stroke:\"none\",d:\" M729.908691,435.944305   C730.337830,434.702637 730.766968,433.460999 731.583130,432.381592   C731.970093,432.543854 732.027344,432.990112 732.113525,433.215698   C732.382141,433.717529 732.623291,433.925751 732.943970,434.302002   C732.964722,434.538147 733.015076,435.009552 733.115051,435.226624   C733.406433,435.708832 733.651733,435.907562 734.144653,436.292786   C735.596497,437.374786 736.854553,438.203827 738.112549,439.032898   C737.090576,439.610107 736.124390,440.491943 735.033325,440.691803   C733.472900,440.977570 731.821228,440.764526 730.052185,441.876801   C728.603577,440.925964 727.154907,439.975128 725.354370,438.998260   C725.026855,438.233307 725.051331,437.494446 725.097107,436.386414   C726.147705,436.011719 727.176880,436.006226 728.626099,436.312439   C729.423645,437.255005 729.801208,437.885895 730.178772,438.516754   C730.427368,438.390656 730.675903,438.264557 730.924500,438.138458   C730.585876,437.407074 730.247314,436.675690 729.908691,435.944305  z\",id:\"svg_292\"})),_path291||(_path291=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M725.606323,454.057831   C725.996582,454.077484 725.980469,454.483337 725.972290,454.684967   C726.929871,459.348969 722.627747,458.480072 720.366089,460.061829   C720.480591,456.975037 721.354492,454.214020 725.606323,454.057831  z\",id:\"svg_293\"})),_path292||(_path292=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M694.004883,419.995117   C696.156494,418.399872 698.308105,416.804596 700.782349,415.048950   C700.770630,416.362000 700.436279,417.835327 700.102905,419.634338   C698.842468,420.683716 697.646729,421.641022 696.289124,422.023010   C695.696960,422.189606 694.773071,421.177032 693.999939,420.349976   C694.000000,420.000000 694.004883,419.995117 694.004883,419.995117  z\",id:\"svg_294\"})),_path293||(_path293=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M718.270203,456.552063   C716.494995,455.832703 714.968140,454.902832 713.441284,453.972992   C713.767639,453.476044 714.094055,452.979095 714.420410,452.482178   C715.786438,453.768646 717.152527,455.055084 718.270203,456.552063  z\",id:\"svg_295\"})),_path294||(_path294=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M720.443665,441.474548   C719.970825,441.417114 719.684021,441.184204 719.397217,440.951294   C719.586731,440.770569 719.776245,440.589844 719.965759,440.409119   C720.187073,440.705780 720.408386,441.002411 720.443665,441.474548  z\",id:\"svg_296\"})),_path295||(_path295=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M714.883972,432.258820   C714.782898,432.742493 714.642212,432.996674 714.501587,433.250854   C714.361450,432.996826 714.059509,432.686584 714.123169,432.503479   C714.198120,432.287903 714.589966,432.182495 714.883972,432.258820  z\",id:\"svg_297\"})),_path296||(_path296=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M717.121460,418.724243   C717.219727,418.248474 717.358826,417.998596 717.497925,417.748718   C717.636597,417.998474 717.934814,418.303711 717.872314,418.483551   C717.798523,418.695740 717.412720,418.799408 717.121460,418.724243  z\",id:\"svg_298\"})),_path297||(_path297=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M720.673218,452.717072   C720.707764,453.069733 720.592529,453.284515 720.477356,453.499298   C720.378174,453.406799 720.179443,453.282318 720.197083,453.227478   C720.270325,452.999939 720.408875,452.793427 720.673218,452.717072  z\",id:\"svg_299\"})),_path298||(_path298=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M606.014343,708.985962   C606.833740,710.203918 607.653198,711.421997 608.732056,712.823669   C609.270386,718.080444 609.549377,723.153564 609.766357,727.098877   C613.390747,729.841431 616.054932,731.857361 619.745605,734.650085   C616.347656,736.080750 613.743896,737.177002 611.061340,738.643982   C601.638977,742.403687 602.983948,742.549255 606.612671,748.490723   C607.695251,747.826172 608.777893,747.161621 609.860535,746.497070   C610.551575,748.434631 611.242615,750.372253 611.598083,752.651794   C609.394775,752.091675 607.526978,751.189575 605.519531,750.219971   C602.102966,752.306152 602.784668,760.438110 596.719421,757.758667   C598.152710,754.484070 599.964478,751.455566 600.559387,748.204346   C600.708191,747.391418 596.939636,745.861633 594.537170,744.396484   C593.674377,748.549194 600.022705,753.345215 591.999634,753.588501   C591.638794,749.923218 591.515808,746.636292 590.809875,743.479797   C590.518250,742.175842 588.975952,741.151489 587.756958,739.833008   C587.341736,739.110718 587.172119,738.555359 587.381592,738.042419   C593.039856,737.297791 598.319153,736.510681 603.643799,735.716797   C601.164124,727.364929 601.164124,727.364929 606.590332,727.091370   C606.235229,724.877808 605.886047,722.701050 605.698792,721.534058   C602.320374,721.968506 599.366943,722.348267 596.306335,722.741821   C595.946350,720.543823 595.693909,719.002563 595.474609,717.664001   C597.794312,716.919861 599.720703,716.301941 601.448425,715.747681   C600.654602,713.532837 600.080200,711.930176 599.505798,710.327576   C601.177612,709.884277 602.843262,709.415222 604.525208,709.014282   C604.997009,708.901855 605.516663,708.989868 606.014343,708.985962  z\",id:\"svg_300\"})),_path299||(_path299=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352214\",opacity:1,stroke:\"none\",d:\" M339.027466,647.032715   C339.807129,646.763977 340.586792,646.495178 341.649292,646.094543   C343.647919,645.854614 345.395844,645.913879 347.070404,645.591614   C348.775177,645.263672 350.407684,644.560059 352.071808,644.020874   C351.978424,643.550110 351.885010,643.079285 351.791626,642.608521   C350.350739,642.491150 348.909882,642.373840 347.213837,642.235718   C346.610260,637.538086 350.811523,639.790405 352.737610,638.286621   C356.497620,638.663696 360.093628,639.001587 363.467377,640.052795   C368.747894,641.698059 373.872742,644.017029 378.852936,639.744324   C379.574066,643.059631 380.133942,645.633545 380.832703,648.846130   C377.238556,647.835815 373.914490,646.901428 370.590424,645.967041   C370.338593,646.750244 370.086761,647.533508 369.834900,648.316772   C373.799225,649.609924 377.713776,651.127930 381.765778,652.025208   C382.683868,652.228455 384.079132,650.276611 384.692230,648.240112   C386.134491,648.240112 387.576752,648.240112 389.538452,648.240112   C387.644257,651.593079 388.783234,653.854431 392.193481,654.039490   C394.524261,654.165955 396.920898,653.078064 399.783386,652.419067   C402.617889,653.175720 406.315338,654.215454 410.041138,655.141113   C413.157410,655.915283 415.250885,657.346497 416.108276,660.829529   C416.894989,664.025269 418.649628,666.982727 421.192047,669.964722   C421.688324,667.880676 422.184601,665.796570 423.231689,663.348022   C425.854889,662.655701 427.927246,662.327820 430.195892,662.272705   C434.167877,664.361389 432.877777,666.648438 430.658325,669.043701   C430.547699,670.066711 430.770172,671.037048 430.993561,672.423462   C430.651398,675.107239 430.308350,677.374817 429.965271,679.642456   C429.421265,679.643311 428.877258,679.644226 428.333221,679.645142   C427.805603,677.510620 427.277985,675.376099 426.809418,673.480408   C424.787872,675.005371 423.254547,676.162048 421.082764,677.800354   C421.217255,679.084106 421.445190,681.259277 421.661682,683.325500   C415.100800,686.062439 414.685089,680.516846 412.228699,675.479919   C411.242493,679.695984 410.621002,682.352905 409.670105,685.001831   C408.901428,684.984924 408.462189,684.976074 408.011658,684.632446   C407.475342,683.748840 406.732544,682.634216 406.459351,682.739441   C403.934052,683.711609 401.489777,684.894287 398.796997,685.743835   C397.098633,683.785767 395.625305,682.099731 393.955383,680.188721   C393.233826,681.516602 392.608459,682.667419 392.146301,683.517883   C389.800415,682.941772 387.907623,682.476990 385.962830,681.618530   C386.154053,671.875244 379.644226,669.166382 371.385834,668.177063   C371.622131,667.643738 371.858429,667.110474 372.094696,666.577148   C374.641418,666.151611 377.188110,665.726013 380.180450,665.226013   C377.755920,660.079102 372.910309,663.128601 369.730865,661.555908   C369.826385,656.866089 366.333923,657.123291 363.461670,657.489380   C359.944183,657.937683 356.520142,659.119202 353.055695,659.983765   C353.055695,657.108704 353.055695,654.233582 353.055695,651.288574   C355.564636,649.650146 362.114288,653.851135 360.768005,646.369629   C360.548645,645.150757 357.789642,644.388916 355.194977,642.796143   C355.385376,645.840393 355.462677,647.076599 355.519836,647.990356   C350.824463,648.571167 346.261932,649.135498 341.224609,649.570923   C340.175690,648.638916 339.601593,647.835815 339.027466,647.032715  z\",id:\"svg_301\"})),_path300||(_path300=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M429.999634,662.000000   C427.927246,662.327820 425.854889,662.655701 423.386353,662.988159   C422.729980,662.508362 422.469818,662.024109 422.076294,660.957886   C420.959259,659.919312 419.975555,659.462646 418.991852,659.006042   C418.662781,658.230103 418.333740,657.454224 418.001129,656.340332   C420.996643,656.710632 423.972260,657.564026 427.006470,658.055115   C428.211914,658.250305 429.547333,657.642700 430.994629,657.064697   C434.803772,656.492065 438.441895,656.255310 442.473755,656.398926   C441.686127,657.939636 440.504700,659.100037 439.323303,660.260437   C441.852478,661.882385 444.381622,663.504333 447.089264,665.240784   C448.584747,661.433594 449.810089,658.314148 451.035431,655.194702   C456.039032,655.152100 461.042633,655.109436 466.565491,655.456970   C469.137909,657.267761 471.191101,658.688354 473.449463,660.250916   C473.100525,661.600830 472.615051,663.478699 472.247375,664.900879   C476.117523,663.858032 479.559357,662.930603 482.844788,662.310303   C479.780609,664.890015 476.469330,666.469543 479.059479,671.662659   C479.681152,672.909119 479.760010,680.074219 473.727234,680.777344   C471.467957,679.607239 469.478577,678.658386 467.170898,677.557800   C467.426971,676.807373 467.830170,675.625854 468.186890,674.580566   C462.317566,669.869629 461.861511,677.486328 457.377533,678.250671   C459.993958,679.265076 461.429993,679.821777 462.866028,680.378540   C458.739197,681.502747 455.480225,686.170837 454.615601,691.993347   C453.494843,692.009399 452.747498,692.019897 451.992615,691.656250   C450.985931,690.521851 449.986725,689.761658 448.993591,688.612915   C448.999664,684.644897 448.999664,681.065369 448.999664,676.213379   C451.014618,678.617493 451.933655,679.714050 452.852692,680.810608   C453.222565,680.661743 453.592468,680.512878 453.962341,680.364014   C453.962341,676.803406 453.962341,673.242798 453.962341,669.637756   C455.849243,669.155212 457.204437,668.808655 458.559631,668.462097   C458.671326,667.920776 458.783020,667.379517 458.894714,666.838257   C456.544800,666.109924 454.194885,665.381592 452.748199,664.933167   C449.043915,668.109558 455.069214,676.869080 445.180756,673.462891   C445.180756,675.525208 445.596039,677.452881 445.075287,679.081177   C444.428619,681.103149 443.007629,682.877441 441.921021,684.758667   C440.614777,683.836670 439.308563,682.914673 438.001587,681.556885   C437.859833,677.405884 439.619873,672.630798 433.017853,672.017029   C434.227875,671.624084 435.437927,671.231201 436.946991,670.741211   C436.212067,669.025818 435.597443,667.591187 435.125458,666.489502   C436.307404,664.784607 437.238831,663.441040 438.170258,662.097412   C435.069397,662.791016 432.308685,657.436646 429.999634,662.000000  M471.336304,675.583496   C471.966583,673.315674 472.596893,671.047852 473.227203,668.780090   C472.349731,668.663818 471.472290,668.547607 470.594818,668.431396   C470.594818,670.762817 470.594818,673.094238 471.336304,675.583496  z\",id:\"svg_302\"})),_path301||(_path301=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M355.997559,626.997559   C356.363586,628.357422 356.877899,629.701050 357.055756,631.087769   C357.206116,632.260315 356.966705,633.482788 356.899780,634.683167   C356.242065,634.619507 355.584351,634.555847 354.926636,634.492188   C355.045654,632.034851 355.164673,629.577454 355.644287,627.062378   C356.004883,627.004700 356.000000,627.000000 355.997559,626.997559  z\",id:\"svg_303\"})),_path302||(_path302=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M349.934174,635.655151   C349.102203,636.140259 348.223907,636.295227 347.184143,636.217773   C347.977722,635.765259 348.932800,635.545166 349.934174,635.655151  z\",id:\"svg_304\"})),_path303||(_path303=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352214\",opacity:1,stroke:\"none\",d:\" M419.135620,659.294189   C419.975555,659.462646 420.959259,659.919312 421.968872,660.703857   C421.089691,660.548584 420.184540,660.065430 419.135620,659.294189  z\",id:\"svg_305\"})),_path304||(_path304=/*#__PURE__*/React.createElement(\"path\",{fill:\"#33190E\",opacity:1,stroke:\"none\",d:\" M462.071930,593.901367   C460.905823,593.520020 459.739716,593.138672 458.296326,592.896362   C453.680145,592.107544 449.350464,591.130676 444.990936,590.312866   C444.439850,590.209473 443.732086,590.941162 443.044922,591.619995   C442.553802,591.949707 442.114624,591.945435 441.165588,591.627014   C439.082825,590.923889 437.509888,590.534912 435.936951,590.145996   C434.227356,589.786560 432.517731,589.427063 430.080597,589.047485   C428.891937,589.038757 428.430817,589.050110 427.969696,589.061523   C415.659271,589.309570 403.658112,587.324951 391.436432,584.069092   C389.931122,583.714600 388.824341,583.346863 387.033417,582.817993   C381.551666,581.154846 377.599121,577.013916 371.951813,578.088745   C371.369446,578.199585 370.625183,577.713562 370.016815,577.390076   C367.342224,575.967834 364.690033,574.503540 362.029694,573.054504   C361.294281,573.016846 360.558838,572.979187 359.220428,572.680298   C356.748383,571.601257 354.879364,570.783447 353.010315,569.965637   C353.010315,569.965637 353.001556,569.989807 353.017700,569.986938   C351.633881,568.786499 350.312195,567.479431 348.819244,566.411865   C344.456116,563.291870 340.024658,560.267395 335.036743,556.857422   C332.021393,554.658142 329.589233,552.807068 327.157043,550.955994   C325.662384,549.357788 324.167755,547.759583 322.308960,545.765991   C320.698975,544.559387 319.453094,543.748169 318.207245,542.937012   C318.207245,542.937012 318.194122,542.477295 318.367859,542.055481   C318.045532,541.070251 317.549438,540.506836 317.053375,539.943420   C316.641693,538.588806 316.230011,537.234192 316.135681,535.449951   C316.680695,534.998779 316.908295,534.977295 317.423157,535.121704   C326.455444,545.398560 335.755035,554.800415 348.295441,560.319580   C349.782867,560.974304 350.773773,562.757141 352.147339,564.333801   C355.609192,565.950928 358.918579,567.251221 362.464600,568.630005   C362.701233,568.708435 363.170288,568.877563 363.201477,569.232727   C364.199036,569.976746 365.165375,570.365601 366.405334,570.771545   C367.737152,570.913513 368.795288,571.038391 369.947205,571.472107   C370.751251,572.079773 371.461548,572.378662 372.537170,572.768738   C375.569611,573.595825 378.236694,574.331726 381.024780,575.411133   C384.493408,577.160645 387.735229,578.963745 391.210754,579.889648   C398.365204,581.795715 405.570618,583.849243 412.888824,584.726501   C425.572754,586.247131 438.343872,587.192078 451.105438,587.870483   C463.393280,588.523621 475.715302,588.533752 488.209595,589.083618   C489.128845,589.709656 489.892120,590.447998 490.587769,590.388977   C496.173065,589.915344 501.783569,589.530029 507.312103,588.650696   C513.711121,587.632935 520.092651,586.371765 526.375977,584.794800   C534.210388,582.828552 541.991760,580.604858 549.689209,578.156494   C554.388428,576.661865 558.946838,574.670227 563.459778,572.657959   C568.754211,570.297241 573.930664,567.671936 579.496338,565.101196   C581.655212,563.747253 583.476074,562.453552 585.651611,561.117126   C592.664856,556.180542 599.365662,551.342773 605.966431,546.372192   C610.053284,543.294617 613.988281,540.015320 617.991333,536.826538   C617.357056,538.307495 616.722717,539.788452 616.082153,541.619751   C614.834167,542.796997 613.592346,543.623962 612.064453,545.041748   C610.851379,546.754211 609.924438,547.875854 608.703430,549.012451   C607.960999,549.353455 607.512695,549.679688 606.782166,550.174072   C605.331299,551.907471 604.162659,553.472717 602.643066,555.031616   C601.485474,555.647705 600.678772,556.270203 599.872131,556.892700   C596.934387,559.334961 593.996643,561.777283 590.739868,564.739868   C590.263855,565.833191 590.106995,566.406189 589.950073,566.979187   C589.950073,566.979187 589.999756,567.000305 589.647095,566.964233   C588.487183,567.255371 587.679871,567.582520 586.872559,567.909729   C584.114868,568.694458 581.259888,569.240906 578.621643,570.318176   C574.356384,572.059692 570.233582,574.150269 565.627197,576.495117   C564.154663,577.614685 563.105591,578.332642 562.056519,579.050598   C561.067566,579.451782 560.078613,579.852905 558.759583,580.427185   C555.638245,578.738892 553.314331,580.317261 551.959534,584.994446   C546.036133,583.027588 540.618103,584.078735 534.957031,587.867920   C531.383972,588.104370 530.636780,589.445435 531.970398,591.992126   C531.970398,591.992126 531.990967,592.000793 531.989807,591.986694   C530.856140,591.023560 529.723694,590.074585 529.141052,589.586304   C525.720947,590.092285 522.782349,590.526978 519.008301,590.972839   C516.443237,591.350891 514.713623,591.717896 512.983948,592.084839   C512.258545,592.091919 511.533203,592.099060 510.113617,592.107483   C507.943787,592.733276 506.468170,593.357788 504.992523,593.982239   C497.646576,593.998474 490.300629,594.014771 482.488525,594.038269   C476.132965,593.797180 470.243500,593.548767 464.176544,593.601685   C463.829193,593.910217 463.659332,593.917480 463.007568,593.933350   C462.525604,593.941956 462.071930,593.901367 462.071930,593.901367  z\",id:\"svg_306\"})),_path305||(_path305=/*#__PURE__*/React.createElement(\"path\",{fill:\"#341D0D\",opacity:1,stroke:\"none\",d:\" M317.135925,534.955750   C316.908295,534.977295 316.680695,534.998779 316.111816,535.074341   C313.446777,532.212341 311.144440,529.278931 308.793884,526.384705   C305.708649,522.585815 301.777283,519.215088 299.674957,514.939819   C296.794464,509.081970 295.335754,502.531433 293.158478,496.316040   C292.704376,495.019653 291.774200,493.889984 291.013702,492.352356   C291.817078,491.133087 292.670227,490.244965 294.060425,489.164398   C294.770111,488.967133 294.942780,488.962311 295.135712,489.333313   C295.226471,490.457001 295.296967,491.204895 295.287231,492.341614   C296.967682,497.452057 298.447144,502.304443 300.565460,506.859741   C302.840332,511.751709 305.204895,516.758301 308.469086,520.990845   C311.869446,525.399902 315.703735,529.381165 317.135925,534.955750  z\",id:\"svg_307\"})),_path306||(_path306=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M317.832581,542.991943   C319.453094,543.748169 320.698975,544.559387 321.972961,545.735779   C319.902954,547.691833 317.804749,549.282654 315.365997,550.926086   C315.025421,550.978760 315.008514,550.997070 315.126251,550.737793   C315.494232,549.987061 315.744476,549.495667 315.994751,549.004272   C315.866089,546.867065 313.413635,544.159119 317.832581,542.991943  z\",id:\"svg_308\"})),_path307||(_path307=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M317.063843,540.261108   C317.549438,540.506836 318.045532,541.070251 318.345398,541.826660   C317.790924,541.539368 317.432617,541.059082 317.063843,540.261108  z\",id:\"svg_309\"})),_path308||(_path308=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M315.699463,549.030762   C315.744476,549.495667 315.494232,549.987061 315.133698,550.732544   C315.150330,550.343445 315.277252,549.700317 315.699463,549.030762  z\",id:\"svg_310\"})),_path309||(_path309=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6F4B30\",opacity:1,stroke:\"none\",d:\" M232.324951,892.987305   C230.352798,891.651123 228.758850,890.255554 227.059280,889.003296   C221.841705,885.159241 216.551498,881.413086 211.361816,877.532043   C209.888016,876.429993 208.661194,874.997559 207.187256,873.050049   C207.362610,871.227783 207.671768,870.072205 207.979767,868.689697   C207.978622,868.462769 207.988632,868.009033 208.158020,867.924683   C208.395889,867.736511 208.544510,867.571350 208.519653,867.538757   C208.376862,867.351929 208.192947,867.196472 207.980164,866.705078   C206.951263,865.585815 205.965210,864.791748 204.991730,863.997925   C205.004318,863.998169 204.995224,864.021973 204.999878,863.657288   C206.579849,862.149902 208.155151,861.007202 209.954514,859.852905   C210.289856,859.744751 210.506882,859.577515 210.496658,859.562134   C210.340744,859.328796 210.155060,859.115356 210.104584,858.618652   C210.473038,857.575500 210.713226,856.810852 211.211060,856.029175   C211.640823,856.009521 211.812943,856.006836 212.244308,855.842896   C213.105896,854.947083 213.708237,854.212524 214.544357,853.192810   C213.519867,853.115845 212.763596,853.058960 211.631836,852.995361   C210.505569,852.992371 209.754776,852.996216 208.999298,852.768677   C208.994614,852.537292 208.989975,852.074524 208.890625,851.831177   C208.507095,851.393799 208.222900,851.199829 207.611877,850.944092   C207.411697,850.274658 207.499252,849.151733 207.670990,849.138733   C209.450821,849.003662 211.244263,849.047729 213.137848,849.305786   C213.700806,850.111450 214.159821,850.653259 214.618835,851.195007   C214.777542,850.769653 214.936234,850.344299 215.400879,850.096069   C216.857422,850.118530 218.207535,850.299561 219.125732,849.753845   C224.502640,846.558105 226.100861,846.885071 230.438034,851.910828   C232.181778,853.931335 234.314117,855.616577 236.269638,857.454407   C236.619492,857.103394 236.969345,856.752380 237.319214,856.401428   C235.591583,854.320129 233.863937,852.238831 232.179413,850.209534   C233.513855,848.760437 234.605423,847.575134 235.671127,846.417847   C237.022415,847.243225 238.154648,847.934814 240.438828,849.330078   C239.357666,846.056763 238.684113,844.017456 238.407227,841.981506   C241.717987,842.618286 246.182266,841.354431 244.771759,847.294128   C243.649826,848.630066 242.733414,849.700867 241.817001,850.771729   C246.163177,848.293579 247.921982,851.908508 250.094345,853.634521   C253.196655,856.099243 255.951523,860.009094 260.007324,854.990662   C260.000000,855.000000 260.017883,854.987183 260.007080,855.354675   C261.334351,857.148621 262.672394,858.575073 264.370850,860.038940   C268.657776,860.276733 272.584290,860.477112 276.676086,860.685974   C275.660919,861.936035 274.830139,862.959045 273.999390,863.982056   C274.004211,865.048340 274.009033,866.114563 273.712494,867.609985   C272.933624,868.367249 272.456116,868.695374 271.702972,869.015259   C271.243561,869.010315 271.059753,869.013672 270.597931,869.000854   C269.876221,868.692444 269.432495,868.400269 268.958588,867.764526   C268.245148,866.952515 267.561859,866.484131 266.575836,866.017334   C265.869446,866.019958 265.465790,866.020874 264.861328,865.745483   C262.610168,863.603088 260.559784,861.737000 258.569519,859.925659   C254.658920,863.024902 250.777130,866.101257 246.147766,869.770142   C250.563446,871.636108 251.415970,873.518372 247.524643,875.691589   C247.063614,875.949097 247.160919,877.206238 246.715240,878.114807   C245.832443,878.734924 245.233841,879.240295 244.635223,879.745605   C244.990143,880.048950 245.345032,880.352356 245.699921,880.655762   C246.133469,879.770508 246.567032,878.885254 247.400955,877.994995   C248.868973,877.991760 249.936646,877.993469 251.038879,878.287109   C251.474838,878.891785 251.876221,879.204468 252.277618,879.517212   C252.370010,879.254333 252.583786,878.788574 252.536057,878.760010   C252.046844,878.467468 251.515198,878.245789 251.004181,877.632202   C251.406937,874.335510 251.800903,871.411011 252.333145,867.460144   C255.868286,871.161682 259.117676,874.564026 261.942444,877.521729   C264.202881,876.583069 266.109192,875.791565 268.008484,875.000977   C268.001526,875.001892 268.001099,874.985291 268.001099,874.985291   C268.245483,877.504700 271.129608,880.620056 265.229614,881.891357   C268.112030,884.377563 270.261993,886.231934 272.011444,887.740906   C269.440643,888.719116 266.577057,889.808716 263.355499,890.950378   C262.893372,885.871643 257.372192,884.864929 255.413788,881.128906   C255.335526,880.979614 254.280304,881.047180 254.038666,881.325134   C251.984161,883.689209 249.597046,885.898560 248.122910,888.598267   C246.328003,891.885498 245.002274,894.492554 240.759308,891.608887   C239.794220,890.953003 238.003235,891.512329 235.916473,891.512329   C238.458878,887.865967 242.585709,884.146179 236.296295,881.623413   C235.522903,885.174255 234.761642,888.669312 233.985535,892.537476   C233.532074,892.938171 233.093460,892.965820 232.324951,892.987305  M214.459686,870.988464   C214.459686,870.988464 214.920120,870.998962 215.675827,871.007385   C217.127762,870.133667 218.907852,869.544189 219.962509,868.326416   C222.077789,865.883911 220.581711,864.997986 217.969879,864.352417   C217.509232,863.780029 217.048569,863.207703 216.587906,862.635315   C216.335358,862.924988 216.082809,863.214722 215.830246,863.504395   C216.547440,864.008606 217.264633,864.512878 217.969772,865.715088   C216.990921,866.816040 216.012070,867.916992 214.343536,868.904480   C212.768173,867.481445 211.192810,866.058411 209.617447,864.635376   C209.378067,864.783142 209.138687,864.930847 208.899307,865.078613   C210.267609,867.050354 211.635910,869.022156 213.178543,871.330933   C213.452103,871.218994 213.725647,871.107056 214.459686,870.988464  M231.223572,874.023987   C230.161469,874.693481 229.099350,875.363037 228.037262,876.032532   C229.735001,877.331604 231.432739,878.630676 233.130493,879.929749   C233.320343,879.660156 233.510193,879.390625 233.700043,879.121033   C233.133774,877.414185 232.567505,875.707275 232.533371,873.987305   C232.810577,873.719666 233.087784,873.452087 233.364975,873.184448   C233.153214,872.994568 232.941437,872.804626 232.729691,872.614685   C232.486069,873.075623 232.242432,873.536621 231.223572,874.023987  M233.310089,865.071472   C231.570267,866.687988 229.830444,868.304443 227.301422,870.654175   C231.361603,870.009277 233.963196,869.596008 236.258514,869.231384   C235.527771,867.864197 234.760498,866.428650 234.687943,864.982666   C235.314835,864.651062 235.941711,864.319519 236.568588,863.987915   C236.271317,863.704407 235.974045,863.420837 235.676758,863.137268   C235.119843,863.760376 234.562927,864.383545 233.310089,865.071472  M225.066956,871.575562   C225.481140,871.881958 225.895340,872.188293 226.309555,872.494629   C226.404861,872.228210 226.615891,871.748352 226.577942,871.727783   C226.068222,871.451538 225.523819,871.239197 224.974869,870.266785   C225.646667,868.862976 226.318451,867.459106 227.172928,865.673523   C225.070724,864.062195 223.052170,862.514954 221.034897,860.304626   C220.171875,858.290283 219.308853,856.275940 218.408081,854.173462   C215.310104,856.923767 215.870667,858.246704 221.062149,861.750183   C221.980789,863.270508 222.899445,864.790771 223.926437,866.490417   C224.012161,867.917603 218.981369,870.841309 225.066956,871.575562  M238.769592,853.817017   C239.364548,853.495850 239.959518,853.174622 240.554428,852.853455   C239.145004,851.919067 237.735565,850.984680 236.326141,850.050293   C236.060181,850.419312 235.794235,850.788391 235.528290,851.157471   C236.410294,851.943359 237.292297,852.729248 238.769592,853.817017  M212.805923,861.654907   C213.476532,861.229797 214.147141,860.804688 214.817780,860.379578   C214.409683,859.959656 214.001587,859.539734 213.593491,859.119873   C213.166550,859.794434 212.739609,860.468933 212.805923,861.654907  M258.296082,879.576355   C258.339874,878.917175 258.383698,878.257996 258.427490,877.598816   C258.147919,877.594849 257.868347,877.590881 257.588776,877.586914   C257.619385,878.247803 257.649994,878.908630 258.296082,879.576355  M233.095367,858.990662   C232.546921,859.375793 231.998474,859.760986 231.450027,860.146179   C231.722092,860.409363 231.994156,860.672607 232.266220,860.935791   C232.736862,860.308411 233.207504,859.680969 233.095367,858.990662  M245.824951,872.542480   C245.392685,872.589539 244.960419,872.636597 244.528137,872.683594   C244.707336,873.054749 244.886520,873.425842 245.065674,873.796936   C245.448593,873.510132 245.831512,873.223328 245.824951,872.542480  M248.135971,882.972534   C248.407166,882.813721 248.804764,882.710144 248.906555,882.477295   C248.978241,882.313354 248.647842,881.973694 248.496948,881.712463   C248.346893,881.973694 248.196823,882.234924 248.135971,882.972534  M214.190918,873.240173   C214.023926,873.360107 213.856949,873.480042 213.689957,873.599915   C213.924561,873.575378 214.159180,873.550781 214.190918,873.240173  M254.368256,875.485596   C254.368256,875.485596 254.557480,875.591309 254.557480,875.591309   C254.557480,875.591309 254.528778,875.379089 254.368256,875.485596  M220.472946,853.656494   C220.472946,853.656494 220.583084,853.451721 220.583084,853.451721   C220.583084,853.451721 220.349899,853.486816 220.472946,853.656494  M217.423859,852.478882   C217.423859,852.478882 217.529999,852.417603 217.423859,852.478882  z\",id:\"svg_311\"})),_path310||(_path310=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M215.044846,890.336548   C217.774704,890.542908 220.541046,891.108093 223.630264,891.865479   C221.625931,893.415344 216.868210,892.684814 215.044846,890.336548  z\",id:\"svg_312\"})),_path311||(_path311=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D1A0E\",opacity:1,stroke:\"none\",d:\" M386.014832,682.012207   C387.907623,682.476990 389.800415,682.941772 392.146301,683.517883   C392.608459,682.667419 393.233826,681.516602 393.955383,680.188721   C395.625305,682.099731 397.098633,683.785767 398.818115,686.067322   C399.408081,687.456543 399.751923,688.250305 400.056213,689.364624   C399.654938,690.463806 399.293243,691.242432 398.593292,691.959351   C397.470520,691.046387 396.685974,690.195129 395.426697,688.828674   C395.270508,692.380920 395.147461,695.179504 395.024414,697.978027   C393.519196,698.889282 392.013977,699.800598 390.404785,700.774902   C390.797546,703.244019 391.197815,705.760620 391.652679,708.620178   C390.288330,708.753662 389.042999,708.875488 387.051910,708.828003   C385.142456,708.108826 384.013672,707.185364 382.809235,707.072937   C377.240234,706.553589 371.650177,706.259583 365.997253,705.529907   C362.810730,703.529724 359.694611,701.884583 356.578522,700.239502   C356.561401,700.880127 356.544312,701.520691 356.527222,702.161316   C354.280060,703.429321 352.032898,704.697266 349.816071,705.948120   C352.207794,706.971863 354.594757,707.993530 357.212463,709.282654   C359.296234,710.026550 361.149231,710.502991 363.008881,711.336365   C363.234375,712.264893 363.453217,712.836487 363.672058,713.408081   C364.105896,712.915588 364.781281,712.481750 364.918579,711.917114   C365.141174,711.001587 365.010925,710.000305 365.362213,709.033691   C366.454346,709.355591 367.213898,709.679016 367.973450,710.002441   C367.880524,711.330078 367.188965,713.171570 367.805695,713.890198   C369.746185,716.151306 372.359100,717.829712 374.342712,720.061768   C375.320953,721.162415 375.058746,723.771851 376.098877,724.338684   C379.920166,726.420959 381.465668,730.231506 383.527588,733.691284   C377.949310,733.245728 372.715393,732.647217 367.566681,731.621094   C363.884979,730.887329 360.127075,729.993408 356.742798,728.433960   C351.346649,725.947327 346.233032,722.847595 340.999939,720.007080   C340.265259,718.365967 339.530609,716.724915 338.352142,714.670715   C336.943787,713.065918 335.331055,711.968262 335.141937,710.664124   C334.665558,707.379272 333.049316,706.054016 329.876770,705.901550   C328.955658,705.857239 328.075562,704.959778 326.223419,703.916382   C329.983765,701.282043 332.990143,699.175964 335.993927,697.480591   C335.788177,699.359802 335.300262,700.861755 335.468353,702.286377   C335.612885,703.511963 336.505829,704.649353 337.067871,705.825745   C338.072876,705.256836 339.617737,704.918762 339.978607,704.074585   C340.942932,701.818604 341.398865,699.345337 342.315186,696.021118   C344.088959,696.346436 346.600983,696.807129 349.605377,697.358154   C349.380371,695.725952 349.190765,694.350708 349.001190,692.975464   C352.150269,694.256409 355.299316,695.537354 358.725189,696.930908   C359.829254,696.038635 361.075806,695.031189 362.978607,693.493347   C360.149628,692.171814 357.688721,691.150513 355.352875,689.896301   C352.850189,688.552368 349.477570,687.847778 350.391724,683.411255   C353.901672,684.974976 356.886566,688.182983 360.199493,688.567932   C364.705200,689.091492 365.967163,692.173828 366.603363,694.905579   C367.840454,700.217285 369.992310,698.814209 372.853302,697.030823   C372.811310,696.501160 372.796051,696.337646 372.785706,696.173889   C372.659027,694.166809 373.190216,691.710876 372.215271,690.283569   C371.306427,688.953064 368.795959,688.716492 367.276978,687.730286   C367.287567,685.378296 367.663116,681.935791 366.626465,681.438782   C361.285614,678.878296 355.582550,677.073486 350.005890,675.004883   C349.808136,672.172424 349.610382,669.340027 350.092865,666.241333   C355.309265,665.423828 359.845428,664.872437 364.636261,664.290161   C363.138153,667.495605 361.010193,670.430786 361.587402,671.128662   C363.089752,672.945129 365.655151,674.302979 368.028381,674.865662   C370.632477,675.482971 373.495972,675.006165 376.625641,675.006165   C373.733002,679.902527 378.583649,680.179260 380.001221,681.235901   C380.001221,684.819763 380.001221,687.410645 379.716675,690.035706   C379.109253,690.374573 378.786377,690.679260 378.463501,690.983948   C378.673218,691.165649 378.882935,691.347412 379.092621,691.529114   C379.394684,691.018616 379.696747,690.508057 380.348938,689.940857   C382.471008,687.260193 384.242950,684.636230 386.014832,682.012207  M353.202789,702.609924   C353.206909,702.215820 353.211029,701.821655 353.215118,701.427551   C353.051331,701.426025 352.745209,701.413574 352.744385,701.424561   C352.714203,701.816772 352.712616,702.211121 353.202789,702.609924  z\",id:\"svg_313\"})),_path312||(_path312=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M380.001221,690.001526   C380.001221,687.410645 380.001221,684.819763 380.001221,681.235901   C378.583649,680.179260 373.733002,679.902527 376.625641,675.006165   C373.495972,675.006165 370.632477,675.482971 368.028381,674.865662   C365.655151,674.302979 363.089752,672.945129 361.587402,671.128662   C361.010193,670.430786 363.138153,667.495605 364.636261,664.290161   C359.845428,664.872437 355.309265,665.423828 350.365295,665.962830   C348.823456,663.147461 349.294678,661.131592 352.838989,660.250122   C356.520142,659.119202 359.944183,657.937683 363.461670,657.489380   C366.333923,657.123291 369.826385,656.866089 369.730865,661.555908   C372.910309,663.128601 377.755920,660.079102 380.180450,665.226013   C377.188110,665.726013 374.641418,666.151611 372.094696,666.577148   C371.858429,667.110474 371.622131,667.643738 371.385834,668.177063   C379.644226,669.166382 386.154053,671.875244 385.962830,681.618530   C384.242950,684.636230 382.471008,687.260193 380.349548,689.942078   C380.000000,690.000000 380.001221,690.001526 380.001221,690.001526  z\",id:\"svg_314\"})),_path313||(_path313=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352214\",opacity:1,stroke:\"none\",d:\" M348.853516,692.677002   C349.190765,694.350708 349.380371,695.725952 349.605377,697.358154   C346.600983,696.807129 344.088959,696.346436 342.315186,696.021118   C341.398865,699.345337 340.942932,701.818604 339.978607,704.074585   C339.617737,704.918762 338.072876,705.256836 337.067871,705.825745   C336.505829,704.649353 335.612885,703.511963 335.468353,702.286377   C335.300262,700.861755 335.788177,699.359802 335.948425,697.124756   C333.511841,692.866333 330.229431,691.383911 326.024414,691.987061   C325.898407,691.672791 325.695435,691.420471 325.190552,691.130432   C324.889435,690.693726 324.710571,690.425171 324.319397,689.856323   C324.472168,688.990967 324.734619,688.494263 324.997070,687.997559   C324.991974,685.232666 324.986877,682.467712 325.026489,679.395142   C325.863739,679.301514 326.656250,679.515564 327.812988,680.028564   C328.442444,680.208618 328.707733,680.089722 328.973022,679.970825   C329.293304,679.870056 329.556122,679.686829 329.876099,679.206543   C332.476593,678.772461 335.106903,678.995239 337.417938,678.240479   C342.086761,676.715576 343.187683,680.510071 345.657806,683.280762   C346.011292,684.098938 346.013184,684.529419 346.015076,684.959839   C345.225952,685.057251 344.436829,685.154663 342.731659,685.365112   C345.029053,688.062195 346.867432,690.220398 348.853516,692.677002  z\",id:\"svg_315\"})),_path314||(_path314=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M366.990540,687.998413   C368.795959,688.716492 371.306427,688.953064 372.215271,690.283569   C373.190216,691.710876 372.659027,694.166809 372.785706,696.173889   C372.796051,696.337646 372.811310,696.501160 372.853302,697.030823   C369.992310,698.814209 367.840454,700.217285 366.603363,694.905579   C365.967163,692.173828 364.705200,689.091492 360.199493,688.567932   C356.886566,688.182983 353.901672,684.974976 350.404968,683.022705   C350.024780,682.572449 350.010223,682.124634 350.419891,681.339233   C356.226288,683.333984 361.608398,685.666199 366.990540,687.998413  z\",id:\"svg_316\"})),_path315||(_path315=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M367.276978,687.730286   C361.608398,685.666199 356.226288,683.333984 350.419189,681.003296   C349.988251,679.290161 349.982300,677.575439 349.991150,675.432800   C355.582550,677.073486 361.285614,678.878296 366.626465,681.438782   C367.663116,681.935791 367.287567,685.378296 367.276978,687.730286  z\",id:\"svg_317\"})),_path316||(_path316=/*#__PURE__*/React.createElement(\"path\",{fill:\"#341D0D\",opacity:1,stroke:\"none\",d:\" M344.982178,656.010925   C345.258850,657.097290 345.238464,658.414368 345.868866,659.226013   C347.638580,661.504517 346.823517,662.617126 344.571198,663.758789   C343.061768,664.523987 341.921753,665.993835 340.445374,666.855164   C338.998077,667.699341 337.371063,668.478516 335.749176,668.673828   C334.984161,668.765930 334.046600,667.425354 333.187195,666.734009   C334.403656,665.641113 335.596436,664.520142 336.844696,663.464905   C337.719086,662.725647 338.669312,662.075989 339.560028,661.405640   C339.187500,660.000366 338.837250,658.679016 339.117615,657.165527   C341.492920,656.652649 343.237549,656.331787 344.982178,656.010925  z\",id:\"svg_318\"})),_path317||(_path317=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M344.945312,655.686768   C343.237549,656.331787 341.492920,656.652649 339.361725,656.968140   C338.173706,655.733887 337.372253,654.504944 336.272034,653.133362   C336.648071,651.280212 337.322845,649.569702 338.109070,647.536316   C338.220520,647.213379 338.612946,647.075073 338.820221,647.053894   C339.601593,647.835815 340.175690,648.638916 340.877319,649.711914   C340.396729,650.560669 339.788574,651.139648 339.180420,651.718567   C340.324768,652.679810 341.413544,653.721130 342.636353,654.569336   C343.271545,655.009949 344.143463,655.109192 344.945312,655.686768  z\",id:\"svg_319\"})),_path318||(_path318=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D1A0E\",opacity:1,stroke:\"none\",d:\" M346.331268,684.976562   C346.013184,684.529419 346.011292,684.098938 346.009247,683.345703   C346.783813,683.475830 347.558533,683.928711 348.333252,684.381531   C347.771332,684.585449 347.209381,684.789307 346.331268,684.976562  z\",id:\"svg_320\"})),_path319||(_path319=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M484.014191,212.999390   C484.014191,212.999390 484.509460,213.000214 484.758545,213.376862   C486.326477,215.513870 487.645264,217.274246 488.952393,219.397537   C489.441040,222.516068 489.941437,225.271667 490.441803,228.027267   C491.099701,228.329575 491.757599,228.631866 492.415466,228.934174   C492.878693,227.341858 493.341888,225.749542 493.552460,225.025696   C496.163269,226.449799 497.587616,227.226715 499.004395,228.001038   C498.996887,227.998413 498.995148,227.984573 499.001160,228.384338   C498.690765,231.926636 500.648010,232.229080 503.273743,232.213531   C502.586548,235.101395 501.653778,237.778931 500.630005,240.717819   C501.371033,240.808014 502.159668,240.904007 503.331146,241.001068   C504.476685,241.000717 505.239410,240.999283 506.004639,241.369781   C505.995422,242.485519 505.983704,243.229340 505.649872,244.018097   C504.628387,244.711197 503.929047,245.359344 503.229706,246.007477   C503.647064,246.311295 504.064392,246.615112 504.481750,246.918930   C504.997955,245.956253 505.514160,244.993576 506.391357,244.039276   C508.067078,244.869064 509.381805,245.690491 510.666992,246.493439   C512.064636,246.011414 513.532776,245.505096 515.071655,245.344421   C516.838440,247.769867 518.162109,247.746704 519.376099,244.997849   C522.495483,244.989914 525.243713,244.990524 528.051147,245.338699   C531.703491,247.887970 530.979919,249.640823 528.062927,252.156769   C525.607239,254.274857 523.982300,257.356140 521.640930,260.066895   C518.986328,260.608307 516.680420,261.093811 513.986572,261.660980   C515.383850,263.373413 516.944336,265.286011 518.523987,267.222015   C517.730652,268.410706 516.865356,269.707275 515.939697,271.353943   C513.667542,272.851715 511.455658,273.999329 509.212646,274.787598   C510.053345,272.862518 510.925201,271.296814 511.797058,269.731079   C511.421997,269.538696 511.046936,269.346313 510.671906,269.153931   C508.447510,271.107269 506.223145,273.060638 503.338745,275.593536   C504.304565,270.684265 504.998627,267.156311 505.807922,263.042450   C503.450287,264.204681 501.651489,265.091431 499.888794,265.617615   C500.964447,263.519440 502.004059,261.781891 503.385437,260.021729   C504.341553,259.508270 504.955902,259.017365 505.570251,258.526489   C505.131073,258.130096 504.691895,257.733704 504.252686,257.337311   C503.818542,258.208832 503.384399,259.080353 502.560883,259.957947   C500.587219,260.803772 499.002899,261.643494 497.199066,262.599609   C496.375275,261.922211 495.196014,260.952484 493.978455,259.643768   C493.032898,258.524689 492.125610,257.744598 491.218353,256.964508   C490.950867,257.384064 490.683350,257.803589 490.415863,258.223114   C491.605103,258.820770 492.794312,259.418396 493.923981,260.354889   C490.402283,263.609528 488.999146,259.811218 487.289795,258.350037   C483.117096,254.783035 480.970581,255.190063 479.016785,260.324890   C478.502930,261.675323 477.376007,262.792511 476.530609,264.016846   C476.316742,263.820557 476.102875,263.624268 475.889008,263.427979   C476.022278,261.888977 476.155548,260.349976 476.288788,258.810974   C475.796875,258.768829 475.304932,258.726685 474.812988,258.684509   C474.412384,259.884827 473.970612,261.073364 473.622620,262.288727   C473.267639,263.528412 472.456390,265.680145 472.798798,265.892212   C474.118896,266.709717 475.825043,266.895905 477.377808,267.349792   C477.952057,267.517670 478.500122,267.775024 478.917358,268.285217   C478.513336,269.393616 478.252075,270.208405 477.976715,271.245850   C477.962616,271.468536 477.944977,271.914429 477.557159,271.940979   C475.109406,270.977936 473.049438,269.988342 470.994934,268.999329   C471.000366,268.999878 471.001251,269.010529 471.000275,268.643860   C471.080139,262.455444 466.530884,268.473877 464.894745,265.321808   C466.753082,263.999969 468.742401,262.584961 471.152832,260.870453   C468.550293,258.498199 466.193237,256.349762 463.593475,253.980042   C462.996033,254.385895 462.396912,254.891800 461.716736,255.238876   C457.447113,257.417450 457.856079,253.480743 456.189331,252.250549   C456.457214,251.896606 456.725098,251.542664 456.992981,251.188721   C458.080170,251.948425 459.167358,252.708115 459.542816,252.970474   C463.446747,251.089310 466.646912,249.547272 469.832001,248.012497   C469.639771,246.462158 469.458221,244.998108 469.215118,243.037308   C470.764587,244.176529 471.682953,244.851730 472.601349,245.526947   C472.950348,245.015305 473.687958,244.164047 473.585571,244.046890   C472.893005,243.254349 472.071655,242.544571 471.194153,241.953110   C470.519958,241.498688 469.702667,241.256561 468.969482,240.540466   C468.660828,238.439957 468.331635,236.718994 468.001221,234.999023   C468.000000,235.000000 467.998108,235.002579 468.364136,234.998047   C470.183075,233.886429 471.635956,232.779343 473.128815,231.641785   C473.906250,232.330429 474.861145,233.176285 476.566681,234.687057   C476.419769,232.319199 476.336700,230.980362 476.234711,229.336609   C477.555969,229.806320 478.486237,230.137039 479.340820,230.440857   C479.340820,228.717972 478.814575,226.410233 479.428711,226.050781   C482.702606,224.134491 482.616180,221.018570 482.890808,217.778625   C482.583374,217.286423 482.318970,217.108353 481.993042,217.017212   C481.996277,217.008011 481.997253,217.037292 482.113373,216.736389   C482.824402,215.290131 483.419281,214.144760 484.014191,212.999390  M484.247131,235.191925   C483.142517,234.283096 482.037903,233.374252 481.030884,232.545700   C479.781952,234.337677 478.782043,235.772339 477.671539,237.365646   C479.294525,238.535034 480.786621,239.610123 482.278748,240.685226   C478.782440,236.754028 484.631927,237.554840 484.247131,235.191925  M485.834106,243.846283   C485.221771,243.334946 484.609467,242.823608 483.238312,241.678574   C483.494110,244.197922 483.672913,245.958893 483.851715,247.719849   C485.695770,247.256851 487.539856,246.793854 490.316498,246.096710   C488.357391,245.124039 487.389709,244.643600 485.834106,243.846283  M486.649017,240.940292   C487.241669,240.588776 487.834290,240.237274 488.426941,239.885773   C487.918304,239.614716 487.409698,239.343658 486.901062,239.072601   C486.598816,239.643112 486.296570,240.213623 486.649017,240.940292  M497.724548,234.581223   C498.023315,234.359802 498.322083,234.138382 498.620850,233.916962   C498.441376,233.727707 498.261902,233.538452 498.082458,233.349213   C497.845276,233.637451 497.608093,233.925690 497.724548,234.581223  M507.490112,267.059998   C507.237823,267.210541 506.985504,267.361053 506.733215,267.511597   C506.993591,267.651337 507.322327,267.959259 507.497009,267.888245   C507.716125,267.799133 507.808929,267.399414 507.490112,267.059998  z\",id:\"svg_321\"})),_path320||(_path320=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M572.997559,218.008545   C574.073914,218.022690 575.150269,218.036819 576.619141,218.461182   C577.009460,219.888641 577.007141,220.905884 576.997192,222.346130   C576.992981,224.179245 576.996460,225.589310 577.000000,226.999695   C577.000000,227.000000 577.000000,227.000610 576.670410,227.004181   C572.656433,229.495270 576.890991,230.747803 576.808472,231.737061   C579.115112,231.462006 581.057556,231.230392 583.000000,230.999390   C583.000000,231.000000 583.000000,231.001221 582.861084,231.321564   C581.968567,233.206924 581.214905,234.771927 580.410950,236.441360   C582.054504,236.636597 583.529724,236.811829 585.022827,237.286880   C585.357422,238.059845 585.674194,238.532990 585.947021,239.333984   C585.245728,241.276688 584.588501,242.891510 583.939514,244.486023   C582.913940,243.739059 581.865479,242.975403 580.856873,242.240814   C577.858154,245.771591 589.576782,248.435257 580.674194,251.498245   C581.178528,252.743652 581.602112,253.789658 582.182617,255.146927   C583.225586,255.639542 584.111572,255.820877 584.997498,256.375549   C583.663635,258.833954 582.329895,260.918976 580.998047,263.002014   C581.000000,263.000000 581.003845,262.995880 580.668213,263.042236   C580.554749,264.058624 580.776794,265.028717 580.999390,265.999390   C581.000000,266.000000 580.996155,265.996338 580.955566,266.342468   C576.845581,268.861603 576.229309,265.435913 575.180664,262.750488   C576.243896,260.980804 577.110352,259.490997 578.279785,258.023499   C579.248718,258.105499 579.914795,258.165222 580.580811,258.224945   C580.611450,257.942566 580.642090,257.660187 580.672668,257.377808   C579.786316,257.252686 578.899902,257.127563 577.659790,257.036530   C575.209229,258.048706 573.112366,259.026794 570.756165,259.994080   C570.324158,259.972351 570.151550,259.961426 569.987671,259.704132   C569.996460,259.457764 570.021423,258.965332 570.207520,258.877319   C570.629578,258.632965 570.803772,258.424927 570.841797,257.895874   C570.455444,257.446899 570.143494,257.267212 569.449646,257.068726   C568.049255,257.034698 567.030762,257.019470 565.997070,256.771759   C565.981934,256.539246 565.952881,256.074158 566.183960,255.912659   C566.431580,255.336594 566.448059,254.922028 566.464539,254.507477   C565.962830,254.681381 565.461121,254.855286 564.644165,254.982376   C563.873474,254.305786 563.418091,253.676010 563.335144,253.027206   C565.154419,252.481537 566.601257,251.954910 567.488037,251.632126   C569.237732,252.552032 570.617615,253.277527 572.044922,254.338165   C572.791138,254.977509 573.489929,255.281723 574.188782,255.585938   C574.318420,255.218582 574.448059,254.851242 574.577698,254.483887   C573.719299,254.321579 572.860840,254.159256 571.970947,253.659058   C571.276123,252.187439 570.612793,251.053741 569.960876,249.575119   C569.313538,248.493271 568.654785,247.756363 567.996765,247.011078   C567.997437,247.002701 567.980286,247.004089 567.953491,246.645966   C567.427368,245.459930 567.050171,244.515717 566.399414,243.831833   C565.467712,242.852798 564.336121,242.063980 563.289917,241.193924   C562.861572,242.465286 562.433228,243.736633 562.002441,245.004379   C562.000000,245.000763 562.006042,245.005142 561.632690,245.005920   C556.872803,245.227264 552.486206,245.447815 547.431091,245.701965   C548.223022,248.409210 550.701599,252.501724 548.443359,257.425140   C547.245361,255.852341 546.608765,255.016586 545.884460,254.065659   C543.417053,255.823914 541.184509,257.414764 538.952026,259.005615   C538.773865,258.781738 538.595703,258.557861 538.417603,258.333984   C539.232300,256.850555 540.046997,255.367111 540.752075,254.083176   C538.440918,252.214844 536.428650,250.588089 534.045166,248.661331   C536.230347,247.227402 538.087646,246.202179 539.692810,244.872574   C540.480469,244.220139 540.800232,243.002945 541.331726,242.041351   C540.199646,242.245773 539.071655,242.477478 537.934326,242.646988   C536.810608,242.814438 535.677612,242.918991 534.548645,243.051163   C534.469849,242.721283 534.391052,242.391403 534.312256,242.061523   C535.218384,241.282089 536.124573,240.502640 537.830322,239.035370   C535.493958,237.818771 533.748047,236.909668 532.169189,235.745575   C533.203369,234.653854 534.070618,233.817123 535.091309,233.269318   C536.425842,233.746292 537.606750,233.934357 539.081177,234.183624   C539.919800,234.494019 540.465088,234.743179 541.005127,234.996185   C541.000000,235.000000 541.007324,234.989288 541.010376,235.343948   C542.008911,236.133224 543.004456,236.567825 544.252441,237.004593   C544.673157,237.009430 544.841492,237.012131 545.012024,237.381653   C546.366150,239.155930 547.718079,240.563416 549.461670,241.978989   C551.906860,241.649719 553.960510,241.312378 556.416382,240.986130   C558.212585,240.771637 559.606506,240.546021 562.438293,240.087677   C558.798706,237.039490 556.395325,235.026611 553.995972,233.006866   C554.000000,233.000000 553.985657,233.008652 553.995300,232.606812   C553.999512,231.133102 553.994080,230.061249 553.994324,228.994690   C554.000000,229.000000 553.989136,228.989517 554.361328,228.928116   C555.154297,227.243164 555.575073,225.619614 556.345703,223.995026   C557.328430,223.512177 557.961487,223.030380 558.594482,222.548584   C558.143494,222.150055 557.692566,221.751526 557.241577,221.352997   C556.829102,222.236649 556.416565,223.120300 555.668030,224.002441   C554.883911,224.003571 554.435791,224.006210 553.993835,224.004425   C554.000000,224.000000 553.991760,224.011963 553.963135,223.666412   C552.618713,222.216476 551.302917,221.112106 549.992676,220.003876   C549.998108,220.000031 549.990662,220.013199 549.996460,219.631958   C550.002319,218.486832 550.002380,217.722931 550.002441,216.959045   C550.778931,216.639175 551.555359,216.319305 553.076050,215.998199   C555.212708,216.494766 556.916626,216.644409 557.937317,217.557678   C560.666016,219.999268 560.909973,218.300446 561.038635,215.998779   C561.586853,216.172272 562.135132,216.345764 562.852173,217.154694   C566.895447,223.272476 566.895447,223.272476 564.838013,229.045715   C564.802490,229.077332 564.909851,229.048615 565.394043,228.971375   C566.396973,228.429443 567.524658,227.978668 567.570801,227.436005   C568.005188,222.323196 569.812744,221.332764 574.145874,224.966141   C573.446106,223.313263 572.746338,221.660385 572.284546,219.836243   C572.680847,219.112839 572.839172,218.560684 572.997559,218.008545  M562.851685,226.107681   C562.790894,224.974411 562.730164,223.841141 562.669373,222.707855   C562.344421,222.684662 562.019470,222.661484 561.694458,222.638290   C560.832153,224.543701 559.969849,226.449112 559.107544,228.354538   C559.431824,228.543152 559.756104,228.731766 560.080383,228.920380   C560.905518,228.198471 561.730591,227.476562 562.851685,226.107681  M573.947510,244.642471   C573.046692,244.896210 572.145935,245.149948 571.245117,245.403687   C571.576111,245.952881 571.907043,246.502075 572.238037,247.051285   C572.967102,246.408432 573.696167,245.765579 573.947510,244.642471  M566.680176,236.213531   C566.252075,235.234283 565.823914,234.255051 565.395752,233.275818   C565.043762,233.482895 564.691772,233.689972 564.339722,233.897049   C564.972961,234.808105 565.606140,235.719147 566.680176,236.213531  M558.307556,230.419998   C558.014465,230.638138 557.721313,230.856262 557.428223,231.074402   C557.606628,231.261047 557.785034,231.447708 557.963501,231.634354   C558.194336,231.350922 558.425171,231.067474 558.307556,230.419998  M575.416321,248.478012   C575.416321,248.478012 575.523865,248.414520 575.416321,248.478012  M563.390198,231.482712   C563.390198,231.482712 563.522583,231.398453 563.390198,231.482712  M564.478333,238.605850   C564.478333,238.605850 564.575439,238.443024 564.575439,238.443024   C564.575439,238.443024 564.383484,238.463486 564.478333,238.605850  M559.405212,242.483032   C559.405212,242.483032 559.516907,242.415222 559.405212,242.483032  M578.482849,259.589569   C578.482849,259.589569 578.416565,259.478119 578.482849,259.589569  z\",id:\"svg_322\"})),_path321||(_path321=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M499.011932,228.003647   C497.587616,227.226715 496.163269,226.449799 493.552460,225.025696   C493.341888,225.749542 492.878693,227.341858 492.415466,228.934174   C491.757599,228.631866 491.099701,228.329575 490.441803,228.027267   C489.941437,225.271667 489.441040,222.516068 488.969086,219.381134   C488.997498,219.001785 489.029999,218.968338 489.387085,218.977142   C491.199371,219.866058 492.654572,220.746170 494.591736,221.917786   C494.360779,220.362411 494.184753,219.176727 494.004944,217.994843   C494.001190,217.998642 493.992889,218.007141 493.992889,218.007141   C497.517822,214.818695 501.604431,211.931641 499.646698,206.068451   C499.493713,205.610260 500.686340,204.702759 501.635742,204.390839   C503.060974,207.545395 502.117706,211.543686 507.318481,211.737854   C505.544708,209.159241 503.770966,206.580612 501.997192,204.001984   C504.083618,203.772903 506.403931,202.851181 508.207306,203.460220   C511.861603,204.694382 515.481689,206.405151 518.637085,208.605927   C520.661499,210.017853 521.831055,212.655426 523.687012,215.133606   C523.990356,215.523575 523.992676,215.983109 523.994385,216.413452   C523.990540,218.563263 523.985046,220.282730 523.991028,222.002045   C524.002441,222.001923 523.998657,221.979416 523.633301,222.051743   C522.851562,222.909790 522.489624,223.731110 522.004272,224.471619   C521.481323,225.269485 520.842834,225.991669 520.254761,226.746887   C519.845947,225.831604 519.437134,224.916336 519.304932,223.756256   C521.993835,216.549500 521.564453,214.804581 516.449524,210.783386   C514.584778,212.646271 521.079407,216.895721 514.793457,217.554184   C513.800598,214.613373 512.868713,211.853348 511.936890,209.093338   C511.456665,209.241592 510.976410,209.389862 510.496185,209.538116   C511.324280,214.337906 512.152344,219.137695 512.637695,224.000931   C512.015869,225.020630 511.934723,226.104568 511.416992,226.906784   C510.309296,228.623199 508.975830,230.193909 507.734833,231.824295   C506.822510,230.548767 505.910187,229.273254 505.334961,228.013458   C508.804749,227.500671 510.696167,220.971069 508.923859,217.945587   C507.347778,220.836609 505.670013,223.914124 503.605225,226.996597   C501.816101,227.335587 500.414001,227.669617 499.011932,228.003647  z\",id:\"svg_323\"})),_path322||(_path322=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M480.615479,197.999069   C482.389069,197.994507 483.759857,197.992050 485.540039,197.986511   C485.002136,199.093170 484.054810,200.202942 482.895264,202.016083   C482.073486,206.850342 481.463867,210.981201 480.534668,215.040161   C478.837463,214.335999 477.459839,213.703751 476.063873,212.651459   C476.335022,208.784058 476.624512,205.336685 476.914001,201.889313   C476.355530,201.856461 475.797089,201.823593 475.238647,201.790741   C475.120178,203.224686 475.001740,204.658630 474.650421,205.973755   C473.631165,205.924286 472.844727,205.993622 472.041656,205.620819   C472.024933,203.112396 472.024872,201.046143 472.024811,198.979889   C472.464539,198.985168 472.904266,198.990463 474.010529,198.995392   C475.449219,198.666565 476.221375,198.338089 476.993500,198.009583   C478.066559,198.006775 479.139587,198.003983 480.615479,197.999069  z\",id:\"svg_324\"})),_path323||(_path323=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M523.992676,215.983109   C523.992676,215.983109 523.990356,215.523575 523.992737,215.294617   C525.209473,213.553802 526.423828,212.041931 527.803955,211.089188   C527.913330,212.287994 527.566040,213.280762 527.846375,213.511688   C530.168091,215.424362 532.605896,217.196106 535.004272,219.005707   C535.000000,219.000931 534.992676,218.990433 535.004517,219.363953   C535.018127,220.484528 535.019897,221.231583 535.010254,221.989960   C534.998840,222.001251 534.976929,222.023148 534.631592,222.030807   C531.690063,223.536362 532.071167,224.637344 536.002808,227.003174   C536.000000,227.000458 535.994629,226.994339 535.966431,227.328842   C535.293518,228.794632 534.648804,229.925934 533.657959,231.045807   C532.849182,231.029892 532.386597,231.025421 531.967163,230.674805   C530.963684,227.573792 529.916931,224.818909 528.870178,222.064041   C528.331238,222.278183 527.792297,222.492325 527.253357,222.706467   C527.328430,224.043427 527.403503,225.380371 527.478577,226.717331   C527.030029,226.871902 526.581421,227.026489 526.132874,227.181061   C525.421509,225.447174 524.710083,223.713303 523.998657,221.979416   C523.998657,221.979416 524.002441,222.001923 524.359375,221.926804   C526.690918,219.622269 527.072571,217.589264 523.992676,215.983109  z\",id:\"svg_325\"})),_path324||(_path324=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M549.655518,216.999420   C550.002380,217.722931 550.002319,218.486832 549.630005,219.636444   C547.132019,220.520126 545.006226,221.018097 542.507202,221.603516   C542.503967,221.673386 542.457458,222.677017 542.378906,224.373093   C539.537231,222.302231 537.264954,220.646332 534.992676,218.990433   C534.992676,218.990433 535.000000,219.000931 535.008057,218.617157   C534.672791,216.492111 534.329468,214.750854 533.986206,213.009583   C539.015381,210.064804 541.843750,214.842087 545.632568,216.287140   C546.785828,216.727005 548.079285,216.799210 549.655518,216.999420  M537.412659,214.480927   C537.412659,214.480927 537.522095,214.414383 537.412659,214.480927  z\",id:\"svg_326\"})),_path325||(_path325=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M488.980774,219.018188   C487.645264,217.274246 486.326477,215.513870 485.006226,213.378510   C485.982574,210.229431 487.199738,207.511871 487.871857,204.665604   C488.563477,201.736908 489.331421,199.885162 492.666595,202.236496   C492.078918,203.706741 491.561768,205.000610 490.876434,207.002441   C490.148834,211.463043 489.589417,215.215698 489.029999,218.968338   C489.029999,218.968338 488.997498,219.001785 488.980774,219.018188  z\",id:\"svg_327\"})),_path326||(_path326=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M493.035431,208.009399   C494.034332,205.638336 495.033203,203.267258 496.032104,200.896194   C496.762024,201.131592 497.491974,201.366974 498.221924,201.602371   C496.815552,206.813507 495.409180,212.024643 493.997864,217.621460   C493.992889,218.007141 494.001190,217.998642 493.629120,217.988251   C492.701294,216.997864 491.623718,215.979630 491.692200,215.045410   C491.865601,212.679962 492.553558,210.352234 493.035431,208.009399  z\",id:\"svg_328\"})),_path327||(_path327=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M564.980774,228.985397   C566.895447,223.272476 566.895447,223.272476 563.015381,217.399536   C565.400085,217.342194 567.790527,217.675430 570.613770,218.311737   C571.379944,219.079041 571.713257,219.543259 572.046570,220.007492   C572.746338,221.660385 573.446106,223.313263 574.145874,224.966141   C569.812744,221.332764 568.005188,222.323196 567.570801,227.436005   C567.524658,227.978668 566.396973,228.429443 565.385681,228.961853   C565.000366,229.000870 564.980774,228.985397 564.980774,228.985397  z\",id:\"svg_329\"})),_path328||(_path328=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M492.775452,207.905350   C492.553558,210.352234 491.865601,212.679962 491.692200,215.045410   C491.623718,215.979630 492.701294,216.997864 493.632874,217.984436   C494.184753,219.176727 494.360779,220.362411 494.591736,221.917786   C492.654572,220.746170 491.199371,219.866058 489.387085,218.977142   C489.589417,215.215698 490.148834,211.463043 490.875824,207.362808   C491.534088,207.277237 492.024811,207.539276 492.775452,207.905350  z\",id:\"svg_330\"})),_path329||(_path329=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M480.854279,215.112076   C481.463867,210.981201 482.073486,206.850342 482.842163,202.353287   C483.656982,203.990524 484.582489,205.955917 484.872345,208.010941   C485.060974,209.348526 484.324615,210.816589 484.008423,212.612793   C483.419281,214.144760 482.824402,215.290131 481.855225,216.588104   C481.272095,216.197830 481.063202,215.654953 480.854279,215.112076  z\",id:\"svg_331\"})),_path330||(_path330=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M533.992920,213.006012   C534.329468,214.750854 534.672791,216.492111 535.012329,218.621948   C532.605896,217.196106 530.168091,215.424362 527.846375,213.511688   C527.566040,213.280762 527.913330,212.287994 528.004272,211.329041   C528.517822,210.745270 528.996826,210.480759 529.880859,210.404541   C531.521057,211.399765 532.756409,212.206741 533.991699,213.013702   C533.991699,213.013702 533.999695,213.002426 533.992920,213.006012  z\",id:\"svg_332\"})),_path331||(_path331=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M560.794922,215.723419   C560.909973,218.300446 560.666016,219.999268 557.937317,217.557678   C556.916626,216.644409 555.212708,216.494766 553.411743,215.995041   C555.228088,211.780334 557.994995,215.073212 560.794922,215.723419  z\",id:\"svg_333\"})),_path332||(_path332=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M533.994507,212.634521   C532.756409,212.206741 531.521057,211.399765 530.134521,210.299744   C530.580505,209.486465 531.177612,208.966217 531.774780,208.445984   C532.515625,209.715759 533.256531,210.985535 533.994507,212.634521  z\",id:\"svg_334\"})),_path333||(_path333=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M572.284546,219.836227   C571.713257,219.543259 571.379944,219.079041 571.021423,218.315262   C571.163574,218.011490 571.330994,218.007278 571.749634,218.000000   C572.000854,217.996948 572.499268,218.001648 572.748413,218.005096   C572.839172,218.560684 572.680847,219.112839 572.284546,219.836227  z\",id:\"svg_335\"})),_path334||(_path334=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D2113\",opacity:1,stroke:\"none\",d:\" M473.997101,680.998657   C479.760010,680.074219 479.681152,672.909119 479.059479,671.662659   C476.469330,666.469543 479.780609,664.890015 483.211365,662.306213   C487.153259,661.651978 490.572113,661.308960 493.990997,660.965942   C495.496490,667.631897 497.082153,674.281372 498.451874,680.975098   C498.800934,682.681030 498.346497,684.535339 498.470245,686.306885   C498.684174,689.370789 498.820282,692.485840 499.582367,695.425659   C499.727692,695.986389 502.615601,695.836121 504.619812,696.347412   C505.333923,697.454773 505.666351,698.228638 505.992188,699.387512   C505.405060,701.547546 504.824463,703.322449 504.243866,705.097351   C503.446960,705.590637 502.650024,706.083984 501.853088,706.577271   C500.670929,704.567871 499.652863,702.431763 498.239227,700.601196   C497.500824,699.645020 496.066650,699.226074 494.946686,698.564575   C494.597412,699.773560 493.878326,701.009155 493.963348,702.186829   C494.318451,707.106384 493.450012,707.958557 488.508514,708.053162   C484.616913,708.127686 482.897522,705.742920 481.423920,702.797485   C480.622375,701.195312 479.809174,699.598999 479.000214,697.586487   C478.657349,695.089844 478.714172,692.819885 477.852386,690.980347   C477.111908,689.399902 475.322113,688.311096 473.997223,686.576050   C473.997742,684.430969 473.997406,682.714844 473.997101,680.998657  M496.797363,695.390381   C496.793152,695.785400 496.788910,696.180420 496.784668,696.575439   C496.948608,696.576965 497.255005,696.589417 497.255859,696.578308   C497.286255,696.185242 497.287933,695.789917 496.797363,695.390381  z\",id:\"svg_336\"})),_path335||(_path335=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M505.998779,699.002441   C505.666351,698.228638 505.333923,697.454773 504.997375,696.343628   C502.048676,691.314148 502.400299,690.502869 507.740845,690.256653   C506.184448,685.280273 504.658051,680.399719 502.898682,674.774292   C503.431335,674.033508 504.670959,672.309631 506.170135,670.224854   C508.682159,673.275757 513.704590,673.795776 512.727051,680.212646   C512.313232,682.929016 516.582336,686.570435 521.607544,686.373291   C521.213440,691.589600 525.802246,688.195557 526.998596,690.421753   C527.651978,693.640320 529.456665,696.800049 528.714172,699.157532   C527.216919,703.911438 529.789734,705.380005 532.971497,707.341187   C533.288818,709.795105 533.641968,711.898071 533.992676,714.352600   C532.893616,719.006592 531.438171,716.002319 530.905518,714.642395   C529.168396,710.207092 526.614746,706.695190 521.975830,704.675049   C521.633545,703.570862 521.315552,702.785461 520.998291,701.568787   C520.653809,698.693848 520.879150,695.935486 519.765137,693.915833   C519.008057,692.543335 516.373779,692.206177 514.578918,691.406006   C514.352539,692.675537 513.891541,693.958740 513.964966,695.210693   C514.039856,696.488403 514.639771,697.735291 515.007324,699.404114   C515.918213,701.716431 516.831421,703.620300 517.684998,705.399841   C517.088989,706.206970 516.128662,707.507507 515.576050,708.255798   C513.390198,706.979126 511.693878,705.988342 509.998169,704.574280   C510.108032,701.314026 510.390961,698.342163 505.998779,699.002441  z\",id:\"svg_337\"})),_path336||(_path336=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M526.997559,690.000000   C525.802246,688.195557 521.213440,691.589600 522.007568,686.376648   C522.325500,685.940430 522.641174,685.868652 522.956909,685.796875   C521.338623,681.130493 519.720337,676.464172 518.310730,671.396484   C518.691772,670.993469 518.864136,670.991882 519.036499,670.990295   C519.036499,670.990295 519.495178,670.972595 520.000244,671.198242   C520.971130,672.467957 521.436829,673.511902 522.297852,675.442017   C522.868958,672.728577 523.213867,671.089844 523.558777,669.451172   C523.829712,669.454041 524.100647,669.456909 524.371582,669.459839   C524.585144,670.310608 524.798645,671.161438 525.019165,672.420044   C526.024414,678.547546 527.022705,684.267151 527.765137,689.990601   C527.338684,689.996277 527.168152,689.998108 526.997559,690.000000  z\",id:\"svg_338\"})),_path337||(_path337=/*#__PURE__*/React.createElement(\"path\",{fill:\"#493724\",opacity:1,stroke:\"none\",d:\" M493.990784,660.600952   C490.572113,661.308960 487.153259,661.651978 483.367798,661.999084   C479.559357,662.930603 476.117523,663.858032 472.247375,664.900879   C472.615051,663.478699 473.100525,661.600830 473.449463,660.250916   C471.191101,658.688354 469.137909,657.267761 467.028381,655.502930   C469.255249,655.479858 471.659668,655.450012 473.798950,656.188293   C480.140625,658.377075 486.482574,659.751099 493.584473,657.990601   C494.007172,658.776001 493.998871,659.505981 493.990784,660.600952  z\",id:\"svg_339\"})),_path338||(_path338=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M518.918762,670.772766   C518.864136,670.991882 518.691772,670.993469 518.260925,670.997803   C518.000732,670.833313 517.999084,670.666199 517.998779,670.248291   C518.326721,670.097656 518.593750,670.283508 518.918762,670.772766  z\",id:\"svg_340\"})),_path339||(_path339=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M269.035767,320.486267   C270.675903,318.953491 272.301117,317.803223 274.097778,316.270386   C274.182953,315.929688 274.096680,315.971588 274.010437,316.013489   C273.702240,314.945099 272.796661,313.471558 273.195862,312.882843   C274.487213,310.978485 276.257935,309.399200 277.876343,307.350037   C280.742462,308.377045 283.576202,309.748749 286.203278,311.020386   C287.260376,309.940857 288.629395,308.542755 290.661133,306.467896   C286.549896,305.482483 282.505707,304.513123 278.238495,303.276947   C278.817139,302.086426 279.618805,301.162720 280.954071,300.288391   C281.834106,301.028595 282.180542,301.719421 282.526978,302.410278   C282.933685,302.449951 283.340363,302.489624 283.747040,302.529297   C283.838867,301.019562 283.930664,299.509796 284.022461,298.000061   C284.770874,295.999573 285.519287,293.999115 286.924469,292.118988   C289.055756,292.824585 290.530304,293.409851 292.009216,294.239044   C292.134033,294.761536 292.254486,295.040070 292.374969,295.318604   C292.501465,295.231201 292.627960,295.143799 292.754425,295.056366   C292.501495,294.705261 292.248566,294.354187 291.992798,293.642822   C293.828430,290.548920 292.487701,287.795685 292.040710,285.047974   C292.778198,285.047333 293.515686,285.046722 294.771820,285.371246   C295.054718,287.730957 294.636902,289.766022 294.642639,291.799896   C294.646973,293.340210 295.191559,294.879028 295.495728,296.418518   C296.975494,294.861755 297.138733,293.539368 297.722382,292.440216   C298.759338,290.487213 297.262787,285.342804 295.068726,283.944000   C294.853760,282.971558 294.638794,281.999084 294.802368,281.181122   C295.436340,281.213165 295.691772,281.090729 295.947205,280.968292   C295.947205,280.968292 295.953979,280.471771 296.145294,280.147766   C296.217224,279.559967 296.097809,279.296234 295.978424,279.032471   C296.147217,278.449036 296.316010,277.865570 296.919067,277.364990   C298.534149,277.306183 299.714996,277.164551 300.956970,277.327026   C301.448395,277.957306 301.878723,278.283478 302.309082,278.609650   C302.540222,278.072479 302.771362,277.535278 303.006866,276.667419   C303.013641,275.895905 303.016052,275.455139 303.018463,275.014343   C303.745789,272.434570 304.473114,269.854767 305.213470,267.228821   C308.013550,268.111572 305.646545,273.714020 310.732666,271.379333   C310.886505,272.586273 310.708160,273.724213 310.235504,274.722839   C309.556610,276.157227 308.663361,277.490173 307.861603,278.866394   C308.433350,279.266144 309.005096,279.665894 309.576843,280.065643   C312.041504,277.383820 314.506134,274.701996 316.985168,272.009338   C316.999573,271.998474 317.020752,271.969269 317.353516,271.964874   C318.118774,270.980469 318.551239,270.000458 319.042114,268.670807   C321.406281,266.408966 323.712067,264.496765 326.112823,262.505829   C325.412109,262.164185 324.179993,261.563416 322.947876,260.962677   C322.777313,258.897217 322.606689,256.831757 322.411041,254.462891   C325.349243,254.670853 327.250244,254.805389 329.562561,255.294617   C329.704041,257.202454 329.434174,258.755585 329.148682,260.398560   C331.872864,260.226074 334.233521,260.076630 336.724243,259.918945   C334.796661,257.505249 333.378723,255.729752 331.960815,253.954269   C331.960815,253.954269 331.997070,254.001999 332.342224,254.031219   C335.252441,254.633286 338.787170,256.581207 337.014709,250.738373   C337.012115,250.290649 337.012177,250.111542 337.156158,249.617462   C338.162537,247.502777 339.024994,245.703079 339.887451,243.903381   C342.193726,241.696075 344.500031,239.488770 347.108582,236.992142   C347.663696,238.042542 348.078186,238.826828 348.750610,240.229980   C349.112854,245.228027 352.349640,249.605881 348.727722,254.025345   C348.114380,254.370331 347.787567,254.676529 347.460785,254.982727   C347.671783,255.165176 347.882782,255.347626 348.093750,255.530060   C348.400299,255.015289 348.706848,254.500534 349.354919,254.036224   C350.337280,255.230377 350.978119,256.374054 351.214355,256.795715   C353.921722,255.035187 355.458252,254.036026 357.051636,253.374008   C358.090332,254.827011 359.072113,255.942886 360.066620,257.347961   C360.385010,258.094299 360.690674,258.551422 360.772156,259.279053   C359.884674,260.552490 358.414551,262.036133 358.681732,262.484619   C361.615784,267.408813 360.311310,271.124512 355.219513,274.956299   C354.924805,272.820587 354.377655,271.317230 354.584656,269.926117   C355.444336,264.148834 354.943695,263.394318 348.953827,262.422668   C348.403717,265.545410 347.864319,268.607361 347.061127,273.166748   C346.536469,270.749207 346.450348,269.454407 345.963776,268.333405   C345.328125,266.868958 344.375549,265.542053 343.559296,264.156006   C342.855713,265.743469 341.641205,267.303802 341.555176,268.924072   C341.377563,272.269379 341.801483,275.646637 341.615082,278.844208   C337.837891,278.118011 334.423553,277.558380 331.004791,276.998840   C331.000336,276.998901 331.000916,276.990692 330.994019,276.727997   C330.862610,276.223114 330.738068,275.980957 330.613525,275.738770   C330.392426,276.159149 330.171326,276.579498 329.690613,277.124390   C328.954041,277.831787 328.477020,278.414673 327.748779,278.993591   C327.330078,278.987183 327.162598,278.984772 326.987427,278.609924   C326.360046,277.518738 325.740356,276.800079 325.120636,276.081390   C324.414825,276.715302 323.709015,277.349243 323.000977,277.990906   C322.998779,277.998596 322.983582,278.002777 322.641541,278.057617   C321.164673,279.104370 320.029816,280.096283 318.574280,281.125793   C318.504242,282.112854 318.754944,283.062286 319.003448,284.006317   C319.001282,284.000885 318.988892,283.994843 319.004456,284.366821   C318.465485,286.233521 317.910980,287.728210 317.240631,289.535065   C318.277527,289.704559 319.192535,289.854126 320.467834,290.000458   C321.552094,289.998138 322.276031,289.999084 323.002411,290.390320   C322.003662,292.832642 321.002502,294.884644 319.947815,297.288940   C317.631775,301.481445 314.380615,303.994354 309.654358,305.064117   C309.180969,307.086639 309.062836,309.048889 308.728577,311.010101   C308.512512,311.009033 308.080444,310.999054 307.791168,310.818115   C306.047211,309.382843 304.592529,308.128479 302.204071,306.069000   C302.599365,308.995239 302.802979,310.502625 303.003296,312.005005   C303.000000,312.000000 303.009796,312.007141 302.668640,311.969849   C298.831085,309.694427 296.348694,311.573975 293.606384,313.987976   C292.174530,313.980072 291.133179,313.968201 289.904297,313.724792   C289.127106,313.993195 288.537476,314.493103 287.553314,315.005646   C286.106232,315.011780 285.053741,315.005280 283.971130,314.708954   C283.536957,314.110229 283.132874,313.801331 282.728790,313.492432   C282.638336,313.752014 282.426697,314.210175 282.476227,314.240356   C282.958801,314.534912 283.484985,314.757874 283.868103,315.301941   C282.565643,315.981079 281.393829,316.359528 280.222015,316.737946   C279.815857,316.224792 279.409729,315.711639 279.003601,315.198486   C278.668182,316.468964 278.332764,317.739441 277.998047,319.004333   C277.998779,318.998779 278.009918,318.996613 277.646362,319.023315   C274.019440,319.792023 271.678894,321.506805 271.004181,325.007263   C270.989960,325.021881 270.962616,325.052948 270.962616,325.052948   C270.525482,325.027222 270.088348,325.001465 269.321228,324.718933   C268.985779,324.291412 268.980347,324.120667 268.974884,323.949890   C268.990204,322.922852 269.005554,321.895813 269.035767,320.486267  M304.688477,275.102142   C304.614288,275.217102 304.451874,275.397247 304.480652,275.436127   C304.634918,275.644958 304.836761,275.818604 305.588867,275.929932   C305.912079,275.515350 306.235291,275.100739 306.558472,274.686157   C306.054443,274.753479 305.550415,274.820801 304.688477,275.102142  M288.681000,295.792450   C287.995392,295.707123 287.309784,295.621796 286.624176,295.536469   C286.845764,296.186218 287.067352,296.835968 287.288971,297.485718   C287.810089,297.129395 288.331207,296.773071 288.681000,295.792450  M300.612701,284.337158   C300.207794,284.937103 299.802887,285.537048 299.397980,286.136993   C299.787231,286.277100 300.176453,286.417206 300.565674,286.557312   C300.784210,285.826782 301.002747,285.096283 300.612701,284.337158  M332.733887,263.900818   C332.231964,263.955780 331.730072,264.010773 331.228149,264.065735   C331.343842,264.514282 331.459534,264.962799 331.575226,265.411346   C332.003967,265.107971 332.432739,264.804565 332.733887,263.900818  M301.639709,289.914001   C301.925903,289.505035 302.212067,289.096069 302.498230,288.687103   C302.097412,288.619995 301.696564,288.552887 301.295746,288.485779   C301.226593,288.946045 301.157471,289.406281 301.639709,289.914001  M298.889313,281.251556   C299.120575,280.932312 299.351837,280.613037 299.583099,280.293793   C299.229248,280.098907 298.875397,279.903992 298.521576,279.709106   C298.520966,280.105560 298.520355,280.501984 298.889313,281.251556  M324.698364,257.576172   C324.988464,257.360291 325.278564,257.144379 325.568665,256.928467   C325.392365,256.744812 325.216095,256.561157 325.039795,256.377502   C324.811737,256.656799 324.583679,256.936096 324.698364,257.576172  M343.427948,249.702866   C343.702484,249.990509 343.977020,250.278152 344.251526,250.565796   C344.370392,250.451889 344.599030,250.245316 344.592377,250.237442   C344.336212,249.934097 344.058533,249.648926 343.427948,249.702866  M303.932800,281.253326   C303.958435,281.605896 303.984100,281.958496 304.009735,282.311096   C304.255066,282.237000 304.500397,282.162903 304.745697,282.088776   C304.624847,281.830811 304.503998,281.572815 303.932800,281.253326  M321.212524,273.231598   C321.037415,273.362274 320.862305,273.492950 320.687195,273.623627   C320.932953,273.594452 321.178711,273.565247 321.212524,273.231598  M316.516815,278.411530   C316.516815,278.411530 316.583435,278.523346 316.516815,278.411530  M337.590942,270.517426   C337.590942,270.517426 337.477112,270.585693 337.590942,270.517426  z\",id:\"svg_341\"})),_path340||(_path340=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M349.014252,253.986557   C352.349640,249.605881 349.112854,245.228027 349.005707,240.427597   C350.002075,239.804794 351.041840,239.715195 351.989929,239.372177   C353.082428,238.976944 354.093933,238.357910 355.546936,238.177414   C356.313416,240.355301 356.673615,242.191833 357.033813,244.028351   C357.464386,244.395523 357.894928,244.762680 358.643738,245.530151   C359.938446,247.888565 360.914978,249.846649 362.091614,252.206039   C360.468170,252.470688 358.731476,252.753784 356.994781,253.036880   C355.458252,254.036026 353.921722,255.035187 351.214355,256.795715   C350.978119,256.374054 350.337280,255.230377 349.348236,254.043350   C349.000000,254.000000 349.014252,253.986557 349.014252,253.986557  z\",id:\"svg_342\"})),_path341||(_path341=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M357.360657,243.964294   C356.673615,242.191833 356.313416,240.355301 355.911041,238.089752   C355.853943,237.324280 355.839050,236.987808 355.784973,236.400391   C361.029327,235.791504 363.536041,233.409348 364.536774,228.270874   C365.025024,229.908173 365.513306,231.545486 366.003296,233.559692   C366.485931,236.035019 366.966888,238.133453 367.540222,240.635117   C366.032227,240.635117 363.791748,240.635117 360.730774,240.635117   C360.296143,241.101440 358.991821,242.500839 357.360657,243.964294  z\",id:\"svg_343\"})),_path342||(_path342=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M318.983734,269.020447   C318.551239,270.000458 318.118774,270.980469 317.307953,271.655579   C316.302673,270.922485 315.675751,270.494354 315.048859,270.066193   C314.901642,270.394440 314.754425,270.722656 314.607208,271.050903   C315.395081,271.373993 316.182922,271.697083 316.970795,272.020172   C314.506134,274.701996 312.041504,277.383820 309.576843,280.065643   C309.005096,279.665894 308.433350,279.266144 307.861603,278.866394   C308.663361,277.490173 309.556610,276.157227 310.235504,274.722839   C310.708160,273.724213 310.886505,272.586273 311.052979,271.216217   C311.541412,268.012451 312.342346,265.318787 316.770264,267.085876   C317.807281,268.002014 318.395508,268.511230 318.983734,269.020447  z\",id:\"svg_344\"})),_path343||(_path343=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M339.520569,243.927048   C339.024994,245.703079 338.162537,247.502777 336.965179,249.711731   C336.759338,250.416336 336.888367,250.711670 337.017395,251.007004   C338.787170,256.581207 335.252441,254.633286 332.319824,254.010498   C331.952271,253.960556 331.926178,253.483963 332.107086,253.158600   C332.167114,252.553589 332.046234,252.273956 331.925354,251.994324   C333.890442,248.913788 333.983398,244.150909 339.520569,243.927048  z\",id:\"svg_345\"})),_path344||(_path344=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M319.042114,268.670807   C318.395508,268.511230 317.807281,268.002014 317.100159,267.218933   C316.981262,264.869751 316.981262,262.794434 316.981262,260.413483   C319.054565,260.635406 320.607880,260.801666 322.554504,260.965332   C324.179993,261.563416 325.412109,262.164185 326.112823,262.505829   C323.712067,264.496765 321.406281,266.408966 319.042114,268.670807  z\",id:\"svg_346\"})),_path345||(_path345=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M292.004822,293.995117   C290.530304,293.409851 289.055756,292.824585 287.282532,292.044250   C288.438416,289.602203 289.892975,287.355225 291.694122,285.078125   C292.487701,287.795685 293.828430,290.548920 291.994995,293.641266   C292.000000,294.000000 292.004822,293.995117 292.004822,293.995117  z\",id:\"svg_347\"})),_path346||(_path346=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M295.041992,284.218079   C297.262787,285.342804 298.759338,290.487213 297.722382,292.440216   C297.138733,293.539368 296.975494,294.861755 295.495728,296.418518   C295.191559,294.879028 294.646973,293.340210 294.642639,291.799896   C294.636902,289.766022 295.054718,287.730957 295.140564,285.369446   C294.998871,284.859039 295.007050,284.675629 295.041992,284.218079  z\",id:\"svg_348\"})),_path347||(_path347=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M331.666199,253.966675   C333.378723,255.729752 334.796661,257.505249 336.724243,259.918945   C334.233521,260.076630 331.872864,260.226074 329.148682,260.398560   C329.434174,258.755585 329.704041,257.202454 329.960571,255.264252   C330.422058,254.579147 330.896851,254.279114 331.666199,253.966675  z\",id:\"svg_349\"})),_path348||(_path348=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M283.666443,298.003265   C283.930664,299.509796 283.838867,301.019562 283.747040,302.529297   C283.340363,302.489624 282.933685,302.449951 282.526978,302.410278   C282.180542,301.719421 281.834106,301.028595 281.239655,300.155701   C281.764587,299.317902 282.537506,298.662201 283.666443,298.003265  z\",id:\"svg_350\"})),_path349||(_path349=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M302.646912,275.015106   C303.016052,275.455139 303.013641,275.895905 302.656342,276.666260   C301.832916,277.004883 301.364410,277.013916 300.895874,277.022949   C299.714996,277.164551 298.534149,277.306183 297.180664,277.195251   C298.763855,276.300415 300.519623,275.658142 302.646912,275.015106  z\",id:\"svg_351\"})),_path350||(_path350=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M330.085510,247.960968   C330.714264,247.820404 331.189758,247.931229 331.665222,248.042068   C331.186920,248.592194 330.708618,249.142319 330.230286,249.692444   C330.130920,249.199081 330.031586,248.705719 330.085510,247.960968  z\",id:\"svg_352\"})),_path351||(_path351=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M308.396057,266.950378   C308.762299,266.655640 309.127014,266.616455 309.491730,266.577301   C309.490173,266.836853 309.488586,267.096405 309.487000,267.355957   C309.122833,267.305939 308.758667,267.255951 308.396057,266.950378  z\",id:\"svg_353\"})),_path352||(_path352=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M313.388306,261.685730   C313.575317,261.829865 313.605560,262.082458 313.635803,262.335052   C313.501038,262.154755 313.366302,261.974487 313.388306,261.685730  z\",id:\"svg_354\"})),_path353||(_path353=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M331.919128,252.247421   C332.046234,252.273956 332.167114,252.553589 332.107605,252.919952   C331.922424,252.837936 331.917664,252.669235 331.919128,252.247421  z\",id:\"svg_355\"})),_path354||(_path354=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M317.441284,258.539917   C317.394958,258.468536 317.584686,258.448181 317.584686,258.448181   C317.584686,258.448181 317.487579,258.611267 317.441284,258.539917  z\",id:\"svg_356\"})),_path355||(_path355=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M295.981445,279.268372   C296.097809,279.296234 296.217224,279.559967 296.160004,279.899902   C295.983398,279.976105 295.984436,279.504242 295.981445,279.268372  z\",id:\"svg_357\"})),_path356||(_path356=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M295.720154,280.972443   C295.691772,281.090729 295.436340,281.213165 295.109924,281.157623   C295.038910,280.979645 295.493073,280.976593 295.720154,280.972443  z\",id:\"svg_358\"})),_path357||(_path357=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M209.946289,409.929474   C201.759445,405.762390 200.647934,397.068176 197.193024,389.890411   C196.567398,388.590637 196.440872,387.050659 196.065857,385.218384   C198.124908,384.882385 200.201996,384.949585 202.696411,385.423401   C204.855911,387.568085 205.736755,387.156250 205.817276,384.746857   C205.817276,384.746857 205.880280,384.372925 206.222397,384.162323   C206.741821,383.311615 206.919144,382.671539 207.096451,382.031433   C207.583649,380.162567 208.070847,378.293671 208.278107,376.213318   C207.998184,376.001831 208.009720,376.008728 208.009720,376.008728   C208.061539,375.783295 208.113358,375.557831 208.638885,375.144592   C209.428741,376.491333 209.567474,378.091156 210.102951,379.544891   C210.889725,381.680878 210.732010,385.069122 214.878876,383.673828   C215.660263,384.060852 216.288193,384.556244 216.966309,385.380798   C216.783340,387.527710 216.550156,389.345490 216.326019,391.092651   C217.552841,393.744263 222.854919,388.675934 222.475601,394.470154   C221.492783,394.226959 220.577332,394.000427 219.261261,393.674805   C219.959030,395.816742 220.476578,397.405457 220.649612,398.998779   C219.347595,399.365662 218.390076,399.727936 217.081009,400.223206   C218.645370,401.705994 219.762665,402.765015 221.104080,404.036499   C219.287231,405.268188 217.839142,406.249878 216.674515,407.039398   C214.423172,405.531250 212.305466,404.112610 210.527817,402.921783   C210.284698,405.851654 210.115494,407.890564 209.946289,409.929474  M208.961884,388.131287   C207.588058,384.085602 206.048172,389.248627 204.622940,388.053040   C203.769028,389.073517 202.023468,390.759857 202.206985,391.005615   C203.335815,392.517181 204.900330,393.703369 206.319901,394.997833   C206.745865,394.729675 207.171829,394.461517 207.597809,394.193359   C207.203857,392.713165 206.809906,391.232971 206.410400,389.740479   C207.241425,389.414520 208.072464,389.088531 208.961884,388.131287  M213.197235,388.714142   C213.557297,388.136658 213.917374,387.559143 214.277420,386.981598   C213.716064,386.809143 213.154709,386.636688 212.593353,386.464264   C212.594299,387.172424 212.595245,387.880585 213.197235,388.714142  z\",id:\"svg_359\"})),_path358||(_path358=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M214.725418,383.782135   C210.732010,385.069122 210.889725,381.680878 210.102951,379.544891   C209.567474,378.091156 209.428741,376.491333 208.759628,374.819275   C208.361359,370.791504 208.316055,366.901337 208.300415,362.554810   C208.616669,361.598358 208.903244,361.098297 209.498016,360.420197   C211.267593,361.807617 212.853104,362.490601 214.853119,361.265564   C215.095779,362.235077 215.585403,363.127991 215.329544,363.481720   C210.516846,370.135773 213.890182,376.993622 214.725418,383.782135  z\",id:\"svg_360\"})),_path359||(_path359=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M205.554688,384.805054   C205.736755,387.156250 204.855911,387.568085 203.045563,385.510803   C203.748947,385.082184 204.520523,384.972717 205.554688,384.805054  z\",id:\"svg_361\"})),_path360||(_path360=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M207.994415,375.996155   C207.831345,376.855957 207.672043,377.721497 207.512741,378.587006   C207.142090,378.449066 206.771454,378.311127 206.400818,378.173157   C206.710175,377.474792 207.019531,376.776398 207.669296,376.043396   C208.009720,376.008728 207.998184,376.001831 207.994415,375.996155  z\",id:\"svg_362\"})),_path361||(_path361=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M204.479980,363.595245   C204.361420,364.052551 204.073029,364.333649 203.766281,364.592987   C203.758270,364.599762 203.550156,364.369843 203.435364,364.250305   C203.726135,363.972229 204.016922,363.694183 204.479980,363.595245  z\",id:\"svg_363\"})),_path362||(_path362=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M206.830078,382.178375   C206.919144,382.671539 206.741821,383.311615 206.271622,383.979248   C206.173706,383.446259 206.368698,382.885803 206.830078,382.178375  z\",id:\"svg_364\"})),_path363||(_path363=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M325.951965,692.334595   C330.229431,691.383911 333.511841,692.866333 335.950989,696.713928   C332.990143,699.175964 329.983765,701.282043 326.223419,703.916382   C328.075562,704.959778 328.955658,705.857239 329.876770,705.901550   C333.049316,706.054016 334.665558,707.379272 335.141937,710.664124   C335.331055,711.968262 336.943787,713.065918 337.990601,714.615356   C336.034943,719.170898 334.587280,715.905701 333.299377,714.462341   C330.270630,711.067810 322.985657,710.863647 321.010620,714.630371   C321.000000,715.000000 320.996552,715.004883 320.996552,715.004883   C320.229401,714.991089 319.462280,714.977356 318.310974,714.930359   C317.295044,713.585510 316.663300,712.273865 315.821136,710.525330   C316.064056,710.334900 316.856110,709.714111 317.988800,708.826355   C315.778534,707.598450 313.929596,706.571289 311.775116,705.374390   C316.565125,704.115356 320.674805,703.035156 325.767609,701.696533   C319.671295,697.666138 322.520905,695.136414 325.951965,692.334595  M319.479401,710.580933   C319.479401,710.580933 319.415558,710.475525 319.479401,710.580933  z\",id:\"svg_365\"})),_path364||(_path364=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M551.861755,668.649597   C551.920044,670.111694 551.825867,671.232666 551.820251,671.299500   C549.463501,671.889709 547.786133,672.493713 546.060486,672.706848   C541.159912,673.311951 540.027405,668.843933 538.045044,666.047668   C535.863708,662.970703 534.650024,659.207642 533.008606,655.366882   C533.965271,654.583191 534.928162,654.176208 535.989990,653.447388   C536.089050,653.125610 536.508362,653.015259 536.720276,652.971436   C537.442871,653.202698 537.953491,653.477783 538.729370,653.867920   C540.343445,658.398499 541.692322,662.814087 543.303528,668.088440   C543.980652,667.083801 544.644409,666.098877 545.658569,665.396973   C546.485474,666.250122 546.961975,666.820251 547.438416,667.390442   C547.292297,666.593628 547.146118,665.796753 547.000000,664.999939   C547.236023,663.558044 547.472046,662.116150 547.854004,660.334717   C549.236450,662.766235 550.472839,665.537415 551.861755,668.649597  z\",id:\"svg_366\"})),_path365||(_path365=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M543.067505,653.302979   C543.871643,652.812988 544.715454,652.671997 545.757996,652.275635   C551.075928,652.451050 548.613708,655.951599 548.286011,658.742554   C546.370667,657.225403 544.738892,655.438599 543.067505,653.302979  z\",id:\"svg_367\"})),_path366||(_path366=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M556.232178,646.922119   C556.692871,646.253967 557.487061,645.593872 558.632812,644.944214   C558.178162,645.613098 557.372009,646.271606 556.232178,646.922119  z\",id:\"svg_368\"})),_path367||(_path367=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M551.185303,647.348633   C551.431885,647.079224 551.853333,646.992432 552.597717,646.900146   C552.400513,647.106873 551.880310,647.319092 551.185303,647.348633  z\",id:\"svg_369\"})),_path368||(_path368=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M645.046753,265.229309   C646.316589,265.377777 647.506165,265.880646 648.891846,267.012390   C649.740662,268.082092 650.393433,268.522858 651.046265,268.963654   C651.046265,268.963654 651.013123,268.998962 651.008362,269.362549   C651.684631,270.803223 652.365662,271.880341 653.046631,272.957458   C653.046631,272.957489 653.003113,272.998779 652.969299,273.363281   C651.290344,276.162415 649.645203,278.597076 648.003784,281.272888   C648.007568,281.514008 648.002441,281.996338 647.648010,281.958374   C646.053162,280.961792 644.812744,280.003174 643.366028,278.885040   C641.936279,280.160553 640.547607,281.399445 639.487793,282.345001   C640.479736,284.184235 641.238159,285.590576 641.675171,287.041138   C640.248291,287.492432 639.142761,287.899445 638.037231,288.306458   C637.903870,287.241669 637.770447,286.176880 637.637085,285.112091   C635.875366,286.333038 635.179321,288.053833 634.392395,289.732025   C634.018494,290.529327 633.471008,291.245209 632.990845,291.664062   C632.655884,290.710175 632.332214,290.090210 632.008545,289.470215   C631.560181,290.030731 631.111755,290.591217 630.663391,291.151703   C631.441528,291.435150 632.219666,291.718567 633.032593,292.345154   C633.494507,293.866425 633.921570,295.044586 634.256653,295.968964   C636.931458,293.908997 639.457153,291.963837 641.985840,290.402893   C639.601685,293.647736 637.214722,296.508362 635.604736,298.437866   C632.602051,297.340088 630.840393,296.695984 628.762939,296.067352   C628.669250,297.024994 628.891479,297.967194 629.440796,298.933960   C630.510986,299.304749 631.253967,299.650970 631.781982,300.018616   C631.566895,300.040070 631.137878,300.093506 630.866943,300.220367   C630.395874,300.892609 630.195679,301.437988 629.784424,302.105530   C629.300354,302.424713 629.109009,302.682343 628.624451,303.000641   C627.500793,303.001587 626.751892,303.002472 625.861206,302.676880   C624.479309,298.579102 623.239258,294.807739 622.272217,290.830627   C622.476440,288.401428 630.280518,286.718536 622.848083,283.692505   C619.480957,281.885651 619.480957,281.885651 619.078430,285.651062   C620.385254,285.099976 621.692627,284.550201 622.955811,284.338684   C621.253967,286.784607 619.596191,288.892303 617.585327,290.993988   C616.215271,290.119781 615.233154,289.205811 614.169128,288.399841   C613.479675,287.877594 612.670654,287.513245 611.626038,286.903137   C606.315369,282.088074 601.293823,277.448059 595.381775,271.985168   C595.661560,274.900970 595.811646,276.464996 595.589050,278.028961   C593.795837,277.288300 592.375366,276.547668 590.954468,275.438843   C590.147461,273.754059 589.454773,271.415466 588.512939,271.310394   C585.555786,270.980560 583.994202,269.892334 583.579590,266.895355   C583.522766,266.484436 581.895996,266.290680 580.996155,265.996338   C580.996155,265.996338 581.000000,266.000000 581.007935,265.624146   C581.011902,264.497498 581.007874,263.746674 581.003845,262.995880   C581.003845,262.995880 581.000000,263.000000 581.351562,262.963562   C583.646851,262.299591 585.560852,261.545624 587.542480,261.078796   C589.659241,260.580139 591.839905,260.352509 594.164795,259.915436   C594.217529,259.542236 594.098206,259.260162 593.978027,258.648956   C593.982361,257.881134 593.987488,257.442383 594.298035,256.847290   C595.607971,255.758163 596.612549,254.825424 597.622864,253.887360   C602.012329,258.830383 602.012329,258.830383 605.190796,258.011536   C605.611694,257.566162 605.810364,257.273773 606.005737,256.991913   C606.002441,257.002441 605.980164,257.004486 606.342773,256.965210   C608.471069,255.280945 610.236694,253.635956 612.199463,251.716782   C613.601746,249.636948 614.807007,247.831329 616.012207,246.025696   C621.839233,253.078735 629.837769,257.057983 637.581482,261.441559   C638.912476,262.195007 639.494202,264.241547 640.813904,265.055054   C641.895691,265.721954 643.560303,265.443298 645.046753,265.229309  M605.852966,265.281982   C606.810425,266.446167 607.767883,267.610321 608.776611,268.836914   C610.331421,266.704742 611.647278,264.900208 613.116150,262.885864   C611.723755,262.276886 610.723022,261.592377 609.639832,261.417145   C607.423401,261.058624 604.749390,263.555481 605.852966,265.281982  M645.669800,275.078339   C645.420410,275.301971 645.171082,275.525604 644.921692,275.749268   C645.446411,275.927643 645.971069,276.106049 646.495789,276.284424   C646.389465,275.922791 646.283142,275.561157 645.669800,275.078339  M585.716187,264.570465   C586.007751,264.354004 586.299377,264.137543 586.590942,263.921112   C586.415222,263.736969 586.239441,263.552795 586.063721,263.368622   C585.833008,263.649445 585.602295,263.930237 585.716187,264.570465  M617.603638,252.512955   C617.603638,252.512955 617.486206,252.580917 617.603638,252.512955  M606.484680,259.599243   C606.484680,259.599243 606.400330,259.466400 606.484680,259.599243  M650.480896,274.596069   C650.480896,274.596069 650.410828,274.479645 650.480896,274.596069  z\",id:\"svg_370\"})),_path369||(_path369=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M604.968628,258.164490   C602.012329,258.830383 602.012329,258.830383 597.622864,253.887360   C596.612549,254.825424 595.607971,255.758163 594.129944,256.610596   C593.049194,256.062103 592.441833,255.593918 591.889404,254.697510   C591.242126,249.167709 593.623474,247.256653 598.652832,247.277969   C596.770203,246.851578 594.887512,246.425186 593.171631,245.732605   C596.194824,243.021530 594.118408,242.498322 591.994141,241.997894   C592.001587,241.999130 592.006775,242.013596 591.903992,241.784637   C591.530090,241.369034 591.258911,241.182388 590.994446,240.997437   C591.001099,240.999115 591.000000,241.012787 591.002075,240.635132   C591.000183,239.502213 590.996216,238.746964 591.331360,237.945480   C594.082764,235.327515 592.383972,234.516861 589.960449,233.644257   C588.938660,230.867767 587.956360,228.446777 586.986267,226.013672   C586.998474,226.001556 587.021973,225.976776 587.363159,226.031158   C589.609009,228.171448 591.513672,230.257355 593.418396,232.343277   C593.669128,232.145203 593.919922,231.947113 594.170715,231.749023   C592.773376,228.821320 591.376038,225.893631 589.978638,222.965942   C591.129395,223.552750 592.280151,224.139542 593.740967,225.177032   C595.739258,228.803101 597.427551,231.978455 599.115784,235.153793   C599.567871,234.972839 600.019897,234.791885 600.471985,234.610931   C600.659241,233.732285 600.846558,232.853638 601.033813,231.974991   C605.536682,235.095459 610.122009,238.107666 614.476990,241.422470   C615.413635,242.135437 615.518372,243.941452 616.009277,245.634827   C614.807007,247.831329 613.601746,249.636948 611.813477,251.722656   C609.480286,253.669998 607.730225,255.337250 605.980164,257.004517   C605.980164,257.004486 606.002441,257.002441 605.753174,257.000641   C605.325562,257.387390 605.147095,257.775940 604.968628,258.164490  z\",id:\"svg_371\"})),_path370||(_path370=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M600.876465,231.673492   C600.846558,232.853638 600.659241,233.732285 600.471985,234.610931   C600.019897,234.791885 599.567871,234.972839 599.115784,235.153793   C597.427551,231.978455 595.739258,228.803101 594.040161,225.319183   C594.878052,225.351074 595.726746,225.691528 596.921021,226.103516   C598.417480,227.907364 599.568237,229.639679 600.876465,231.673492  z\",id:\"svg_372\"})),_path371||(_path371=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M675.740723,300.812347   C677.336182,304.065491 678.661011,307.122772 680.028076,310.541473   C682.166504,316.012177 684.262634,321.121460 686.358765,326.230743   C685.872437,326.494446 685.386108,326.758179 684.899780,327.021881   C683.615356,326.007812 682.330994,324.993744 681.046570,323.979645   C680.711670,324.269653 680.376770,324.559662 680.041870,324.849701   C681.049072,326.415802 682.264954,327.890198 683.005188,329.573700   C683.753296,331.275085 683.816650,333.281158 684.586914,334.967896   C685.119446,336.134003 686.343079,336.984528 688.018311,337.996765   C689.524597,339.666168 690.270386,341.314911 690.660156,343.004852   C688.409058,343.046051 686.513977,343.046051 684.361938,343.046051   C685.014832,344.366364 685.752930,345.858978 686.565308,347.501831   C687.528992,346.666656 688.330383,345.972137 688.901062,345.477509   C690.429749,346.793518 691.717346,347.901917 692.797241,349.271088   C692.055969,350.679230 691.429993,351.794281 691.013672,352.982788   C690.556458,354.287872 690.292419,355.660614 689.687744,356.816986   C688.421692,356.522980 686.989624,355.944824 686.483643,356.398834   C685.078003,357.660187 684.297974,359.671417 682.817383,360.781708   C681.328308,361.898315 679.208862,363.009979 677.519348,362.811981   C675.408936,362.564636 673.094543,361.227692 674.420898,358.052490   C675.405945,357.322449 676.078003,356.651917 676.750061,355.981354   C676.354126,355.680725 675.958130,355.380066 675.562134,355.079437   C675.008789,356.021149 674.455383,356.962891 673.543335,357.936401   C671.457275,360.309723 669.729858,362.651215 667.969055,365.333954   C667.314758,366.934052 666.693848,368.192932 666.455261,368.676697   C667.086609,370.851715 667.545715,372.433594 667.952148,374.365234   C667.645935,375.116913 667.437561,375.557465 667.131714,375.914520   C665.101929,378.283905 663.051270,380.635406 661.003662,382.996399   C661.000000,383.000061 660.992249,383.008331 660.618408,383.014099   C659.496826,383.008301 658.749207,382.996735 658.007935,382.633118   C658.578857,381.076477 659.143433,379.871948 659.628418,378.837250   C657.718506,378.353790 656.130371,377.592957 654.603149,377.700104   C653.691040,377.764099 652.874451,379.188812 651.644287,380.013977   C648.729797,380.623718 646.185974,381.221313 643.636292,381.820282   C644.347961,383.074829 645.179077,384.539825 645.633972,386.006226   C642.655518,385.548035 640.053284,385.088440 637.016113,384.552032   C637.590942,383.835205 638.339966,382.902618 639.087585,381.968903   C640.019958,380.804230 641.945312,378.901123 641.718567,378.595428   C640.427429,376.855225 638.622742,375.496063 637.084717,373.751831   C636.232483,369.249725 640.217407,369.029114 642.367737,367.178864   C641.584900,365.465851 640.792480,363.731689 640.321777,362.137695   C643.750671,363.840332 646.857849,365.402802 649.981750,366.981201   C649.998535,366.997162 650.035522,367.024933 650.001587,367.340759   C650.645081,368.771484 651.322449,369.886353 652.122559,371.209534   C652.599731,371.401215 652.954224,371.384552 653.308716,371.367859   C652.873291,371.244843 652.437866,371.121796 652.040894,370.637756   C652.294983,367.898010 652.335815,365.482849 652.819824,363.160034   C652.993103,362.328156 654.236572,361.719238 655.055420,361.352844   C657.743774,361.800140 660.368225,361.903107 663.210327,362.269409   C664.563721,362.007935 665.715088,361.510376 666.797119,360.891510   C666.862915,360.853851 666.378113,359.853424 666.149475,359.300964   C665.111938,359.883209 664.074402,360.465485 662.687988,361.005005   C659.885620,358.308411 657.452942,361.007233 655.005981,360.615997   C653.882629,359.077911 652.763123,357.914490 651.433594,356.532837   C652.811340,354.871185 654.374451,352.985931 656.048218,350.967194   C654.830627,350.762177 653.628479,350.559723 651.957092,350.278290   C653.234619,349.221130 654.150879,348.462952 655.127197,347.655060   C651.177429,343.399353 647.460815,339.394836 643.880371,335.537048   C645.069214,333.948059 646.188171,332.452515 647.051941,331.298065   C649.782654,332.693756 652.725525,335.414001 654.450684,334.786469   C656.865784,333.907959 658.373535,330.535156 660.269409,328.229492   C659.849182,327.881805 659.428955,327.534149 659.008728,327.186493   C657.938171,328.012695 656.867554,328.838898 655.234680,330.099030   C657.090881,318.212616 649.244507,328.059814 646.290527,324.954590   C648.259399,323.586090 650.130005,322.285919 652.001343,320.992279   C652.002136,320.998840 652.012634,321.000244 652.119385,321.226990   C652.502686,321.632080 652.779297,321.810425 653.277222,321.989746   C653.498474,321.990753 653.940918,322.001373 654.046265,322.169861   C654.433838,322.213593 654.716003,322.088837 654.995972,321.735321   C654.993835,321.506561 654.995178,321.049011 655.317993,320.993835   C656.082581,320.293091 656.524292,319.647491 656.978821,318.994385   C656.991699,318.986847 657.013306,318.966339 657.305054,318.945557   C657.731201,318.283173 657.865601,317.641602 657.999268,316.647583   C657.982483,315.824097 657.966309,315.352997 657.988098,314.544922   C659.502197,312.421387 660.978333,310.634857 663.032898,308.148285   C664.082764,310.751495 664.514038,311.820831 665.057495,313.168396   C666.446228,312.348999 667.625977,311.652924 668.640381,311.054413   C669.668030,312.043793 670.434143,312.781372 671.200195,313.518921   C673.397278,310.575165 675.066956,313.669281 676.980103,314.380249   C677.461487,315.441711 677.938660,316.146301 678.415833,316.850891   C678.821594,316.468658 679.227356,316.086426 679.633118,315.704163   C678.762939,315.128876 677.892822,314.553558 677.020020,313.607025   C676.774902,311.479614 678.384521,309.266663 674.869690,308.412598   C673.673279,308.121857 673.018127,304.623016 672.589600,302.494659   C672.299805,301.055267 672.838257,299.449097 673.006226,297.917542   C673.827515,298.817200 674.648743,299.716858 675.740723,300.812347  M667.091736,343.569977   C667.504822,343.870239 667.917969,344.170502 668.331055,344.470764   C668.418274,344.202515 668.618530,343.721436 668.575317,343.698456   C668.068176,343.428955 667.524475,343.228149 667.001465,342.310852   C666.536194,341.668884 666.070862,341.026917 665.605591,340.384918   C665.073303,341.259674 664.540955,342.134460 663.258362,342.998566   C662.508850,344.002289 661.759277,345.006012 660.314087,346.017395   C659.686768,346.352081 659.059509,346.686737 658.432190,347.021393   C658.731445,347.304108 659.030762,347.586823 659.330017,347.869476   C659.883667,347.243073 660.437378,346.616669 661.730286,345.966187   C662.484009,344.975311 663.237732,343.984406 664.494019,342.795746   C665.332275,342.860596 666.170593,342.925415 667.091736,343.569977  M677.237854,347.440857   C677.601929,347.421570 677.966003,347.402283 678.330078,347.383026   C677.897644,347.244415 677.465149,347.105774 677.016235,346.161438   C675.679871,341.250885 681.671631,341.915222 683.186523,337.253845   C680.838806,335.670013 677.913208,333.696289 675.008789,331.736847   C674.090088,332.255249 672.545044,333.127014 670.930664,333.315186   C670.243164,332.597321 669.555664,331.879456 668.868225,331.161591   C668.563049,331.661621 668.257874,332.161682 667.952759,332.661713   C668.968506,333.108215 669.984253,333.554718 671.077271,334.721130   C671.554016,336.486481 671.784546,338.370422 672.564636,339.989594   C673.763855,342.478638 672.497131,346.599548 677.237854,347.440857  M643.997803,375.988770   C646.554199,375.685242 649.110596,375.381714 653.310181,374.883087   C650.571960,373.292145 648.662170,371.305939 647.340576,371.640900   C645.758667,372.041809 644.679382,374.425598 643.997803,375.988770  M667.329590,357.175629   C668.115173,357.145172 668.900696,357.114746 669.686279,357.084290   C669.539001,356.514923 669.391785,355.945587 669.244507,355.376190   C668.557068,355.748840 667.869690,356.121490 667.329590,357.175629  M656.224182,343.777466   C656.353699,343.952393 656.483154,344.127319 656.612671,344.302246   C656.583740,344.054749 656.554871,343.807281 656.224182,343.777466  M656.771484,375.756775   C656.945984,375.626953 657.120422,375.497162 657.294922,375.367310   C657.049255,375.396332 656.803589,375.425354 656.771484,375.756775  M646.626709,377.527527   C646.626709,377.527527 646.448547,377.428741 646.448547,377.428741   C646.448547,377.428741 646.475891,377.626770 646.626709,377.527527  z\",id:\"svg_373\"})),_path372||(_path372=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M631.997009,299.997192   C631.253967,299.650970 630.510986,299.304749 629.424316,298.577942   C629.080017,297.482239 629.079407,296.767059 629.078735,296.051910   C630.840393,296.695984 632.602051,297.340088 635.604736,298.437866   C637.214722,296.508362 639.601685,293.647736 641.994812,290.393127   C642.000916,289.999176 642.018188,289.981873 642.364746,289.981628   C643.353027,289.520691 643.994751,289.060028 644.636475,288.599335   C643.758789,288.067413 642.881165,287.535461 642.001709,287.001770   C642.000000,287.000000 641.996643,286.996887 641.996643,286.996887   C641.238159,285.590576 640.479736,284.184235 639.487793,282.345001   C640.547607,281.399445 641.936279,280.160553 643.366028,278.885040   C644.812744,280.003174 646.053162,280.961792 647.588989,282.300354   C647.189148,284.080536 646.493835,285.480804 645.798523,286.881073   C646.064087,287.014557 646.329590,287.148071 646.595154,287.281586   C648.877075,285.498138 651.158936,283.714661 653.440857,281.931213   C653.194397,281.631378 652.947937,281.331573 652.701538,281.031738   C651.134338,281.031738 649.567200,281.031738 648.000000,281.031738   C649.645203,278.597076 651.290344,276.162415 652.993042,273.341980   C653.596130,273.133331 654.141724,273.310425 654.839722,274.052795   C654.980591,275.041046 654.969116,275.464050 654.717651,276.105591   C654.976074,277.176331 655.474426,278.028564 656.048096,279.100647   C656.262878,279.606567 656.472107,279.826233 656.750916,279.979523   C657.512634,282.064911 658.274414,284.150299 658.747559,286.514313   C658.613403,288.379730 658.767822,289.966522 658.922180,291.553314   C659.504883,291.473755 660.087585,291.394165 660.670288,291.314575   C660.118713,289.863739 659.567078,288.412903 659.015442,286.962067   C661.018555,289.386749 663.021667,291.811462 664.696411,294.579468   C662.925476,294.729462 661.482849,294.536102 660.040161,294.342743   C659.986206,294.652557 659.932251,294.962402 659.878296,295.272217   C658.004944,294.354156 656.131592,293.436096 655.247375,293.002777   C652.471680,296.319244 650.481384,298.697388 648.493835,301.072174   C650.030518,302.507935 651.382568,303.771271 652.559814,304.871185   C653.802002,304.308807 655.054749,303.741669 656.584473,303.049103   C655.898987,307.061066 655.034241,307.576385 648.744263,307.815613   C646.403931,306.587036 644.339172,305.584534 642.016968,304.457031   C643.241577,302.633789 648.347595,302.404724 644.359436,297.638458   C643.426941,299.316010 642.565430,300.865997 641.976501,301.925568   C639.692383,301.146057 638.356934,300.690277 638.360596,300.691528   C637.674133,303.042023 637.559326,304.767731 636.728455,306.017303   C634.658447,309.130676 632.262573,312.027344 629.677490,315.027435   C628.676636,314.517517 627.349731,313.853088 627.427612,313.488831   C627.751221,311.974304 628.498291,310.550262 629.432617,309.054626   C630.530884,308.348297 631.286682,307.680420 632.364197,306.823242   C634.332642,304.230621 635.423157,301.884583 632.001465,300.001587   C632.000000,300.000000 631.997009,299.997223 631.997009,299.997192  M647.512451,303.402161   C647.512451,303.402161 647.585510,303.520905 647.512451,303.402161  z\",id:\"svg_374\"})),_path373||(_path373=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M649.019714,308.041687   C655.034241,307.576385 655.898987,307.061066 656.584473,303.049103   C655.054749,303.741669 653.802002,304.308807 652.559814,304.871185   C651.382568,303.771271 650.030518,302.507935 648.493835,301.072174   C650.481384,298.697388 652.471680,296.319244 655.247375,293.002777   C656.131592,293.436096 658.004944,294.354156 659.878296,295.272217   C659.932251,294.962402 659.986206,294.652557 660.040161,294.342743   C661.482849,294.536102 662.925476,294.729462 664.704834,294.947083   C665.041443,294.971405 665.009583,294.987579 665.009888,295.242401   C665.127075,295.748383 665.244019,295.999542 665.360962,296.250702   C665.577271,295.830597 665.793579,295.410492 666.009888,294.990387   C666.848328,294.053528 667.686768,293.116638 668.948120,291.707214   C670.398438,293.716339 671.668701,295.476105 672.972656,297.576691   C672.838257,299.449097 672.299805,301.055267 672.589600,302.494659   C673.018127,304.623016 673.673279,308.121857 674.869690,308.412598   C678.384521,309.266663 676.774902,311.479614 677.008362,313.618225   C676.999329,314.000671 676.975952,314.023376 676.975952,314.023376   C675.066956,313.669281 673.397278,310.575165 671.200195,313.518921   C670.434143,312.781372 669.668030,312.043793 668.640381,311.054413   C667.625977,311.652924 666.446228,312.348999 665.057495,313.168396   C664.514038,311.820831 664.082764,310.751495 663.032898,308.148285   C660.978333,310.634857 659.502197,312.421387 657.626343,314.589417   C656.759766,314.039825 656.055481,313.147675 655.894470,312.166412   C655.741272,311.232788 656.155396,310.206055 656.320068,309.220245   C655.857178,309.145111 655.394226,309.069946 654.931274,308.994781   C654.620056,310.329468 654.308838,311.664124 653.758911,312.997498   C653.520264,312.996216 653.043030,313.003510 652.925110,312.786987   C652.604248,312.294647 652.337402,312.112701 652.116089,311.748535   C652.018066,310.886169 651.971497,310.127563 651.568176,309.751160   C650.829895,309.062164 649.880859,308.599030 649.019714,308.041687  M661.395386,298.200470   C661.787842,298.204987 662.180237,298.209503 662.572693,298.214020   C662.573608,298.050140 662.585938,297.743988 662.573853,297.743011   C662.183899,297.711914 661.791565,297.710266 661.395386,298.200470  M666.478394,308.600739   C666.478394,308.600739 666.403992,308.480988 666.478394,308.600739  z\",id:\"svg_375\"})),_path374||(_path374=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M654.957703,275.887085   C654.969116,275.464050 654.980591,275.041046 655.002502,274.300507   C656.870605,274.092499 658.728271,274.201965 661.567444,274.369293   C659.461609,277.027557 658.422729,278.338989 657.067383,279.814941   C656.472107,279.826233 656.262878,279.606567 656.038452,278.769958   C655.621704,277.441986 655.289673,276.664520 654.957703,275.887085  z\",id:\"svg_376\"})),_path375||(_path375=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M653.077148,272.609558   C652.365662,271.880341 651.684631,270.803223 651.020264,269.345215   C651.727173,270.063446 652.417358,271.162567 653.077148,272.609558  z\",id:\"svg_377\"})),_path376||(_path376=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M650.996887,268.650452   C650.393433,268.522858 649.740662,268.082092 649.044922,267.315399   C649.650452,267.438751 650.299011,267.888000 650.996887,268.650452  z\",id:\"svg_378\"})),_path377||(_path377=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M665.762085,294.977844   C665.793579,295.410492 665.577271,295.830597 665.360962,296.250702   C665.244019,295.999542 665.127075,295.748383 665.014038,295.229431   C665.017944,294.961639 665.514221,294.965302 665.762085,294.977844  z\",id:\"svg_379\"})),_path378||(_path378=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M243.288803,387.894958   C239.645477,388.840088 238.725555,391.191772 239.556229,394.681519   C239.839493,395.871490 239.619049,397.217377 239.454163,398.469025   C239.241501,400.083344 238.853470,401.674561 238.447540,403.754333   C238.107803,403.689392 237.057159,403.488647 236.756805,403.431244   C236.024048,405.064301 235.363998,406.535339 234.353210,408.004395   C234.002457,408.002411 233.997482,407.997559 233.987823,407.636505   C232.322098,405.513458 230.666061,403.751495 229.005890,401.592346   C229.000244,400.137054 228.998734,399.078918 229.344711,397.968414   C231.057022,396.371796 232.421844,394.827576 233.972458,393.073120   C232.934753,392.328827 232.087784,391.721313 230.322083,390.454834   C232.965897,388.656494 235.250137,387.102722 237.426010,385.622681   C235.808807,383.618347 235.023712,382.645325 234.279800,381.723328   C235.367783,380.423553 236.247742,379.372284 237.127716,378.321014   C236.905716,377.939667 236.683731,377.558289 236.461746,377.176941   C235.018951,377.738525 233.576141,378.300110 232.087326,378.879608   C232.266510,377.762909 232.437393,376.697906 232.726913,374.893585   C230.404968,376.485382 227.985718,378.644501 228.357132,373.988586   C230.467545,372.619659 232.230026,371.288666 234.039810,369.921936   C232.297729,367.741119 230.891556,365.980835 229.703781,364.493927   C227.622345,365.769073 225.811981,366.878174 224.000259,367.994232   C223.998886,368.001221 224.012726,367.997559 224.020447,367.670593   C224.080414,364.522614 223.625824,362.082245 220.029984,361.664764   C220.547516,360.765045 220.960495,359.916077 221.583847,359.713043   C222.903030,359.283447 224.659103,359.622131 225.648575,358.871460   C227.777481,357.256195 229.324707,354.840973 231.517883,353.355255   C233.000671,352.350739 235.178925,352.372803 237.391922,351.945618   C238.605530,351.524750 239.435730,350.967255 240.350784,350.695923   C241.456223,350.368134 243.244873,349.715729 243.680176,350.184998   C246.429291,353.148468 245.401840,360.535370 241.491333,363.888062   C241.835709,362.099670 242.061935,360.924835 242.331818,359.523285   C239.453735,360.674683 237.789581,362.089539 240.088303,365.013306   C243.339905,369.149109 242.359726,372.728638 238.745316,375.827240   C240.546524,377.293213 242.215942,378.651947 244.185471,380.017090   C244.880875,380.070709 245.276184,380.117889 245.712311,380.445953   C245.740463,381.104401 245.727798,381.481964 245.378998,382.003174   C244.792297,383.534271 244.541763,384.921692 244.183319,386.521362   C243.813232,387.120728 243.551010,387.507843 243.288803,387.894958  M235.289841,358.908356   C234.993179,359.715942 234.696518,360.523529 234.399841,361.331116   C235.231812,361.252258 236.331589,361.481506 236.844513,361.035645   C238.267944,359.798523 239.447098,358.280365 240.722748,356.873260   C240.468643,356.419037 240.214539,355.964813 239.960434,355.510590   C238.600372,356.516693 237.240311,357.522766 235.289841,358.908356  M235.282883,389.869690   C235.421082,390.431732 235.559296,390.993774 235.697495,391.555817   C236.065872,391.356415 236.434250,391.157013 236.802643,390.957611   C236.445694,390.445770 236.088745,389.933929 235.282883,389.869690  z\",id:\"svg_380\"})),_path379||(_path379=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M245.715149,381.859528   C245.727798,381.481964 245.740463,381.104401 245.787842,379.977966   C245.749329,376.393494 245.676117,373.557892 245.670059,370.339539   C245.341263,366.385925 243.766312,362.399994 249.120514,361.151733   C249.282745,362.778625 249.339874,364.054291 249.280594,365.324493   C249.052078,370.220215 245.872559,375.082794 249.115662,380.387268   C249.183838,381.498199 249.268082,382.237213 249.248993,383.304565   C249.476318,384.402466 249.806961,385.171967 250.073578,386.290375   C250.011948,387.112671 250.014328,387.586090 250.014404,388.399475   C251.000641,391.158813 251.989197,393.578186 252.927475,396.285034   C252.797180,396.951813 252.717163,397.331116 252.375885,397.788177   C251.737610,398.235809 251.360580,398.605682 250.661530,399.024048   C249.919388,401.703461 249.499298,404.334381 249.079224,406.965271   C247.553314,406.340454 246.027435,405.715637 244.263397,404.993317   C243.377609,405.957886 241.992218,407.466522 240.209839,408.967957   C240.145218,407.410187 240.535156,405.869293 240.799408,404.307190   C241.676147,399.124329 242.507675,393.933838 243.322662,388.320618   C243.551010,387.507843 243.813232,387.120728 244.507202,386.361755   C245.197693,384.613129 245.456421,383.236328 245.715149,381.859528  z\",id:\"svg_381\"})),_path380||(_path380=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M209.979767,409.968689   C210.115494,407.890564 210.284698,405.851654 210.527817,402.921783   C212.305466,404.112610 214.423172,405.531250 216.674515,407.039398   C217.839142,406.249878 219.287231,405.268188 221.104080,404.036499   C219.762665,402.765015 218.645370,401.705994 217.081009,400.223206   C218.390076,399.727936 219.347595,399.365662 220.652756,399.002014   C221.000397,399.000610 221.006180,399.005585 221.041702,399.344971   C221.725632,402.292877 222.374039,404.901367 223.004623,407.438202   C224.589569,406.665619 226.229095,405.866425 227.892700,405.419922   C228.058090,407.583984 230.531708,410.320709 224.782166,409.794708   C225.051407,410.223236 225.320633,410.651733 225.589874,411.080231   C227.051285,412.048462 228.512680,413.016663 229.974091,413.984863   C229.725159,414.796265 229.476212,415.607666 228.784653,416.741089   C227.569962,417.707245 226.797897,418.351318 226.025818,418.995392   C225.854752,418.998962 225.683701,419.002563 225.188782,418.649780   C220.975342,415.369751 217.085770,412.446045 212.832626,409.249054   C212.481934,409.355469 211.282791,409.719330 210.083633,410.083191   C210.083633,410.083191 210.013229,410.007904 209.979767,409.968689  z\",id:\"svg_382\"})),_path381||(_path381=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M210.060791,410.439575   C211.282791,409.719330 212.481934,409.355469 212.832626,409.249054   C217.085770,412.446045 220.975342,415.369751 224.932190,418.655121   C217.490051,420.866821 214.042770,415.324036 210.060791,410.439575  z\",id:\"svg_383\"})),_path382||(_path382=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M230.284576,413.836639   C228.512680,413.016663 227.051285,412.048462 225.589874,411.080231   C225.320633,410.651733 225.051407,410.223236 224.782166,409.794708   C230.531708,410.320709 228.058090,407.583984 227.943207,405.372437   C227.969635,404.972198 228.061584,404.872650 228.391647,404.953888   C230.480301,406.022583 232.238892,407.010071 233.997482,407.997559   C233.997482,407.997559 234.002457,408.002411 234.008575,408.008484   C232.874817,409.905823 231.734940,411.797119 230.284576,413.836639  z\",id:\"svg_384\"})),_path383||(_path383=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M226.326920,419.125366   C226.797897,418.351318 227.569962,417.707245 228.658997,417.039307   C228.193314,417.762085 227.410660,418.508698 226.326920,419.125366  z\",id:\"svg_385\"})),_path384||(_path384=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M248.961945,360.797943   C243.766312,362.399994 245.341263,366.385925 245.373688,370.470673   C244.635239,373.993317 244.260300,377.001984 243.885361,380.010681   C242.215942,378.651947 240.546524,377.293213 238.745316,375.827240   C242.359726,372.728638 243.339905,369.149109 240.088303,365.013306   C237.789581,362.089539 239.453735,360.674683 242.331818,359.523285   C242.061935,360.924835 241.835709,362.099670 241.491333,363.888062   C245.401840,360.535370 246.429291,353.148468 243.680176,350.184998   C243.244873,349.715729 241.456223,350.368134 240.350784,350.695923   C239.435730,350.967255 238.605530,351.524750 237.377411,351.596375   C237.020874,350.300140 237.024689,349.363007 237.378876,348.276398   C238.833359,346.483582 239.937485,344.840240 241.041595,343.196838   C239.210403,342.482697 237.393036,341.222992 235.544937,341.176117   C232.396179,341.096283 229.228119,341.778656 225.993179,341.773560   C222.612137,340.940399 219.306076,340.474487 216.000015,340.008545   C214.772476,338.589996 213.544937,337.171417 212.111420,335.514832   C213.235580,334.008453 214.471130,332.352783 215.852814,330.391113   C217.749802,329.387146 219.500671,328.689178 221.617752,328.368835   C221.988297,329.496857 221.992630,330.247192 221.697769,331.022675   C221.253250,331.707214 221.107925,332.366638 220.977188,333.367249   C221.495468,334.519104 221.999146,335.329773 222.502838,336.140442   C222.851547,335.871887 223.200256,335.603333 223.548950,335.334778   C222.716949,334.543701 221.884933,333.752655 221.153198,332.709290   C221.502991,331.972168 221.752518,331.487305 222.366699,331.005798   C227.269867,332.152100 226.999130,335.261292 225.719833,339.135223   C229.104416,337.264099 231.930603,335.250702 234.580170,333.026855   C234.730576,332.900604 233.622177,330.351776 232.776794,330.122864   C229.250488,329.168121 225.600677,328.669556 221.996124,328.003723   C222.009735,327.019958 222.023346,326.036194 222.031540,324.694763   C228.419846,322.961578 234.838211,322.192261 241.367233,323.374542   C241.885986,323.468445 242.490082,323.005371 243.069687,322.863068   C246.644684,321.985565 248.580231,323.996277 248.535675,327.495148   C248.512909,329.281799 250.089798,331.088837 251.297150,332.874847   C251.738663,337.918365 251.826675,342.973724 251.938080,348.867340   C251.985992,350.465118 252.010529,351.224609 251.992188,352.190186   C251.949310,352.396240 251.941040,352.816711 251.591217,352.867737   C250.481598,355.545166 249.721771,358.171539 248.961945,360.797943  M219.024460,337.839050   C219.443924,337.740021 219.863403,337.640991 220.282867,337.541992   C220.190689,337.417084 220.082275,337.176056 220.009003,337.186340   C219.582947,337.245911 219.165146,337.364594 219.024460,337.839050  z\",id:\"svg_386\"})),_path385||(_path385=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M210.945435,354.849701   C213.434509,352.244659 215.923599,349.639587 218.963318,346.855530   C220.036346,346.132812 220.558762,345.589050 221.380798,344.981659   C222.287292,344.860107 222.894150,344.802155 223.852844,344.835846   C224.142715,345.663788 224.370850,346.760162 223.973587,347.080261   C220.352661,349.997406 216.622803,352.779358 212.924789,355.600830   C213.149445,355.983490 213.374115,356.366150 213.598770,356.748810   C214.376419,356.809326 215.154068,356.869843 215.983704,357.309662   C216.071152,357.941681 216.106613,358.194427 216.052338,358.612610   C215.781158,358.966522 215.560486,359.075623 214.914581,359.070923   C213.334213,357.640930 212.139816,356.245331 210.945435,354.849701  z\",id:\"svg_387\"})),_path386||(_path386=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M223.501022,344.744202   C222.894150,344.802155 222.287292,344.860107 221.036514,344.953613   C219.932480,344.986206 219.472336,344.983185 219.012207,344.980194   C218.550461,344.348145 218.088730,343.716125 217.060608,343.039307   C216.494202,342.994537 216.006683,342.954132 216.006683,342.954132   C215.998428,342.217590 215.990158,341.481049 215.990967,340.376526   C219.306076,340.474487 222.612137,340.940399 225.834961,342.040375   C225.001495,343.364380 224.251251,344.054291 223.501022,344.744202  z\",id:\"svg_388\"})),_path387||(_path387=/*#__PURE__*/React.createElement(\"path\",{fill:\"#431E11\",opacity:1,stroke:\"none\",d:\" M210.640945,355.038940   C212.139816,356.245331 213.334213,357.640930 214.844727,359.382568   C215.024902,360.131714 214.888977,360.534821 214.753052,360.937958   C212.853104,362.490601 211.267593,361.807617 209.542938,360.121765   C209.631927,358.410278 209.984192,356.819214 210.640945,355.038940  z\",id:\"svg_389\"})),_path388||(_path388=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M218.997711,345.235291   C219.472336,344.983185 219.932480,344.986206 220.736893,345.017273   C220.558762,345.589050 220.036346,346.132812 219.207779,346.590698   C218.928833,346.166687 218.956024,345.828522 218.997711,345.235291  z\",id:\"svg_390\"})),_path389||(_path389=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M213.006256,341.225403   C213.125412,341.403503 213.066940,341.583344 213.008484,341.763153   C212.948517,341.584473 212.888565,341.405792 213.006256,341.225403  z\",id:\"svg_391\"})),_path390||(_path390=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M216.005737,343.217499   C216.006683,342.954132 216.494202,342.994537 216.738327,343.007172   C216.877579,343.408722 216.772705,343.797668 216.667816,344.186584   C216.446808,343.951355 216.225800,343.716095 216.005737,343.217499  z\",id:\"svg_392\"})),_path391||(_path391=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M362.016815,573.400574   C364.690033,574.503540 367.342224,575.967834 370.016815,577.390076   C370.625183,577.713562 371.369446,578.199585 371.951813,578.088745   C377.599121,577.013916 381.551666,581.154846 386.678711,582.819275   C387.277130,583.714355 387.546112,584.447021 388.166626,586.137024   C379.729492,583.791260 372.114899,581.674194 364.388916,579.223389   C364.185699,578.927185 364.093872,578.964844 364.002045,579.002441   C362.587646,578.705200 361.173279,578.407898 359.543793,578.065430   C360.512024,576.365723 361.257965,575.056152 362.016815,573.400574  z\",id:\"svg_393\"})),_path392||(_path392=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M353.007568,570.303101   C354.879364,570.783447 356.748383,571.601257 358.852478,572.667175   C357.125031,577.353088 354.538483,575.362427 351.980499,573.607666   C352.325806,572.619873 352.665283,571.630249 353.007568,570.303101  z\",id:\"svg_394\"})),_path393||(_path393=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M348.465851,573.447754   C348.523621,573.414246 348.408081,573.481323 348.465851,573.447754  z\",id:\"svg_395\"})),_path394||(_path394=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M450.612854,655.138184   C449.810089,658.314148 448.584747,661.433594 447.089264,665.240784   C444.381622,663.504333 441.852478,661.882385 439.323303,660.260437   C440.504700,659.100037 441.686127,657.939636 442.920471,656.441711   C445.379059,655.763367 447.784698,655.422485 450.612854,655.138184  z\",id:\"svg_396\"})),_path395||(_path395=/*#__PURE__*/React.createElement(\"path\",{fill:\"#604234\",opacity:1,stroke:\"none\",d:\" M251.008163,408.368866   C252.583420,411.780029 254.155136,415.568939 255.863724,419.682800   C250.145279,419.881592 250.854935,415.709686 250.996399,411.450806   C250.999039,410.258087 251.001831,409.502350 251.008163,408.368866  z\",id:\"svg_397\"})),_path396||(_path396=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M383.877625,227.720917   C384.089050,229.759109 384.089050,231.541275 384.089050,233.508438   C386.750732,233.234497 388.953430,233.007797 391.403992,232.755600   C391.403992,233.512909 391.403992,234.509048 391.403992,235.607925   C395.187622,234.307068 398.694458,233.101395 402.625305,232.167603   C403.063263,232.641891 403.077240,232.844284 402.992828,233.397842   C399.866425,238.465103 395.716766,241.367111 389.263214,241.005920   C395.806702,247.546417 399.787933,242.209396 404.075531,238.738968   C404.064972,239.350067 404.054443,239.961182 404.043884,240.572296   C405.030396,240.705948 406.016937,240.839584 407.001465,240.987045   C406.999512,241.000870 407.027191,240.996826 407.016785,241.381897   C405.692596,244.165497 404.378815,246.564041 403.083038,249.321793   C402.962280,251.350922 402.590607,253.043121 402.747498,254.684784   C402.918671,256.476105 403.579468,258.220673 403.974060,260.307434   C402.462402,260.568481 401.003723,260.465698 399.544525,260.458008   C397.881531,260.449219 396.160919,260.267517 394.567322,260.620789   C391.679230,261.261047 388.866638,262.242065 386.011169,263.048645   C385.999756,263.016479 386.066620,263.030151 385.745483,263.042145   C384.620453,264.054749 383.816528,265.055389 382.848083,266.289124   C381.798645,266.375122 380.913757,266.228058 380.018494,265.694000   C380.010834,264.532867 380.013489,263.758759 380.362183,262.950653   C382.078461,261.825745 383.367462,260.605652 384.840790,259.678558   C386.460144,258.659576 388.249207,257.910309 390.026459,257.200531   C390.197449,257.405060 390.306274,257.452545 390.415100,257.500031   C390.289001,257.323334 390.162903,257.146667 390.011963,256.598206   C390.532837,254.322647 391.078613,252.418854 391.996216,249.217926   C388.520599,251.871628 386.165100,253.670090 383.549072,255.667465   C382.494446,255.047806 381.133759,254.248322 379.700470,253.406158   C377.393280,256.256042 375.140564,259.038666 372.887848,261.821320   C373.209473,262.146118 373.531097,262.470947 373.852722,262.795746   C375.957062,262.123383 378.395660,256.606018 379.637207,262.999115   C378.387634,263.350189 377.186676,263.431580 376.695709,264.064056   C373.973175,267.571381 370.847107,268.411133 367.001831,266.001831   C367.000000,266.000000 366.996338,265.996338 367.031677,265.657410   C366.334778,263.554626 373.477539,261.691528 367.004852,259.600525   C367.004852,258.135651 366.999969,257.070251 366.997559,256.002441   C367.000000,256.000000 367.004547,255.995117 367.345520,255.964203   C368.457642,254.955322 369.228821,253.977356 370.000000,252.999695   C370.000000,253.000000 370.000000,253.000610 370.365234,252.995850   C374.896820,251.417572 375.720642,248.070053 372.953369,243.958405   C372.527008,239.108353 372.100677,234.258286 371.674347,229.408234   C372.090668,229.380753 372.507019,229.353287 372.923370,229.325821   C373.974670,231.917679 375.026001,234.509537 376.206482,237.419769   C376.994080,232.162384 377.627319,227.935501 378.349762,223.112930   C380.717926,225.051453 382.192047,226.258163 383.877625,227.720917  M381.118439,238.089935   C382.286652,237.975616 383.454865,237.861298 384.188629,237.789505   C382.833557,234.707260 381.808899,232.376572 380.784241,230.045868   C380.182739,230.187927 379.581238,230.329987 378.979736,230.472031   C379.574615,232.798752 380.169495,235.125488 381.118439,238.089935  M393.969788,238.807755   C393.657013,238.232803 393.344238,237.657852 393.031433,237.082901   C392.518768,237.362274 392.006073,237.641663 391.493408,237.921051   C392.096710,238.271591 392.699982,238.622131 393.969788,238.807755  M394.200623,255.224716   C394.027008,255.353043 393.853394,255.481384 393.679779,255.609695   C393.922821,255.581467 394.165894,255.553223 394.200623,255.224716  z\",id:\"svg_398\"})),_path397||(_path397=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M372.615479,243.937164   C375.720642,248.070053 374.896820,251.417572 370.329407,252.706635   C369.524902,252.110153 369.121460,251.798141 368.718018,251.486130   C368.630493,251.746017 368.421936,252.202896 368.474274,252.235062   C368.957184,252.531647 369.485138,252.754852 370.000000,252.999390   C369.228821,253.977356 368.457642,254.955322 367.302063,255.642639   C366.132599,254.751205 365.347504,254.150452 364.562439,253.549698   C364.342712,254.051819 364.123016,254.553940 363.903320,255.056061   C364.933929,255.372330 365.964508,255.688614 366.995117,256.004883   C366.999969,257.070251 367.004852,258.135651 366.728333,259.701080   C365.446503,260.356384 364.446045,260.511627 363.445557,260.666870   C363.660706,261.127899 363.875885,261.588928 364.091034,262.049988   C365.060669,261.366638 366.030334,260.683319 367.000000,260.000000   C373.477539,261.691528 366.334778,263.554626 366.686279,265.660309   C365.690491,266.338257 365.075409,266.674438 364.460327,267.010590   C364.765228,267.294586 365.070099,267.578552 365.375000,267.862549   C365.917908,267.242920 366.460785,266.623291 367.003662,266.003662   C370.847107,268.411133 373.973175,267.571381 376.695709,264.064056   C377.186676,263.431580 378.387634,263.350189 379.630371,263.007202   C380.000000,263.000000 380.016144,262.984619 380.016144,262.984619   C380.013489,263.758759 380.010834,264.532867 379.707886,265.845825   C375.206512,268.345795 370.933685,270.168549 366.820892,272.300171   C360.456635,275.598694 352.646729,276.758636 348.674805,284.306824   C345.934570,286.682281 343.455811,288.844269 340.687042,291.172668   C336.931183,293.888702 333.465302,296.438324 329.867126,298.686523   C328.491058,297.920074 327.277161,297.322418 325.993774,297.033752   C325.041809,296.819641 323.999573,297.006897 323.040344,296.695404   C324.040283,295.582794 324.997406,294.790192 326.341858,293.993347   C327.475006,292.671936 328.220856,291.354767 329.212463,290.023773   C329.458252,290.009949 329.950378,289.997650 330.308228,289.859680   C333.378113,289.721680 336.090179,289.721680 338.802246,289.721680   C339.209045,288.973907 339.615875,288.226105 340.022705,287.478333   C338.829010,287.003967 337.635345,286.529602 336.426727,286.049316   C338.311981,283.658966 340.144989,281.334869 341.977966,279.010773   C341.801483,275.646637 341.377563,272.269379 341.555176,268.924072   C341.641205,267.303802 342.855713,265.743469 343.559296,264.156006   C344.375549,265.542053 345.328125,266.868958 345.963776,268.333405   C346.450348,269.454407 346.536469,270.749207 347.061127,273.166748   C347.864319,268.607361 348.403717,265.545410 348.953827,262.422668   C354.943695,263.394318 355.444336,264.148834 354.584656,269.926117   C354.377655,271.317230 354.924805,272.820587 355.219513,274.956299   C360.311310,271.124512 361.615784,267.408813 358.681732,262.484619   C358.414551,262.036133 359.884674,260.552490 361.090485,259.233093   C361.935486,258.495850 362.237976,258.075073 362.540497,257.654297   C361.711639,257.455780 360.882751,257.257294 360.053894,257.058777   C359.072113,255.942886 358.090332,254.827011 357.051636,253.374008   C358.731476,252.753784 360.468170,252.470688 362.091614,252.206039   C360.914978,249.846649 359.938446,247.888565 358.934906,245.582993   C361.120911,245.286407 363.333923,245.337280 365.546967,245.388168   C365.677338,245.911713 365.807709,246.435272 365.938080,246.958817   C366.696411,245.619400 367.454742,244.279984 368.401276,242.608215   C369.645508,243.027954 370.961517,243.471939 372.615479,243.937164  z\",id:\"svg_399\"})),_path398||(_path398=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M376.515259,221.416534   C376.572540,220.940674 376.808411,220.650772 377.044312,220.360840   C377.227234,220.551712 377.410156,220.742584 377.593048,220.933441   C377.293335,221.156464 376.993622,221.379471 376.515259,221.416534  z\",id:\"svg_400\"})),_path399||(_path399=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M404.026825,259.985626   C403.579468,258.220673 402.918671,256.476105 402.747498,254.684784   C402.590607,253.043121 402.962280,251.350922 403.431854,249.294800   C406.505524,246.338150 409.248413,243.767685 411.991272,241.197220   C411.753052,240.949326 411.514832,240.701431 411.276642,240.453537   C409.860138,240.634628 408.443665,240.815735 407.027191,240.996826   C407.027191,240.996826 406.999512,241.000870 406.992676,240.600830   C405.727966,237.794128 407.388336,233.798767 403.091187,233.046677   C403.077240,232.844284 403.063263,232.641891 403.018005,232.134705   C402.986694,231.829941 402.980133,231.477142 403.271973,231.268219   C403.758270,231.037079 403.952789,231.014893 404.463867,230.991119   C405.176971,230.313873 405.573486,229.638214 405.978088,228.592911   C405.986877,227.483978 405.987518,226.744690 405.988190,226.005402   C407.304047,225.847672 408.619934,225.689941 409.962891,225.222260   C410.967651,225.289108 412.821014,225.917694 412.795593,226.006104   C412.066040,228.543655 414.100861,231.978455 410.522797,233.674820   C410.501068,233.685135 411.080475,234.963287 411.682007,236.148026   C412.345703,237.266693 412.706543,237.886719 413.067413,238.506744   C413.378693,237.672180 413.689941,236.837616 414.001221,236.003052   C414.270691,233.627975 414.540192,231.252899 414.943604,227.697189   C416.440857,229.962265 417.573792,231.676178 418.760742,233.471771   C419.939575,233.007355 421.215424,232.504700 422.481079,232.006073   C422.481079,230.561172 422.481079,229.006256 422.481079,227.722809   C419.942108,227.126602 417.531250,226.560486 415.120422,225.994370   C415.206268,225.461685 415.292114,224.929001 415.377960,224.396317   C416.911469,224.202545 418.444977,224.008759 419.618591,223.860458   C419.736481,222.435898 419.847595,221.092728 420.312927,219.568329   C421.986755,221.958267 423.749481,223.774109 426.984985,223.407928   C426.994873,224.152679 426.998627,224.579208 426.857330,225.327301   C426.144958,227.431412 425.577606,229.214005 424.857239,231.201569   C427.135742,233.937897 429.567261,236.469254 432.007385,239.371536   C433.006195,240.495163 433.996399,241.247864 434.986633,242.369156   C434.569061,244.309586 434.151459,245.881424 433.720398,247.503906   C435.210052,247.358017 436.599548,247.221924 438.141113,247.365723   C439.203064,248.098343 440.112885,248.551102 441.025696,249.335159   C441.028046,250.108124 441.027435,250.549789 440.687103,250.852737   C438.229523,250.808517 436.111725,250.903030 433.801941,250.708282   C432.675659,249.034622 431.741302,247.650208 430.279907,245.484818   C428.338898,248.620132 426.689606,251.284302 424.659119,253.953979   C423.527649,252.667267 422.777405,251.375031 422.218536,249.856689   C422.409912,247.955917 422.409912,246.281235 422.409912,244.606537   C422.016632,244.535629 421.623383,244.464722 421.230103,244.393814   C420.809723,245.926086 420.389374,247.458344 419.597717,248.987381   C416.414520,248.022461 414.411346,248.194107 415.000610,251.999695   C415.000000,252.000000 414.999908,252.000610 414.755981,251.847046   C414.014587,251.681549 413.517120,251.669617 413.019714,251.657684   C413.348114,253.397644 413.676514,255.137619 413.645416,256.862671   C411.541107,255.581558 409.796295,254.315353 408.027557,252.702332   C407.675964,251.734100 407.348267,251.112671 407.020538,250.491241   C406.740601,250.792953 406.460693,251.094650 406.180756,251.396362   C406.803406,251.949005 407.426086,252.501648 407.969666,253.402893   C406.714355,254.430115 405.538086,255.108749 404.151337,255.908813   C404.438324,257.212738 404.740662,258.586456 404.789032,259.969116   C404.365601,259.980591 404.196198,259.983093 404.026825,259.985626  M409.864807,249.863220   C409.746857,249.406754 409.663788,248.934769 409.474884,248.509827   C409.445129,248.442932 408.936096,248.589096 408.648682,248.636765   C408.949310,249.171631 409.249969,249.706512 409.864807,249.863220  z\",id:\"svg_401\"})),_path400||(_path400=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6F4B30\",opacity:1,stroke:\"none\",d:\" M399.312805,211.537354   C399.607239,211.145752 400.000946,211.092392 400.692261,211.007080   C402.024414,215.357162 403.058990,219.739197 404.337402,225.153915   C402.470306,224.053070 401.583832,223.530411 400.375427,222.907913   C400.039978,222.414734 400.026428,222.021408 400.010712,221.331970   C399.809723,217.982452 399.610901,214.929031 399.312805,211.537354  z\",id:\"svg_402\"})),_path401||(_path401=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M404.147278,230.992706   C403.952789,231.014893 403.758270,231.037079 403.271545,231.091766   C403.717743,229.419418 404.456146,227.714584 405.591370,226.007568   C405.987518,226.744690 405.986877,227.483978 405.667419,228.647858   C404.948151,229.712540 404.547699,230.352615 404.147278,230.992706  z\",id:\"svg_403\"})),_path402||(_path402=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M426.978882,223.089722   C423.749481,223.774109 421.986755,221.958267 420.347900,219.238586   C420.023285,218.909546 420.017883,218.729019 420.356140,218.237915   C421.132080,216.951981 421.564331,215.976593 422.321045,214.817398   C423.554565,211.790390 424.463623,208.947205 425.372681,206.104004   C426.472504,206.235275 427.572296,206.366562 428.819153,207.128265   C428.640137,209.274582 428.314117,210.790482 427.988098,212.306381   C428.629333,212.516602 429.270569,212.726822 429.911774,212.937042   C430.602295,210.957581 431.292816,208.978119 431.983307,206.998657   C432.427460,206.366745 432.871582,205.734818 433.644440,205.472046   C434.453796,208.106812 434.934479,210.372437 435.415131,212.638077   C435.952301,212.584396 436.489441,212.530716 437.026611,212.477051   C437.026611,209.985504 437.026611,207.493958 437.026611,205.002411   C439.123383,204.650513 441.220123,204.298599 443.650757,204.371429   C443.307495,206.580154 442.338898,208.316864 442.039612,210.162170   C441.769440,211.827866 442.231445,213.612320 442.370514,215.344391   C442.950806,215.382614 443.531067,215.420853 444.111359,215.459076   C443.202972,218.060028 442.047943,220.608948 441.483887,223.282532   C441.173401,224.754166 441.856750,226.435471 442.060272,228.262177   C442.028534,228.502106 441.990509,228.984833 441.652344,229.027695   C440.536285,230.045105 439.758331,231.019669 438.990814,231.997726   C439.001221,232.001221 438.994232,231.980148 438.657410,231.989288   C437.871307,232.001770 437.421997,232.005096 436.981262,231.674408   C437.013916,230.895905 437.038055,230.451401 437.352112,229.779984   C438.197113,227.041183 438.752136,224.529297 439.307190,222.017410   C438.693481,221.890640 438.079803,221.763855 437.466095,221.637085   C436.932312,224.389984 436.398529,227.142868 435.548401,229.881088   C434.156281,229.240906 433.080566,228.615417 432.005859,227.617874   C432.009369,226.501892 432.011902,225.757965 432.299011,224.884384   C433.018066,224.168945 433.452484,223.583160 434.608002,222.025116   C431.360504,222.478287 429.169708,222.784012 426.978882,223.089722  z\",id:\"svg_404\"})),_path403||(_path403=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M414.046448,208.439270   C415.762329,208.136444 417.470581,208.274170 419.196747,208.920883   C419.478546,209.632446 419.742462,209.835007 420.006348,210.037567   C420.006348,210.037567 419.986786,210.492432 419.979797,210.719299   C417.980621,213.625916 415.988434,216.305664 413.530243,219.612213   C413.712219,215.772003 413.875519,212.325897 414.046448,208.439270  z\",id:\"svg_405\"})),_path404||(_path404=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M408.694092,214.580551   C409.303040,212.981491 410.034241,211.741516 410.765472,210.501541   C411.377075,210.817368 411.988678,211.133179 412.600281,211.449005   C411.482269,214.767197 410.364288,218.085388 409.246277,221.403580   C408.889435,221.335754 408.532562,221.267929 408.175720,221.200104   C408.389252,219.113281 408.602814,217.026459 408.694092,214.580551  z\",id:\"svg_406\"})),_path405||(_path405=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M424.982208,206.174210   C424.463623,208.947205 423.554565,211.790390 422.003235,214.815582   C420.938263,214.993744 420.515564,214.989899 420.092896,214.986053   C420.366516,213.896042 420.640106,212.806030 420.936554,211.377136   C420.449127,208.136292 421.970825,206.773895 424.982208,206.174210  z\",id:\"svg_407\"})),_path406||(_path406=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M420.068115,215.363174   C420.515564,214.989899 420.938263,214.993744 421.678772,214.999405   C421.564331,215.976593 421.132080,216.951981 420.352234,217.967041   C420.017548,217.251236 420.030426,216.495773 420.068115,215.363174  z\",id:\"svg_408\"})),_path407||(_path407=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M413.660767,235.983124   C413.689941,236.837616 413.378693,237.672180 413.067413,238.506744   C412.706543,237.886719 412.345703,237.266693 411.969971,236.294250   C412.410156,235.948975 412.865265,235.956100 413.660767,235.983124  z\",id:\"svg_409\"})),_path408||(_path408=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M435.968201,590.512207   C437.509888,590.534912 439.082825,590.923889 440.836182,591.621338   C438.986572,593.285950 437.046570,594.212524 435.968201,590.512207  z\",id:\"svg_410\"})),_path409||(_path409=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M427.988342,589.399536   C428.430817,589.050110 428.891937,589.038757 429.698181,589.059998   C429.723450,589.901672 429.403595,590.710693 429.083740,591.519775   C428.724823,590.925720 428.365906,590.331665 427.988342,589.399536  z\",id:\"svg_411\"})),_path410||(_path410=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M254.354324,320.125427   C254.449326,321.071655 254.200958,322.069916 253.643341,323.193665   C253.559692,322.271912 253.785339,321.224670 254.354324,320.125427  z\",id:\"svg_412\"})),_path411||(_path411=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M689.944275,357.003876   C690.292419,355.660614 690.556458,354.287872 691.013672,352.982788   C691.429993,351.794281 692.055969,350.679230 692.800171,348.898071   C692.345886,346.497437 691.681030,344.730530 691.016113,342.963654   C690.270386,341.314911 689.524597,339.666168 688.389465,337.997742   C689.097107,336.560638 690.194214,335.143219 691.822083,333.040039   C693.240967,336.694977 694.253235,339.302551 695.628418,342.031494   C695.995117,344.811249 695.998962,347.469604 695.674316,350.575531   C693.089539,352.306854 693.251221,353.333832 695.995850,355.151947   C695.995850,355.151947 695.998047,355.525970 695.854370,356.031738   C693.955200,358.753418 692.161499,360.497070 689.944275,357.003876  z\",id:\"svg_413\"})),_path412||(_path412=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M249.120514,361.151733   C249.721771,358.171539 250.481598,355.545166 251.746078,353.200623   C254.792648,357.347046 256.652832,351.762909 259.005615,353.327698   C259.000183,354.103516 258.993988,354.546783 258.840759,355.046570   C258.799164,355.072906 258.904633,355.042755 259.324951,354.983917   C260.264923,354.565216 260.890015,354.175171 262.311890,353.287964   C260.561249,353.138428 259.778259,353.071564 258.978271,352.625214   C257.815247,351.672241 256.686401,350.690613 255.518295,350.641418   C254.378082,350.593384 253.197769,351.497803 252.035065,351.984070   C252.010529,351.224609 251.985992,350.465118 252.006104,349.327576   C252.395096,347.792084 252.760941,346.640503 253.078644,345.475830   C253.538147,343.791321 253.962784,342.097321 254.697845,340.199463   C257.028625,340.866913 259.063873,341.742279 261.099121,342.617645   C261.286194,342.310211 261.473267,342.002777 261.660370,341.695343   C260.734039,340.107483 259.807739,338.519592 258.881409,336.931732   C259.247528,336.633636 259.613647,336.335510 259.979767,336.037415   C261.356262,337.229126 262.732758,338.420807 264.482544,339.935669   C264.698120,338.600708 264.843536,337.700104 264.995514,336.055359   C265.004578,334.537994 265.007111,333.764832 265.009644,332.991638   C265.009644,332.991638 265.477173,332.987488 266.004547,332.878296   C267.361877,332.174164 268.191833,331.579224 269.021790,330.984253   C269.667877,329.248016 270.313934,327.511749 270.961304,325.414246   C270.962616,325.052948 270.989960,325.021881 271.248779,325.009949   C271.507568,324.997986 271.996338,324.975586 272.049011,325.314545   C273.489746,325.550049 274.877808,325.446564 276.929291,325.293671   C281.138306,330.017395 281.167969,331.786926 276.429108,335.051849   C276.951416,336.451569 277.469330,337.839539 278.256500,339.949158   C275.561218,338.674805 273.783661,337.834351 271.997528,336.651489   C271.662018,335.697906 271.335114,335.086731 271.008240,334.475525   C270.726746,334.773376 270.445282,335.071198 270.163818,335.369019   C270.773834,335.914612 271.383881,336.460205 272.001282,337.370117   C272.481689,339.858978 272.954681,341.983582 273.427704,344.108185   C273.618866,343.997833 273.810059,343.887482 274.001221,343.777130   C275.335602,346.855499 276.669983,349.933838 278.002258,353.343445   C278.000122,354.116455 278.000061,354.558228 277.676086,355.044250   C277.352203,356.865936 277.352203,358.643372 277.352203,360.848511   C275.982178,359.905518 274.776337,359.075500 273.570465,358.245483   C273.111298,358.572906 272.652130,358.900360 272.192963,359.227783   C272.867554,360.216278 273.705780,361.132629 274.180634,362.209198   C275.013062,364.096588 275.622803,366.082184 276.325806,368.026642   C274.540009,368.569763 272.754211,369.112885 270.105743,369.918396   C270.102783,369.931610 269.799072,371.283264 269.494476,372.638824   C264.847900,371.481964 262.476227,372.973877 262.009216,377.011261   C262.000000,377.000000 262.022614,377.018372 261.656982,377.015594   C259.197174,378.005707 257.103027,378.998566 255.007492,379.693420   C254.919144,378.867859 254.832169,378.340302 254.745209,377.812775   C254.531296,377.881897 254.317383,377.951019 254.103470,378.020142   C254.399658,378.681854 254.695847,379.343597 255.109512,380.285156   C255.296646,381.209076 255.366333,381.853149 255.368896,381.876831   C253.148788,381.214233 251.140259,380.614746 249.131729,380.015289   C245.872559,375.082794 249.052078,370.220215 249.280594,365.324493   C249.339874,364.054291 249.282745,362.778625 249.120514,361.151733  M261.190308,347.214111   C261.002716,347.354309 260.815125,347.494507 260.627502,347.634705   C260.890167,347.603302 261.152863,347.571899 261.190308,347.214111  z\",id:\"svg_414\"})),_path413||(_path413=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M264.672852,333.039886   C265.007111,333.764832 265.004578,334.537994 264.993225,335.700012   C264.768311,335.088623 264.552185,334.088379 264.672852,333.039886  z\",id:\"svg_415\"})),_path414||(_path414=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M268.662537,330.983032   C268.191833,331.579224 267.361877,332.174164 266.238281,332.883911   C266.730835,332.326416 267.517059,331.654144 268.662537,330.983032  z\",id:\"svg_416\"})),_path415||(_path415=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M268.691925,324.000977   C268.980347,324.120667 268.985779,324.291412 268.992554,324.718079   C268.498138,325.099518 268.002411,325.225037 267.506653,325.350525   C267.807404,324.917694 268.108185,324.484863 268.691925,324.000977  z\",id:\"svg_417\"})),_path416||(_path416=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M689.687744,356.816986   C692.161499,360.497070 693.955200,358.753418 695.850708,356.218750   C697.890015,358.731598 699.789307,361.563232 701.555054,364.934967   C700.079773,368.250183 698.738098,371.025330 697.898499,372.761932   C698.712830,374.356293 699.370300,375.643494 700.027771,376.930695   C699.278503,377.962341 698.623047,379.081543 697.759460,380.006439   C696.195740,381.681152 694.497070,383.087830 692.252563,379.881592   C690.878662,376.161591 689.414673,377.718048 687.757324,379.138672   C687.277893,379.428741 687.098877,379.680878 686.779175,380.001587   C686.550964,380.008087 686.094421,380.004120 685.718994,379.991180   C681.605408,377.409607 678.833984,370.835938 672.994446,376.997620   C673.000000,376.999207 673.004883,377.010010 673.003662,376.645538   C672.698303,374.877014 672.394165,373.472931 672.340820,373.226807   C675.149109,372.078308 677.525085,371.106628 681.102722,369.643524   C677.202209,366.842346 674.444458,364.861877 671.411682,362.683899   C670.611023,363.226135 669.306702,364.109406 668.002441,364.992706   C669.729858,362.651215 671.457275,360.309723 673.595276,357.987793   C674.005859,358.007385 674.107910,358.111969 674.107910,358.111969   C673.094543,361.227692 675.408936,362.564636 677.519348,362.811981   C679.208862,363.009979 681.328308,361.898315 682.817383,360.781708   C684.297974,359.671417 685.078003,357.660187 686.483643,356.398834   C686.989624,355.944824 688.421692,356.522980 689.687744,356.816986  M682.464600,367.294678   C682.599182,366.880371 682.756104,366.470978 682.849243,366.047516   C682.867493,365.964447 682.638794,365.827087 682.523987,365.714783   C682.388123,366.129913 682.252258,366.545044 682.464600,367.294678  z\",id:\"svg_418\"})),_path417||(_path417=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M700.282959,376.959259   C699.370300,375.643494 698.712830,374.356293 697.898499,372.761932   C698.738098,371.025330 700.079773,368.250183 701.681641,365.257568   C702.338806,368.118042 702.735840,371.195953 703.233765,374.705750   C702.700256,375.629608 702.065857,376.121582 701.238281,376.841217   C700.876221,377.041870 700.707153,377.014832 700.282959,376.959259  z\",id:\"svg_419\"})),_path418||(_path418=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M696.254700,354.918762   C693.251221,353.333832 693.089539,352.306854 695.672241,351.024628   C696.170288,352.245941 696.341919,353.465759 696.254700,354.918762  z\",id:\"svg_420\"})),_path419||(_path419=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M387.002045,228.002106   C387.077515,226.545914 387.150909,225.087631 387.230591,223.505020   C390.060181,225.017166 390.060181,225.017166 387.338226,227.948364   C386.995972,227.996155 387.000000,228.000000 387.002045,228.002106  z\",id:\"svg_421\"})),_path420||(_path420=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M384.129913,217.060150   C384.129913,216.564529 384.327637,216.335114 384.831146,216.104370   C384.782288,216.437714 384.512512,216.845474 384.129913,217.060150  z\",id:\"svg_422\"})),_path421||(_path421=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M471.790070,198.707642   C472.024872,201.046143 472.024933,203.112396 472.030029,206.048889   C471.491730,213.409348 470.948395,219.899582 470.405029,226.389801   C470.204681,226.348953 470.004364,226.308105 469.804016,226.267258   C468.419250,221.687439 467.034515,217.107605 465.649780,212.527786   C465.193329,212.625076 464.736877,212.722382 464.280426,212.819672   C464.213318,213.709213 463.840668,214.716049 464.129700,215.468857   C465.752441,219.695435 465.150238,223.224777 461.704102,226.402206   C460.486572,227.524841 459.990997,229.430542 458.934662,231.180359   C457.128357,230.252975 455.553162,229.123962 453.988617,227.995804   C453.999237,227.996674 454.003448,228.019928 454.016815,227.654816   C454.256561,226.280838 454.482941,225.271973 454.790161,223.902817   C456.070160,224.884201 456.860443,225.490112 457.650696,226.096024   C454.937683,217.815689 453.617279,209.579544 454.988892,201.037064   C458.388916,199.693741 461.788940,198.350433 465.588379,197.007355   C467.843628,197.483521 469.699493,197.959457 471.790070,198.707642  z\",id:\"svg_423\"})),_path422||(_path422=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M454.674011,201.037415   C453.617279,209.579544 454.937683,217.815689 457.650696,226.096024   C456.860443,225.490112 456.070160,224.884201 454.790161,223.902817   C454.482941,225.271973 454.256561,226.280838 453.680878,227.649139   C452.883820,228.001404 452.436066,227.994217 451.994415,227.993805   C452.000519,228.000549 452.013611,228.014175 452.026001,227.619965   C450.467468,225.435715 448.896545,223.645706 447.325592,221.855698   C446.886261,222.137421 446.446960,222.419144 446.007629,222.700867   C446.121368,224.970337 446.235107,227.239792 446.356598,229.663651   C444.978271,228.974564 443.996033,228.483490 443.008942,227.592316   C444.214600,220.858856 447.668274,214.940582 446.245728,208.083527   C445.992432,206.862564 447.321014,205.313446 447.919159,203.915833   C448.468658,204.015640 449.018158,204.115448 449.567657,204.215256   C449.243958,209.363785 448.920227,214.512299 448.596527,219.660812   C450.425964,218.833099 451.731232,217.564011 451.902100,216.157135   C452.509979,211.151810 452.731598,206.099564 453.099487,201.065094   C453.519348,201.055984 453.939240,201.046875 454.674011,201.037415  z\",id:\"svg_424\"})),_path423||(_path423=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M452.706543,201.084167   C452.731598,206.099564 452.509979,211.151810 451.902100,216.157135   C451.731232,217.564011 450.425964,218.833099 448.596527,219.660812   C448.920227,214.512299 449.243958,209.363785 449.567657,204.215256   C449.018158,204.115448 448.468658,204.015640 447.919159,203.915833   C447.321014,205.313446 445.992432,206.862564 446.245728,208.083527   C447.668274,214.940582 444.214600,220.858856 442.778412,227.599869   C442.552734,228.007538 442.092010,228.022247 442.092010,228.022247   C441.856750,226.435471 441.173401,224.754166 441.483887,223.282532   C442.047943,220.608948 443.202972,218.060028 444.111359,215.459076   C443.531067,215.420853 442.950806,215.382614 442.370514,215.344391   C442.231445,213.612320 441.769440,211.827866 442.039612,210.162170   C442.338898,208.316864 443.307495,206.580154 443.986511,204.406342   C446.763489,203.045441 449.538544,202.074341 452.706543,201.084167  z\",id:\"svg_425\"})),_path424||(_path424=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M436.642334,205.002213   C437.026611,207.493958 437.026611,209.985504 437.026611,212.477051   C436.489441,212.530716 435.952301,212.584396 435.415131,212.638077   C434.934479,210.372437 434.453796,208.106812 433.961945,205.439575   C434.719849,205.026001 435.488953,205.014008 436.642334,205.002213  z\",id:\"svg_426\"})),_path425||(_path425=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M431.621094,206.996811   C431.292816,208.978119 430.602295,210.957581 429.911774,212.937042   C429.270569,212.726822 428.629333,212.516602 427.988098,212.306381   C428.314117,210.790482 428.640137,209.274582 429.029541,207.391022   C429.814911,207.013916 430.536896,207.004440 431.621094,206.996811  z\",id:\"svg_427\"})),_path426||(_path426=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M419.894836,209.810410   C419.742462,209.835007 419.478546,209.632446 419.101440,209.203827   C419.253235,209.179596 419.518280,209.381424 419.894836,209.810410  z\",id:\"svg_428\"})),_path427||(_path427=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D38E5A\",opacity:1,stroke:\"none\",d:\" M711.995117,367.991455   C714.993530,365.603790 716.571289,367.542389 718.313843,369.847961   C721.191162,373.655090 723.342773,373.673157 726.711426,370.047424   C727.126953,370.293488 727.235535,370.727936 727.248352,371.819550   C726.436951,373.562378 725.721375,374.648041 724.194641,376.964142   C726.725220,375.723297 727.983459,375.106323 729.241699,374.489349   C730.043823,374.794525 730.846008,375.099701 732.016235,375.958069   C733.605103,377.663666 734.825867,378.816071 736.046692,379.968445   C736.452576,379.956390 736.858521,379.944336 737.649414,379.979553   C738.034363,380.026794 738.204712,380.192596 738.204712,380.192596   C740.378296,384.315521 742.551880,388.438446 744.057251,392.784546   C741.759094,393.485291 740.128967,393.962830 738.190247,394.530792   C736.713379,392.847931 735.066284,390.971039 733.789124,389.515656   C731.856628,390.883148 730.385620,391.924042 728.613770,392.809448   C724.699158,390.243195 721.996521,386.537659 716.417542,387.697601   C713.094360,388.388550 710.646484,381.676697 713.222229,379.121887   C714.348083,379.509430 715.175537,379.753235 716.027771,380.343140   C717.535339,382.716003 718.472534,382.226685 719.384888,379.993591   C720.044373,379.225006 720.360901,378.503906 720.677429,377.782806   C720.298279,377.641510 719.919128,377.500244 719.539978,377.358948   C719.345032,378.224762 719.150085,379.090576 718.585510,379.970459   C717.476196,379.990631 716.736633,379.996735 715.956970,379.679138   C715.247314,378.577301 714.577698,377.799164 713.622192,376.778503   C712.889221,373.687836 712.442200,370.839630 711.995117,367.991455  M734.957275,388.340851   C735.469849,388.080475 735.982483,387.820099 736.495056,387.559692   C735.276489,386.494720 734.057922,385.429749 732.839355,384.364746   C732.596436,384.629761 732.353577,384.894775 732.110657,385.159790   C732.894897,386.080627 733.679138,387.001495 734.957275,388.340851  M738.619751,389.374268   C738.485046,389.925507 738.339172,390.474945 738.249878,391.033447   C738.245544,391.060547 738.739197,391.167206 739.000977,391.236816   C739.066650,390.606689 739.132324,389.976593 738.619751,389.374268  z\",id:\"svg_429\"})),_path428||(_path428=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M728.914673,392.964966   C730.385620,391.924042 731.856628,390.883148 733.789124,389.515656   C735.066284,390.971039 736.713379,392.847931 738.190247,394.530792   C740.128967,393.962830 741.759094,393.485291 743.779175,393.022919   C745.084961,394.096710 746.000671,395.155304 747.087524,396.479889   C747.195374,396.950317 747.132141,397.154785 746.644653,397.683075   C744.514526,397.462891 742.808594,396.918854 740.445007,396.165070   C739.353821,397.986969 738.166321,399.969696 736.608459,401.961914   C734.696777,401.331451 733.155518,400.691498 731.614197,400.051575   C730.932922,399.430145 730.251587,398.808716 729.296082,397.618958   C728.986145,395.688751 728.950439,394.326874 728.914673,392.964966  z\",id:\"svg_430\"})),_path429||(_path429=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M736.032349,379.590088   C734.825867,378.816071 733.605103,377.663666 732.216675,376.216003   C737.055298,372.575958 735.347107,377.328339 736.032349,379.590088  z\",id:\"svg_431\"})),_path430||(_path430=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M729.170776,374.213684   C727.983459,375.106323 726.725220,375.723297 724.194641,376.964142   C725.721375,374.648041 726.436951,373.562378 727.306396,372.149231   C728.006775,372.527161 728.553345,373.232605 729.170776,374.213684  z\",id:\"svg_432\"})),_path431||(_path431=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D38E5A\",opacity:1,stroke:\"none\",d:\" M737.951721,379.941406   C738.062195,379.650391 738.255310,379.444794 738.448425,379.239166   C738.493591,379.480469 738.538757,379.721741 738.394287,380.077820   C738.204712,380.192596 738.034363,380.026794 737.951721,379.941406  z\",id:\"svg_433\"})),_path432||(_path432=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M525.012207,672.012207   C524.798645,671.161438 524.585144,670.310608 524.371582,669.459839   C524.100647,669.456909 523.829712,669.454041 523.558777,669.451172   C523.213867,671.089844 522.868958,672.728577 522.297852,675.442017   C521.436829,673.511902 520.971130,672.467957 520.229858,671.199707   C519.954285,666.283936 519.954285,661.592346 519.954285,656.900818   C523.902405,661.032532 525.805969,657.819214 527.982056,655.411560   C528.477539,655.044434 528.890381,655.008789 529.612305,654.947144   C530.104614,654.949524 530.287720,654.977844 530.747009,655.040894   C531.348755,659.407654 531.674316,663.739624 531.997925,668.867920   C531.666382,670.442078 531.336853,671.219788 530.578613,671.998413   C528.437378,672.003540 526.724792,672.007874 525.012207,672.012207  z\",id:\"svg_434\"})),_path433||(_path433=/*#__PURE__*/React.createElement(\"path\",{fill:\"#604234\",opacity:1,stroke:\"none\",d:\" M249.391022,406.979675   C249.499298,404.334381 249.919388,401.703461 250.779785,399.282104   C251.492584,399.987030 251.765091,400.482391 252.054184,401.314819   C253.093719,402.786133 254.116669,403.920349 255.134079,405.415955   C255.151459,406.497375 255.174377,407.217438 255.197296,407.937500   C254.026718,407.649628 252.856155,407.361786 251.318359,407.052734   C250.535034,407.019012 250.118942,407.006531 249.391022,406.979675  z\",id:\"svg_435\"})),_path434||(_path434=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M326.825500,551.099731   C329.589233,552.807068 332.021393,554.658142 334.710297,556.710327   C334.974426,557.989441 334.981781,559.067627 334.986389,560.546082   C331.275024,561.969971 328.477539,563.378479 324.508148,559.280457   C321.069092,555.729919 321.846252,554.989807 324.631256,552.836060   C325.276672,552.336914 325.874298,551.776001 326.825500,551.099731  z\",id:\"svg_436\"})),_path435||(_path435=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M335.003662,562.997131   C335.128204,563.139526 335.249115,563.284790 335.369995,563.430054   C335.282318,563.381592 335.194641,563.333130 335.050720,563.145996   C334.994415,563.007324 335.000000,563.000000 335.003662,562.997131  z\",id:\"svg_437\"})),_path436||(_path436=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M736.978821,401.952423   C738.166321,399.969696 739.353821,397.986969 740.445007,396.165070   C742.808594,396.918854 744.514526,397.462891 746.591736,397.999725   C751.506531,404.245514 747.666199,411.660980 749.722046,418.313019   C750.202087,419.866425 749.204529,421.876465 749.054932,424.020508   C749.231018,425.040009 749.238953,425.715393 748.841309,426.713318   C742.147583,427.742340 741.537109,429.334229 745.330200,435.133881   C745.258545,435.543182 745.186890,435.952484 744.673523,436.646576   C743.149353,437.282074 742.066956,437.632782 740.984497,437.983521   C740.211670,438.241486 739.438782,438.499420 738.389282,438.895142   C736.854553,438.203827 735.596497,437.374786 734.318481,436.149567   C733.870605,435.505463 733.442871,435.257507 733.015076,435.009552   C733.015076,435.009552 732.964722,434.538147 732.870789,434.067719   C732.597107,433.308380 732.347229,433.105988 732.027344,432.990112   C732.027344,432.990112 731.970093,432.543854 731.926941,432.323914   C731.283264,430.258118 730.682739,428.412231 730.246033,425.965271   C731.798767,425.051147 733.187622,424.738098 733.415649,424.686676   C735.037231,420.948761 736.538391,417.488342 738.246460,413.902832   C738.434387,413.411346 738.415344,413.044891 738.396301,412.678467   C738.251770,413.106476 738.107239,413.534485 737.631836,413.942749   C736.711853,413.128906 735.569702,412.290314 735.629333,411.548340   C735.887756,408.334320 736.497070,405.148499 736.978821,401.952423  M739.813232,435.736420   C739.972656,435.621002 740.132080,435.505615 740.291504,435.390167   C740.069336,435.413605 739.847229,435.437012 739.813232,435.736420  M740.409546,432.486694   C740.409546,432.486694 740.520203,432.421143 740.409546,432.486694  z\",id:\"svg_438\"})),_path437||(_path437=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M589.818481,222.656982   C591.376038,225.893631 592.773376,228.821320 594.170715,231.749023   C593.919922,231.947113 593.669128,232.145203 593.418396,232.343277   C591.513672,230.257355 589.609009,228.171448 587.321594,225.708374   C586.290161,224.632538 585.641418,223.933823 584.992676,223.235107   C584.689636,223.655472 584.386597,224.075821 584.083618,224.496185   C585.047058,225.006058 586.010498,225.515930 586.973999,226.025803   C587.956360,228.446777 588.938660,230.867767 589.960449,233.644379   C590.000000,234.000000 590.000000,234.000397 589.677917,233.976013   C588.232483,235.001205 587.109192,236.050812 585.740967,237.069336   C585.495972,237.038254 585.004883,236.987061 585.004883,236.987061   C583.529724,236.811829 582.054504,236.636597 580.410950,236.441360   C581.214905,234.771927 581.968567,233.206924 583.151123,231.293243   C583.885376,230.542053 584.190735,230.139526 584.496094,229.737000   C584.237061,229.642929 583.776550,229.428772 583.750061,229.473236   C583.460938,229.958450 583.239685,230.484116 583.000000,230.998779   C581.057556,231.230392 579.115112,231.462006 576.808472,231.737061   C576.890991,230.747803 572.656433,229.495270 576.693848,227.276184   C577.286743,227.904404 577.526611,228.264221 577.766479,228.624039   C577.948914,228.477585 578.131287,228.331131 578.313721,228.184662   C577.875793,227.789566 577.437927,227.394470 577.000000,226.999390   C576.996460,225.589310 576.992981,224.179245 577.342896,222.402740   C579.143494,223.229904 580.590698,224.423508 582.705078,226.167343   C581.609497,223.503021 580.710876,221.317703 579.812195,219.132401   C583.094177,220.204285 586.376221,221.276169 589.818481,222.656982  z\",id:\"svg_439\"})),_path438||(_path438=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M579.553589,218.975311   C580.710876,221.317703 581.609497,223.503021 582.705078,226.167343   C580.590698,224.423508 579.143494,223.229904 577.350586,221.979706   C577.007141,220.905884 577.009460,219.888641 577.021606,218.492355   C577.786011,218.348267 578.540466,218.583237 579.553589,218.975311  z\",id:\"svg_440\"})),_path439||(_path439=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M728.613770,392.809448   C728.950439,394.326874 728.986145,395.688751 729.030029,397.455444   C728.446533,397.740692 727.539673,397.825439 727.310181,397.471222   C723.128601,391.017029 717.110046,391.829803 710.513428,393.291687   C709.885620,393.002350 709.670288,392.641205 709.178284,392.122009   C708.870483,391.229584 708.839355,390.495270 709.091064,389.260834   C709.239746,388.171997 709.105652,387.583221 708.971619,386.994476   C709.010315,381.509277 709.088196,376.023926 709.065247,370.538971   C709.057739,368.748993 708.787476,366.960114 708.585449,364.723389   C709.500916,365.430176 710.468323,366.584259 711.715393,367.864868   C712.442200,370.839630 712.889221,373.687836 713.526855,377.034363   C713.452820,378.014526 713.188354,378.496307 712.923828,378.978088   C710.646484,381.676697 713.094360,388.388550 716.417542,387.697601   C721.996521,386.537659 724.699158,390.243195 728.613770,392.809448  z\",id:\"svg_441\"})),_path440||(_path440=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M745.621094,434.959839   C741.537109,429.334229 742.147583,427.742340 748.866028,427.053436   C748.168274,429.642609 747.040100,432.214203 745.621094,434.959839  z\",id:\"svg_442\"})),_path441||(_path441=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M740.991089,438.387512   C742.066956,437.632782 743.149353,437.282074 744.594177,436.948120   C745.007385,437.134979 745.058289,437.305084 745.182251,437.731873   C744.199402,439.489746 743.143433,440.990997 741.674805,442.731232   C741.262146,442.970215 740.844727,442.818542 740.844727,442.818542   C740.895691,441.476196 740.946655,440.133850 740.991089,438.387512  z\",id:\"svg_443\"})),_path442||(_path442=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M546.749390,665.000732   C547.146118,665.796753 547.292297,666.593628 547.438416,667.390442   C546.961975,666.820251 546.485474,666.250122 546.003296,665.342407   C546.164612,665.003723 546.331726,665.002625 546.749390,665.000732  z\",id:\"svg_444\"})),_path443||(_path443=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M740.486206,442.861542   C740.844727,442.818542 741.262146,442.970215 741.475708,443.025452   C739.321289,446.284332 736.953430,449.488007 734.141602,452.543701   C733.489807,452.186432 733.244568,452.039520 732.961914,451.954987   C733.746948,447.668549 735.499573,444.148193 740.486206,442.861542  z\",id:\"svg_445\"})),_path444||(_path444=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M732.673889,451.983032   C733.244568,452.039520 733.489807,452.186432 733.808350,452.577271   C733.516968,453.533081 733.114929,454.307373 732.392578,455.222870   C731.617493,455.255035 731.162598,455.145996 730.356323,455.025757   C729.998596,454.844818 729.992249,454.675079 730.219910,454.128601   C730.611572,453.446625 730.769165,453.141449 730.926758,452.836273   C731.413147,452.561218 731.899475,452.286133 732.673889,451.983032  z\",id:\"svg_446\"})),_path445||(_path445=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M328.737610,679.969238   C328.707733,680.089722 328.442444,680.208618 328.104248,680.147461   C328.031342,679.967346 328.502197,679.967590 328.737610,679.969238  z\",id:\"svg_447\"})),_path446||(_path446=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M324.663269,688.003296   C324.734619,688.494263 324.472168,688.990967 324.098541,689.746887   C323.469788,689.697937 322.952209,689.389832 322.434631,689.081726   C323.066223,688.724121 323.697845,688.366577 324.663269,688.003296  z\",id:\"svg_448\"})),_path447||(_path447=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M476.655945,198.006607   C476.221375,198.338089 475.449219,198.666565 474.340332,198.996307   C474.775238,198.666245 475.546814,198.334930 476.655945,198.006607  z\",id:\"svg_449\"})),_path448||(_path448=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M479.992676,878.000000   C479.670898,878.075195 479.140289,878.056641 479.058289,878.239380   C477.551483,881.598083 476.626160,882.431885 472.100861,884.469604   C471.503021,881.896606 470.895599,879.282349 470.143646,876.336487   C469.997650,874.936401 469.996155,873.867920 469.996582,871.996948   C469.936310,868.094788 470.058807,864.892700 466.013428,863.998962   C465.836731,863.091980 465.660065,862.185059 465.257660,860.764221   C464.689178,858.833557 464.346405,857.416809 464.042480,855.647583   C464.007996,853.524963 468.276489,851.731812 464.046021,849.738037   C464.038818,849.492432 463.995636,849.002930 463.995636,849.002930   C463.239624,845.277405 464.158936,840.878296 459.795135,838.596863   C459.532288,838.459473 459.185944,838.071655 459.215759,837.844666   C459.962128,832.164368 456.599579,828.078674 454.300781,823.357544   C451.651306,817.916199 450.703888,811.646179 449.006897,804.993958   C448.835510,802.936218 448.674500,801.620544 448.513458,800.304871   C449.243561,799.721069 449.973663,799.137329 450.703766,798.553528   C451.458649,800.346375 452.213531,802.139221 452.999725,804.006409   C454.283936,802.286621 455.139526,801.140869 456.272980,800.124084   C458.032684,801.167847 459.514526,802.082703 460.615601,803.001465   C455.814911,803.806885 456.145294,806.934021 456.013306,809.834717   C456.629791,810.106567 457.246307,810.378357 457.862793,810.650208   C458.909729,808.100952 459.956696,805.551697 461.377502,802.960449   C464.577637,803.165833 467.403870,803.413269 470.476074,803.682190   C470.493378,803.511414 470.605682,802.403564 470.702637,801.446838   C475.069580,802.491211 479.057892,803.445068 483.635559,804.539856   C483.380890,802.723389 483.189209,801.356384 483.243347,799.828369   C483.670166,799.122559 483.851227,798.577759 484.427399,798.024048   C486.282227,797.537109 487.876251,797.289612 489.174103,796.533630   C492.006439,794.883728 494.073334,795.914185 495.694824,798.167114   C493.582092,801.215515 491.777008,804.100342 489.652496,807.029663   C488.893158,807.721436 488.453217,808.368713 487.817993,809.290161   C487.092468,810.716980 486.562195,811.869446 485.678284,813.048950   C480.450134,816.882080 477.943787,822.007446 476.964722,828.368835   C475.010925,831.844971 473.535553,834.760803 474.758148,838.866638   C475.695465,842.014465 474.944672,845.664917 474.944672,849.623169   C475.549622,849.694641 476.791595,849.841431 478.026672,850.363403   C478.025238,851.488953 478.030701,852.239258 478.024841,853.325562   C478.019012,854.109497 478.024536,854.557556 478.019775,855.369812   C477.667236,856.817322 477.324982,857.900513 476.591614,859.002625   C472.346832,860.062012 473.748413,862.982727 474.724731,864.806702   C475.974976,867.142334 478.199158,868.956543 480.005859,871.433228   C480.002930,873.914062 479.997803,875.957031 479.992676,878.000000  z\",id:\"svg_450\"})),_path449||(_path449=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M384.000000,809.997559   C384.043488,809.014099 384.087006,808.030640 384.075195,808.297729   C387.168060,806.014038 389.524445,804.274109 391.880859,802.534180   C391.624237,801.910339 391.367584,801.286560 391.110962,800.662720   C387.696747,801.844482 384.282562,803.026306 380.603149,804.299866   C381.001251,799.561951 371.816010,802.083374 374.384094,794.798645   C374.842957,795.771057 375.301819,796.743530 375.690582,797.567383   C384.137909,795.108398 384.137909,795.108398 386.285309,799.409851   C387.710754,797.556458 388.813507,795.927307 390.138031,794.504639   C390.612244,793.995361 391.622284,793.984985 393.067932,793.881592   C395.089722,794.971985 396.431335,795.927673 398.430969,797.352112   C399.771118,795.279236 400.936768,793.199768 402.384125,791.339417   C403.275787,790.193359 404.861877,788.406982 405.670197,788.626221   C407.276489,789.061890 408.718994,790.536987 409.944855,791.848328   C412.397034,794.471619 414.657776,797.273987 417.035889,800.364136   C417.828766,802.140930 418.999573,803.497253 419.209717,804.989014   C419.386566,806.244263 418.445923,807.656982 417.964600,808.715454   C417.623688,808.108032 417.318176,807.785095 417.012634,807.462219   C416.831055,807.672607 416.649475,807.882996 416.467896,808.093384   C416.978607,808.395630 417.489288,808.697815 417.998535,809.394714   C418.138763,811.008911 418.280396,812.228455 418.517517,814.269775   C421.605713,809.750549 424.177216,805.987427 426.694336,802.303894   C430.709351,802.634460 434.584869,802.953552 438.542511,803.279358   C438.581940,803.808228 438.657867,804.825867 438.729370,805.784302   C441.087891,805.490295 443.044556,805.246399 445.246033,805.006714   C445.490845,805.010925 445.980469,805.021057 445.980469,805.021057   C445.199646,806.987122 444.418823,808.953186 442.984131,810.813110   C440.056671,810.375916 437.783081,810.044922 435.509460,809.713928   C435.460846,810.239441 435.412201,810.764954 435.363586,811.290527   C437.909058,811.859497 440.454529,812.428528 443.000000,812.997559   C445.232880,813.471924 447.465790,813.946289 449.562317,814.391663   C450.186371,820.121216 450.768463,825.465698 451.350555,830.810181   C450.946136,830.903503 450.541748,830.996765 450.137329,831.090027   C448.493988,826.593445 446.850677,822.096863 445.207336,817.600220   C444.904663,817.576416 444.601990,817.552612 444.299316,817.528809   C444.299316,819.128784 443.660431,821.172607 444.410156,822.251648   C447.608917,826.855652 445.681641,829.117737 440.334869,830.884094   C436.408752,825.893494 432.280334,820.645752 428.070953,815.295105   C427.884796,815.460083 427.192047,816.043823 426.534302,816.664734   C425.819275,817.339722 425.136688,818.049133 424.439941,818.743469   C425.377075,818.874084 426.312103,819.097473 427.251740,819.119019   C430.903076,819.203003 432.723724,825.068726 430.430450,829.422485   C422.605621,822.570923 422.605621,822.570923 420.840302,816.327393   C419.784027,817.175232 418.863617,817.914001 417.941467,818.654175   C417.009064,817.408203 416.186554,816.309021 414.878021,814.560364   C414.236298,816.693542 413.811646,818.105103 413.386993,819.516663   C413.108368,819.493591 412.829773,819.470520 412.551147,819.447449   C412.551147,817.397400 412.551147,815.347412 412.551147,813.478943   C409.740814,814.156799 407.276611,814.751160 404.419800,815.440186   C403.021698,822.664856 401.064331,824.546204 395.382019,823.044189   C395.000000,823.000000 395.000000,823.002197 394.964233,822.646851   C391.285645,818.193481 387.642822,814.095520 384.000000,809.997559  M425.391449,812.199951   C425.788513,812.204773 426.185577,812.209656 426.582642,812.214478   C426.583557,812.049866 426.595856,811.742432 426.583801,811.741516   C426.188873,811.710083 425.791656,811.708191 425.391449,812.199951  M422.815613,814.740967   C422.973541,814.626282 423.131470,814.511658 423.289398,814.396912   C423.069550,814.420105 422.849731,814.443298 422.815613,814.740967  z\",id:\"svg_451\"})),_path450||(_path450=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2E231C\",opacity:1,stroke:\"none\",d:\" M446.359344,805.013672   C445.980469,805.021057 445.490845,805.010925 445.109863,804.696411   C443.814758,802.588684 442.900665,800.795593 442.034302,798.617065   C443.297485,795.504639 443.822845,791.424927 445.891235,790.369751   C448.940857,788.813965 448.991150,787.069885 448.937866,784.541931   C448.874695,781.544495 448.923004,778.544678 448.923004,776.125854   C451.818268,775.401306 453.894958,774.881592 456.153107,774.316467   C456.643311,775.418884 457.215454,776.705566 457.847504,778.126953   C460.556671,774.479919 462.159363,772.322388 464.265961,769.486511   C465.041107,771.944397 465.521759,773.468506 466.000977,774.996338   C465.999512,775.000000 465.992676,775.002441 465.623138,775.009766   C463.431702,776.324219 461.323761,777.372559 459.852875,778.997559   C457.467407,781.633057 459.135223,785.079468 462.855560,786.307495   C461.699951,788.064575 460.450256,789.398987 459.704376,790.972290   C458.313324,793.906616 457.215179,796.979797 455.995117,799.995117   C455.139526,801.140869 454.283936,802.286621 452.999725,804.006409   C452.213531,802.139221 451.458649,800.346375 450.703766,798.553528   C449.973663,799.137329 449.243561,799.721069 448.513458,800.304871   C448.674500,801.620544 448.835510,802.936218 449.003754,804.619873   C448.253387,804.993958 447.495819,805.000061 446.359344,805.013672  z\",id:\"svg_452\"})),_path451||(_path451=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M464.003662,856.000000   C464.346405,857.416809 464.689178,858.833557 465.036499,860.623352   C463.551788,860.675964 462.062531,860.355591 459.151367,859.729309   C460.865570,863.050110 461.909149,865.071838 462.952728,867.093506   C462.714752,867.317566 462.476807,867.541626 462.238861,867.765686   C461.192505,867.027893 460.146149,866.290039 458.785767,865.330811   C457.860291,866.073120 456.785248,866.935425 455.531372,867.941162   C453.583984,864.666504 451.808716,861.681335 450.033478,858.696106   C449.514679,858.948242 448.995880,859.200378 448.477081,859.452454   C449.333313,862.045593 450.189545,864.638733 451.045776,867.231934   C450.546326,867.462097 450.046906,867.692322 449.547455,867.922546   C447.400757,863.922302 445.239075,859.930054 443.115326,855.917664   C442.345581,854.463440 441.635132,852.975342 440.956604,851.476013   C440.461700,850.382385 440.063446,849.244934 439.622101,848.127014   C440.903778,848.127014 442.185486,848.127014 443.766541,848.127014   C443.768585,843.405273 439.355377,844.418396 436.487976,842.660645   C439.112579,841.503784 442.051849,840.765198 444.991119,840.026672   C446.160797,843.180542 447.330444,846.334473 448.681366,849.977051   C449.596069,848.940308 450.251099,848.197815 451.283386,847.027771   C452.253845,849.260315 453.120728,851.254517 453.656067,853.676880   C453.324524,855.555847 453.324524,857.006653 453.324524,858.457458   C453.728424,858.376892 454.132324,858.296326 454.536255,858.215759   C454.357086,856.809692 454.177948,855.403625 453.998779,853.997559   C455.422180,855.079468 456.845551,856.161316 458.876556,857.705078   C457.513245,852.732727 456.247742,848.117188 454.722656,842.554749   C458.475647,845.218445 460.911926,846.947632 463.671936,848.839844   C463.995636,849.002930 464.038818,849.492432 463.726501,849.895325   C462.634308,851.663147 461.453766,852.948120 461.161926,854.410400   C460.630615,857.072266 462.231995,856.913818 464.003662,856.000000  M447.512817,856.739258   C448.046692,856.616211 448.580597,856.493164 449.114471,856.370117   C448.059113,855.589783 447.003754,854.809509 445.948364,854.029175   C445.705078,854.380188 445.461792,854.731201 445.218506,855.082214   C445.795105,855.540405 446.371704,855.998535 447.512817,856.739258  z\",id:\"svg_453\"})),_path452||(_path452=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M329.352753,813.951660   C329.446167,810.895508 329.242126,808.167419 327.279388,805.320435   C323.479034,799.807861 325.088318,792.888855 330.592834,788.429260   C332.104523,789.015381 333.680267,789.450806 335.069824,790.221863   C336.139557,790.815430 337.910461,792.062012 337.771729,792.623657   C336.200043,798.986816 340.926453,803.083496 343.030304,808.098022   C343.280640,808.694641 343.493896,809.306824 343.702393,809.854187   C341.972137,811.101257 340.372467,812.254211 339.903076,812.592529   C338.222992,811.461975 336.679047,810.305481 334.978516,809.466370   C334.814270,809.385315 333.678955,811.272034 332.985718,812.609253   C331.883179,813.288879 330.789368,813.604675 329.352753,813.951660  z\",id:\"svg_454\"})),_path453||(_path453=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M431.012115,872.993652   C429.573212,870.869995 428.217377,868.683838 426.675873,866.637451   C424.395386,863.610229 422.419678,859.936462 417.464020,861.463013   C417.277069,861.520569 416.509094,859.691895 416.005920,858.371094   C417.333832,857.376648 418.667694,856.753357 420.447968,855.921387   C420.712067,856.229492 421.486084,857.132385 422.838013,858.709534   C426.488037,850.917908 430.573883,844.364746 438.609924,853.643860   C434.694122,852.312195 433.440613,854.579285 431.605927,858.730408   C434.859131,857.531982 436.932007,856.768433 439.004883,856.004883   C442.183899,856.517456 442.438751,857.848022 440.372284,860.198181   C439.359680,861.349792 438.779602,862.881714 437.779785,864.718018   C437.277374,865.396179 437.088409,865.661621 436.988800,865.990601   C436.988800,865.990601 436.998779,865.997559 436.628784,866.001709   C434.509888,868.335144 432.760986,870.664368 431.012115,872.993652  z\",id:\"svg_455\"})),_path454||(_path454=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352214\",opacity:1,stroke:\"none\",d:\" M326.003662,854.995117   C330.189789,853.747009 334.333313,852.304260 338.588776,851.372925   C339.816040,851.104309 341.365326,852.307007 342.766907,852.835083   C342.084991,854.172607 341.577972,855.642639 340.685150,856.820190   C338.762360,859.356262 336.641174,861.741943 333.633209,865.350403   C333.633209,862.453125 333.633209,861.139771 333.633209,859.683167   C330.901611,859.683167 328.239899,859.683167 325.334534,859.683167   C328.629883,863.159058 331.802429,866.505432 335.147461,870.033691   C331.204620,870.033691 327.888214,870.033691 324.230225,870.033691   C325.079071,868.915955 325.905548,867.827637 326.906281,866.509888   C323.873962,863.482605 320.853027,860.368103 323.993011,855.381409   C323.999237,855.000793 324.002441,854.997559 324.335938,854.997925   C325.114166,854.997253 325.558929,854.996155 326.003662,854.995117  z\",id:\"svg_456\"})),_path455||(_path455=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M322.002441,855.007324   C319.458099,859.887268 316.787048,864.710693 310.205109,864.304199   C309.277832,864.246948 308.071472,862.885620 307.643982,861.857666   C306.916382,860.108521 306.704956,858.144653 306.340973,856.552429   C307.315796,853.353455 308.327759,850.032532 309.609009,845.827942   C313.550629,848.896790 317.419495,851.908936 321.644196,854.960571   C322.000000,855.000000 322.002441,855.007324 322.002441,855.007324  z\",id:\"svg_457\"})),_path456||(_path456=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D1A0E\",opacity:1,stroke:\"none\",d:\" M445.309814,839.881592   C442.051849,840.765198 439.112579,841.503784 436.115051,842.612427   C432.357361,841.610413 428.657959,840.238342 424.958527,838.866211   C425.090515,838.428589 425.222504,837.990967 425.354523,837.553284   C426.709930,837.212280 428.065369,836.871277 429.570404,836.492676   C429.368347,835.010986 429.176422,833.603699 428.822510,831.008667   C431.149780,834.028259 432.780273,836.143799 434.410767,838.259399   C434.800659,838.017273 435.190552,837.775208 435.580444,837.533081   C435.076996,835.997498 434.573547,834.461914 434.070129,832.926331   C434.389404,832.614014 434.708710,832.301697 435.027985,831.989380   C436.671783,833.410767 438.315582,834.832214 440.129883,836.401062   C440.821625,835.155579 441.657410,833.650757 442.493225,832.145935   C442.815796,832.255127 443.138367,832.364319 443.460938,832.473511   C443.460938,833.800537 443.460938,835.127563 443.460938,836.146240   C446.198486,837.068359 448.696991,837.909912 451.195496,838.751526   C451.043518,839.164368 450.891541,839.577209 450.739594,839.990051   C449.035889,839.905579 447.332214,839.821045 445.309814,839.881592  z\",id:\"svg_458\"})),_path457||(_path457=/*#__PURE__*/React.createElement(\"path\",{fill:\"#35221B\",opacity:1,stroke:\"none\",d:\" M431.006073,872.996338   C432.760986,870.664368 434.509888,868.335144 436.622528,865.995117   C436.308197,869.919739 436.546844,870.346008 442.619720,875.958557   C440.431152,878.347656 438.242981,880.736328 436.301605,882.855591   C434.080261,882.109314 432.428070,881.554260 430.387939,880.999634   C430.000000,881.000000 430.000000,881.002441 430.000000,881.002441   C430.619049,879.723083 426.521790,877.948120 431.057922,876.944214   C431.466339,875.580139 431.236084,874.285217 431.005859,872.990234   C431.005859,872.990234 431.000031,872.999084 431.006073,872.996338  z\",id:\"svg_459\"})),_path458||(_path458=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M411.000000,863.000000   C411.171204,861.796326 411.342377,860.592712 411.513550,859.389038   C411.897461,859.303223 412.281403,859.217468 412.665314,859.131653   C414.601440,863.006958 416.537567,866.882263 418.473694,870.757568   C418.079834,870.983887 417.686005,871.210205 417.292145,871.436523   C416.269196,870.092468 415.246216,868.748413 413.860870,866.928223   C413.214203,868.412537 412.728668,869.526978 412.129669,870.901917   C413.324860,871.773560 414.666870,872.434631 415.508392,873.493469   C415.962738,874.065002 415.826691,875.448181 415.447876,876.213013   C415.215210,876.682739 414.005096,876.894470 413.260193,876.842957   C410.780670,876.671265 408.312988,876.328003 405.122742,875.969971   C406.173950,874.505798 407.672363,873.023682 408.388977,871.229309   C408.963623,869.790527 408.589539,867.972778 408.318115,866.161621   C407.999756,866.000000 408.009247,866.000000 408.009216,866.000000   C408.758331,865.005249 409.507446,864.010498 410.661743,863.295532   C411.463837,863.880798 411.860779,864.186340 412.257751,864.491882   C412.348236,864.233154 412.558868,863.775391 412.510742,863.746338   C412.031647,863.457031 411.509766,863.238525 411.000000,863.000000  z\",id:\"svg_460\"})),_path459||(_path459=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M416.042297,857.634338   C413.871582,855.888367 411.743134,853.776794 409.435699,851.487610   C409.435669,851.487671 408.774994,852.521973 408.117859,853.550781   C407.737610,853.475830 407.194000,853.481567 407.154175,853.342712   C406.867737,852.345032 406.235321,850.594543 406.534454,850.409119   C410.694916,847.831299 409.623962,844.765564 407.013306,841.439575   C409.990234,841.826782 412.483765,841.782349 414.716248,842.523865   C418.510193,843.783875 416.723053,846.225403 414.547058,849.345032   C414.192841,848.139465 413.838654,846.933960 413.492371,845.755432   C410.915405,848.281189 413.410980,851.462830 418.046112,852.956848   C417.378723,854.423828 416.731628,855.846252 416.042297,857.634338  z\",id:\"svg_461\"})),_path460||(_path460=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352214\",opacity:1,stroke:\"none\",d:\" M341.607788,859.974182   C343.882690,860.968018 345.899109,862.158447 348.621765,863.765808   C346.532837,864.736206 345.320129,865.299561 344.107422,865.862915   C344.545807,866.029419 344.984192,866.195923 345.422607,866.362427   C344.995087,869.122375 344.567566,871.882324 344.058411,875.169373   C340.900879,873.754578 343.827637,867.359436 336.728180,872.045776   C336.768463,870.921997 336.808716,869.798279 336.848999,868.674500   C338.229034,868.275452 339.609100,867.876404 341.277679,867.393921   C339.985657,865.906799 339.172333,864.970581 338.083588,863.717468   C339.177063,862.529907 340.263184,861.350342 341.607788,859.974182  z\",id:\"svg_462\"})),_path461||(_path461=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M394.999390,823.000000   C394.187531,824.710022 393.376282,826.419983 392.380127,828.519714   C389.704102,826.828186 386.396362,824.737305 383.043396,822.324463   C382.998199,822.002441 383.000000,822.000000 383.351990,821.942261   C387.884857,818.057251 391.270416,822.268127 395.000000,823.002197   C395.000000,823.002197 395.000000,823.000000 394.999390,823.000000  z\",id:\"svg_463\"})),_path462||(_path462=/*#__PURE__*/React.createElement(\"path\",{fill:\"#35221B\",opacity:1,stroke:\"none\",d:\" M439.000916,855.681519   C436.932007,856.768433 434.859131,857.531982 431.605927,858.730408   C433.440613,854.579285 434.694122,852.312195 438.641968,854.018494   C438.990845,854.497742 438.993896,854.927917 439.000916,855.681519  z\",id:\"svg_464\"})),_path463||(_path463=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M466.013245,864.410767   C470.058807,864.892700 469.936310,868.094788 469.992615,871.596436   C465.594574,871.305237 465.959229,867.977844 466.013245,864.410767  z\",id:\"svg_465\"})),_path464||(_path464=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M402.998779,866.000000   C402.064850,866.665100 401.217316,867.582275 400.177582,867.938782   C398.426392,868.539185 396.553192,868.783813 394.813782,869.160217   C395.714111,864.494263 395.796539,864.456482 402.608826,865.991455   C403.000000,866.000000 402.998779,866.000000 402.998779,866.000000  z\",id:\"svg_466\"})),_path465||(_path465=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M357.697815,824.521484   C357.502777,823.267639 357.441895,822.371155 357.380981,821.474609   C357.957306,821.303955 358.533600,821.133301 359.109924,820.962646   C359.851715,823.036438 360.593475,825.110291 361.335236,827.184143   C360.691681,827.459473 360.048096,827.734802 359.404541,828.010193   C358.880341,826.966431 358.356171,825.922607 357.697815,824.521484  z\",id:\"svg_467\"})),_path466||(_path466=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M443.000000,812.665771   C440.454529,812.428528 437.909058,811.859497 435.363586,811.290527   C435.412201,810.764954 435.460846,810.239441 435.509460,809.713928   C437.783081,810.044922 440.056671,810.375916 442.665771,810.857178   C443.000793,811.449585 443.000397,811.891846 443.000000,812.665771  z\",id:\"svg_468\"})),_path467||(_path467=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352214\",opacity:1,stroke:\"none\",d:\" M323.995361,855.005249   C323.549469,855.009766 323.107483,855.009766 322.333984,855.008545   C322.002441,855.007324 322.000000,855.000000 321.996948,854.998779   C321.844666,851.387756 323.812531,850.541809 326.918488,851.292053   C326.958160,851.301636 326.749146,852.340698 326.010803,852.992676   C324.911072,853.723267 324.456757,854.360413 324.002441,854.997559   C324.002441,854.997559 323.999237,855.000793 323.995361,855.005249  z\",id:\"svg_469\"})),_path468||(_path468=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M421.785004,865.166016   C420.587219,867.816833 420.587219,867.816833 417.676910,864.082947   C419.588867,864.437744 420.632080,864.631348 421.785004,865.166016  z\",id:\"svg_470\"})),_path469||(_path469=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M403.000610,866.000000   C403.138458,864.825928 403.275665,863.651855 403.576508,861.077942   C404.815094,863.296387 405.373322,864.296204 405.965790,865.648010   C406.000000,866.000000 405.993988,866.004883 405.993988,866.004883   C405.245209,866.002258 404.496399,865.999573 403.373199,865.998413   C402.998779,866.000000 403.000000,866.000000 403.000610,866.000000  z\",id:\"svg_471\"})),_path470||(_path470=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M415.396729,822.002441   C416.066101,821.334900 416.784454,820.991638 417.502808,820.648315   C417.586243,821.089661 417.669678,821.531067 417.753113,821.972412   C416.983978,822.090454 416.214844,822.208557 415.396729,822.002441  z\",id:\"svg_472\"})),_path471||(_path471=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M419.604340,873.563843   C420.495392,873.865234 421.175995,874.370117 421.856567,874.875000   C421.516174,875.182739 421.175781,875.490479 420.835388,875.798218   C420.354889,875.121216 419.874390,874.444275 419.604340,873.563843  z\",id:\"svg_473\"})),_path472||(_path472=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M431.001434,873.386353   C431.236084,874.285217 431.466339,875.580139 431.370728,876.907227   C431.028900,875.887024 431.012939,874.834778 431.001434,873.386353  z\",id:\"svg_474\"})),_path473||(_path473=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M372.667297,816.049316   C372.841156,816.857727 372.682343,817.715393 372.523529,818.573120   C372.159332,818.442932 371.795135,818.312744 371.430969,818.182617   C371.732178,817.487915 372.033386,816.793274 372.667297,816.049316  z\",id:\"svg_475\"})),_path474||(_path474=/*#__PURE__*/React.createElement(\"path\",{fill:\"#312216\",opacity:1,stroke:\"none\",d:\" M429.994690,884.004761   C429.769073,883.038574 429.549133,882.067383 429.664612,881.049316   C430.000000,881.002441 430.000000,881.000000 429.999268,881.000000   C430.002197,881.747253 430.005829,882.494568 430.010376,883.615112   C430.011353,883.988403 430.000336,883.999817 429.994690,884.004761  z\",id:\"svg_476\"})),_path475||(_path475=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M405.993896,868.995117   C405.992798,868.247498 405.991699,867.499878 405.992279,866.378540   C405.993988,866.004883 406.000000,866.000000 406.002991,865.997559   C406.451050,865.995789 406.896118,865.996521 407.675232,865.998657   C408.009247,866.000000 407.999756,866.000000 408.000488,865.995239   C407.565826,866.959412 407.130432,867.928345 406.347504,868.948608   C406.000000,869.000000 405.993896,868.995117 405.993896,868.995117  z\",id:\"svg_477\"})),_path476||(_path476=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M406.003052,869.002441   C405.846069,869.859985 405.686035,870.715027 405.526001,871.570129   C405.160645,871.443115 404.795288,871.316040 404.429932,871.189026   C404.729706,870.491211 405.029480,869.793396 405.661560,869.045410   C405.993896,868.995117 406.000000,869.000000 406.003052,869.002441  z\",id:\"svg_478\"})),_path477||(_path477=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352214\",opacity:1,stroke:\"none\",d:\" M344.733673,857.760254   C345.262482,857.497498 345.839386,857.486572 346.409882,857.542053   C346.443054,857.545349 346.423920,858.086792 346.429138,858.377808   C345.879547,858.260803 345.329987,858.143738 344.733673,857.760254  z\",id:\"svg_479\"})),_path478||(_path478=/*#__PURE__*/React.createElement(\"path\",{fill:\"#160E0B\",opacity:1,stroke:\"none\",d:\" M420.052246,885.386719   C420.347809,885.752808 420.390594,886.112671 420.433411,886.472656   C420.177521,886.466553 419.921661,886.460449 419.665771,886.454346   C419.710358,886.096375 419.754944,885.738525 420.052246,885.386719  z\",id:\"svg_480\"})),_path479||(_path479=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M457.604797,869.530457   C458.058136,869.647400 458.336182,869.932983 458.592743,870.236633   C458.599335,870.244507 458.370331,870.451233 458.251160,870.565186   C457.976318,870.277283 457.701447,869.989319 457.604797,869.530457  z\",id:\"svg_481\"})),_path480||(_path480=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M324.335938,854.997925   C324.456757,854.360413 324.911072,853.723267 325.686951,853.048584   C326.006226,853.451965 326.003906,853.892822 326.002625,854.664429   C325.558929,854.996155 325.114166,854.997253 324.335938,854.997925  z\",id:\"svg_482\"})),_path481||(_path481=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352214\",opacity:1,stroke:\"none\",d:\" M339.044861,875.381592   C339.337341,875.743347 339.376831,876.102905 339.416321,876.462524   C339.159760,876.460144 338.903168,876.457764 338.646606,876.455322   C338.695007,876.096741 338.743439,875.738098 339.044861,875.381592  z\",id:\"svg_483\"})),_path482||(_path482=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M403.393158,878.951416   C403.753723,878.658386 404.111084,878.617676 404.468414,878.576904   C404.464996,878.833801 404.461548,879.090698 404.458099,879.347534   C404.102051,879.299622 403.745972,879.251709 403.393158,878.951416  z\",id:\"svg_484\"})),_path483||(_path483=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M304.272522,853.649170   C304.006226,853.634705 303.860840,853.492554 303.715454,853.350403   C303.941437,853.407471 304.167450,853.464478 304.272522,853.649170  z\",id:\"svg_485\"})),_path484||(_path484=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M404.003723,890.003662   C404.125000,889.575684 404.242767,889.143982 404.360535,888.712341   C404.375732,889.060120 404.390900,889.407898 404.199585,889.875610   C403.993103,889.995483 404.000214,890.000000 404.003723,890.003662  z\",id:\"svg_486\"})),_path485||(_path485=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M369.001831,811.998718   C369.253296,812.348389 369.502930,812.699280 369.752533,813.050232   C369.628479,813.138184 369.504425,813.226135 369.380402,813.314087   C369.260590,813.038452 369.140747,812.762878 369.008636,812.246094   C368.996338,812.004883 369.000000,812.000000 369.001831,811.998718  z\",id:\"svg_487\"})),_path486||(_path486=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352214\",opacity:1,stroke:\"none\",d:\" M336.446167,879.535156   C336.410095,879.476135 336.482269,879.594238 336.446167,879.535156  z\",id:\"svg_488\"})),_path487||(_path487=/*#__PURE__*/React.createElement(\"path\",{fill:\"#35221B\",opacity:1,stroke:\"none\",d:\" M437.214600,865.884766   C437.088409,865.661621 437.277374,865.396179 437.776978,865.081970   C437.906464,865.304321 437.720520,865.574097 437.214600,865.884766  z\",id:\"svg_489\"})),_path488||(_path488=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M371.001221,890.001221   C371.094238,889.965698 371.185974,889.928955 371.137543,889.944885   C370.997345,889.997559 371.000000,890.000000 371.001221,890.001221  z\",id:\"svg_490\"})),_path489||(_path489=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M435.449554,848.533936   C435.414825,848.475769 435.484283,848.592163 435.449554,848.533936  z\",id:\"svg_491\"})),_path490||(_path490=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M416.997559,800.002441   C414.657776,797.273987 412.397034,794.471619 409.944855,791.848328   C408.718994,790.536987 407.276489,789.061890 405.670197,788.626221   C404.861877,788.406982 403.275787,790.193359 402.384125,791.339417   C400.936768,793.199768 399.771118,795.279236 398.430969,797.352112   C396.431335,795.927673 395.089722,794.971985 393.376526,794.006958   C395.408447,789.815247 397.504761,785.411438 400.310425,781.518860   C402.657501,778.262634 402.686859,776.762329 398.979523,774.847900   C397.954193,774.318420 396.958527,773.213257 395.961823,773.227844   C387.195679,773.356384 383.331207,765.612183 377.045197,760.985229   C376.351562,759.574951 375.717896,758.877197 375.084229,758.179382   C374.387756,759.118774 373.691315,760.058167 372.994873,760.997559   C372.552826,760.997498 372.110718,760.997375 371.271759,760.643311   C369.074524,759.281311 367.035248,758.546509 365.515228,757.217834   C358.982208,751.506897 351.244293,754.540771 344.004883,753.997559   C338.598389,751.669067 333.191864,749.340515 327.394714,747.002319   C326.510651,745.808228 326.017273,744.623779 325.296387,742.893250   C335.294739,741.780090 342.808167,745.811401 349.894806,752.721313   C350.589874,750.540283 351.053497,749.085571 351.731750,746.957336   C357.703247,752.579285 364.389130,750.947937 371.274017,749.575989   C373.322540,749.167786 376.226074,750.386536 377.992554,751.794739   C381.416779,754.524719 384.253387,754.944885 387.687286,751.958252   C390.366638,749.627991 393.106689,748.663879 394.899872,753.251770   C396.144196,756.435364 397.760193,759.482971 399.345673,762.520630   C400.397766,764.536255 401.514618,766.563538 402.908417,768.346375   C406.324402,772.715637 410.437622,776.637329 413.240082,781.351501   C414.863464,784.082214 414.491943,787.998840 415.018188,791.381775   C415.487823,791.692871 415.957489,792.004028 416.427124,792.315186   C419.022980,789.885681 421.618805,787.456238 424.614899,785.387756   C426.010529,789.499207 427.005859,793.249573 427.844482,797.303711   C424.836975,801.586548 420.503632,798.948303 416.997559,800.002441  z\",id:\"svg_492\"})),_path491||(_path491=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M344.009216,754.382019   C351.244293,754.540771 358.982208,751.506897 365.515228,757.217834   C367.035248,758.546509 369.074524,759.281311 370.940186,760.643066   C370.750244,762.147461 370.494965,763.298035 370.448181,763.508850   C367.747620,764.533630 365.432373,765.210022 363.356354,766.329895   C362.774139,766.643982 362.895996,768.263184 362.694885,769.283691   C363.558411,769.427429 364.609802,769.314270 365.240784,769.775818   C366.160492,770.448608 367.300690,771.479431 367.404541,772.457581   C367.570953,774.025024 366.965240,775.674500 366.528625,778.198486   C364.383240,778.198486 361.353363,778.198486 357.274902,778.198486   C357.327667,778.132812 356.579437,779.064148 355.595490,780.288879   C354.573608,779.151672 353.786285,778.275513 352.563232,776.914429   C352.140289,780.274292 348.824310,782.806519 352.618927,785.869019   C353.397797,786.497498 352.906006,788.700439 352.999329,790.591675   C348.518768,789.486328 344.956482,782.717773 345.474487,777.814087   C345.900818,773.777771 345.577148,769.662292 345.289276,765.292175   C344.666321,761.590454 344.339935,758.178467 344.009216,754.382019  z\",id:\"svg_493\"})),_path492||(_path492=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M394.964233,822.646851   C391.270416,822.268127 387.884857,818.057251 383.353210,821.941040   C383.165863,819.587097 380.621002,816.588806 384.637787,814.895081   C384.952881,814.762207 384.245453,812.204163 384.006592,810.385376   C387.642822,814.095520 391.285645,818.193481 394.964233,822.646851  z\",id:\"svg_494\"})),_path493||(_path493=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M373.395386,760.998657   C373.691315,760.058167 374.387756,759.118774 375.084229,758.179382   C375.717896,758.877197 376.351562,759.574951 376.992004,760.637634   C375.931152,761.001587 374.863525,761.000610 373.395386,760.998657  z\",id:\"svg_495\"})),_path494||(_path494=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M360.685181,808.520508   C361.265869,809.578857 361.545227,810.483643 361.824585,811.388428   C361.176666,811.430054 360.528717,811.471680 359.880798,811.513245   C360.048492,810.464478 360.216156,809.415710 360.685181,808.520508  z\",id:\"svg_496\"})),_path495||(_path495=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M386.473785,784.308472   C386.467957,783.551575 386.673523,783.014587 386.879089,782.477539   C387.154022,782.612732 387.428925,782.747986 387.703796,782.883240   C387.364258,783.431580 387.024719,783.979980 386.473785,784.308472  z\",id:\"svg_497\"})),_path496||(_path496=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M354.000610,808.000000   C353.243103,807.151428 352.484985,806.302856 351.726868,805.454285   C352.132202,805.206909 352.537537,804.959534 352.942871,804.712219   C353.293640,805.581421 353.644379,806.450684 353.996948,807.659912   C353.998779,808.000000 354.000000,808.000000 354.000610,808.000000  z\",id:\"svg_498\"})),_path497||(_path497=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M381.609619,812.045532   C381.211426,812.288818 380.815186,812.287170 380.421112,812.256653   C380.409912,812.255798 380.422394,811.948303 380.423828,811.783813   C380.819855,811.788025 381.215851,811.792297 381.609619,812.045532  z\",id:\"svg_499\"})),_path498||(_path498=/*#__PURE__*/React.createElement(\"path\",{fill:\"#22201E\",opacity:1,stroke:\"none\",d:\" M313.550842,775.466492   C313.584473,775.522522 313.517242,775.410461 313.550842,775.466492  z\",id:\"svg_500\"})),_path499||(_path499=/*#__PURE__*/React.createElement(\"path\",{fill:\"#22201E\",opacity:1,stroke:\"none\",d:\" M313.448425,772.534424   C313.414307,772.477905 313.482574,772.590881 313.448425,772.534424  z\",id:\"svg_501\"})),_path500||(_path500=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M274.371307,864.004028   C274.830139,862.959045 275.660919,861.936035 276.676086,860.685974   C272.584290,860.477112 268.657776,860.276733 264.407349,859.719971   C265.217285,858.908875 266.351166,858.454163 267.485046,857.999390   C267.580353,857.541992 267.675629,857.084534 267.770935,856.627136   C265.186584,856.080505 262.602234,855.533813 260.017883,854.987183   C260.017883,854.987183 260.000000,855.000000 260.057922,854.650513   C261.708130,853.082458 263.300446,851.863892 264.838593,850.686768   C266.200867,852.211914 267.452606,853.613342 268.725922,855.038940   C270.360107,853.203857 271.547516,851.870483 272.734924,850.537109   C272.587219,850.216858 272.439545,849.896667 272.291840,849.576477   C270.960602,849.873596 269.629364,850.170654 268.298096,850.467712   C264.656799,845.382141 264.656799,845.382141 267.362762,842.574097   C267.849121,843.951111 268.330383,845.313660 268.811646,846.676208   C269.269989,846.504150 269.728363,846.332031 270.186737,846.159973   C268.998260,842.760925 269.856354,837.431030 265.682037,836.636292   C261.557159,835.851013 260.417938,833.796265 259.089355,830.826233   C258.621033,829.779236 257.717163,828.927124 257.005463,827.992676   C256.998779,827.999207 257.014221,827.993774 257.020813,827.612244   C256.742065,825.742065 256.456726,824.253479 256.171417,822.764832   C258.284698,822.353455 259.784576,822.281372 261.532196,824.534790   C263.885742,827.569458 267.421112,829.687561 270.750397,832.448792   C270.636353,830.995728 270.534760,829.701294 270.481995,829.028625   C275.592621,831.981750 280.737061,834.907288 285.800964,837.966187   C286.225861,838.222839 286.109314,839.375916 286.269287,840.401001   C284.047821,841.625549 281.801392,842.561707 279.378448,843.571472   C278.474091,843.069763 277.251343,842.391418 276.028595,841.713135   C276.503998,843.719543 276.979431,845.725952 277.555817,848.158508   C276.722015,848.744568 275.462738,849.629639 274.593567,850.240540   C276.489136,854.920715 278.237793,859.238220 280.295258,864.318237   C277.313660,864.161316 276.028473,864.093628 274.371307,864.004028  M264.397217,834.475464   C264.397217,834.475464 264.528412,834.392578 264.397217,834.475464  z\",id:\"svg_502\"})),_path501||(_path501=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M271.978607,869.023560   C272.456116,868.695374 272.933624,868.367249 273.715332,868.009766   C275.622772,868.264099 277.359863,868.258911 278.787933,868.920715   C279.976349,869.471375 280.801788,870.805359 281.788025,871.792358   C278.533539,874.278503 283.542480,878.628540 279.357239,880.992676   C279.000000,881.000000 278.993896,880.995117 278.993896,880.995117   C277.842102,877.339722 277.815704,877.332092 274.611359,879.139343   C272.391510,877.700684 270.524170,876.490479 268.328979,875.132812   C268.001099,874.985291 268.001526,875.001892 268.188171,874.735962   C268.288727,873.219543 268.518890,871.829773 268.043671,870.750732   C267.300720,869.063904 266.080261,867.587402 265.062134,866.021790   C265.465790,866.020874 265.869446,866.019958 266.642822,866.339722   C267.671265,867.143005 268.330048,867.625549 268.988800,868.108093   C269.432495,868.400269 269.876221,868.692444 270.643768,869.256470   C271.201660,869.748413 271.435730,869.968567 271.669800,870.188782   C271.772736,869.800354 271.875671,869.411987 271.978607,869.023560  M276.475861,876.596863   C276.475861,876.596863 276.405640,876.484863 276.475861,876.596863  z\",id:\"svg_503\"})),_path502||(_path502=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M279.003052,881.002869   C278.593597,881.926208 278.181091,882.846680 277.768555,883.767151   C277.266479,883.494385 276.764404,883.221558 276.262329,882.948730   C276.926239,882.300232 277.590179,881.651672 278.624023,880.999146   C278.993896,880.995117 279.000000,881.000000 279.003052,881.002869  z\",id:\"svg_504\"})),_path503||(_path503=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6F4B30\",opacity:1,stroke:\"none\",d:\" M271.517090,883.342163   C270.939911,883.053528 270.583466,882.546204 270.227020,882.038818   C270.589722,881.848389 270.952393,881.658020 271.315094,881.467590   C271.456024,882.019531 271.596924,882.571533 271.517090,883.342163  z\",id:\"svg_505\"})),_path504||(_path504=/*#__PURE__*/React.createElement(\"path\",{fill:\"#615337\",opacity:1,stroke:\"none\",d:\" M278.171448,889.833862   C277.868011,889.267639 277.869354,888.765503 277.870728,888.263367   C278.418976,888.406311 278.967224,888.549255 279.515472,888.692261   C279.169067,889.094177 278.822662,889.496094 278.171448,889.833862  z\",id:\"svg_506\"})),_path505||(_path505=/*#__PURE__*/React.createElement(\"path\",{fill:\"#615337\",opacity:1,stroke:\"none\",d:\" M284.993988,858.004211   C284.734344,857.650391 284.479279,857.292969 284.246338,856.921753   C284.240814,856.912964 284.482697,856.748901 284.609192,856.657288   C284.737915,856.935913 284.866638,857.214539 285.005341,857.739136   C285.015320,857.985107 285.001312,857.998901 284.993988,858.004211  z\",id:\"svg_507\"})),_path506||(_path506=/*#__PURE__*/React.createElement(\"path\",{fill:\"#615337\",opacity:1,stroke:\"none\",d:\" M284.983887,864.010742   C284.838837,863.571838 284.712402,863.118652 284.585968,862.665527   C284.724426,862.936279 284.862885,863.206970 285.018860,863.720825   C285.036316,863.963867 285.002533,863.996460 284.983887,864.010742  z\",id:\"svg_508\"})),_path507||(_path507=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6F4B30\",opacity:1,stroke:\"none\",d:\" M248.987366,813.040588   C249.222290,813.025085 249.457214,813.009583 250.048279,812.985291   C251.290771,814.617065 252.177139,816.257690 252.973541,818.580139   C254.260452,822.172607 255.637329,825.083191 257.014221,827.993774   C257.014221,827.993774 256.998779,827.999207 256.968262,828.337280   C256.624176,829.775452 256.310577,830.875549 255.635559,831.905396   C252.957748,827.267090 250.641342,822.699097 248.324921,818.131042   C247.976334,818.249207 247.627731,818.367371 247.279129,818.485535   C247.177261,819.263000 247.075378,820.040527 246.646423,820.809204   C244.853195,819.927979 243.387039,819.055603 242.063995,817.863403   C243.344757,816.909485 244.920456,815.446289 245.547806,815.777771   C249.189194,817.702026 248.793457,815.109741 248.987366,813.040588  z\",id:\"svg_509\"})),_path508||(_path508=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M257.020813,827.612244   C255.637329,825.083191 254.260452,822.172607 253.005783,818.904907   C254.090546,819.738892 255.053116,820.930054 256.093536,822.442993   C256.456726,824.253479 256.742065,825.742065 257.020813,827.612244  z\",id:\"svg_510\"})),_path509||(_path509=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M257.565125,819.591431   C257.484192,819.651550 257.453247,819.423828 257.453247,819.423828   C257.453247,819.423828 257.646057,819.531250 257.565125,819.591431  z\",id:\"svg_511\"})),_path510||(_path510=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M285.997253,881.002014   C286.119385,881.147827 286.244232,881.291626 286.369080,881.435364   C286.282349,881.383789 286.195587,881.332214 286.056519,881.137695   C286.004150,880.994690 286.000000,881.000000 285.997253,881.002014  z\",id:\"svg_512\"})),_path511||(_path511=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M327.950928,896.636719   C326.923523,896.988037 325.859833,896.988281 324.396973,896.995483   C323.117004,894.966125 322.236206,892.929749 320.957184,889.972717   C325.500366,890.361938 326.295532,893.819092 327.950928,896.636719  z\",id:\"svg_513\"})),_path512||(_path512=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M520.997559,702.000000   C521.315552,702.785461 521.633545,703.570862 521.697937,704.925171   C519.869934,714.248169 518.968689,715.398193 512.574707,715.704712   C512.752747,717.802429 512.619995,719.983948 513.251709,721.915527   C513.520325,722.737000 515.389343,723.035034 516.531067,723.570923   C517.062073,721.871582 517.593018,720.172180 518.520569,717.203735   C520.515625,719.499939 522.227844,721.470581 523.940002,723.441223   C523.469177,723.514648 522.998291,723.588074 522.527405,723.661499   C522.034607,726.524536 520.478394,729.768005 521.330627,732.149841   C522.296448,734.849182 525.420532,736.776367 527.641541,739.075806   C527.122253,740.307495 526.557434,741.647034 525.651367,743.045532   C524.539185,744.402100 523.768372,745.699829 522.572388,746.998657   C520.794983,747.568970 518.437866,747.927673 518.266724,748.744446   C517.573181,752.053711 517.995239,755.346008 521.188782,757.956177   C522.154785,755.667175 518.974854,751.758118 524.263123,752.278687   C526.348145,752.709045 528.172546,752.855835 530.005615,753.401489   C531.487488,759.898621 530.040588,763.523743 523.856140,767.314880   C525.365906,763.123352 526.561768,759.803345 527.757629,756.483337   C527.318481,756.382568 526.879333,756.281860 526.440186,756.181091   C519.715027,764.872681 519.660767,765.380493 524.836060,773.368164   C523.555786,773.458130 522.455566,773.535461 521.355408,773.612793   C522.245911,775.264282 523.697815,776.800659 524.569641,776.521973   C526.216431,775.995728 527.529541,774.425537 529.290527,773.047180   C529.834595,774.818054 530.269531,776.233521 530.733093,777.742188   C536.655945,773.261780 532.157227,769.845215 529.910889,766.759705   C532.193604,763.850464 534.095581,761.426453 536.138794,759.321228   C537.908630,761.100281 539.601929,762.495667 541.148132,764.038452   C542.799500,765.686096 544.844543,767.235657 545.746704,769.260681   C546.808228,771.643494 546.543640,774.588440 547.407471,777.099182   C547.888245,778.496704 549.382812,779.659363 550.662231,780.598755   C551.044006,780.879028 552.243774,780.045349 553.068787,779.722046   C552.593933,778.652527 552.031921,777.610535 551.682617,776.501465   C551.518616,775.980896 551.721619,775.322937 551.833130,774.741577   C552.152832,773.075378 552.510864,771.416504 553.085938,768.629944   C554.449097,769.017700 557.630859,769.572571 557.611267,769.969177   C557.253418,777.206848 564.293945,778.372314 567.285278,782.843201   C569.178101,779.741943 570.852905,776.997864 572.756165,773.879456   C573.752869,775.166809 574.382935,775.980530 575.094910,776.900146   C578.954895,774.443176 578.549805,771.829590 576.050049,768.629517   C576.234497,767.281311 576.428284,766.296326 576.717896,764.824341   C578.804138,766.473572 580.402039,767.736816 582.052979,769.345215   C582.737305,771.125305 583.368652,772.560242 583.677002,774.045776   C583.532166,775.007141 583.399963,776.287476 583.952942,776.751892   C585.111572,777.724854 586.631042,778.268188 587.845947,779.305908   C581.920044,785.173157 589.389160,789.987671 588.659424,795.529968   C585.161560,796.038574 583.908325,797.552063 586.915771,800.781982   C587.643188,799.905884 588.285950,799.131775 588.928711,798.357666   C588.934387,798.847778 588.940063,799.337952 588.945801,799.828064   C592.399170,800.301025 595.852600,800.773987 599.643066,801.293091   C598.963562,797.412659 598.486694,794.689270 598.009766,791.965820   C599.126587,792.218872 600.243408,792.471924 601.719788,793.220764   C603.386230,794.476868 604.693115,795.237244 606.000000,795.997559   C608.244080,800.413330 605.489258,803.670044 603.651428,807.292297   C602.838379,808.894653 602.679626,811.219971 603.149719,812.968201   C603.585327,814.588318 605.255005,815.876526 606.842712,817.898499   C605.156433,820.992065 598.012451,819.318542 593.812439,813.293579   C591.916199,817.785828 589.940369,822.307068 584.003113,821.427490   C582.388489,821.188354 580.520630,820.211365 579.477661,818.975098   C574.435547,812.998413 573.496338,812.732239 566.255432,815.688232   C563.495300,816.815002 560.542969,817.463257 557.730774,818.475525   C556.976257,818.747131 556.338623,819.488098 555.778442,820.128235   C553.910767,822.262695 548.726440,822.696777 546.540039,820.849609   C539.335449,814.762817 534.589478,815.828430 530.694275,824.395325   C530.564148,824.681580 530.285278,824.900330 529.965393,825.282410   C527.565552,823.450867 525.174377,821.626038 522.070679,819.257263   C519.664917,819.487000 516.229004,819.815063 511.425079,820.273743   C511.215790,820.006836 510.208649,818.722290 509.094940,817.301880   C506.047272,817.818970 502.872284,818.357666 499.241760,818.689514   C498.523071,817.981934 498.259888,817.481201 497.998535,816.589355   C499.078735,813.209717 500.157135,810.221252 501.499359,806.501709   C502.728638,808.154602 503.343536,808.981384 503.369415,809.016174   C506.483582,808.550842 508.900269,808.189758 512.697937,807.622314   C514.827209,802.382629 512.374023,795.945923 513.072754,788.570435   C508.620026,791.958496 505.308807,794.478027 501.998779,796.998779   C502.000000,797.000000 502.002441,797.002441 502.028931,796.676636   C502.026764,795.223206 501.998077,794.095581 502.025085,792.595703   C502.883362,789.861633 503.685974,787.499817 504.586456,784.849976   C498.676849,784.734619 497.170654,782.719299 497.026154,775.653809   C498.510986,773.158325 499.959686,771.017395 501.408417,768.876465   C501.790924,769.117798 502.173431,769.359131 502.555939,769.600464   C502.087250,771.187439 501.618591,772.774414 501.149933,774.361450   C505.037079,772.700378 507.265961,770.837280 503.823608,767.058960   C502.359100,765.451416 502.045197,762.847412 500.915131,760.863281   C500.277191,759.743286 499.096588,758.240173 498.067963,758.164368   C494.949890,757.934570 494.772736,755.873962 493.853729,753.627441   C492.847382,751.167664 490.666046,749.188599 488.752075,746.803589   C488.471222,742.757385 486.017242,741.020874 481.753357,741.838074   C481.332916,741.120728 481.159149,740.567749 480.989624,739.603943   C479.664185,733.460449 478.334595,727.727783 477.402954,721.998291   C482.109314,721.614929 480.589752,725.684753 482.037109,727.480042   C482.777618,728.398560 483.750488,729.428650 484.792877,729.677429   C485.304993,729.799683 486.386780,728.356384 486.907288,727.447693   C487.908630,725.699402 488.693939,723.827332 489.680634,721.774048   C493.068420,723.516418 495.761108,724.901367 499.001343,726.567871   C498.650787,722.508301 498.326599,718.754333 498.002991,714.668091   C498.006012,713.893066 498.008514,713.450195 498.385132,713.005676   C499.508148,713.000244 500.257019,712.996460 501.354614,712.995422   C502.803894,713.663818 503.904388,714.329468 505.004395,715.359802   C505.161194,716.633057 505.318451,717.541687 505.483521,718.495483   C507.139648,717.873169 508.525909,717.451233 509.825958,716.844543   C513.227783,715.257202 512.409119,713.529541 508.000549,712.598572   C507.996643,711.135498 507.994659,710.071411 507.995819,708.631836   C508.000519,707.505676 508.002075,706.755066 508.261993,705.896545   C509.012756,705.525024 509.505157,705.261292 509.997559,704.997559   C511.693878,705.988342 513.390198,706.979126 515.576050,708.255798   C516.128662,707.507507 517.088989,706.206970 517.684998,705.399841   C516.831421,703.620300 515.918213,701.716431 515.324890,699.544434   C517.429077,700.184143 519.213318,701.092102 520.997559,702.000000  M514.949036,750.689819   C514.618225,749.075989 514.778503,747.039246 513.839661,745.949158   C512.490051,744.382263 510.445587,743.109619 508.465607,742.581116   C507.894867,742.428772 506.526276,745.265808 504.779144,747.820801   C509.674316,746.979004 511.418915,748.255798 510.647858,751.483582   C509.771729,755.151184 512.263367,755.012146 514.716125,755.777771   C514.822205,754.096802 514.903748,752.804260 514.949036,750.689819  M576.880188,797.835266   C575.311584,798.330566 573.743042,798.825928 571.523438,799.526855   C575.164917,800.690552 577.606201,801.470703 580.416382,802.368713   C581.111755,801.059570 582.075867,799.244446 582.784973,797.909424   C581.663757,795.765015 580.971191,793.959961 579.853943,792.474243   C579.122925,791.502136 577.776672,790.992859 576.705994,790.276306   C576.557312,791.459229 576.189941,792.666809 576.319580,793.818420   C576.457947,795.047363 577.065857,796.223450 576.880188,797.835266  M516.712585,727.456726   C516.600891,728.035583 516.489136,728.614441 516.377380,729.193298   C516.787781,729.198486 517.198242,729.203613 517.608643,729.208740   C517.510681,728.627258 517.412720,728.045715 516.712585,727.456726  z\",id:\"svg_514\"})),_path513||(_path513=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2E231C\",opacity:1,stroke:\"none\",d:\" M615.001770,765.915527   C615.445496,765.931885 615.889282,765.948242 616.666016,765.964966   C619.218079,771.330811 621.437195,776.696289 623.656311,782.061768   C624.400452,781.782837 625.144592,781.503967 625.888794,781.225098   C624.944336,779.079407 623.999878,776.933716 623.055420,774.788086   C623.380859,774.584473 623.706360,774.380859 624.031799,774.177307   C626.589478,777.248230 629.147156,780.319092 631.853149,783.689392   C632.001465,785.299988 632.001465,786.611145 632.001465,788.297363   C630.681702,788.428040 629.539246,788.541199 628.210449,788.672729   C629.168701,792.730225 630.063293,796.518372 630.957886,800.306519   C630.599121,800.435608 630.240356,800.564636 629.881592,800.693726   C628.953430,799.550781 628.025269,798.407898 626.407776,796.416199   C626.407776,799.210938 626.407776,800.864014 626.407776,802.807068   C625.052307,802.674866 623.830933,802.555664 622.630188,802.438538   C622.630188,804.365356 622.630188,806.141113 622.305054,807.969360   C619.972290,803.946411 617.964661,799.871033 616.083008,796.051331   C614.691162,795.925415 612.991211,795.771667 611.142212,795.323730   C610.994446,794.857971 610.995667,794.686340 611.362915,794.215393   C616.680176,789.733948 615.092529,779.843140 608.966919,776.617798   C607.567505,771.669739 606.213440,767.094849 604.784973,762.268616   C610.728943,762.514893 611.881104,769.211182 617.171936,772.788940   C616.138916,769.517090 615.570374,767.716309 615.001770,765.915527  z\",id:\"svg_515\"})),_path514||(_path514=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M476.982727,858.983765   C477.324982,857.900513 477.667236,856.817322 478.314606,855.330078   C478.425201,854.280579 478.230682,853.635071 478.036163,852.989624   C478.030701,852.239258 478.025238,851.488953 478.318176,850.130127   C479.355591,846.770386 480.094543,844.019165 480.827148,841.291626   C482.893646,841.291626 484.750793,841.291626 487.725037,841.291626   C485.563843,839.590088 484.467102,838.726624 482.716522,837.348389   C484.439178,837.157532 485.230927,837.069824 486.421234,836.986450   C487.883118,836.997070 488.946442,837.003418 490.005707,837.005615   C490.001648,837.001465 490.017120,837.017212 490.017090,837.017212   C491.859406,838.483337 493.701691,839.949402 496.264557,841.988892   C494.172913,842.937134 493.334198,843.317322 492.320160,843.777039   C492.874634,845.581970 493.436096,847.409546 493.752930,849.815552   C493.680084,851.114502 493.906097,851.827026 494.014313,852.556946   C494.550232,856.171631 498.796082,858.725952 496.998779,863.001221   C497.000000,863.000000 497.002441,862.997559 496.641418,863.004333   C492.861267,864.671997 489.442139,866.332825 485.698669,868.018921   C483.964264,867.580017 481.994507,867.540405 481.256348,866.566956   C479.519196,864.276245 478.369873,861.539856 476.982727,858.983765  z\",id:\"svg_516\"})),_path515||(_path515=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M614.963013,765.554565   C615.570374,767.716309 616.138916,769.517090 617.171936,772.788940   C611.881104,769.211182 610.728943,762.514893 604.784973,762.268616   C606.213440,767.094849 607.567505,771.669739 608.822144,776.934814   C606.209412,783.212280 604.955750,776.623413 602.978271,777.030579   C602.543884,777.031677 602.109558,777.032837 601.060120,776.888184   C599.626831,775.498230 598.808594,774.254028 598.357910,773.002319   C600.496521,772.102173 602.267578,771.209595 603.671509,770.502014   C602.121948,767.069824 600.907410,764.379578 599.313782,760.849731   C598.629822,761.645020 596.967041,763.142822 597.153931,763.427734   C599.316833,766.726440 597.171692,769.830688 596.870605,773.293945   C596.159668,774.732910 595.578125,775.866516 594.717407,776.746338   C594.558716,771.142090 591.182190,770.506226 586.993164,770.599182   C586.996094,769.489807 586.996826,768.749817 587.319336,768.144592   C592.230408,768.913452 592.308167,768.740112 590.339844,763.000061   C591.110046,763.000916 591.550110,763.001709 592.181458,763.243408   C593.146729,763.007751 593.920715,762.531128 594.694763,762.054504   C593.797363,761.363159 592.899902,760.671814 592.002686,759.737183   C592.002869,759.493896 592.002441,759.007385 592.002441,758.631592   C592.000793,757.504700 591.999146,756.753601 591.998779,755.671814   C592.000793,754.900635 592.001648,754.460083 592.002441,754.019531   C600.022705,753.345215 593.674377,748.549194 594.537170,744.396484   C596.939636,745.861633 600.708191,747.391418 600.559387,748.204346   C599.964478,751.455566 598.152710,754.484070 596.719421,757.758667   C602.784668,760.438110 602.102966,752.306152 605.519531,750.219971   C607.526978,751.189575 609.394775,752.091675 611.628784,752.999329   C611.883728,757.329224 611.523438,761.713379 614.963013,765.554565  z\",id:\"svg_517\"})),_path516||(_path516=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M501.008057,880.613953   C500.431580,881.154297 499.863129,881.331055 498.884277,881.754395   C498.473816,882.001038 498.001221,881.998291 497.950012,881.660095   C495.733307,878.972900 493.567841,876.623962 491.481293,874.360535   C493.308319,870.600403 495.155396,866.799011 497.002441,862.997559   C497.002441,862.997559 497.000000,863.000000 497.397339,862.988892   C498.529388,860.984558 499.264069,858.991333 500.291229,857.117065   C501.284882,857.180969 501.986084,857.125916 502.687256,857.070801   C502.178589,856.132202 501.669922,855.193665 501.161255,854.255066   C500.852051,854.378723 500.542816,854.502319 500.233612,854.625916   C500.156158,855.417542 500.078705,856.209229 499.638733,856.962708   C498.184143,854.614685 497.092072,852.304932 496.000000,849.995117   C496.000000,849.995117 495.997803,849.998901 496.337952,849.965210   C502.152710,848.733459 504.312103,844.090271 507.001221,839.997559   C511.653351,842.481018 506.620239,843.996521 506.402069,846.472107   C506.997223,847.323669 507.817963,848.497925 508.841675,849.962646   C510.073395,848.997498 511.136688,848.164368 512.199951,847.331238   C512.561646,847.564209 512.923401,847.797241 513.285156,848.030212   C510.473450,853.306702 507.661804,858.583191 504.771332,864.007568   C508.011200,864.232666 510.653229,864.416199 514.942688,864.714172   C512.875244,866.226929 511.808167,867.581177 510.515350,867.850159   C505.946106,868.800537 503.464691,873.626282 505.441895,877.644104   C503.946472,878.524719 502.481293,879.387512 501.008057,880.613953  z\",id:\"svg_518\"})),_path517||(_path517=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M594.996643,777.000122   C595.578125,775.866516 596.159668,774.732910 597.118164,773.299316   C597.495239,772.999390 597.990417,773.009766 597.990417,773.009766   C598.808594,774.254028 599.626831,775.498230 600.734375,776.891357   C600.174438,779.783325 599.172913,782.491272 598.529175,785.281738   C598.094482,787.166138 598.163940,789.166748 598.008789,791.540649   C598.486694,794.689270 598.963562,797.412659 599.643066,801.293091   C595.852600,800.773987 592.399170,800.301025 588.945801,799.828064   C588.940063,799.337952 588.934387,798.847778 588.928711,798.357666   C588.285950,799.131775 587.643188,799.905884 586.915771,800.781982   C583.908325,797.552063 585.161560,796.038574 588.659424,795.529968   C589.389160,789.987671 581.920044,785.173157 588.142578,779.333435   C589.067749,779.359375 589.539978,779.675781 589.897949,780.266846   C589.676514,781.147888 589.569336,781.754333 589.462097,782.360718   C589.977722,782.230774 590.493408,782.100891 591.379272,781.972595   C592.490051,781.970581 593.230530,781.966919 594.277283,782.097290   C595.341492,782.052551 596.099487,781.873718 596.857422,781.694946   C596.264282,780.786011 595.671082,779.877014 595.061401,778.640198   C595.028809,777.874939 595.012695,777.437500 594.996643,777.000122  z\",id:\"svg_519\"})),_path518||(_path518=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M603.024902,777.393188   C604.955750,776.623413 606.209412,783.212280 608.867493,777.307861   C615.092529,779.843140 616.680176,789.733948 611.363281,793.958008   C604.661072,790.387878 603.480774,784.259949 603.024902,777.393188  z\",id:\"svg_520\"})),_path519||(_path519=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2E231C\",opacity:1,stroke:\"none\",d:\" M477.007324,828.007324   C477.943787,822.007446 480.450134,816.882080 485.683960,813.448975   C486.035736,814.891113 486.028259,815.960205 485.678986,817.021606   C484.765045,817.494019 484.192841,817.974182 483.620667,818.454285   C484.420502,818.276123 485.220306,818.098022 486.233307,817.820557   C486.712738,817.533020 486.895691,817.283691 487.269073,817.180420   C489.028137,818.258301 490.513458,819.129150 491.998657,820.334473   C491.997803,821.115112 491.997070,821.561218 491.996338,822.007324   C491.996338,822.007324 491.996735,822.493896 491.644348,822.748291   C490.529999,823.667603 489.768066,824.332581 489.006104,824.997559   C488.855927,825.570251 488.705780,826.142944 488.772644,827.214111   C488.326019,828.472656 487.662384,829.232666 486.994690,829.658813   C486.628082,828.696350 486.265533,828.067566 485.903015,827.438843   C485.599518,827.964905 485.296082,828.490967 484.623474,829.011841   C482.834564,828.672668 481.414825,828.338806 479.621552,828.004578   C478.501099,828.005249 477.754211,828.006287 477.007324,828.007324  z\",id:\"svg_521\"})),_path520||(_path520=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M507.000610,839.998779   C504.312103,844.090271 502.152710,848.733459 496.335999,849.959961   C495.703644,848.599060 495.413422,847.209778 495.217804,846.273438   C497.656097,845.400208 499.797668,844.633240 501.939209,843.866272   C501.804230,843.429199 501.669250,842.992065 501.534241,842.554932   C500.208313,842.554932 498.882355,842.554932 497.179718,842.554932   C498.860352,840.289795 500.277039,838.380432 501.988281,836.074036   C502.799469,837.053955 503.564972,837.978760 504.833069,839.198120   C505.891235,839.661072 506.446838,839.829346 507.002441,839.997681   C507.002441,839.997620 507.000000,840.000000 507.000610,839.998779  z\",id:\"svg_522\"})),_path521||(_path521=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M524.196167,841.919434   C523.255005,840.415222 522.452454,839.234680 521.063599,837.191528   C522.300049,835.955627 523.743469,834.512878 525.458984,832.798035   C527.166016,834.968567 528.295166,836.404358 529.710449,838.203918   C527.991638,839.495422 526.163269,840.869263 524.196167,841.919434  z\",id:\"svg_523\"})),_path522||(_path522=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M498.998779,834.000000   C496.277069,834.999695 493.555359,835.999451 490.425385,837.008179   C490.017120,837.017212 490.001648,837.001465 490.009827,836.606140   C490.026794,835.147461 490.035583,834.084106 490.044373,833.020752   C492.307312,831.871643 494.570221,830.722473 497.327179,829.322449   C497.763000,830.399719 498.342072,831.831055 498.960571,833.631165   C499.000000,834.000000 498.998779,834.000000 498.998779,834.000000  z\",id:\"svg_524\"})),_path523||(_path523=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M490.086090,832.663330   C490.035583,834.084106 490.026794,835.147461 490.013885,836.610229   C488.946442,837.003418 487.883118,836.997070 486.411530,836.572510   C485.994751,834.772034 485.986267,833.389648 486.006256,831.708252   C486.356110,830.937012 486.677460,830.464844 486.998779,829.992676   C487.662384,829.232666 488.326019,828.472656 489.000183,827.359985   C494.824768,827.626343 490.973114,830.283020 490.086090,832.663330  z\",id:\"svg_525\"})),_path524||(_path524=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M499.998779,856.998169   C499.264069,858.991333 498.529388,860.984558 497.396118,862.990112   C498.796082,858.725952 494.550232,856.171631 494.014313,852.556946   C493.906097,851.827026 493.680084,851.114502 493.760437,850.185486   C494.454132,849.984680 494.895691,849.992432 495.668640,849.997681   C497.092072,852.304932 498.184143,854.614685 499.638123,856.962280   C500.000000,857.000000 499.998779,856.998169 499.998779,856.998169  z\",id:\"svg_526\"})),_path525||(_path525=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M519.995422,842.654602   C518.761658,843.714600 517.596680,844.680481 516.263367,845.069397   C515.056335,845.421448 513.665588,845.143799 512.330078,844.073364   C514.361877,842.934570 516.366577,841.738464 518.466858,840.744385   C518.680176,840.643433 519.469055,841.758423 519.995422,842.654602  z\",id:\"svg_527\"})),_path526||(_path526=/*#__PURE__*/React.createElement(\"path\",{fill:\"#281C17\",opacity:1,stroke:\"none\",d:\" M635.638306,855.036377   C636.921631,855.397095 637.863647,855.793274 638.805664,856.189392   C638.329895,856.945190 637.854065,857.700928 637.173706,858.734070   C635.762573,858.458618 634.556030,857.905701 633.349609,857.352783   C633.998718,856.592529 634.647827,855.832214 635.638306,855.036377  z\",id:\"svg_528\"})),_path527||(_path527=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M492.364288,821.966797   C491.997070,821.561218 491.997803,821.115112 492.109192,820.112244   C492.424927,819.280518 492.690308,819.089172 493.372528,818.979248   C495.151642,818.311523 496.574188,817.645996 497.996735,816.980469   C498.259888,817.481201 498.523071,817.981934 498.893127,818.745483   C496.910767,819.980957 494.821503,820.953613 492.364288,821.966797  z\",id:\"svg_529\"})),_path528||(_path528=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M507.006287,839.628113   C506.446838,839.829346 505.891235,839.661072 505.168396,839.247620   C504.999969,837.612854 504.998718,836.223206 504.998749,834.416809   C505.000000,834.000000 505.001221,834.000000 505.001221,834.000000   C506.099762,834.068054 507.198303,834.136169 508.732544,834.231323   C508.080017,836.135803 507.545044,837.697205 507.006287,839.628113  z\",id:\"svg_530\"})),_path529||(_path529=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M605.995422,795.637573   C604.693115,795.237244 603.386230,794.476868 602.039673,793.360718   C602.731018,792.476379 603.462036,791.947876 604.193054,791.419373   C604.792297,792.705444 605.391602,793.991516 605.995422,795.637573  z\",id:\"svg_531\"})),_path530||(_path530=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M489.321991,825.022217   C489.768066,824.332581 490.529999,823.667603 491.645355,822.991577   C491.211823,823.669312 490.424866,824.358093 489.321991,825.022217  z\",id:\"svg_532\"})),_path531||(_path531=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M520.050903,843.331787   C520.854370,843.158813 521.708801,843.317627 522.563171,843.476440   C522.436157,843.839722 522.309082,844.202942 522.182068,844.566223   C521.488647,844.265320 520.795288,843.964478 520.050903,843.331787  z\",id:\"svg_533\"})),_path532||(_path532=/*#__PURE__*/React.createElement(\"path\",{fill:\"#281C17\",opacity:1,stroke:\"none\",d:\" M638.715027,879.602417   C638.842957,879.440186 639.064941,879.416382 639.286926,879.392578   C639.127686,879.508728 638.968384,879.624817 638.715027,879.602417  z\",id:\"svg_534\"})),_path533||(_path533=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M504.999390,834.000000   C504.877228,833.857788 504.755707,833.715515 504.634155,833.573303   C504.720245,833.622925 504.806366,833.672485 504.946838,833.861084   C505.001221,834.000000 505.000000,834.000000 504.999390,834.000000  z\",id:\"svg_535\"})),_path534||(_path534=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M499.000610,834.000000   C499.122131,834.142578 499.243042,834.285278 499.363922,834.427979   C499.277832,834.378235 499.191742,834.328430 499.052216,834.139282   C498.998779,834.000000 499.000000,834.000000 499.000610,834.000000  z\",id:\"svg_536\"})),_path535||(_path535=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M641.000000,806.002625   C640.576050,807.049622 639.524719,808.362488 639.836365,809.097839   C641.222778,812.369446 642.999207,815.475647 644.830994,819.021606   C646.031006,818.039001 646.978394,817.263306 648.093811,816.349976   C648.736877,817.113892 649.377014,817.874329 649.944458,818.548462   C651.606873,814.555603 653.171997,810.796509 655.203369,805.917603   C656.837646,808.275513 657.880554,809.780090 658.960449,811.643555   C656.870117,816.607910 652.288635,819.817932 651.490967,825.185608   C651.473633,825.302246 651.256775,825.389160 650.816284,825.747620   C649.903625,824.268982 649.016235,822.831482 648.483093,821.967712   C645.763672,822.716431 643.368713,823.300598 641.023987,824.043396   C638.881958,824.722046 636.195984,824.950684 638.360962,828.569824   C639.249390,830.054932 638.841309,832.315552 639.116333,835.204163   C632.824768,830.589722 628.405396,826.056152 628.000977,818.395569   C628.969666,818.999817 629.897217,820.047241 630.917419,820.994873   C631.666260,821.690430 632.536621,822.255188 633.352783,822.878174   C633.903992,821.999451 634.756470,821.178894 634.940308,820.228943   C635.267517,818.537781 635.190125,816.768250 635.282043,815.031494   C634.132385,815.031494 632.982666,815.031494 631.507324,815.031494   C630.807129,813.382751 629.636169,811.374146 629.162170,809.212646   C628.901428,808.023804 629.813599,806.577698 630.196960,805.247620   C631.240234,805.981812 632.288147,806.709473 633.325012,807.452637   C633.922729,807.881165 634.502441,808.334778 636.276001,809.669312   C635.379028,806.771851 634.897339,805.215698 634.250488,803.126099   C636.145874,803.452393 637.692078,803.718567 639.724243,804.248291   C640.473450,805.008789 640.736694,805.505737 641.000000,806.002625  z\",id:\"svg_537\"})),_path536||(_path536=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M731.474365,835.611328   C730.644287,836.007385 729.736938,836.039307 728.209473,835.765747   C719.102966,829.855591 709.451172,828.666504 699.638916,828.064941   C696.731812,827.886780 693.829102,827.636230 690.933960,826.995361   C690.023743,825.721680 689.243835,824.478516 688.158997,824.092773   C684.464111,822.778748 680.661804,821.767090 676.900513,820.639954   C676.900513,820.639954 676.886230,820.207153 677.340332,820.088806   C681.221741,820.044373 684.649048,820.118286 688.076294,820.192261   C689.449646,820.176941 690.822998,820.161682 692.851562,820.097168   C693.664307,819.988831 693.821777,819.929810 693.979248,819.870850   C694.734253,819.913818 695.489319,819.956848 696.617249,819.932068   C705.153870,819.253906 713.203857,820.342407 720.152039,824.534241   C724.479614,827.145081 727.686890,831.612854 731.474365,835.611328  z\",id:\"svg_538\"})),_path537||(_path537=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M644.991882,852.909607   C640.628601,848.591736 640.337158,840.520447 644.553589,836.536560   C646.670898,834.536194 649.071350,832.835693 652.011353,830.906250   C653.391663,830.766174 654.104370,830.719238 654.909668,831.006836   C655.453674,831.699463 656.175232,832.454590 656.317322,832.357910   C660.357422,829.609070 664.153198,830.730774 667.781433,833.305847   C663.725098,836.076477 659.794434,838.499817 655.565552,841.082886   C652.476379,844.803833 647.177917,846.396362 646.597534,851.944702   C645.870300,852.283508 645.431091,852.596558 644.991882,852.909607  z\",id:\"svg_539\"})),_path538||(_path538=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M667.907166,832.958557   C664.153198,830.730774 660.357422,829.609070 656.317322,832.357910   C656.175232,832.454590 655.453674,831.699463 655.034546,830.733032   C656.043213,829.416138 657.019531,828.707581 658.337769,827.883423   C661.480286,826.627197 664.280762,825.486450 667.194519,824.299622   C667.158142,823.506409 667.107361,822.398926 667.488892,821.203247   C669.949341,820.858948 671.977478,820.602844 674.005615,820.346802   C674.727295,820.424744 675.449036,820.502747 676.535645,820.610352   C680.661804,821.767090 684.464111,822.778748 688.158997,824.092773   C689.243835,824.478516 690.023743,825.721680 690.577881,826.898499   C682.777222,829.136292 675.342163,831.047424 667.907166,832.958557  z\",id:\"svg_540\"})),_path539||(_path539=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M644.995117,853.307861   C645.431091,852.596558 645.870300,852.283508 646.943481,851.978943   C648.218872,852.340210 649.457092,852.864929 649.412415,853.019958   C648.722595,855.413391 647.866150,857.758667 646.931030,860.453247   C647.823425,860.594482 648.890381,860.763245 650.128052,861.196777   C650.610168,862.372803 650.796021,863.357056 651.270813,864.173218   C651.684509,864.884277 652.424255,865.405640 653.011963,866.341431   C652.993164,867.112793 652.982300,867.553650 652.971436,867.994446   C651.308716,868.299438 649.645996,868.604492 647.639771,868.971497   C646.530273,863.924377 645.764343,858.815247 644.995117,853.307861  z\",id:\"svg_541\"})),_path540||(_path540=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M667.056641,821.291382   C667.107361,822.398926 667.158142,823.506409 667.194519,824.299622   C664.280762,825.486450 661.480286,826.627197 658.361145,827.551514   C658.059448,826.895142 658.076294,826.455017 658.093140,826.014954   C658.629944,825.245911 659.166809,824.476929 660.241333,823.450500   C661.511169,822.771484 662.243225,822.349915 662.975342,821.928406   C663.807129,821.703430 664.638855,821.478455 666.006775,821.139465   C666.714111,821.114136 666.885376,821.202759 667.056641,821.291382  z\",id:\"svg_542\"})),_path541||(_path541=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M687.839172,819.876465   C684.649048,820.118286 681.221741,820.044373 677.366394,819.873840   C680.410095,815.629517 684.037720,819.152710 687.839172,819.876465  z\",id:\"svg_543\"})),_path542||(_path542=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M657.714172,826.010986   C658.076294,826.455017 658.059448,826.895142 658.019165,827.667114   C657.019531,828.707581 656.043213,829.416138 654.942017,830.398560   C654.104370,830.719238 653.391663,830.766174 652.326355,830.747314   C653.760925,829.123413 655.548096,827.565186 657.714172,826.010986  z\",id:\"svg_544\"})),_path543||(_path543=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M667.488892,821.203247   C666.885376,821.202759 666.714111,821.114136 666.268677,820.933228   C668.126038,817.436279 670.993042,819.143494 673.852417,820.039612   C671.977478,820.602844 669.949341,820.858948 667.488892,821.203247  z\",id:\"svg_545\"})),_path544||(_path544=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M683.252075,813.190430   C683.379028,812.075378 683.763428,811.162048 684.147827,810.248657   C684.760132,810.920410 685.372437,811.592163 685.992310,812.633179   C685.826111,813.867126 685.652222,814.731812 685.287659,816.544434   C684.376892,814.929810 683.943176,814.160950 683.252075,813.190430  z\",id:\"svg_546\"})),_path545||(_path545=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M662.844482,821.628418   C662.243225,822.349915 661.511169,822.771484 660.447998,823.233521   C660.183105,822.041077 660.249329,820.808167 660.369080,818.578247   C661.581116,819.999939 662.147400,820.664185 662.844482,821.628418  z\",id:\"svg_547\"})),_path546||(_path546=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M679.032593,813.347046   C679.747253,813.004944 680.499451,813.002563 681.627686,813.002563   C681.603882,813.879883 681.203979,814.754883 680.804077,815.629883   C680.226013,814.982178 679.648071,814.334473 679.032593,813.347046  z\",id:\"svg_548\"})),_path547||(_path547=/*#__PURE__*/React.createElement(\"path\",{fill:\"#281C17\",opacity:1,stroke:\"none\",d:\" M638.999756,861.007080   C639.482422,860.306946 639.966003,859.598999 640.449585,858.891113   C640.742859,859.134766 641.036072,859.378357 641.329285,859.622009   C640.757141,860.064453 640.184998,860.506958 639.299011,860.974976   C638.985168,861.000610 639.000732,860.999329 638.999756,861.007080  z\",id:\"svg_549\"})),_path548||(_path548=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M693.879517,819.721252   C693.821777,819.929810 693.664307,819.988831 693.256470,820.017578   C693.264038,819.848694 693.521973,819.710205 693.879517,819.721252  z\",id:\"svg_550\"})),_path549||(_path549=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M653.019897,866.010803   C652.424255,865.405640 651.684509,864.884277 651.270813,864.173218   C650.796021,863.357056 650.610168,862.372803 650.194214,860.856750   C651.286133,858.786682 652.482483,857.321350 653.678772,855.856079   C654.290771,858.030029 653.931641,859.339111 653.766235,860.672302   C653.749084,860.810791 655.291260,861.420959 655.421204,861.259155   C658.672485,857.210938 661.831116,853.088379 665.379761,848.975098   C666.500549,848.975708 667.247864,848.980103 668.001038,849.333130   C668.304810,853.032776 669.783630,851.359070 671.205078,850.495239   C671.928650,850.055481 672.834351,849.915344 674.081116,849.498047   C673.430176,851.280396 673.001770,852.453613 672.573303,853.626831   C673.075195,853.887390 673.577087,854.148010 674.078979,854.408630   C674.931152,852.845398 676.766357,851.000610 676.417175,849.781555   C675.814514,847.677429 673.767334,846.651978 671.301758,848.250854   C670.410034,848.829102 669.102295,848.765747 667.946289,848.642883   C666.935181,846.523682 665.962036,844.756714 665.315308,842.953125   C666.346313,842.273499 667.050903,841.630432 667.755554,840.987366   C667.332764,840.683228 666.910034,840.379028 666.487305,840.074829   C665.994934,841.053528 665.502563,842.032227 664.657410,843.015015   C663.863098,843.949341 662.938782,844.972778 663.096069,845.787354   C663.318176,846.937073 664.340271,847.932312 664.647339,848.985596   C661.762207,848.582703 659.250061,848.187805 657.370911,847.892395   C656.902710,845.727234 656.383240,843.325134 655.863831,840.923096   C659.794434,838.499817 663.725098,836.076477 667.781433,833.305847   C675.342163,831.047424 682.777222,829.136292 690.568298,827.322021   C693.829102,827.636230 696.731812,827.886780 699.638916,828.064941   C709.451172,828.666504 719.102966,829.855591 727.755981,835.775818   C727.820312,836.382324 727.642517,836.615784 726.861206,836.940002   C721.692505,840.452332 721.379578,833.601685 717.899780,833.625244   C716.948853,834.114136 715.796509,834.706482 714.606567,835.318176   C713.060242,830.261719 709.070312,832.177917 705.768616,831.866333   C702.528564,831.560669 699.347351,830.458435 696.115051,830.326782   C694.820557,830.274048 693.458496,831.880920 692.054749,832.778687   C688.568726,829.032959 687.964355,829.101379 682.481140,835.183533   C685.491394,834.461182 687.329529,834.020142 689.627136,833.468750   C689.907104,835.796265 690.208557,838.301880 690.563232,841.250549   C689.591492,841.778748 688.283691,842.489624 686.673340,843.364990   C688.297119,845.481018 689.642883,847.234741 690.617798,848.997070   C689.463806,849.911011 688.680603,850.816223 687.897461,851.721436   C688.439331,852.048279 688.981262,852.375061 689.523132,852.701843   C690.018677,851.471191 690.514221,850.240479 691.334595,849.052063   C691.659424,850.805664 691.659424,852.516968 691.659424,853.853516   C695.852539,857.541931 699.972534,861.165955 703.708130,864.451904   C702.725830,862.742798 701.362915,860.371399 700.400208,858.002625   C701.867737,858.002686 702.935120,858.000122 704.001587,858.372314   C705.284790,860.818848 706.568726,862.890686 707.994385,865.191223   C709.949219,861.766724 708.911987,860.172668 704.000854,857.642700   C704.835510,856.082153 705.666870,854.881287 706.190491,854.124939   C704.071106,851.342712 702.038025,848.673828 700.376343,846.008789   C703.534485,847.915466 706.321228,849.818298 709.075989,851.699280   C709.382751,848.811157 709.691406,845.905579 710.367310,842.995056   C713.167725,842.568481 715.600891,842.146851 718.033997,841.725220   C718.135803,841.578918 718.237671,841.432617 718.339478,841.286316   C720.903625,841.188232 723.467773,841.090149 726.031860,840.992065   C726.338989,842.408142 726.646179,843.824219 726.738770,845.620117   C726.345642,846.008911 726.167053,846.017822 725.988403,846.026672   C725.109558,846.204895 724.230713,846.383179 722.706848,846.692261   C724.915039,849.122131 726.694641,851.080505 728.803528,853.401123   C727.408936,855.255493 725.853882,857.323181 724.158325,860.022949   C724.030273,861.089905 724.042786,861.524902 724.026306,861.982666   C723.997375,862.005432 723.943420,862.055664 723.582031,862.046509   C720.477966,863.958313 717.735229,865.879333 713.971252,868.515625   C713.534058,867.316833 713.069275,866.042236 712.660095,864.920105   C709.322327,867.883179 706.693909,870.401123 703.848450,872.643494   C702.837219,873.440247 701.298096,873.567200 699.994629,873.651611   C699.622986,872.690430 699.256592,872.077576 698.890259,871.464783   C698.588867,872.305237 698.287415,873.145630 697.631897,873.996765   C696.855042,875.013062 696.432251,876.018616 695.976074,877.357300   C696.297485,878.792847 696.652405,879.895203 697.003662,880.998779   C697.000000,881.000000 697.002441,880.993530 697.002441,880.993530   C696.811157,881.867981 696.619812,882.742432 696.267273,884.354248   C694.871277,882.474426 693.945984,881.228516 692.657776,879.493896   C690.792908,881.050293 689.200195,882.379578 687.301270,883.861633   C685.929810,884.009216 684.864502,884.004028 683.396851,883.672852   C682.704529,882.681641 682.414612,882.016479 682.124695,881.351257   C681.869019,881.445801 681.613281,881.540344 681.357544,881.634888   C681.571716,882.423279 681.785828,883.211609 682.000000,884.000000   C679.925720,884.661926 677.851440,885.323853 675.292236,885.764282   C674.606323,885.271912 674.348816,885.074707 674.034851,884.951111   C673.554932,884.648315 673.075012,884.345459 672.296936,883.647095   C672.005737,882.500732 672.012634,881.750000 672.359375,880.962830   C673.335815,880.320435 673.972412,879.714417 674.609009,879.108398   C674.147888,878.804626 673.686768,878.500916 673.225586,878.197205   C672.817078,879.125000 672.408569,880.052734 671.599609,880.984070   C670.131165,880.993408 669.063171,880.999146 667.995117,881.004883   C667.995117,881.004883 668.000000,881.000000 667.958557,880.643250   C667.045105,878.952942 666.173096,877.619324 665.301086,876.285706   C664.836853,875.149536 665.184570,872.599060 666.631531,871.512268   C670.255798,868.790283 674.378113,866.731384 678.801331,864.109619   C677.067322,862.503662 676.107605,861.614807 675.199585,860.773865   C676.274353,858.907288 677.156189,857.375854 678.038025,855.844360   C677.751282,855.621155 677.464539,855.397949 677.177795,855.174744   C675.738403,856.068542 674.299072,856.962341 672.874084,857.847229   C672.161804,856.835754 671.635742,856.088745 671.182190,855.444641   C668.992859,856.737610 667.067688,857.874512 665.134216,859.016357   C665.302551,860.258789 665.450134,861.348389 665.549316,862.080627   C663.162109,863.147339 661.078613,864.078369 658.995117,865.009338   C658.995117,865.009338 658.991394,864.997620 658.939880,864.659790   C656.033875,861.763245 654.623169,864.221558 653.019897,866.010803  M696.311829,868.012878   C695.698242,868.343262 695.084717,868.673645 694.471191,869.004089   C694.774841,869.284119 695.078491,869.564209 695.382080,869.844238   C695.921326,869.229492 696.460632,868.614685 697.626221,867.920776   C698.061401,867.299866 698.496643,866.678955 698.931824,866.058044   C698.597961,865.908569 698.264099,865.759033 697.930237,865.609558   C697.620178,866.406372 697.310120,867.203186 696.311829,868.012878  M678.417114,879.281921   C679.531433,879.072937 680.645691,878.864014 681.760010,878.655090   C681.518494,878.079163 681.276978,877.503296 681.035461,876.927368   C680.142517,877.490967 679.249512,878.054565 678.417114,879.281921  M712.917175,852.625366   C712.339417,852.877136 711.761658,853.128967 711.183899,853.380737   C711.664551,853.861450 712.145203,854.342224 712.625793,854.822998   C712.878418,854.245178 713.131042,853.667419 712.917175,852.625366  M676.252930,883.104675   C676.745972,883.104187 677.238953,883.103699 677.731995,883.103210   C677.587769,882.555420 677.443481,882.007690 677.299316,881.459961   C676.908936,881.806152 676.518555,882.152344 676.252930,883.104675  M661.609985,858.805359   C661.251770,858.757812 660.893555,858.710205 660.535339,858.662659   C660.532043,858.918823 660.528748,859.174927 660.525452,859.431091   C660.884827,859.390747 661.244202,859.350403 661.609985,858.805359  M682.375610,875.220093   C682.776001,875.223022 683.176575,875.230164 683.575562,875.208069   C683.586975,875.207397 683.581177,874.896790 683.583435,874.730774   C683.183594,874.726318 682.783691,874.721802 682.375610,875.220093  M692.839905,872.976318   C692.739990,872.556091 692.640076,872.135864 692.540161,871.715576   C692.414368,871.807678 692.171692,871.916260 692.182007,871.989014   C692.242371,872.415833 692.361938,872.834351 692.839905,872.976318  z\",id:\"svg_551\"})),_path550||(_path550=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M658.995605,865.416870   C661.078613,864.078369 663.162109,863.147339 665.549316,862.080627   C665.450134,861.348389 665.302551,860.258789 665.134216,859.016357   C667.067688,857.874512 668.992859,856.737610 671.182190,855.444641   C671.635742,856.088745 672.161804,856.835754 672.874084,857.847229   C674.299072,856.962341 675.738403,856.068542 677.177795,855.174744   C677.464539,855.397949 677.751282,855.621155 678.038025,855.844360   C677.156189,857.375854 676.274353,858.907288 675.199585,860.773865   C676.107605,861.614807 677.067322,862.503662 678.801331,864.109619   C674.378113,866.731384 670.255798,868.790283 666.631531,871.512268   C665.184570,872.599060 664.836853,875.149536 665.301086,876.285706   C666.173096,877.619324 667.045105,878.952942 667.956116,880.645691   C665.936035,879.262939 663.784607,877.616272 661.851990,875.743774   C660.666992,874.595642 659.817261,873.101379 658.371033,871.165649   C658.512695,869.955444 658.754395,867.889954 658.995605,865.416870  z\",id:\"svg_552\"})),_path551||(_path551=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M653.011963,866.341431   C654.623169,864.221558 656.033875,861.763245 658.932434,864.661011   C657.214844,865.960754 655.453186,866.921509 653.331482,867.938354   C652.982300,867.553650 652.993164,867.112793 653.011963,866.341431  z\",id:\"svg_553\"})),_path552||(_path552=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M672.019531,880.999207   C672.012634,881.750000 672.005737,882.500732 672.000610,883.626953   C670.693542,883.240784 669.384644,882.479126 668.035400,881.361206   C669.063171,880.999146 670.131165,880.993408 671.599976,880.993469   C672.000793,880.999268 672.019531,880.999207 672.019531,880.999207  z\",id:\"svg_554\"})),_path553||(_path553=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M683.000000,884.000000   C682.835022,884.438782 682.670044,884.877563 682.505005,885.316284   C682.346558,885.046936 682.188049,884.777588 682.264771,884.253296   C682.666687,883.998840 682.833313,883.999390 683.000000,884.000000  z\",id:\"svg_555\"})),_path554||(_path554=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M674.126831,885.185669   C674.348816,885.074707 674.606323,885.271912 674.921265,885.760620   C674.763123,885.792358 674.490967,885.606323 674.126831,885.185669  z\",id:\"svg_556\"})),_path555||(_path555=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M724.055298,861.959839   C724.042786,861.524902 724.030273,861.089905 724.015442,860.328674   C724.743835,860.001648 725.474548,860.000916 726.569458,859.998840   C727.281189,863.755859 725.939392,866.337036 722.580017,868.502930   C715.468018,873.088318 708.682739,878.180481 701.393311,883.072571   C699.918762,882.383789 698.814331,881.687317 697.356201,880.992188   C697.002441,880.993530 697.000000,881.000000 697.036987,880.654053   C697.383423,879.204529 697.692932,878.101074 698.001221,876.998779   C698.000000,877.000000 697.998901,877.002441 698.294067,876.869995   C699.059570,875.825012 699.529785,874.912476 700.000000,874.000000   C701.298096,873.567200 702.837219,873.440247 703.848450,872.643494   C706.693909,870.401123 709.322327,867.883179 712.660095,864.920105   C713.069275,866.042236 713.534058,867.316833 713.971252,868.515625   C717.735229,865.879333 720.477966,863.958313 723.606567,862.291504   C724.135254,862.818359 724.278076,863.091125 724.420898,863.363831   C724.299011,862.895813 724.177124,862.427856 724.055298,861.959839  z\",id:\"svg_557\"})),_path556||(_path556=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M553.998779,900.001221   C555.141907,899.057861 556.286194,898.113281 558.314941,896.438599   C558.314941,898.096619 558.597290,899.746155 558.265076,899.881042   C556.971680,900.405884 555.483276,900.450134 554.034912,900.335388   C554.002441,899.997559 554.000000,900.000000 553.998779,900.001221  z\",id:\"svg_558\"})),_path557||(_path557=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M498.001221,881.998291   C498.001221,881.998291 498.473816,882.001038 498.709473,882.002930   C499.215027,882.807190 499.484894,883.609558 499.885132,884.705933   C497.252777,885.973938 494.490051,886.947937 491.364868,887.960938   C487.368347,884.891541 483.734253,881.783020 480.046417,878.337280   C479.997803,875.957031 480.002930,873.914062 480.318909,871.434937   C481.754761,870.987854 482.879822,870.976868 484.007019,871.350342   C486.146698,874.050781 488.284302,876.366699 490.421906,878.682617   C490.876648,878.435120 491.331390,878.187683 491.786133,877.940186   C490.934906,879.342468 490.083649,880.744812 488.604492,883.181519   C490.354004,882.431763 490.982666,882.077637 491.657745,881.894775   C492.476135,881.673035 493.375122,881.382446 494.159210,881.534485   C494.648926,881.629333 495.018494,882.934875 495.393494,882.911743   C496.278168,882.857178 497.133850,882.332764 498.001221,881.998291  z\",id:\"svg_559\"})),_path558||(_path558=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M500.079834,885.156738   C499.994934,884.985413 500.491211,884.995239 500.739136,885.001282   C500.712982,885.114197 500.438873,885.221130 500.079834,885.156738  z\",id:\"svg_560\"})),_path559||(_path559=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1F1611\",opacity:1,stroke:\"none\",d:\" M641.133789,806.307373   C640.736694,805.505737 640.473450,805.008789 640.102661,804.251099   C639.088623,800.288635 638.182129,796.587036 637.250183,792.781433   C644.351501,796.288574 644.919922,797.797729 643.178528,808.949402   C642.389832,807.984741 641.828674,807.298462 641.133789,806.307373  z\",id:\"svg_561\"})),_path560||(_path560=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M678.798096,777.735718   C678.224304,778.325073 677.450745,778.660706 676.338623,778.998169   C676.866089,778.494019 677.732178,777.988037 678.798096,777.735718  z\",id:\"svg_562\"})),_path561||(_path561=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M700.004883,846.004883   C702.038025,848.673828 704.071106,851.342712 706.190491,854.124939   C705.666870,854.881287 704.835510,856.082153 704.002075,857.641479   C704.000000,858.000000 704.002441,857.997559 704.002441,857.997559   C702.935120,858.000122 701.867737,858.002686 700.394897,857.644653   C699.512634,856.578735 699.035767,855.873474 698.558899,855.168213   C698.160706,855.552368 697.762451,855.936584 697.364258,856.320740   C698.242798,856.880493 699.121399,857.440247 700.000000,858.000000   C701.362915,860.371399 702.725830,862.742798 703.708130,864.451904   C699.972534,861.165955 695.852539,857.541931 691.659424,853.853516   C691.659424,852.516968 691.659424,850.805664 691.329468,849.046875   C690.999512,848.999451 690.988586,848.988464 690.988586,848.988464   C689.642883,847.234741 688.297119,845.481018 686.673340,843.364990   C688.283691,842.489624 689.591492,841.778748 690.563232,841.250549   C690.208557,838.301880 689.907104,835.796265 689.627136,833.468750   C687.329529,834.020142 685.491394,834.461182 682.481140,835.183533   C687.964355,829.101379 688.568726,829.032959 692.054749,832.778687   C693.458496,831.880920 694.820557,830.274048 696.115051,830.326782   C699.347351,830.458435 702.528564,831.560669 705.768616,831.866333   C709.070312,832.177917 713.060242,830.261719 714.606567,835.318176   C715.796509,834.706482 716.948853,834.114136 717.899780,833.625244   C721.379578,833.601685 721.692505,840.452332 726.659546,837.037476   C726.846619,838.166077 726.707397,839.345459 726.300049,840.758484   C723.467773,841.090149 720.903625,841.188232 718.339478,841.286316   C718.237671,841.432617 718.135803,841.578918 718.033997,841.725220   C715.600891,842.146851 713.167725,842.568481 710.359253,842.620972   C708.155945,839.967834 706.198364,837.772949 704.545715,835.368469   C703.452942,833.778503 702.536194,831.800720 700.761047,834.195679   C700.270691,834.857361 701.617432,836.880676 702.163818,838.397400   C701.563477,839.674377 700.781738,841.337219 699.653809,843.000488   C698.667786,843.465576 698.028015,843.930115 697.388245,844.394653   C698.257202,844.928162 699.126160,845.461670 699.997559,845.997559   C700.000000,846.000000 700.004883,846.004883 700.004883,846.004883  z\",id:\"svg_563\"})),_path562||(_path562=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M726.039185,846.359436   C726.167053,846.017822 726.345642,846.008911 726.792603,845.982483   C727.562195,846.425354 728.063416,846.885864 728.564636,847.346375   C727.739746,847.128357 726.914856,846.910278 726.039185,846.359436  z\",id:\"svg_564\"})),_path563||(_path563=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M730.973877,851.018311   C730.692261,850.722534 730.428162,850.411194 730.208252,850.071289   C730.193542,850.048645 730.515442,849.808289 730.680786,849.669067   C730.796326,849.923096 730.911926,850.177124 731.040771,850.689575   C731.054077,850.947998 731.001709,850.996155 730.973877,851.018311  z\",id:\"svg_565\"})),_path564||(_path564=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392B1F\",opacity:1,stroke:\"none\",d:\" M428.001221,797.000000   C427.005859,793.249573 426.010529,789.499207 425.006653,785.378540   C425.652710,785.086487 426.673187,784.924072 426.906616,785.279114   C430.094574,790.128113 434.202515,789.224670 437.806732,787.636353   C438.517578,782.895813 439.164459,778.582214 439.811310,774.268616   C440.459534,774.235718 441.107758,774.202759 441.755981,774.169861   C442.432587,775.945129 443.109192,777.720337 443.881226,779.746033   C445.222778,777.498047 446.400696,775.524231 447.913208,772.989807   C446.201965,772.700378 444.773560,772.458801 442.465668,772.068542   C445.292816,769.064941 444.518890,763.812134 451.095398,764.533325   C454.479248,764.904480 455.932129,756.873169 453.559692,753.534058   C454.095367,751.424011 454.563690,749.579346 455.031982,747.734680   C452.938324,748.834045 450.844696,749.933472 448.761139,751.027527   C453.154907,757.981812 452.698090,758.799683 445.364594,761.233032   C443.981506,761.691956 443.160553,763.745667 441.991547,764.979431   C440.982819,766.044067 439.847870,766.989014 438.315002,767.630615   C435.906311,765.848694 433.951324,764.423157 432.299561,762.849976   C436.588501,759.097961 440.592926,755.513855 444.539124,751.866699   C445.113708,751.335815 445.880432,750.401062 445.755707,749.827759   C445.106995,746.846252 444.922699,743.269775 443.092743,741.235229   C442.089264,740.119507 438.163361,741.780701 435.541779,741.904358   C434.370544,741.959656 433.166168,741.312988 432.198120,740.877319   C432.694427,740.569824 432.884277,740.308105 433.367462,739.983887   C435.157806,738.315979 436.569611,736.648804 438.338898,734.981201   C441.246124,733.451904 441.094055,732.286621 438.064667,729.637939   C438.369568,728.189941 438.653870,727.086060 439.332886,725.987488   C440.822052,727.000122 441.916504,728.007385 443.012329,729.385742   C443.627472,731.266602 444.151245,732.820923 444.873383,734.276917   C446.504028,737.564636 448.232697,740.803711 450.125427,744.456177   C450.880829,744.188477 453.679596,744.071106 454.385834,742.795349   C457.481750,737.203064 463.090454,739.270447 467.233398,737.138489   C467.493652,737.538269 467.753876,737.938049 468.014130,738.337891   C465.315582,741.056091 462.617035,743.774353 459.689880,746.722900   C460.522583,748.001770 461.754089,749.893127 463.216614,752.139282   C466.394318,751.434021 469.694427,750.701599 473.340454,750.029053   C474.125824,751.058533 474.565338,752.028015 474.860474,753.319336   C472.477173,756.270203 473.524902,763.599365 465.785126,758.627991   C465.087738,761.895996 464.515320,764.578491 464.138245,766.345398   C466.941925,765.812195 468.986084,765.423523 471.156281,765.337524   C470.836517,766.800110 470.126526,767.938354 470.029358,769.126648   C469.953278,770.056946 470.636505,771.049377 470.982422,772.397522   C471.235321,777.825134 468.015717,775.050842 466.002441,774.992676   C465.521759,773.468506 465.041107,771.944397 464.265961,769.486511   C462.159363,772.322388 460.556671,774.479919 457.847504,778.126953   C457.215454,776.705566 456.643311,775.418884 456.153107,774.316467   C453.894958,774.881592 451.818268,775.401306 448.923004,776.125854   C448.923004,778.544678 448.874695,781.544495 448.937866,784.541931   C448.991150,787.069885 448.940857,788.813965 445.891235,790.369751   C443.822845,791.424927 443.297485,795.504639 441.684509,798.622498   C440.133606,799.494507 438.980255,799.975708 438.588593,800.139160   C436.226349,797.837097 434.125549,795.789856 432.155914,793.870422   C430.836426,794.864380 429.418823,795.932190 428.001221,797.000000  z\",id:\"svg_566\"})),_path565||(_path565=/*#__PURE__*/React.createElement(\"path\",{fill:\"#574432\",opacity:1,stroke:\"none\",d:\" M406.969910,723.003174   C406.808777,721.166870 406.647614,719.330505 406.217010,716.855225   C405.909912,715.167175 405.872284,714.118164 405.889160,712.675171   C405.369080,710.794495 404.794495,709.307800 404.191315,707.420105   C404.105347,705.679504 404.047913,704.339905 404.288696,702.786316   C406.564484,701.732849 408.542053,700.893372 410.739075,699.960693   C409.565826,699.162659 408.563354,698.480774 407.448669,697.722595   C408.854309,696.393860 410.009979,695.301392 411.869873,693.543274   C412.382172,695.599365 412.435181,697.105042 413.146057,698.173035   C413.562927,698.799377 415.027405,698.728394 416.348145,699.157349   C417.448761,701.898132 418.221924,704.452698 418.995117,707.401489   C418.456848,708.866943 418.118011,710.676697 417.346710,710.885010   C413.463318,711.933655 413.636414,714.882446 414.116058,717.632690   C414.486816,719.758667 415.741821,721.730408 416.473694,723.462952   C417.978302,721.337036 419.322540,719.437683 420.666809,717.538269   C421.268097,717.677185 421.869385,717.816101 422.470673,717.954956   C422.470673,721.135376 423.200378,724.536194 422.320160,727.450745   C420.432770,733.700073 423.965576,743.523865 431.298248,746.826965   C428.724396,747.950378 427.127838,748.601990 425.572754,749.340759   C424.401031,749.897400 422.481262,750.421326 422.336945,751.220398   C422.143188,752.293091 423.084412,754.407471 423.983185,754.697876   C428.168365,756.049988 430.427856,758.723206 430.729126,763.272644   C427.883179,764.033203 425.223724,765.092529 422.723053,764.798950   C420.829468,764.576782 417.917969,762.921265 417.553925,761.401733   C415.060883,750.996155 413.023804,740.476013 411.065277,729.950867   C410.517700,727.008179 410.951965,723.794434 406.969910,723.003174  M414.724121,704.118774   C414.532074,703.574768 414.340027,703.030762 414.148041,702.486816   C413.869568,702.614441 413.591095,702.742126 413.312592,702.869690   C413.638275,703.429626 413.963928,703.989563 414.724121,704.118774  z\",id:\"svg_567\"})),_path566||(_path566=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M406.685455,723.225891   C410.951965,723.794434 410.517700,727.008179 411.065277,729.950867   C413.023804,740.476013 415.060883,750.996155 417.553925,761.401733   C417.917969,762.921265 420.829468,764.576782 422.723053,764.798950   C425.223724,765.092529 427.883179,764.033203 430.982361,763.275635   C431.659027,762.996338 431.827667,762.996948 431.996338,762.997559   C433.951324,764.423157 435.906311,765.848694 437.928802,767.635925   C437.675232,768.103821 437.416290,768.294495 436.791138,768.827332   C435.905365,769.719421 435.447998,770.353760 434.990662,770.988098   C434.990631,770.988098 435.000000,771.000000 434.636414,771.057678   C433.450562,772.802307 432.881927,774.696350 431.726410,776.111084   C430.790588,777.256897 428.907410,778.741455 427.868683,778.467407   C425.437927,777.826172 423.262024,776.218994 420.982941,775.002869   C420.984497,774.251648 420.986053,773.500366 421.227600,772.207520   C420.975983,770.780945 420.484436,769.895996 419.992889,769.010986   C419.992889,769.010986 419.501343,769.000000 419.211731,768.675964   C418.278595,767.906738 417.635071,767.461548 416.991516,767.016357   C415.274384,763.994629 413.680298,760.892761 411.788208,757.984863   C410.840515,756.528320 409.328339,755.445312 408.109924,754.157043   C406.736755,752.705200 405.406830,751.212524 404.404846,749.376831   C406.685822,748.884094 408.620026,748.752075 410.554260,748.620056   C408.919342,745.255920 407.284424,741.891724 405.552917,738.328796   C404.757568,736.480164 404.076660,734.445679 403.031982,732.619385   C402.265503,731.279358 401.021973,730.212280 399.991058,729.023560   C404.992340,730.458923 404.883209,726.018433 406.685455,723.225891  z\",id:\"svg_568\"})),_path567||(_path567=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M340.864441,720.322876   C346.233032,722.847595 351.346649,725.947327 356.742798,728.433960   C360.127075,729.993408 363.884979,730.887329 367.566681,731.621094   C372.715393,732.647217 377.949310,733.245728 383.580017,734.032227   C385.965851,736.652771 384.209442,738.125854 382.060760,737.862854   C373.979950,736.873535 365.373596,738.390137 358.294739,732.191833   C356.259308,730.409607 352.448730,730.268860 349.411194,730.096924   C343.006897,729.734253 340.572327,727.315125 340.864441,720.322876  z\",id:\"svg_569\"})),_path568||(_path568=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M399.641388,729.017090   C401.021973,730.212280 402.265503,731.279358 403.031982,732.619385   C404.076660,734.445679 404.757568,736.480164 405.552917,738.328796   C407.284424,741.891724 408.919342,745.255920 410.554260,748.620056   C408.620026,748.752075 406.685822,748.884094 404.362457,749.016968   C401.416473,746.537537 398.859619,744.057190 396.154114,740.880127   C395.596191,738.626282 394.843018,737.063965 394.866821,735.513428   C394.895020,733.672852 395.591736,731.842590 395.998779,730.007812   C397.096436,729.675415 398.194061,729.342957 399.641388,729.017090  z\",id:\"svg_570\"})),_path569||(_path569=/*#__PURE__*/React.createElement(\"path\",{fill:\"#160E0B\",opacity:1,stroke:\"none\",d:\" M405.834656,713.069153   C405.872284,714.118164 405.909912,715.167175 405.917206,716.609314   C403.871826,717.293945 401.856781,717.585388 399.238403,717.964172   C398.931976,716.995422 398.308929,715.700439 398.132263,714.347168   C397.469360,709.269958 396.961090,704.172668 396.355133,699.087646   C396.324066,698.826843 395.923859,698.610107 395.359985,698.175415   C395.147461,695.179504 395.270508,692.380920 395.426697,688.828674   C396.685974,690.195129 397.470520,691.046387 398.765503,692.265503   C400.847504,696.088928 402.419006,699.544617 403.990509,703.000244   C404.047913,704.339905 404.105347,705.679504 404.119934,707.825317   C404.662964,710.110718 405.248810,711.589966 405.834656,713.069153  z\",id:\"svg_571\"})),_path570||(_path570=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M366.067688,705.884888   C371.650177,706.259583 377.240234,706.553589 382.809235,707.072937   C384.013672,707.185364 385.142456,708.108826 386.649170,708.831787   C387.095367,712.204590 386.958344,715.202759 381.820465,714.726196   C380.514526,714.961975 379.781494,714.956970 379.048492,714.951965   C375.628143,713.303162 372.207794,711.654358 368.380432,710.004028   C367.213898,709.679016 366.454346,709.355591 365.088074,709.135193   C363.988281,709.818665 363.495270,710.399048 363.002258,710.979431   C361.149231,710.502991 359.296234,710.026550 357.283661,708.914795   C360.105286,707.481262 363.086487,706.683105 366.067688,705.884888  z\",id:\"svg_572\"})),_path571||(_path571=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2D1A0E\",opacity:1,stroke:\"none\",d:\" M378.771393,715.185852   C379.781494,714.956970 380.514526,714.961975 381.614075,714.964111   C385.537628,719.063232 389.094635,723.165283 393.507507,728.254333   C383.210144,727.176392 378.744904,722.908691 378.771393,715.185852  z\",id:\"svg_573\"})),_path572||(_path572=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M420.722687,775.224121   C423.262024,776.218994 425.437927,777.826172 427.868683,778.467407   C428.907410,778.741455 430.790588,777.256897 431.726410,776.111084   C432.881927,774.696350 433.450562,772.802307 434.629883,771.053162   C438.661652,779.131531 435.609833,781.050293 430.827972,782.488647   C428.423553,783.211914 425.825714,784.207886 424.646545,780.191711   C424.108185,778.358154 421.908600,777.012390 420.722687,775.224121  z\",id:\"svg_574\"})),_path573||(_path573=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M326.515930,721.370544   C325.093719,720.954224 324.002441,720.702393 322.781097,720.420532   C323.931000,718.612122 324.941284,717.023254 326.586243,714.436279   C328.837158,717.528564 330.838470,720.277893 332.839752,723.027283   C332.592896,723.402832 332.346039,723.778381 332.099182,724.153931   C330.348419,723.281006 328.597626,722.408020 326.515930,721.370544  z\",id:\"svg_575\"})),_path574||(_path574=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M395.780762,729.743286   C395.591736,731.842590 394.895020,733.672852 394.866821,735.513428   C394.843018,737.063965 395.596191,738.626282 396.009125,740.579102   C393.899872,738.628723 391.786957,736.282654 389.161652,733.367676   C391.701874,731.824463 393.632324,730.651672 395.780762,729.743286  z\",id:\"svg_576\"})),_path575||(_path575=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M419.996277,769.347168   C420.484436,769.895996 420.975983,770.780945 421.227966,771.831909   C420.658813,771.226379 420.329224,770.454895 419.996277,769.347168  z\",id:\"svg_577\"})),_path576||(_path576=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M435.312225,770.951477   C435.447998,770.353760 435.905365,769.719421 436.683716,769.046875   C436.547699,769.644165 436.090759,770.279480 435.312225,770.951477  z\",id:\"svg_578\"})),_path577||(_path577=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M417.035858,767.335938   C417.635071,767.461548 418.278595,767.906738 418.965942,768.672302   C418.366577,768.546936 417.723389,768.101196 417.035858,767.335938  z\",id:\"svg_579\"})),_path578||(_path578=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M321.002441,714.998291   C321.127106,715.140808 321.249298,715.284973 321.371521,715.429138   C321.283447,715.380737 321.195404,715.332275 321.051941,715.144409   C320.996552,715.004883 321.000000,715.000000 321.002441,714.998291  z\",id:\"svg_580\"})),_path579||(_path579=/*#__PURE__*/React.createElement(\"path\",{fill:\"#312216\",opacity:1,stroke:\"none\",d:\" M309.996948,733.002441   C309.872711,732.857788 309.751495,732.710632 309.630249,732.563599   C309.719269,732.612671 309.808258,732.661743 309.951050,732.852173   C310.004883,732.993469 310.000000,733.000000 309.996948,733.002441  z\",id:\"svg_581\"})),_path580||(_path580=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M207.980927,868.916626   C207.671768,870.072205 207.362610,871.227783 207.010864,872.746582   C202.319534,867.313782 197.670807,861.517822 193.280594,855.239502   C193.788696,854.262451 194.038269,853.767761 194.287827,853.272949   C193.514374,853.193848 192.740936,853.114746 191.967499,853.035645   C191.949997,852.584534 191.932495,852.133362 192.191467,851.173584   C193.650574,850.117371 194.833191,849.569824 196.011169,849.012817   C196.006516,849.003418 195.991104,849.000366 195.978683,849.347046   C196.604752,850.164673 197.480469,851.166870 197.837540,851.007446   C198.936646,850.516724 199.837433,849.581787 200.815292,848.819458   C201.056854,849.101929 201.298416,849.384460 201.539993,849.666931   C199.855591,851.892212 198.171188,854.117493 196.218262,856.697510   C199.052399,859.062622 202.023819,861.542297 204.995224,864.021973   C204.995224,864.021973 205.004318,863.998169 204.993927,864.380005   C205.982666,866.146790 206.981796,867.531738 207.980927,868.916626  z\",id:\"svg_582\"})),_path581||(_path581=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M196.015808,849.022278   C194.833191,849.569824 193.650574,850.117371 192.158081,850.836548   C191.557053,850.916565 191.327255,850.743530 191.092194,850.279785   C191.383377,847.325562 189.392471,843.916992 193.781982,842.261963   C196.089569,842.230469 197.874817,842.100586 199.660278,841.970703   C198.445587,844.321289 197.230713,846.671753 196.015808,849.022278  z\",id:\"svg_583\"})),_path582||(_path582=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M210.563538,816.871826   C209.886841,817.623535 208.862549,818.336853 207.465424,819.048035   C208.133698,818.308411 209.174820,817.570984 210.563538,816.871826  z\",id:\"svg_584\"})),_path583||(_path583=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M196.612000,827.985046   C196.452972,828.910828 195.956161,829.879272 195.082443,830.812622   C195.228424,829.860901 195.751312,828.944336 196.612000,827.985046  z\",id:\"svg_585\"})),_path584||(_path584=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M191.980682,853.331787   C192.740936,853.114746 193.514374,853.193848 194.287827,853.272949   C194.038269,853.767761 193.788696,854.262451 193.258484,854.877441   C192.649872,854.541199 192.321869,854.084595 191.980682,853.331787  z\",id:\"svg_586\"})),_path585||(_path585=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M204.695679,821.033203   C204.484009,821.650024 203.955551,822.266663 203.081482,822.832214   C203.283539,822.198486 203.831207,821.615723 204.695679,821.033203  z\",id:\"svg_587\"})),_path586||(_path586=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M200.535950,820.546753   C200.479004,820.579712 200.592911,820.513855 200.535950,820.546753  z\",id:\"svg_588\"})),_path587||(_path587=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M196.011169,849.012817   C197.230713,846.671753 198.445587,844.321289 199.660278,841.970703   C197.874817,842.100586 196.089569,842.230469 194.116058,842.064209   C196.483246,838.640625 198.849686,835.331360 201.640579,832.430481   C205.374329,828.549866 209.437042,824.985779 214.007751,821.145569   C215.124252,821.024841 215.591507,821.044250 216.046051,821.461670   C216.033371,824.769836 216.033371,827.679993 216.033371,830.726074   C216.166840,830.713135 217.346222,830.598999 220.510803,830.292847   C212.153442,834.523682 217.970673,836.551331 220.095535,839.592102   C218.932999,840.214966 217.434357,841.454407 217.009460,841.157410   C216.032486,840.474609 215.516861,839.075195 214.924957,837.910217   C213.840759,835.776428 212.836731,833.601990 211.799286,831.444458   C209.986084,832.855530 207.772995,833.970215 206.455124,835.748352   C204.564865,838.298889 203.618652,841.551208 201.717896,844.091187   C200.247681,846.055847 197.931305,847.387390 195.991104,849.000366   C195.991104,849.000366 196.006516,849.003418 196.011169,849.012817  z\",id:\"svg_589\"})),_path588||(_path588=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M216.058746,821.063721   C215.591507,821.044250 215.124252,821.024841 214.306305,820.982666   C214.417023,820.327209 214.878448,819.694458 215.657700,819.018799   C215.975525,818.975891 216.158340,819.160095 216.170395,819.529175   C216.141205,820.286743 216.099976,820.675232 216.058746,821.063721  z\",id:\"svg_590\"})),_path589||(_path589=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M216.046051,821.461670   C216.099976,820.675232 216.141205,820.286743 216.261719,819.621338   C220.085846,819.288635 222.257538,817.376831 223.022079,813.364502   C224.603302,815.972717 229.359528,817.537537 226.705215,822.563293   C225.876114,822.962769 225.427795,822.968750 224.795853,822.739014   C218.821808,822.419861 223.473297,826.924683 221.241730,828.613831   C223.628464,829.141663 225.378799,829.528687 227.380096,830.136719   C230.082657,832.897949 232.534241,835.438171 234.991058,838.346924   C236.003952,839.807800 237.011597,840.900330 238.011139,841.996399   C238.003052,842.000000 238.010559,841.978149 238.010559,841.978149   C238.684113,844.017456 239.357666,846.056763 240.438828,849.330078   C238.154648,847.934814 237.022415,847.243225 235.671127,846.417847   C234.605423,847.575134 233.513855,848.760437 232.179413,850.209534   C233.863937,852.238831 235.591583,854.320129 237.319214,856.401428   C236.969345,856.752380 236.619492,857.103394 236.269638,857.454407   C234.314117,855.616577 232.181778,853.931335 230.438034,851.910828   C226.100861,846.885071 224.502640,846.558105 219.125732,849.753845   C218.207535,850.299561 216.857422,850.118530 215.219330,849.859131   C214.165878,849.310669 213.599899,849.176270 213.033905,849.041870   C211.244263,849.047729 209.450821,849.003662 207.670990,849.138733   C207.499252,849.151733 207.411697,850.274658 207.724472,851.177429   C208.439255,851.673218 208.714630,851.873840 208.989990,852.074463   C208.989975,852.074524 208.994614,852.537292 208.998688,853.123474   C209.653000,854.488525 210.303207,855.267334 210.953415,856.046204   C210.713226,856.810852 210.473038,857.575500 210.043350,858.861145   C209.853867,859.382141 209.730469,859.864502 209.730469,859.864502   C208.155151,861.007202 206.579849,862.149902 204.999878,863.657288   C202.023819,861.542297 199.052399,859.062622 196.218262,856.697510   C198.171188,854.117493 199.855591,851.892212 201.539993,849.666931   C201.298416,849.384460 201.056854,849.101929 200.815292,848.819458   C199.837433,849.581787 198.936646,850.516724 197.837540,851.007446   C197.480469,851.166870 196.604752,850.164673 195.978683,849.347046   C197.931305,847.387390 200.247681,846.055847 201.717896,844.091187   C203.618652,841.551208 204.564865,838.298889 206.455124,835.748352   C207.772995,833.970215 209.986084,832.855530 211.799286,831.444458   C212.836731,833.601990 213.840759,835.776428 214.924957,837.910217   C215.516861,839.075195 216.032486,840.474609 217.009460,841.157410   C217.434357,841.454407 218.932999,840.214966 220.095535,839.592102   C217.970673,836.551331 212.153442,834.523682 220.510803,830.292847   C217.346222,830.598999 216.166840,830.713135 216.033371,830.726074   C216.033371,827.679993 216.033371,824.769836 216.046051,821.461670  M220.702820,833.565857   C220.998245,833.347961 221.293655,833.130127 221.589096,832.912292   C221.407562,832.724060 221.226028,832.535828 221.044464,832.347595   C220.813049,832.631592 220.581650,832.915588 220.702820,833.565857  M210.801575,847.279663   C210.708649,847.047302 210.615723,846.814941 210.522797,846.582581   C210.503464,846.896362 210.484146,847.210144 210.801575,847.279663  M216.561371,847.472961   C216.809891,847.535339 217.058426,847.597717 217.306976,847.660034   C217.145157,847.501831 216.983353,847.343689 216.561371,847.472961  z\",id:\"svg_591\"})),_path590||(_path590=/*#__PURE__*/React.createElement(\"path\",{fill:\"#341D0D\",opacity:1,stroke:\"none\",d:\" M224.979492,822.974792   C225.427795,822.968750 225.876114,822.962769 226.658783,822.919189   C228.480453,823.015381 229.973953,823.102234 231.453186,823.297180   C232.704956,823.462158 233.940231,823.752258 236.636276,824.261597   C235.094040,822.790955 234.521912,822.421631 234.196869,821.898743   C233.515167,820.802246 232.963455,819.624817 232.358398,818.480652   C233.580200,818.454468 234.804153,818.464294 236.023163,818.391357   C237.129608,818.325256 238.230667,818.168945 239.996643,818.057129   C241.079742,818.102234 241.500320,818.142700 241.920883,818.183167   C243.387039,819.055603 244.853195,819.927979 246.656067,821.216187   C248.026794,825.836975 249.060822,830.041931 250.319366,835.160034   C247.199051,833.475769 245.212753,832.403625 243.179611,831.306213   C241.920319,832.110718 240.704575,832.887390 239.430420,833.701416   C239.615463,835.118408 239.804016,836.562134 239.996277,838.002930   C240.000000,838.000000 240.005859,837.992432 239.604523,837.996948   C238.132919,838.003906 237.062622,838.006226 235.741058,837.990234   C235.321793,837.974060 235.153824,837.976257 234.985840,837.978394   C232.534241,835.438171 230.082657,832.897949 227.295944,829.782349   C226.300369,827.129517 225.639938,825.052185 224.979492,822.974792  z\",id:\"svg_592\"})),_path591||(_path591=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M242.063995,817.863403   C241.500320,818.142700 241.079742,818.102234 240.345642,818.014465   C240.395691,812.937988 242.238464,811.810242 248.626892,812.984192   C248.793457,815.109741 249.189194,817.702026 245.547806,815.777771   C244.920456,815.446289 243.344757,816.909485 242.063995,817.863403  z\",id:\"svg_593\"})),_path592||(_path592=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M252.977753,395.997559   C251.989197,393.578186 251.000641,391.158813 250.359726,388.414276   C252.256058,387.785400 253.804733,387.481689 255.339493,387.180695   C257.921631,389.585022 260.866364,392.326935 263.811127,395.068878   C264.038879,394.807312 264.266632,394.545715 264.494415,394.284119   C263.664917,392.520905 262.835449,390.757690 262.002991,388.997253   C262.000000,389.000000 261.994476,389.005981 262.377136,389.002380   C264.318817,387.979645 265.877869,386.960480 267.436920,385.941315   C267.166016,385.574982 266.895111,385.208679 266.624207,384.842346   C265.230072,385.162537 263.835907,385.482697 260.962128,386.142700   C262.714569,383.488129 263.618591,382.118744 264.081146,381.418060   C263.263245,379.669952 262.642914,378.344177 262.022614,377.018372   C262.022614,377.018372 262.000000,377.000000 262.377716,377.017395   C264.037903,377.650879 265.320374,378.266968 266.531586,378.848816   C268.975952,377.169830 271.409485,375.498260 274.925415,373.083221   C274.039001,375.747986 273.608826,377.041229 272.975861,378.944122   C275.155029,377.744324 276.627411,376.933685 278.350922,375.984772   C278.517883,377.616272 278.633118,378.742554 278.769409,380.074554   C281.773834,378.214264 284.387421,376.595978 286.950500,375.322418   C283.972351,377.830841 286.146973,379.905640 286.639832,381.968262   C282.569000,379.955139 280.435547,382.513489 277.896362,384.465454   C282.964111,389.081146 283.203186,389.008484 287.563843,384.314545   C288.320099,383.500488 289.850250,383.405396 290.986023,383.332275   C290.131409,385.231995 289.313721,386.777588 288.319611,388.656616   C289.936646,388.656616 291.273804,388.656616 292.383331,388.656616   C292.383331,390.813843 292.383331,392.668976 292.383331,394.505859   C291.018280,393.988342 289.840759,393.541931 288.663239,393.095520   C288.752075,394.683563 289.444916,395.319855 289.938080,396.084869   C290.433472,396.853363 290.730042,397.750031 291.119263,398.602600   C285.334259,400.931946 284.592834,402.289581 286.593750,404.831177   C288.388519,404.345428 289.964569,404.207367 291.227509,403.505676   C292.891876,402.580963 295.718658,401.035431 295.596100,400.066681   C294.993469,395.302460 298.563019,393.740204 300.125427,391.780396   C301.857178,393.215851 302.936951,394.110870 304.001404,395.373291   C303.210449,396.580475 302.345947,397.355438 301.676941,398.272949   C300.068390,400.478943 298.551453,402.751740 296.646576,404.990051   C295.669617,405.310394 295.043671,405.638275 294.417694,405.966187   C294.725861,406.258820 295.034058,406.551483 295.342224,406.844116   C295.895630,406.230225 296.449036,405.616333 297.367981,404.953003   C298.490967,404.129150 299.125793,403.139648 300.030640,402.623657   C302.099457,401.443970 304.226562,400.276093 306.470795,399.522858   C308.280334,398.915558 310.296082,398.922546 311.650391,398.735687   C309.300415,397.218719 307.585785,396.033844 305.782806,395.003479   C305.337952,394.749268 304.605682,394.997833 304.006897,394.639343   C304.507751,393.513397 304.937195,392.703430 305.518768,392.023560   C308.276184,388.800232 311.075043,385.612366 313.859192,382.411896   C315.575623,382.356293 315.348663,388.181244 320.047638,385.959167   C320.033508,385.993622 320.073944,385.923492 320.054199,386.304596   C320.691528,388.784027 321.348572,390.882385 321.672638,393.027496   C320.459137,394.993591 322.188843,396.826111 326.284149,398.016846   C327.059998,398.347198 327.537323,398.657074 328.005005,399.309448   C327.983551,400.108643 327.971741,400.565308 327.586670,401.014557   C326.464203,401.019562 325.715027,401.031982 324.980347,401.022034   C324.994873,400.999664 324.955811,401.037842 324.955566,400.780457   C324.843079,400.282898 324.730804,400.042694 324.618530,399.802521   C324.409058,400.211029 324.199646,400.619537 323.694946,400.868469   C322.447968,400.212433 321.496307,399.716034 320.544678,399.219635   C320.318359,399.551880 320.092041,399.884125 319.865692,400.216370   C322.188629,402.855865 324.511536,405.495361 326.709991,408.147705   C326.585541,408.160492 326.358856,408.054504 325.952759,408.039551   C322.883759,409.993683 320.220886,411.962799 316.629883,414.618195   C316.185974,413.051086 315.734833,411.458588 315.283722,409.866089   C314.672699,410.344940 314.061676,410.823792 313.450684,411.302643   C313.653168,412.487366 313.855652,413.672058 314.042725,415.145447   C314.037933,415.626648 314.048553,415.819092 314.052124,416.028564   C314.045105,416.045563 314.058167,416.082367 313.659302,416.059265   C311.457825,415.710327 309.655151,415.384552 307.852509,415.058777   C304.641937,412.847870 301.431396,410.636993 299.288727,409.161469   C296.421661,409.556641 294.510895,409.819977 292.402496,410.110565   C292.432312,410.465363 292.509399,411.382507 292.652191,413.081482   C290.455994,412.147858 288.622162,411.368256 286.123322,410.305939   C286.817108,411.658630 287.272095,412.545746 287.863525,413.716431   C288.000000,414.000000 288.005127,413.994904 288.005127,413.994904   C286.616394,413.994965 285.227661,413.995026 283.422485,413.999939   C283.006042,414.004791 283.000183,414.000214 283.033020,413.686035   C282.374329,412.578033 281.682800,411.784210 280.991272,410.990387   C280.991272,410.990387 281.000000,411.000000 280.998718,410.628784   C280.032867,408.923615 279.068268,407.589600 278.087097,406.232697   C279.032257,405.125000 279.921326,404.083038 280.810394,403.041107   C280.603912,402.576233 280.397430,402.111389 280.190948,401.646545   C276.462494,402.765991 272.734070,403.885437 269.003052,405.002441   C269.000488,405.000000 268.995117,404.995117 269.001038,404.617188   C269.861725,402.555298 271.083160,400.952789 271.479980,399.167023   C271.994385,396.851776 271.851868,394.390533 272.364655,391.996979   C273.481537,392.010986 274.225952,392.020172 274.986145,392.383331   C275.483704,393.438354 275.965515,394.139435 276.447327,394.840485   C276.847015,394.456268 277.246704,394.072021 277.646362,393.687775   C276.772766,393.117065 275.899200,392.546326 275.027039,391.606506   C273.490845,389.442352 271.953247,387.647308 270.415649,385.852264   C270.107971,386.154022 269.800262,386.455750 269.492554,386.757507   C270.331055,388.507660 271.169525,390.257782 271.661255,391.945740   C269.812988,391.276276 268.311432,390.668945 267.545685,390.359222   C267.723785,394.061157 267.866486,397.026855 268.004578,399.996277   C268.000000,400.000000 267.992584,400.009521 267.614136,399.945129   C263.483704,399.251404 259.731720,398.622101 255.776077,397.992828   C255.572403,397.992889 255.164597,397.986176 255.100281,397.658142   C254.349915,396.885956 253.663834,396.441742 252.977753,395.997559  M271.200714,381.149048   C270.278870,381.330811 269.357025,381.512543 268.004242,381.779236   C270.501404,383.389679 272.330261,384.569122 274.159149,385.748566   C274.434387,385.489227 274.709595,385.229858 274.984833,384.970490   C273.943420,383.788605 272.901978,382.606720 271.200714,381.149048  M304.853577,403.035583   C304.595520,403.189911 304.203094,403.294464 304.121704,403.514191   C304.055969,403.691742 304.365173,404.008148 304.508057,404.262939   C304.652161,404.007874 304.796265,403.752808 304.853577,403.035583  z\",id:\"svg_594\"})),_path593||(_path593=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M302.689514,441.702240   C304.245300,437.741852 305.801086,433.781464 307.375824,429.420593   C307.647736,429.070251 307.840240,428.984497 308.358765,428.468933   C312.289246,425.772766 315.402679,423.066589 315.865295,418.363708   C316.326569,418.360168 316.582062,418.291199 317.185425,418.176697   C318.026123,418.148346 318.503601,418.108368 319.357910,418.074829   C322.823242,416.371185 325.873688,414.587250 329.010437,412.970825   C332.544861,411.149506 336.157043,409.479065 339.808075,408.167419   C339.955902,409.729279 340.031036,410.866669 339.832001,412.006195   C339.375061,412.013855 339.192322,412.019409 338.629181,412.010254   C336.142517,413.322510 334.036224,414.649536 331.613647,416.132233   C329.786926,417.171509 328.375000,418.452606 326.745667,418.856201   C323.312897,419.706543 320.300171,420.543671 321.318726,425.147217   C321.342590,425.255096 320.049683,425.654327 319.143341,425.619598   C314.483093,425.659149 312.824066,428.812805 311.997864,432.736206   C312.399078,432.155975 312.800323,431.575745 313.489807,431.024719   C314.214661,431.397064 314.651215,431.740143 315.030762,432.380676   C314.973755,434.250275 314.973755,435.822357 314.973755,437.394470   C314.206940,436.492065 313.440125,435.589630 312.673279,434.687225   C311.608765,436.536926 310.544220,438.386597 309.479706,440.236298   C309.908875,440.629333 310.338043,441.022369 310.767242,441.415375   C309.787415,440.642639 308.807587,439.869904 307.577545,438.899841   C306.637268,440.432159 305.891907,441.646790 304.781281,442.858704   C303.840515,442.471375 303.265015,442.086792 302.689514,441.702240  z\",id:\"svg_595\"})),_path594||(_path594=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M315.674957,418.355438   C315.402679,423.066589 312.289246,425.772766 308.410339,428.309082   C308.976379,426.002014 309.877258,423.560883 311.003326,420.509583   C310.367371,419.512207 309.171509,417.636627 307.914093,415.409912   C309.655151,415.384552 311.457825,415.710327 313.655579,416.282471   C314.050720,416.528809 314.013153,416.975464 314.107300,417.200562   C314.389679,417.706940 314.644592,417.900269 315.141785,418.096375   C315.317352,418.187164 315.674957,418.355438 315.674957,418.355438  z\",id:\"svg_596\"})),_path595||(_path595=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M280.997803,416.997803   C280.587463,417.921326 280.179291,418.847076 279.771118,419.772797   C279.268494,419.497772 278.765869,419.222748 278.263275,418.947693   C278.929565,418.302490 279.595886,417.657288 280.633301,417.008240   C281.004425,417.004395 281.000000,417.000000 280.997803,416.997803  z\",id:\"svg_597\"})),_path596||(_path596=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M287.997498,414.001770   C288.902985,414.588531 289.810944,415.173523 290.718903,415.758514   C290.436584,416.091827 290.154297,416.425110 289.871979,416.758423   C289.247894,416.073181 288.623810,415.387909 288.002411,414.348785   C288.005127,413.994904 288.000000,414.000000 287.997498,414.001770  z\",id:\"svg_598\"})),_path597||(_path597=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M278.001465,427.001648   C278.536926,426.383667 279.070984,425.764038 279.605042,425.144440   C279.908813,425.427277 280.212616,425.710144 280.516388,425.992981   C279.905548,426.326538 279.294708,426.660126 278.340118,426.995026   C277.996338,426.996368 278.000000,427.000000 278.001465,427.001648  z\",id:\"svg_599\"})),_path598||(_path598=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M295.417908,416.452576   C294.859467,416.095856 294.519135,415.556183 294.178802,415.016541   C294.432068,414.923706 294.884918,414.715424 294.908142,414.755615   C295.187653,415.238953 295.403564,415.759125 295.417908,416.452576  z\",id:\"svg_600\"})),_path599||(_path599=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M286.919373,418.614899   C286.526245,418.701813 286.077118,418.605774 285.804901,418.333130   C285.706360,418.234436 286.031189,417.712982 286.162811,417.384460   C286.419647,417.710358 286.676483,418.036224 286.919373,418.614899  z\",id:\"svg_601\"})),_path600||(_path600=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M268.009186,399.992584   C267.866486,397.026855 267.723785,394.061157 267.545685,390.359222   C268.311432,390.668945 269.812988,391.276276 271.657257,391.941772   C272.000000,392.000000 271.992157,391.992157 271.992157,391.992157   C271.851868,394.390533 271.994385,396.851776 271.479980,399.167023   C271.083160,400.952789 269.861725,402.555298 268.627380,404.619141   C266.124054,406.470642 264.000336,407.942322 261.758728,409.495667   C263.897888,412.071869 265.526184,414.032867 267.154510,415.993866   C264.689423,414.404602 262.182770,412.875183 259.775360,411.202911   C258.400085,410.247681 257.186493,409.059692 255.548706,407.957001   C255.174377,407.217438 255.151459,406.497375 255.488617,405.402161   C256.809113,404.755219 257.769531,404.483398 258.230408,404.352966   C257.375458,401.936920 256.677612,399.964844 255.979752,397.992767   C259.731720,398.622101 263.483704,399.251404 267.667969,400.091858   C268.194122,400.352417 268.287964,400.401794 268.381805,400.451202   C268.257599,400.298340 268.133392,400.145447 268.009186,399.992584  z\",id:\"svg_602\"})),_path601||(_path601=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M267.364685,415.995117   C265.526184,414.032867 263.897888,412.071869 261.758728,409.495667   C264.000336,407.942322 266.124054,406.470642 268.621460,404.997070   C268.995117,404.995117 269.000488,405.000000 269.017853,405.377808   C270.407043,407.539276 271.778870,409.322937 273.240143,411.222870   C274.560760,410.012878 275.553253,409.103516 276.545776,408.194153   C276.888580,408.466400 277.231415,408.738617 277.574219,409.010834   C276.699799,410.340546 275.825348,411.670288 274.950897,413.000000   C274.181915,413.318115 273.412903,413.636200 272.191956,413.688263   C271.029358,413.047821 270.318787,412.673462 268.979279,411.967743   C269.778168,414.014587 270.256165,415.239288 271.005035,417.157990   C269.486969,416.572693 268.741058,416.285126 267.995148,415.997559   C267.995148,415.997559 267.574829,415.996338 267.364685,415.995117  z\",id:\"svg_603\"})),_path602||(_path602=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M275.157532,413.196228   C275.825348,411.670288 276.699799,410.340546 277.574219,409.010834   C277.231415,408.738617 276.888580,408.466400 276.545776,408.194153   C275.553253,409.103516 274.560760,410.012878 273.240143,411.222870   C271.778870,409.322937 270.407043,407.539276 269.020416,405.380249   C272.734070,403.885437 276.462494,402.765991 280.190948,401.646545   C280.397430,402.111389 280.603912,402.576233 280.810394,403.041107   C279.921326,404.083038 279.032257,405.125000 278.087097,406.232697   C279.068268,407.589600 280.032867,408.923615 281.003571,410.633118   C279.127838,411.803223 277.246002,412.597839 275.157532,413.196228  z\",id:\"svg_604\"})),_path603||(_path603=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M268.002563,416.363220   C268.741058,416.285126 269.486969,416.572693 271.005035,417.157990   C270.256165,415.239288 269.778168,414.014587 268.979279,411.967743   C270.318787,412.673462 271.029358,413.047821 271.878723,413.711731   C272.019653,416.098297 272.021790,418.195404 272.011963,420.646240   C272.000000,421.000000 271.998779,421.001221 271.998779,421.001221   C270.669189,419.577118 269.339600,418.153015 268.002563,416.363220  z\",id:\"svg_605\"})),_path604||(_path604=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M280.999329,411.346130   C281.682800,411.784210 282.374329,412.578033 283.036194,413.688721   C282.340149,413.237701 281.673767,412.469818 280.999329,411.346130  z\",id:\"svg_606\"})),_path605||(_path605=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M272.000610,420.999390   C272.870422,421.152466 273.739624,421.306183 274.608826,421.459869   C274.479919,421.832764 274.351013,422.205627 274.222137,422.578491   C273.512451,422.277405 272.802765,421.976318 272.045929,421.338226   C271.998779,421.001221 272.000000,421.000000 272.000610,420.999390  z\",id:\"svg_607\"})),_path606||(_path606=/*#__PURE__*/React.createElement(\"path\",{fill:\"#604234\",opacity:1,stroke:\"none\",d:\" M256.441406,415.360413   C256.309082,414.706329 256.368958,414.250183 256.428864,413.794067   C256.804138,413.994354 257.179413,414.194611 257.554688,414.394897   C257.247681,414.782745 256.940674,415.170563 256.441406,415.360413  z\",id:\"svg_608\"})),_path607||(_path607=/*#__PURE__*/React.createElement(\"path\",{fill:\"#604234\",opacity:1,stroke:\"none\",d:\" M256.885712,410.270416   C256.784241,410.751160 256.642303,411.003265 256.500366,411.255402   C256.358490,411.003540 256.049927,410.686737 256.116425,410.516083   C256.201935,410.296631 256.588409,410.194489 256.885712,410.270416  z\",id:\"svg_609\"})),_path608||(_path608=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M302.329376,441.773071   C303.265015,442.086792 303.840515,442.471375 304.735413,443.232452   C302.617889,447.211304 299.450623,450.744751 303.989319,455.003235   C303.998749,455.002258 304.004730,454.988586 303.764923,454.992065   C303.347229,455.353058 303.169342,455.710541 302.925903,456.419800   C299.917816,458.497589 298.762299,460.956879 298.930603,464.450958   C299.193054,469.901154 299.001312,475.373230 298.803833,480.961487   C298.737976,481.445984 298.870331,481.805054 299.006592,482.385071   C299.010468,482.606079 299.032501,483.047546 299.047699,483.395325   C299.098907,484.434692 299.134918,485.126251 299.127747,486.222198   C299.377930,488.757050 299.671265,490.887573 299.622803,492.982330   C297.976471,492.615326 296.671967,492.284027 295.367432,491.952759   C295.296967,491.204895 295.226471,490.457001 295.368500,489.150940   C295.417786,487.739258 295.254578,486.885803 295.091370,486.032349   C295.081940,485.581177 295.072571,485.130035 295.009460,484.344604   C295.669830,474.320068 295.987396,464.576752 297.272949,454.962891   C297.874908,450.461060 300.345520,446.209106 302.329376,441.773071  z\",id:\"svg_610\"})),_path609||(_path609=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M294.771973,486.166016   C295.254578,486.885803 295.417786,487.739258 295.348206,488.775116   C294.942780,488.962311 294.770111,488.967133 294.338623,488.975677   C294.204010,488.086151 294.328278,487.192932 294.771973,486.166016  z\",id:\"svg_611\"})),_path610||(_path610=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M277.677124,461.037964   C277.998077,461.729340 277.982819,462.472809 277.963074,463.586365   C277.752686,463.000977 277.546814,462.045502 277.677124,461.037964  z\",id:\"svg_612\"})),_path611||(_path611=/*#__PURE__*/React.createElement(\"path\",{fill:\"#431E11\",opacity:1,stroke:\"none\",d:\" M590.954834,275.807068   C592.375366,276.547668 593.795837,277.288300 595.796509,278.262939   C597.321472,278.526855 598.684387,278.162140 599.144470,278.649567   C602.612366,282.323975 605.902832,286.165924 609.315369,290.283020   C611.384521,293.901764 613.290039,297.257416 615.420044,300.463959   C617.150574,303.069153 619.150269,305.495514 621.028381,308.374420   C622.687683,313.166534 624.349182,317.585388 626.039917,322.323669   C626.676880,323.148621 627.284607,323.654175 628.086365,324.475922   C628.716736,327.802643 629.153137,330.813232 629.609619,333.962433   C630.240906,333.962433 631.219910,333.962433 632.085266,334.315582   C629.047180,337.001343 631.390259,339.361877 631.600586,341.900513   C632.180237,348.895050 631.861755,355.963989 631.626343,363.293701   C631.738403,370.647949 627.926819,376.535919 625.684082,383.155701   C625.296448,384.246796 625.155579,385.114960 624.677734,386.036469   C623.878479,386.514587 623.402588,386.925537 622.956116,387.366211   C616.626160,393.613495 611.391846,401.100006 602.992676,405.005615   C601.892761,404.900818 600.792847,404.796021 599.547852,404.282715   C600.592041,402.809875 601.787048,401.751892 602.969421,400.679993   C606.059814,397.878296 609.144714,395.070496 612.567017,392.187134   C613.935425,390.385590 614.968506,388.662018 616.059082,386.628387   C616.083130,385.899536 616.049744,385.480804 616.389465,385.018433   C620.153076,385.004761 621.292297,382.793945 621.986206,379.652039   C622.857117,377.709320 623.521362,376.048737 624.515015,374.265076   C625.087463,373.072906 625.330505,372.003754 625.831604,370.622070   C627.061951,362.625885 630.388550,354.801758 624.729370,347.513885   C629.259705,344.430389 623.105469,340.453430 625.632935,336.875031   C625.354675,335.976257 625.035339,335.401428 624.998657,334.658234   C623.845459,329.612579 622.821777,324.563019 620.872803,319.900177   C618.233765,313.586517 615.019653,307.498108 611.808411,301.442383   C607.280701,292.904205 601.240540,285.798767 591.925720,281.659149   C590.882751,280.901245 589.933167,280.467651 588.677856,279.865723   C585.324585,278.400452 582.277039,277.103516 579.140747,275.488068   C578.319519,274.910187 577.587036,274.650818 576.497375,274.308533   C575.409790,274.161804 574.679382,274.098022 573.883301,273.774597   C573.207764,273.226929 572.597778,272.938873 571.678223,272.564636   C570.731140,272.469696 570.093567,272.460968 569.269775,272.170349   C567.658997,271.457672 566.234375,271.026917 564.433350,270.452393   C558.514526,269.646057 552.983276,268.624878 547.425903,268.454498   C544.053223,268.351135 540.595703,269.385315 537.254395,270.220734   C529.875977,272.065552 522.550720,274.122345 515.195251,276.060272   C513.172119,276.593262 511.118805,277.011749 509.169678,277.234436   C509.230957,276.636627 509.201935,276.287201 509.170776,275.736877   C509.168671,275.535919 509.123016,275.136597 509.153290,275.138062   C509.183563,275.139526 509.243744,275.146942 509.243744,275.146942   C511.455658,273.999329 513.667542,272.851715 516.328491,271.342224   C518.853882,269.990967 520.930115,269.001587 523.371948,268.016754   C525.074768,267.927521 526.448181,267.996460 527.742554,267.709259   C531.502625,266.874939 535.519104,264.613281 538.883972,265.368103   C541.770508,266.015656 543.245789,265.853424 545.352661,264.051331   C546.100403,264.063263 546.527893,264.059509 547.240601,264.304199   C550.803467,264.407227 554.122864,263.886108 557.344116,264.245270   C559.578491,264.494385 561.615417,266.163483 563.849976,266.833008   C568.932922,268.355988 574.143005,269.469757 579.187439,271.102020   C583.197510,272.399597 587.038696,274.219238 590.954834,275.807068  z\",id:\"svg_613\"})),_path612||(_path612=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M625.014709,385.983124   C625.155579,385.114960 625.296448,384.246796 626.054199,383.170654   C628.107117,381.979767 629.543152,380.996826 631.282288,380.000305   C632.055481,379.660645 632.525635,379.334564 633.260376,378.792755   C634.680847,377.053772 635.836792,375.530548 636.992676,374.007324   C638.622742,375.496063 640.427429,376.855225 641.718567,378.595428   C641.945312,378.901123 640.019958,380.804230 639.087585,381.968903   C638.339966,382.902618 637.590942,383.835205 637.016113,384.552032   C640.053284,385.088440 642.655518,385.548035 645.628296,386.003540   C645.998779,385.999451 645.994690,385.989838 645.999084,386.353760   C647.839417,388.933411 649.675354,391.149109 652.405823,394.444366   C649.720032,393.452362 648.302368,392.928741 647.266113,392.546021   C645.677856,393.457031 644.331848,394.229126 642.989929,394.629089   C643.004395,393.512787 643.014709,392.768585 643.363403,391.967926   C644.014282,391.201050 644.326843,390.490692 644.639404,389.780334   C644.265869,389.644135 643.892334,389.507935 643.518738,389.371735   C643.335510,390.237793 643.152344,391.103851 642.665100,392.095703   C641.576843,393.150543 640.792603,394.079651 639.670166,395.033447   C638.236877,395.918488 637.141785,396.778839 636.046753,397.639191   C636.513977,398.033661 636.981140,398.428162 637.448364,398.822632   C638.296082,397.545624 639.143860,396.268585 640.367798,394.989197   C641.496094,394.986481 642.248230,394.986176 643.012329,395.361084   C644.018250,396.493225 645.012268,397.250153 646.003174,398.003540   C646.000000,398.000000 645.993103,397.992920 645.994507,398.384003   C647.455688,400.477295 648.915466,402.179535 650.375244,403.881775   C651.363892,402.897858 652.231934,401.723450 653.382385,400.995331   C654.183777,400.488159 655.372681,400.593262 656.666260,400.378845   C656.150269,401.672913 655.814148,402.515747 655.478088,403.358612   C655.890869,403.746429 656.303589,404.134277 656.716370,404.522095   C658.495117,402.676392 660.273926,400.830658 662.285278,398.988007   C662.517883,398.991058 662.982910,399.001221 662.982910,399.001221   C663.159180,398.999939 663.335449,398.998657 663.769043,399.375671   C665.017578,400.493347 666.008789,401.232666 667.000000,401.971985   C667.086853,402.289917 667.254639,402.556976 667.897583,403.156769   C669.201965,403.360596 670.112061,403.180908 671.022156,403.001221   C672.090759,402.410248 673.159302,401.819275 674.673462,400.981842   C671.211609,409.206757 670.471985,409.507812 665.336060,404.801483   C664.777039,405.901733 664.280334,406.879333 663.618042,408.182770   C662.561218,407.452972 661.542542,406.749542 660.306519,405.895966   C660.306519,407.175201 660.306519,408.462616 660.306519,410.202026   C658.574768,409.459808 657.280640,408.905182 657.187622,408.865295   C655.056702,410.876526 653.310242,412.524933 651.545898,414.190186   C648.783508,412.059601 646.900635,410.607361 644.750366,408.948853   C643.633362,409.618774 642.458435,410.323395 641.457642,410.923615   C639.360229,409.007904 637.513916,407.321594 634.899292,404.933533   C635.224792,407.402161 635.411316,408.816711 635.551636,409.881226   C632.847534,412.347687 630.300110,414.671265 627.335388,416.650146   C626.208801,415.994171 625.499451,415.682922 624.790100,415.371704   C624.656677,415.741852 624.523193,416.111969 624.389771,416.482117   C625.252563,416.662170 626.115417,416.842224 626.978210,417.022278   C626.776306,421.015167 623.176147,421.197449 620.770630,421.514343   C619.306702,421.707153 616.632446,419.510223 619.162048,416.908264   C620.160278,415.881439 621.377869,415.067902 622.807922,413.902802   C621.781799,413.109985 620.809998,412.359192 619.837830,411.608521   C620.718872,410.276611 621.600342,408.944489 622.481812,407.612396   C622.307129,407.350128 622.132446,407.087830 621.957764,406.825562   C620.199280,407.709961 618.440796,408.594391 615.580383,410.033020   C616.628418,407.702057 617.290100,406.230408 618.298462,404.399597   C619.159424,403.932434 619.673706,403.824463 620.187927,403.716492   C620.118225,403.505188 620.048523,403.293854 619.978821,403.082520   C619.306274,403.369934 618.633789,403.657379 617.961304,403.944794   C617.961304,403.944794 617.501465,403.984436 617.073364,403.738251   C615.100586,404.368530 613.555847,405.245026 612.011108,406.121521   C611.909973,406.413940 611.731140,406.646729 610.927490,406.908752   C609.922668,406.992279 609.464966,406.986877 609.155823,406.641235   C609.963440,403.930023 610.612732,401.944000 613.750671,401.387634   C617.253784,400.766571 620.584473,399.173492 624.360840,398.001434   C631.546997,395.881287 627.893982,392.302429 625.993286,388.631958   C625.668152,387.525055 625.341431,386.754089 625.014709,385.983124  M634.756592,400.196259   C634.635193,400.027771 634.513855,399.859283 634.392456,399.690796   C634.417480,399.928284 634.442505,400.165771 634.756592,400.196259  M662.363464,403.472809   C662.363464,403.472809 662.575256,403.587646 662.575256,403.587646   C662.575256,403.587646 662.539795,403.348297 662.363464,403.472809  z\",id:\"svg_614\"})),_path613||(_path613=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M596.026733,403.745819   C595.994446,404.257416 595.962036,404.768982 595.526794,405.648956   C594.673767,406.168243 593.900879,406.221191 593.820923,406.484497   C591.995972,412.496704 596.157959,420.847626 602.069397,423.341644   C602.532776,423.537140 602.713440,424.402588 602.668396,425.007446   C600.245361,426.627075 598.179443,428.195923 596.265686,429.649139   C594.339233,425.495300 591.661316,422.630707 585.935791,425.315247   C586.934692,423.724548 587.903015,422.420044 589.158630,422.022064   C590.371399,421.637665 591.880371,422.187866 594.249329,422.427826   C592.511047,420.217224 591.370789,418.767181 590.186646,417.261292   C588.979675,418.252594 588.028503,419.033783 587.074341,419.817413   C583.371094,415.195251 580.683167,414.810883 575.751343,417.999573   C575.294373,417.975037 575.111877,417.962097 574.948914,417.559082   C574.707397,415.651367 574.446289,414.133728 574.185242,412.616119   C574.607971,412.879059 575.030762,413.142029 575.453491,413.404999   C577.310120,411.658020 579.166748,409.911072 581.385193,408.099121   C582.909485,406.707581 584.072021,405.380981 585.391724,404.073608   C585.548889,404.092834 585.864075,404.062378 586.229248,404.049988   C589.074097,401.033173 591.553894,398.028717 594.016846,395.012146   C594.000000,395.000000 594.026306,395.032562 594.406921,395.019409   C595.561584,394.355713 596.628845,393.856445 597.056641,393.027222   C598.558350,390.116547 599.839966,387.092346 601.549316,384.082642   C602.555786,384.564392 603.861206,385.380066 603.785339,385.539856   C602.258545,388.755432 604.684753,390.640900 605.825134,393.087189   C602.375671,396.791656 599.201172,400.268738 596.026733,403.745819  z\",id:\"svg_615\"})),_path614||(_path614=/*#__PURE__*/React.createElement(\"path\",{fill:\"#33190E\",opacity:1,stroke:\"none\",d:\" M630.000977,518.645264   C628.947632,520.363342 628.059631,521.886230 626.846680,523.078369   C625.667847,524.236938 624.155701,525.056335 622.431641,525.634644   C623.838135,521.620056 626.014282,518.131531 627.268555,514.338135   C629.038513,508.985138 630.126404,503.406555 631.623596,497.492493   C631.830444,494.380829 631.919556,491.701080 632.339355,488.961395   C632.991699,488.571564 633.619568,488.211151 633.590149,487.916138   C632.936646,481.358032 632.328003,474.790710 631.411743,468.267090   C631.196228,466.733154 629.895813,465.351593 629.050903,463.540649   C628.045715,459.458008 627.084229,455.734589 626.446045,451.951660   C627.561584,450.922150 628.353882,449.952148 629.146240,448.982147   C631.063782,454.053467 632.981323,459.124786 634.664978,464.749878   C634.604431,465.878265 634.777832,466.452911 634.951233,467.027557   C635.002747,467.440735 635.054199,467.853882 635.174866,468.571045   C636.129883,471.963806 633.557007,476.286072 637.307068,477.340302   C637.307068,481.116302 637.750854,484.271454 637.219604,487.252869   C635.896484,494.677948 634.841370,502.291748 632.212402,509.278137   C631.060242,512.340210 630.407349,515.208618 630.000977,518.645264  z\",id:\"svg_616\"})),_path615||(_path615=/*#__PURE__*/React.createElement(\"path\",{fill:\"#431E11\",opacity:1,stroke:\"none\",d:\" M629.356201,448.738678   C628.353882,449.952148 627.561584,450.922150 626.379395,451.705841   C625.937622,451.357819 625.885864,451.196136 625.890564,450.664612   C625.476257,449.443237 624.861389,448.640045 624.556763,447.732697   C621.087280,437.398865 614.765808,429.294952 606.305664,422.419495   C602.281128,419.148773 596.488098,416.244629 597.811462,409.211243   C605.732300,416.662872 613.646179,424.121887 621.583862,431.555481   C622.436035,432.353516 623.426514,433.003876 623.594299,433.134094   C625.720093,438.602234 627.643066,443.548706 629.356201,448.738678  z\",id:\"svg_617\"})),_path616||(_path616=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M597.474670,409.107208   C596.488098,416.244629 602.281128,419.148773 606.305664,422.419495   C614.765808,429.294952 621.087280,437.398865 624.556763,447.732697   C624.861389,448.640045 625.476257,449.443237 625.506714,450.648499   C624.040833,451.002502 623.015381,451.002838 621.994995,451.001587   C622.000000,451.000000 621.997131,451.010193 621.963074,450.714111   C621.621887,449.929657 621.314697,449.441284 620.995239,448.612793   C620.644226,447.497742 620.305481,446.722748 619.863159,445.737671   C619.562622,445.266602 619.305298,445.097382 618.992065,445.010254   C618.996521,445.000641 618.976013,445.010010 618.985107,444.618958   C618.530151,442.684082 618.509033,440.730835 617.525696,439.666992   C613.186523,434.972626 608.570068,430.534454 603.944580,425.774902   C603.565247,425.349762 603.295410,425.153198 603.025513,424.956665   C602.713440,424.402588 602.532776,423.537140 602.069397,423.341644   C596.157959,420.847626 591.995972,412.496704 593.820923,406.484497   C593.900879,406.221191 594.673767,406.168243 595.426025,406.019989   C596.198120,407.016144 596.668030,408.009644 597.474670,409.107208  z\",id:\"svg_618\"})),_path617||(_path617=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M662.974854,398.771271   C662.982910,399.001221 662.517883,398.991058 661.947388,398.933167   C661.770813,396.076263 662.164673,393.277191 662.558533,390.478149   C662.505310,384.904449 658.037659,388.883789 654.878418,388.594208   C656.233093,386.156128 657.108582,384.580414 657.989868,383.001526   C657.995667,382.998383 658.001526,382.985199 658.001526,382.985199   C658.749207,382.996735 659.496826,383.008301 660.629517,383.374695   C662.611511,385.509369 664.208496,387.289124 665.805481,389.068909   C666.284119,388.527771 666.762817,387.986603 667.241516,387.445465   C665.163452,385.961212 663.085388,384.476929 661.007324,382.992676   C663.051270,380.635406 665.101929,378.283905 667.131714,375.914520   C667.437561,375.557465 667.645935,375.116913 668.292603,374.399506   C670.125549,375.059326 671.565186,376.034668 673.004883,377.010010   C673.004883,377.010010 673.000000,376.999207 673.000854,377.326538   C672.424500,382.233276 669.276978,375.207184 668.509766,379.289734   C669.121948,380.206970 670.046204,381.591705 670.822388,383.037781   C670.791504,383.076843 670.908691,383.054535 671.369629,383.065430   C673.471680,384.396118 675.230103,385.693542 676.988464,386.990997   C675.069275,393.008057 670.219727,394.508636 664.054993,395.127625   C663.263550,396.218719 663.111511,397.149933 662.959473,398.081177   C662.959473,398.081177 662.966858,398.541321 662.974854,398.771271  z\",id:\"svg_619\"})),_path618||(_path618=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M670.970459,382.976471   C670.046204,381.591705 669.121948,380.206970 668.509766,379.289734   C669.276978,375.207184 672.424500,382.233276 672.995239,377.324951   C678.833984,370.835938 681.605408,377.409607 685.824951,380.291016   C686.547058,381.404510 686.787781,382.205200 687.028442,383.005890   C686.849426,383.008850 686.670349,383.011780 685.849487,383.007568   C683.898132,383.963043 682.588623,384.925690 681.147217,385.985321   C680.370056,385.055695 679.633911,384.175110 678.484558,382.800293   C677.836975,384.608917 677.407837,385.807343 676.978760,387.005798   C676.978760,387.005798 676.994934,387.005676 676.991699,386.998352   C675.230103,385.693542 673.471680,384.396118 671.356934,383.050293   C671.000549,383.001892 670.970459,382.976471 670.970459,382.976471  z\",id:\"svg_620\"})),_path619||(_path619=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M623.990234,398.003448   C620.584473,399.173492 617.253784,400.766571 613.750671,401.387634   C610.612732,401.944000 609.963440,403.930023 608.818115,406.648193   C607.881653,407.001740 607.431396,407.008148 606.981079,407.014557   C605.676575,406.527161 604.372070,406.039764 603.030151,405.278992   C611.391846,401.100006 616.626160,393.613495 622.956116,387.366211   C623.402588,386.925537 623.878479,386.514587 624.677734,386.036469   C625.341431,386.754089 625.668152,387.525055 625.695923,388.785614   C623.949036,390.555573 622.501160,391.835938 621.272949,392.921997   C622.314880,394.870422 623.152527,396.436920 623.990234,398.003448  z\",id:\"svg_621\"})),_path620||(_path620=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M596.403015,403.853333   C599.201172,400.268738 602.375671,396.791656 606.127563,393.112885   C607.111328,392.919464 607.517700,392.927734 608.276001,392.932983   C609.734070,392.602051 610.840149,392.274139 612.018799,392.024933   C612.091309,392.103668 612.231812,392.265137 612.231812,392.265137   C609.144714,395.070496 606.059814,397.878296 602.969421,400.679993   C601.787048,401.751892 600.592041,402.809875 599.226562,404.199890   C598.293274,404.337372 597.536316,404.149139 596.403015,403.853333  z\",id:\"svg_622\"})),_path621||(_path621=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M677.363403,386.998230   C677.407837,385.807343 677.836975,384.608917 678.484558,382.800293   C679.633911,384.175110 680.370056,385.055695 681.147217,385.985321   C682.588623,384.925690 683.898132,383.963043 685.580872,383.013428   C685.583008,385.850281 685.211853,388.674133 684.940430,390.739655   C682.807678,389.627991 680.277832,388.309326 677.363403,386.998230  z\",id:\"svg_623\"})),_path622||(_path622=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M687.207336,383.265625   C686.787781,382.205200 686.547058,381.404510 686.200439,380.303955   C686.094421,380.004120 686.550964,380.008087 686.991638,379.899841   C687.702637,379.605713 687.881958,379.354706 687.970154,379.038605   C689.414673,377.718048 690.878662,376.161591 691.973022,379.682190   C691.378174,381.619415 690.758728,383.242310 690.031555,385.147644   C689.475281,384.806519 688.430725,384.165955 687.207336,383.265625  z\",id:\"svg_624\"})),_path623||(_path623=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M682.464111,398.517883   C682.271973,399.367340 681.784912,400.512238 681.441162,400.470734   C679.783875,400.270569 678.165222,399.750641 676.542419,399.346558   C678.350220,395.671143 678.350220,395.671143 682.464111,398.517883  z\",id:\"svg_625\"})),_path624||(_path624=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M693.997559,420.002441   C692.739136,419.549622 691.483215,419.094360 690.227234,418.639099   C691.222351,418.092621 692.217407,417.546143 693.606262,416.999817   C694.000000,417.000000 694.004883,417.003662 694.004883,417.003662   C694.002869,417.751587 694.000916,418.499512 694.001953,419.621277   C694.004883,419.995117 694.000000,420.000000 693.997559,420.002441  z\",id:\"svg_626\"})),_path625||(_path625=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M666.996094,401.602661   C666.008789,401.232666 665.017578,400.493347 664.033447,399.377747   C665.024475,399.745392 666.008362,400.489380 666.996094,401.602661  z\",id:\"svg_627\"})),_path626||(_path626=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M690.342041,426.962494   C690.407410,426.065643 690.814819,425.131256 691.222229,424.196899   C691.685303,424.500946 692.148438,424.804993 692.611511,425.109039   C691.969055,425.714355 691.326538,426.319672 690.342041,426.962494  z\",id:\"svg_628\"})),_path627||(_path627=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M612.369141,406.092163   C613.555847,405.245026 615.100586,404.368530 616.843262,403.755554   C615.603210,404.700287 614.165161,405.381531 612.369141,406.092163  z\",id:\"svg_629\"})),_path628||(_path628=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M693.998169,416.998169   C694.543091,416.387390 695.089844,415.778412 695.636536,415.169434   C695.934082,415.450684 696.231567,415.731934 696.529053,416.013184   C695.916260,416.338806 695.303528,416.664398 694.347778,416.996826   C694.004883,417.003662 694.000000,417.000000 693.998169,416.998169  z\",id:\"svg_630\"})),_path629||(_path629=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M686.316223,397.547424   C685.548889,397.609619 685.004822,397.459015 684.460754,397.308411   C684.661926,396.953217 684.863037,396.598022 685.064148,396.242828   C685.555908,396.606750 686.047729,396.970673 686.316223,397.547424  z\",id:\"svg_631\"})),_path630||(_path630=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M689.665649,427.046539   C689.839111,427.855804 689.678284,428.711639 689.517395,429.567474   C689.151489,429.437683 688.785583,429.307922 688.419678,429.178131   C688.723511,428.483124 689.027405,427.788116 689.665649,427.046539  z\",id:\"svg_632\"})),_path631||(_path631=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M688.451538,433.593079   C688.984131,433.744080 689.313660,434.091919 689.643250,434.439728   C689.317566,434.724487 688.991882,435.009247 688.666199,435.294006   C688.526978,434.792633 688.387756,434.291229 688.451538,433.593079  z\",id:\"svg_633\"})),_path632||(_path632=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M611.024536,408.033539   C611.024536,408.033539 611.008972,408.507385 610.780273,408.858337   C610.350647,409.481140 610.149658,409.753052 609.948669,410.024963   C609.948669,410.024963 609.518921,410.010834 609.035217,410.007019   C608.373047,410.006531 608.194580,410.009888 608.016113,410.013214   C608.008850,409.577332 608.001526,409.141418 608.360840,408.365295   C609.493164,408.027863 610.258850,408.030701 611.024536,408.033539  z\",id:\"svg_634\"})),_path633||(_path633=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M679.997559,416.997559   C680.306152,416.484863 680.614807,415.972168 680.923401,415.459473   C681.134277,415.643921 681.345215,415.828369 681.556152,416.012817   C681.229675,416.320099 680.903137,416.627350 680.288330,416.967285   C680.000000,417.000000 679.997559,416.997559 679.997559,416.997559  z\",id:\"svg_635\"})),_path634||(_path634=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M680.001221,417.001221   C679.552795,417.784363 679.103210,418.566284 678.653625,419.348236   C678.434265,419.199829 678.214905,419.051422 677.995483,418.903015   C678.461243,418.293152 678.927002,417.683258 679.695190,417.035461   C679.997559,416.997559 680.000000,417.000000 680.001221,417.001221  z\",id:\"svg_636\"})),_path635||(_path635=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M663.086792,397.781830   C663.111511,397.149933 663.263550,396.218719 663.696777,395.177429   C663.723389,395.872437 663.468750,396.677460 663.086792,397.781830  z\",id:\"svg_637\"})),_path636||(_path636=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M611.033813,407.777161   C610.258850,408.030701 609.493164,408.027863 608.344238,408.038513   C607.654053,407.919403 607.401062,407.718842 607.091553,407.232422   C607.431396,407.008148 607.881653,407.001740 608.669678,406.988403   C609.464966,406.986877 609.922668,406.992279 610.725037,407.002991   C611.060913,407.179108 611.052002,407.349945 611.033813,407.777161  z\",id:\"svg_638\"})),_path637||(_path637=/*#__PURE__*/React.createElement(\"path\",{fill:\"#503428\",opacity:1,stroke:\"none\",d:\" M635.183472,466.870819   C634.777832,466.452911 634.604431,465.878265 634.634583,465.139282   C635.030640,465.554688 635.223206,466.134399 635.183472,466.870819  z\",id:\"svg_639\"})),_path638||(_path638=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M685.628784,431.048950   C685.268982,431.341095 684.909668,431.380127 684.550293,431.419128   C684.551697,431.162598 684.553040,430.906006 684.554443,430.649445   C684.912720,430.698242 685.271057,430.747040 685.628784,431.048950  z\",id:\"svg_640\"})),_path639||(_path639=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M670.634277,402.999329   C670.112061,403.180908 669.201965,403.360596 668.103210,403.279236   C668.691833,403.011230 669.469177,403.004303 670.634277,402.999329  z\",id:\"svg_641\"})),_path640||(_path640=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M692.988770,384.249451   C693.101868,384.419678 693.045288,384.592529 692.988647,384.765381   C692.932129,384.594299 692.875671,384.423187 692.988770,384.249451  z\",id:\"svg_642\"})),_path641||(_path641=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M610.188232,409.923279   C610.149658,409.753052 610.350647,409.481140 610.781494,409.095337   C610.816833,409.261505 610.622314,409.541565 610.188232,409.923279  z\",id:\"svg_643\"})),_path642||(_path642=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M608.105225,410.187683   C608.194580,410.009888 608.373047,410.006531 608.820190,410.008057   C608.790710,410.129364 608.492554,410.245789 608.105225,410.187683  z\",id:\"svg_644\"})),_path643||(_path643=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M683.468872,417.442719   C683.527100,417.407623 683.410706,417.477814 683.468872,417.442719  z\",id:\"svg_645\"})),_path644||(_path644=/*#__PURE__*/React.createElement(\"path\",{fill:\"#33190E\",opacity:1,stroke:\"none\",d:\" M638.441650,497.526764   C638.408508,497.472382 638.474792,497.581146 638.441650,497.526764  z\",id:\"svg_646\"})),_path645||(_path645=/*#__PURE__*/React.createElement(\"path\",{fill:\"#574432\",opacity:1,stroke:\"none\",d:\" M607.064392,550.005859   C607.512695,549.679688 607.960999,549.353455 608.995422,549.035828   C610.045410,549.350281 610.509216,549.656250 610.973083,549.962158   C613.082581,552.277954 615.192078,554.593689 617.643433,556.962036   C617.565796,558.294617 617.146423,559.574524 616.218750,560.601807   C614.327881,557.818787 612.840820,556.945862 610.578735,559.619690   C609.687256,560.673462 608.200806,561.223938 606.985352,562.003662   C606.803406,560.941223 606.621460,559.878845 606.439514,558.816406   C606.108154,559.186768 605.776794,559.557068 605.445435,559.927368   C603.700195,559.124329 601.955017,558.321289 600.040955,557.205444   C600.678772,556.270203 601.485474,555.647705 602.697510,555.372253   C605.929749,556.748291 607.363892,554.679871 607.064392,550.005859  z\",id:\"svg_647\"})),_path646||(_path646=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M606.643555,562.057129   C608.200806,561.223938 609.687256,560.673462 610.578735,559.619690   C612.840820,556.945862 614.327881,557.818787 615.861572,560.663940   C616.007629,561.157898 616.002502,561.337219 615.983765,561.785889   C612.569336,563.031128 609.168396,564.006958 605.386780,564.983337   C605.437927,564.026123 605.869812,563.068420 606.643555,562.057129  z\",id:\"svg_648\"})),_path647||(_path647=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M552.313721,584.960083   C553.314331,580.317261 555.638245,578.738892 558.712280,580.782471   C559.445862,581.619446 559.896606,582.274292 560.673706,582.964539   C561.000000,583.000000 561.002441,583.002441 561.002441,583.002441   C558.965088,587.798889 558.400330,582.892029 556.845154,582.298523   C555.569702,583.100647 554.118774,584.013184 552.313721,584.960083  z\",id:\"svg_649\"})),_path648||(_path648=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M562.317505,579.321411   C563.105591,578.332642 564.154663,577.614685 565.535889,576.856201   C566.560547,577.653259 567.252930,578.490723 567.972656,579.664185   C567.999878,580.000122 567.992676,580.007324 567.992676,580.007324   C566.187927,579.868958 564.383240,579.730530 562.317505,579.321411  z\",id:\"svg_650\"})),_path649||(_path649=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M532.356323,591.983765   C530.636780,589.445435 531.383972,588.104370 534.633911,588.015747   C534.239990,589.340942 533.491089,590.658203 532.356323,591.983765  z\",id:\"svg_651\"})),_path650||(_path650=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M539.025452,592.978882   C539.176392,591.783020 539.327332,590.587158 539.478271,589.391296   C539.862732,589.312439 540.247253,589.233643 540.631714,589.154785   C541.087036,590.189697 541.542419,591.224609 542.000122,592.628540   C542.002441,592.997559 542.000000,593.000000 541.626099,593.002930   C540.510010,592.996887 539.767700,592.987854 539.025452,592.978882  z\",id:\"svg_652\"})),_path651||(_path651=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M538.756470,593.101929   C539.767700,592.987854 540.510010,592.996887 541.623657,593.005371   C540.593811,593.670959 539.192505,594.337097 537.395630,595.000183   C537.495789,594.406433 537.991638,593.815735 538.756470,593.101929  z\",id:\"svg_653\"})),_path652||(_path652=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M572.345703,577.502563   C571.807129,578.223083 571.057922,578.715149 570.308655,579.207214   C570.100708,578.809143 569.892761,578.411133 569.684753,578.013062   C570.501587,577.766785 571.318359,577.520447 572.345703,577.502563  z\",id:\"svg_654\"})),_path653||(_path653=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M587.022644,568.181763   C587.679871,567.582520 588.487183,567.255371 589.637817,566.938965   C589.709106,568.691162 589.542847,570.630066 587.022644,568.181763  z\",id:\"svg_655\"})),_path654||(_path654=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M568.002563,579.997559   C568.834900,580.456848 569.664429,580.918640 571.236694,581.793823   C569.806824,582.163208 569.071411,582.585632 568.537903,582.406616   C568.200806,582.293396 568.165222,581.282043 567.993530,580.340454   C567.992676,580.007324 567.999878,580.000122 568.002563,579.997559  z\",id:\"svg_656\"})),_path655||(_path655=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M590.331909,566.982483   C590.106995,566.406189 590.263855,565.833191 590.656494,565.065613   C591.564148,565.360474 592.236145,565.849976 592.954102,566.669678   C593.000000,567.000000 593.002441,566.997559 593.002441,566.997559   C592.239563,566.993652 591.476685,566.989685 590.331909,566.982483  z\",id:\"svg_657\"})),_path656||(_path656=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M592.998779,567.001221   C593.621460,567.548523 594.245361,568.094604 594.869263,568.640686   C594.584900,568.944092 594.300598,569.247498 594.016235,569.550903   C593.679565,568.931213 593.342896,568.311523 593.004333,567.344727   C593.002441,566.997559 593.000000,567.000000 592.998779,567.001221  z\",id:\"svg_658\"})),_path657||(_path657=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M560.998779,582.998779   C561.250549,582.481384 561.482910,581.952148 561.787292,581.468384   C561.819153,581.417786 562.276978,581.635315 562.537109,581.728455   C562.220276,582.130859 561.903442,582.533264 561.294556,582.969055   C561.002441,583.002441 561.000000,583.000000 560.998779,582.998779  z\",id:\"svg_659\"})),_path658||(_path658=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M566.313293,585.083740   C566.282227,584.524414 566.411072,584.128296 566.539978,583.732178   C566.647400,583.840698 566.862122,583.973145 566.844177,584.053772   C566.753845,584.458984 566.602905,584.850586 566.313293,585.083740  z\",id:\"svg_660\"})),_path659||(_path659=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M619.229553,527.087830   C619.024719,527.651306 618.819885,528.214844 618.751282,529.295532   C615.398071,533.934753 611.108032,536.760681 605.894897,537.575623   C607.279663,536.223022 608.551086,535.203857 610.269104,533.826782   C599.464661,533.066162 599.464661,533.066162 595.502563,542.684448   C593.123657,543.672363 591.551147,544.325378 589.594299,544.992310   C588.204590,545.536621 587.199219,546.067078 586.193848,546.597473   C586.586121,547.027222 586.978455,547.456970 587.370789,547.886719   C588.255310,546.932739 589.139893,545.978821 590.383484,545.035950   C591.947998,545.891479 593.153503,546.735901 594.166748,547.445740   C596.796082,545.607910 599.388977,543.795471 601.951660,542.338867   C600.248779,548.781738 594.416199,550.054932 589.706421,552.841431   C586.777954,550.378540 584.157410,548.057861 581.052002,545.307800   C580.759033,546.408936 580.427490,547.654907 580.050110,548.947815   C580.004211,548.994751 579.911133,549.087341 579.577271,549.044617   C578.467346,549.312439 577.691406,549.622986 576.585693,549.984009   C574.827393,549.809692 573.398926,549.584961 571.970398,549.360229   C571.986938,548.906494 572.003479,548.452759 572.020020,547.999084   C573.150085,547.276123 574.280090,546.553162 574.896423,546.158875   C572.800781,543.606140 570.886047,541.273743 569.124390,538.652344   C568.514954,537.590515 567.752502,536.817627 566.984497,536.032654   C566.978882,536.020630 566.954285,536.010986 566.979614,535.695923   C566.802795,534.819031 566.600647,534.257080 566.398499,533.695190   C565.936523,534.458557 565.474548,535.221924 564.757202,535.984863   C564.331543,535.987671 564.161255,535.990967 563.784790,535.795044   C562.720398,536.711243 561.862183,537.826721 560.976990,539.266357   C560.328857,540.196228 559.707703,540.801941 559.086548,541.407715   C558.389954,540.606750 557.693481,539.805786 557.261108,538.779236   C558.412048,534.821228 555.468201,536.420959 553.726807,535.994141   C553.479370,535.985779 552.985229,535.954773 553.105347,535.693970   C553.491333,534.275818 553.757141,533.118469 554.399292,531.978638   C555.530823,532.010742 556.286072,532.025208 557.054871,532.240112   C557.068481,532.440491 557.053528,532.841858 556.914917,533.108643   C556.541260,533.859436 556.306274,534.343445 556.071289,534.827454   C557.106506,534.178467 558.141724,533.529480 559.409180,532.672302   C560.871826,531.296448 562.102234,530.128784 563.592041,528.964478   C564.197327,528.969849 564.543152,528.971924 565.008789,529.263855   C565.560608,530.217163 565.992737,530.880615 566.807129,532.131104   C568.047729,530.118347 569.032349,528.520813 570.019287,526.671631   C570.032043,526.252686 570.042542,526.085327 570.431885,525.947998   C572.017639,527.256348 573.224731,528.534790 574.339539,529.715515   C575.914734,528.788940 577.462524,527.878540 579.003845,527.333984   C578.363525,529.219849 577.729675,530.739868 577.095764,532.259949   C577.369324,532.429749 577.642822,532.599609 577.916321,532.769470   C578.816284,531.738708 579.716187,530.708008 580.752319,529.521240   C584.293274,532.391174 587.839722,535.700867 593.038086,533.288879   C593.485779,533.887695 593.899597,534.192749 594.313477,534.497742   C594.406189,534.229675 594.616577,533.749695 594.573792,533.725952   C594.069519,533.445984 593.527344,533.234436 593.002563,532.638062   C593.176941,529.434875 593.343750,526.598511 593.545898,523.162292   C600.052307,521.490234 607.630127,518.760132 614.884094,524.274292   C613.955872,525.640930 613.059753,526.960205 612.163574,528.279480   C612.657227,528.636475 613.150879,528.993530 613.644531,529.350525   C615.086182,527.585449 616.527832,525.820374 617.986816,524.406372   C618.412659,525.534241 618.821106,526.311035 619.229553,527.087830  M599.716370,529.976379   C600.833008,529.976379 601.949646,529.976379 603.066223,529.976379   C603.152222,529.691650 603.238220,529.406921 603.324219,529.122192   C602.146423,528.506897 600.968628,527.891663 599.790833,527.276367   C599.530945,528.189392 599.270996,529.102417 598.383118,529.747681   C597.597839,530.112976 596.812561,530.478271 596.027283,530.843567   C596.416138,531.465637 596.804993,532.087708 597.193848,532.709778   C597.791992,531.802551 598.390076,530.895386 599.716370,529.976379  M596.753845,525.450745   C597.160034,525.583191 597.561523,525.737000 597.976562,525.829956   C598.058594,525.848389 598.192993,525.633118 598.303284,525.525574   C597.899841,525.396301 597.496338,525.267029 596.753845,525.450745  z\",id:\"svg_661\"})),_path660||(_path660=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M590.014343,552.983704   C594.416199,550.054932 600.248779,548.781738 601.958618,542.346619   C601.995850,541.998657 601.983398,541.988953 602.248962,541.819214   C603.313721,540.692261 604.112976,539.735168 605.025024,538.602539   C605.318604,538.212280 605.533203,538.039673 605.781677,537.909058   C611.108032,536.760681 615.398071,533.934753 618.927673,529.454224   C621.616577,529.436707 622.687927,530.388306 620.517578,532.799133   C619.590149,533.829346 618.839478,535.018677 618.000000,536.481140   C613.988281,540.015320 610.053284,543.294617 605.966431,546.372192   C599.365662,551.342773 592.664856,556.180542 585.321899,561.154785   C583.728882,561.432434 582.820312,561.629822 581.831787,561.844543   C582.317871,560.665100 582.656311,559.843933 583.099487,558.760376   C583.461121,557.998108 583.717957,557.498230 584.293945,556.881775   C586.413452,555.504700 588.213928,554.244202 590.014343,552.983704  z\",id:\"svg_662\"})),_path661||(_path661=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M619.547485,527.069214   C618.821106,526.311035 618.412659,525.534241 618.269897,524.196777   C618.696655,521.086182 618.857788,518.536133 619.385742,515.949158   C620.174072,514.611755 620.595581,513.311340 621.314697,511.968140   C621.415894,511.271729 621.219543,510.618164 621.022461,509.641266   C621.016602,508.887177 621.011353,508.456390 621.362183,508.057495   C622.812012,507.727142 624.565796,507.660736 624.883789,506.950928   C626.175964,504.067291 627.027405,500.986206 628.389771,497.983490   C629.660706,497.967499 630.583252,497.945984 631.505859,497.924438   C630.126404,503.406555 629.038513,508.985138 627.268555,514.338135   C626.014282,518.131531 623.838135,521.620056 622.058228,525.615112   C621.317139,526.340454 620.591309,526.695496 619.547485,527.069214  z\",id:\"svg_663\"})),_path662||(_path662=/*#__PURE__*/React.createElement(\"path\",{fill:\"#503428\",opacity:1,stroke:\"none\",d:\" M634.006958,526.007324   C633.703125,526.523132 633.392883,527.032227 633.082642,527.541321   C632.872375,527.360596 632.662109,527.179871 632.451843,526.999084   C632.775024,526.690247 633.098206,526.381348 633.704590,526.030151   C633.987793,525.987793 634.000488,526.000671 634.006958,526.007324  z\",id:\"svg_664\"})),_path663||(_path663=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M626.385681,540.703369   C626.557373,540.837952 626.583618,541.073120 626.609863,541.308228   C626.486694,541.140137 626.363464,540.972046 626.385681,540.703369  z\",id:\"svg_665\"})),_path664||(_path664=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M512.992310,592.429565   C514.713623,591.717896 516.443237,591.350891 518.577271,590.984619   C520.297302,592.088745 521.612976,593.192200 522.956909,594.640381   C520.040222,594.529236 517.199585,591.598083 514.108398,594.610962   C513.739136,593.998779 513.369934,593.386536 512.992310,592.429565  z\",id:\"svg_666\"})),_path665||(_path665=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M505.234192,594.261536   C506.468170,593.357788 507.943787,592.733276 509.751892,592.136536   C509.943939,595.663025 507.805725,595.287720 505.234192,594.261536  z\",id:\"svg_667\"})),_path666||(_path666=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M611.377197,549.976929   C610.509216,549.656250 610.045410,549.350281 609.289551,549.020996   C609.924438,547.875854 610.851379,546.754211 611.948608,545.351257   C614.018921,545.763916 615.918823,546.457825 617.818787,547.151794   C615.806274,548.098450 613.793762,549.045105 611.377197,549.976929  z\",id:\"svg_668\"})),_path667||(_path667=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M525.995117,595.001465   C526.954529,594.284058 527.918701,593.565125 528.882935,592.846252   C529.110962,593.323486 529.338989,593.800720 529.567078,594.277954   C528.620972,594.517212 527.674927,594.756470 526.362915,595.002563   C525.996948,595.009399 526.000000,595.000000 525.995117,595.001465  z\",id:\"svg_669\"})),_path668||(_path668=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M462.126007,594.089722   C462.071930,593.901367 462.525604,593.941956 462.753052,593.949524   C462.713715,594.064087 462.446899,594.171082 462.126007,594.089722  z\",id:\"svg_670\"})),_path669||(_path669=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M617.372925,755.968506   C617.875305,752.924133 618.183228,749.491943 619.839111,746.931580   C621.668701,744.102783 624.239258,743.937744 625.005493,748.611755   C621.732178,748.690063 619.748535,749.687317 619.875244,753.488403   C619.901917,754.289734 618.510681,755.138306 617.372925,755.968506  z\",id:\"svg_671\"})),_path670||(_path670=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M640.658203,769.036194   C640.593750,769.934387 640.187500,770.868713 639.781250,771.803101   C639.319397,771.499390 638.857605,771.195618 638.395752,770.891785   C639.036011,770.285278 639.676208,769.678833 640.658203,769.036194  z\",id:\"svg_672\"})),_path671||(_path671=/*#__PURE__*/React.createElement(\"path\",{fill:\"#493724\",opacity:1,stroke:\"none\",d:\" M605.969604,708.627625   C605.516663,708.989868 604.997009,708.901855 604.525208,709.014282   C602.843262,709.415222 601.177612,709.884277 599.505798,710.327576   C600.080200,711.930176 600.654602,713.532837 601.448425,715.747681   C599.720703,716.301941 597.794312,716.919861 595.474609,717.664001   C595.693909,719.002563 595.946350,720.543823 596.306335,722.741821   C599.366943,722.348267 602.320374,721.968506 605.698792,721.534058   C605.886047,722.701050 606.235229,724.877808 606.590332,727.091370   C601.164124,727.364929 601.164124,727.364929 603.643799,735.716797   C598.319153,736.510681 593.039856,737.297791 587.040894,738.004272   C585.180115,737.127808 584.039062,736.331909 582.877136,735.521423   C582.145142,736.636963 581.458618,737.683105 580.228516,739.557678   C578.589172,735.460327 577.296265,732.228821 576.001709,728.998657   C576.000000,729.000000 575.995850,729.004089 576.398560,729.000977   C579.352051,728.719788 581.902771,728.441650 583.820312,728.232605   C585.334595,725.208740 586.745422,722.391479 588.438782,719.009949   C587.656677,718.552795 586.328308,717.776428 585.000000,717.000000   C584.058655,715.992676 583.220764,714.855530 582.154358,714.005066   C579.956055,712.252136 577.103821,710.873962 579.696167,707.159119   C584.002930,707.782898 585.539246,705.848877 584.404419,701.187195   C583.985413,699.465942 583.081726,697.867004 582.461426,696.189270   C581.816833,694.446167 581.247681,692.675171 580.645508,690.916382   C581.010925,690.716370 581.376343,690.516357 581.741760,690.316345   C579.777771,688.977112 577.813843,687.637939 575.343384,685.953369   C578.537598,683.581970 580.970093,681.353149 576.294678,679.012085   C576.635498,678.379211 576.976257,677.746338 577.667175,677.056702   C578.763977,677.000122 579.510620,677.000244 580.631104,677.002563   C583.424622,682.739258 582.592529,689.720581 588.903320,694.086426   C590.907898,695.473145 590.634460,700.152710 590.253479,703.566284   C592.134033,705.587830 594.014587,707.609375 596.245789,710.007812   C599.108215,702.156433 591.222351,696.733765 592.680969,688.604919   C595.518494,690.047119 598.110596,691.364563 600.702698,692.682007   C599.755432,694.460205 598.808105,696.238342 597.896057,697.950256   C600.381470,701.144653 603.153137,704.706970 605.969604,708.627625  z\",id:\"svg_673\"})),_path672||(_path672=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M585.005249,669.373657   C586.168091,668.434326 587.328796,667.879150 588.734131,667.158325   C588.560486,669.218811 588.142273,671.444824 587.724060,673.670776   C587.237854,673.701477 586.751587,673.732239 586.265381,673.762939   C585.844604,672.427917 585.423889,671.092834 585.005249,669.373657  z\",id:\"svg_674\"})),_path673||(_path673=/*#__PURE__*/React.createElement(\"path\",{fill:\"#574432\",opacity:1,stroke:\"none\",d:\" M576.003357,728.997375   C577.296265,732.228821 578.589172,735.460327 580.228516,739.557678   C581.458618,737.683105 582.145142,736.636963 582.877136,735.521423   C584.039062,736.331909 585.180115,737.127808 586.661804,737.961853   C587.172119,738.555359 587.341736,739.110718 587.756470,740.280762   C588.263367,745.109619 588.525146,749.323792 588.786926,753.538025   C588.312500,753.611267 587.838013,753.684570 587.363525,753.757812   C586.240601,751.171448 585.117615,748.585022 583.674988,745.838135   C581.031799,743.755859 580.102478,739.689087 575.725647,740.818909   C575.342102,740.917847 574.664673,739.440491 573.971252,738.886047   C573.063660,738.160339 572.004150,737.624695 571.006714,736.601379   C570.637634,729.708191 568.338989,727.307129 564.314087,728.781738   C561.329041,729.875305 558.099365,730.301025 554.678955,730.786743   C551.262573,730.045898 548.145813,729.542480 544.726440,728.880005   C544.045166,728.212097 543.288757,727.654907 543.346680,727.201843   C543.923828,722.685669 543.666748,718.867737 537.729370,718.451172   C537.408142,718.428711 537.241943,716.195740 537.431763,714.994629   C539.573242,714.993958 541.286621,714.990417 543.139160,715.309875   C544.002991,717.087097 544.727600,718.541260 545.464417,720.020081   C548.031250,718.440247 550.015625,717.218933 552.000000,715.997559   C556.403748,715.475708 556.885986,719.147766 558.986450,721.964966   C560.804199,721.717712 562.196533,721.663696 562.935852,720.941406   C564.155090,719.750244 565.046997,718.181152 565.906738,716.674255   C567.401611,714.054260 568.841736,714.942871 569.741516,716.896973   C570.502441,718.549377 570.615356,720.500122 571.172913,723.037231   C569.063477,722.240784 567.835449,721.777161 565.810547,721.012634   C568.202332,726.053955 571.758606,727.977783 576.003357,728.997375  z\",id:\"svg_675\"})),_path674||(_path674=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M552.001648,715.606079   C550.015625,717.218933 548.031250,718.440247 545.464417,720.020081   C544.727600,718.541260 544.002991,717.087097 543.139893,714.897339   C543.538635,710.994446 544.075806,707.827148 544.606873,704.695801   C541.851868,703.783325 539.337708,702.950623 536.445801,701.992798   C536.445801,703.773315 536.445801,705.125305 536.445801,706.754578   C535.226257,706.838196 534.116760,706.914185 533.007324,706.990234   C529.789734,705.380005 527.216919,703.911438 528.714172,699.157532   C529.456665,696.800049 527.651978,693.640320 526.998596,690.421753   C527.168152,689.998108 527.338684,689.996277 528.072327,690.130249   C530.088074,690.849731 531.540771,691.433411 533.002258,692.411377   C534.696716,699.679138 536.319946,700.883423 544.026123,700.977905   C546.006287,701.720947 547.986450,702.463989 549.982056,703.603516   C549.760620,704.694153 549.523743,705.388306 549.286804,706.082520   C550.254456,705.937500 551.222046,705.792480 553.678650,705.424255   C553.073486,708.960693 552.538391,712.087646 552.001648,715.606079  z\",id:\"svg_676\"})),_path675||(_path675=/*#__PURE__*/React.createElement(\"path\",{fill:\"#493724\",opacity:1,stroke:\"none\",d:\" M576.001709,728.998657   C571.758606,727.977783 568.202332,726.053955 565.810547,721.012634   C567.835449,721.777161 569.063477,722.240784 571.172913,723.037231   C570.615356,720.500122 570.502441,718.549377 569.741516,716.896973   C568.841736,714.942871 567.401611,714.054260 565.906738,716.674255   C565.046997,718.181152 564.155090,719.750244 562.935852,720.941406   C562.196533,721.663696 560.804199,721.717712 559.348999,722.029907   C560.306213,718.801208 559.708801,716.406860 557.407959,713.497437   C555.497742,711.082092 555.388672,707.242188 554.134827,702.805908   C557.799500,705.513611 559.927246,708.007812 562.562317,708.787598   C565.520020,709.662903 568.936218,708.988831 572.675110,708.988831   C572.803101,710.920410 572.908264,712.508057 572.745728,714.757874   C573.318665,717.613342 574.159302,719.806702 575.046265,722.389038   C575.393677,724.853394 575.694763,726.928711 575.995850,729.004089   C575.995850,729.004089 576.000000,729.000000 576.001709,728.998657  z\",id:\"svg_677\"})),_path676||(_path676=/*#__PURE__*/React.createElement(\"path\",{fill:\"#574432\",opacity:1,stroke:\"none\",d:\" M576.398560,729.000977   C575.694763,726.928711 575.393677,724.853394 575.416992,722.321533   C576.161682,720.244507 576.582031,718.623901 577.002441,717.003357   C579.372253,717.002441 581.742065,717.001587 584.555908,717.000366   C586.328308,717.776428 587.656677,718.552795 588.438782,719.009949   C586.745422,722.391479 585.334595,725.208740 583.820312,728.232605   C581.902771,728.441650 579.352051,728.719788 576.398560,729.000977  z\",id:\"svg_678\"})),_path677||(_path677=/*#__PURE__*/React.createElement(\"path\",{fill:\"#493724\",opacity:1,stroke:\"none\",d:\" M576.799194,716.740479   C576.582031,718.623901 576.161682,720.244507 575.361938,721.547668   C574.661255,719.482788 574.339905,717.735291 574.018494,715.987793   C574.877625,716.151062 575.736816,716.314331 576.799194,716.740479  z\",id:\"svg_679\"})),_path678||(_path678=/*#__PURE__*/React.createElement(\"path\",{fill:\"#574432\",opacity:1,stroke:\"none\",d:\" M573.906677,715.767517   C574.339905,717.735291 574.661255,719.482788 574.991333,721.615112   C574.159302,719.806702 573.318665,717.613342 572.749634,715.183716   C573.335693,715.074341 573.593567,715.274292 573.906677,715.767517  z\",id:\"svg_680\"})),_path679||(_path679=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M544.017029,700.567017   C536.319946,700.883423 534.696716,699.679138 533.354370,692.371277   C534.676575,691.421570 535.655334,690.906189 536.266479,690.584412   C535.125732,689.007629 533.558289,687.747986 533.233887,686.223877   C532.236206,681.536133 531.714233,676.747192 531.007324,671.997559   C531.336853,671.219788 531.666382,670.442078 531.999207,669.324829   C532.674561,670.039368 533.759705,671.027344 533.940918,672.159912   C534.472107,675.479736 536.404724,677.024475 539.768188,678.058594   C540.004883,679.116638 540.007446,679.564270 539.882568,680.309692   C540.502563,681.743469 541.250061,682.879456 541.996399,684.344238   C541.994385,685.111328 541.993530,685.549561 541.992676,685.987793   C542.316895,688.650085 542.605103,691.317444 542.976990,693.973022   C543.266663,696.041626 543.660400,698.095581 544.017029,700.567017  z\",id:\"svg_681\"})),_path680||(_path680=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M542.360901,685.984253   C541.993530,685.549561 541.994385,685.111328 541.996948,683.966919   C541.335754,682.177795 540.672913,681.094788 540.010071,680.011841   C540.007446,679.564270 540.004883,679.116638 540.001099,678.333313   C542.675171,678.283691 544.405945,679.529419 544.012451,682.455872   C543.849792,683.666443 543.172424,684.807800 542.360901,685.984253  z\",id:\"svg_682\"})),_path681||(_path681=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M544.606201,690.041870   C544.206299,690.285767 543.807495,690.283752 543.411072,690.251404   C543.397949,690.250366 543.410034,689.941040 543.410400,689.775391   C543.809509,689.780762 544.208496,689.786072 544.606201,690.041870  z\",id:\"svg_683\"})),_path682||(_path682=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M574.997253,666.002075   C575.116333,666.142395 575.238098,666.280640 575.359924,666.418884   C575.276611,666.369019 575.193298,666.319153 575.057007,666.131836   C575.004089,665.994507 575.000000,666.000000 574.997253,666.002075  z\",id:\"svg_684\"})),_path683||(_path683=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M736.608459,401.961914   C736.497070,405.148499 735.887756,408.334320 735.629333,411.548340   C735.569702,412.290314 736.711853,413.128906 737.650146,413.960175   C737.999329,413.997314 738.039551,414.027924 738.039551,414.027924   C736.538391,417.488342 735.037231,420.948761 733.415649,424.686676   C733.187622,424.738098 731.798767,425.051147 730.220337,425.599335   C729.461365,425.692902 728.891968,425.551361 728.132935,425.171082   C732.908569,417.521179 732.962646,409.320465 731.708496,400.488098   C733.155518,400.691498 734.696777,401.331451 736.608459,401.961914  z\",id:\"svg_685\"})),_path684||(_path684=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AD703F\",opacity:1,stroke:\"none\",d:\" M721.987793,418.988556   C722.103271,419.124756 722.230896,419.272400 722.358521,419.420044   C722.270142,419.367950 722.181763,419.315857 722.035156,419.119751   C721.976868,418.975769 722.000000,419.000000 721.987793,418.988556  z\",id:\"svg_686\"})),_path685||(_path685=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M708.745972,387.126343   C709.105652,387.583221 709.239746,388.171997 709.123352,388.894440   C708.755310,388.438141 708.637817,387.848175 708.745972,387.126343  z\",id:\"svg_687\"})),_path686||(_path686=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M730.714661,452.981201   C730.769165,453.141449 730.611572,453.446625 730.220886,453.873840   C730.159424,453.705963 730.330994,453.416046 730.714661,452.981201  z\",id:\"svg_688\"})),_path687||(_path687=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M729.677368,435.959839   C730.247314,436.675690 730.585876,437.407074 730.924500,438.138458   C730.675903,438.264557 730.427368,438.390656 730.178772,438.516754   C729.801208,437.885895 729.423645,437.255005 729.014526,436.312683   C728.982910,436.001190 729.445984,435.975342 729.677368,435.959839  z\",id:\"svg_689\"})),_path688||(_path688=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M733.115051,435.226624   C733.442871,435.257507 733.870605,435.505463 734.124634,435.896637   C733.651733,435.907562 733.406433,435.708832 733.115051,435.226624  z\",id:\"svg_690\"})),_path689||(_path689=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M732.113525,433.215698   C732.347229,433.105988 732.597107,433.308380 732.850037,433.831604   C732.623291,433.925751 732.382141,433.717529 732.113525,433.215698  z\",id:\"svg_691\"})),_path690||(_path690=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M583.994629,745.998657   C585.117615,748.585022 586.240601,751.171448 587.363525,753.757812   C587.838013,753.684570 588.312500,753.611267 588.786926,753.538025   C588.525146,749.323792 588.263367,745.109619 588.002014,740.447693   C588.975952,741.151489 590.518250,742.175842 590.809875,743.479797   C591.515808,746.636292 591.638794,749.923218 591.999634,753.588501   C592.001648,754.460083 592.000793,754.900635 591.661377,755.674194   C590.716003,756.640686 590.109253,757.274170 589.502502,757.907654   C590.335815,758.274231 591.169128,758.640808 592.002441,759.007385   C592.002441,759.007385 592.002869,759.493896 592.000488,760.115356   C591.995483,761.492004 591.992859,762.247192 591.990234,763.002441   C591.550110,763.001709 591.110046,763.000916 590.092163,762.996521   C589.514404,762.992920 589.019226,762.983093 589.009094,762.602783   C587.054871,759.196106 586.710571,755.009766 582.375549,753.636353   C581.806824,753.456177 581.695679,750.754272 581.966248,749.333496   C582.194275,748.136536 583.285522,747.104004 583.994629,745.998657  z\",id:\"svg_692\"})),_path691||(_path691=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M418.995117,707.007324   C418.221924,704.452698 417.448761,701.898132 416.346924,698.792236   C417.123962,694.584412 416.673553,691.930542 412.000488,691.748596   C412.004303,691.329590 412.004364,691.161987 411.966858,690.638000   C411.285980,688.524353 410.642731,686.767090 409.999512,685.009766   C410.621002,682.352905 411.242493,679.695984 412.228699,675.479919   C414.685089,680.516846 415.100800,686.062439 421.661682,683.325500   C421.445190,681.259277 421.217255,679.084106 421.082764,677.800354   C423.254547,676.162048 424.787872,675.005371 426.809418,673.480408   C427.277985,675.376099 427.805603,677.510620 428.333221,679.645142   C428.877258,679.644226 429.421265,679.643311 429.965271,679.642456   C430.308350,677.374817 430.651398,675.107239 430.996216,672.046326   C430.995789,670.499023 430.993622,669.744934 430.991455,668.990906   C432.877777,666.648438 434.167877,664.361389 430.195892,662.272705   C432.308685,657.436646 435.069397,662.791016 438.170258,662.097412   C437.238831,663.441040 436.307404,664.784607 435.125458,666.489502   C435.597443,667.591187 436.212067,669.025818 436.946991,670.741211   C435.437927,671.231201 434.227875,671.624084 433.017853,672.017029   C439.619873,672.630798 437.859833,677.405884 437.574219,681.558105   C432.765442,681.207520 430.019135,683.285339 428.124054,687.024414   C427.155640,688.935181 425.991089,690.746582 424.590454,693.163086   C424.590454,696.842651 424.590454,701.408569 424.590454,706.121277   C422.834778,706.399292 420.914948,706.703308 418.995117,707.007324  z\",id:\"svg_693\"})),_path692||(_path692=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M409.670105,685.001831   C410.642731,686.767090 411.285980,688.524353 411.798584,690.727234   C411.603027,691.280396 411.458710,691.449097 411.486572,691.485413   C411.632599,691.675415 411.822266,691.831909 411.996735,692.000000   C416.673553,691.930542 417.123962,694.584412 416.019470,698.606079   C415.027405,698.728394 413.562927,698.799377 413.146057,698.173035   C412.435181,697.105042 412.382172,695.599365 411.869873,693.543274   C410.009979,695.301392 408.854309,696.393860 407.448669,697.722595   C408.563354,698.480774 409.565826,699.162659 410.739075,699.960693   C408.542053,700.893372 406.564484,701.732849 404.288696,702.786316   C402.419006,699.544617 400.847504,696.088928 399.103760,692.327148   C399.293243,691.242432 399.654938,690.463806 400.418152,689.345642   C403.220734,687.659729 405.621857,686.313416 408.022949,684.967163   C408.462189,684.976074 408.901428,684.984924 409.670105,685.001831  z\",id:\"svg_694\"})),_path693||(_path693=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M408.011658,684.632385   C405.621857,686.313416 403.220734,687.659729 400.457703,689.025024   C399.751923,688.250305 399.408081,687.456543 399.043091,686.339294   C401.489777,684.894287 403.934052,683.711609 406.459351,682.739441   C406.732544,682.634216 407.475342,683.748840 408.011658,684.632385  z\",id:\"svg_695\"})),_path694||(_path694=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M430.658325,669.043701   C430.993622,669.744934 430.995789,670.499023 430.995300,671.630188   C430.770172,671.037048 430.547699,670.066711 430.658325,669.043701  z\",id:\"svg_696\"})),_path695||(_path695=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M418.995117,707.401489   C420.914948,706.703308 422.834778,706.399292 424.590454,706.121277   C424.590454,701.408569 424.590454,696.842651 424.590454,693.163086   C425.991089,690.746582 427.155640,688.935181 428.124054,687.024414   C430.019135,683.285339 432.765442,681.207520 437.574951,681.993896   C439.308563,682.914673 440.614777,683.836670 441.921021,684.758667   C443.007629,682.877441 444.428619,681.103149 445.075287,679.081177   C445.596039,677.452881 445.180756,675.525208 445.180756,673.462891   C455.069214,676.869080 449.043915,668.109558 452.748199,664.933167   C454.194885,665.381592 456.544800,666.109924 458.894714,666.838257   C458.783020,667.379517 458.671326,667.920776 458.559631,668.462097   C457.204437,668.808655 455.849243,669.155212 453.962341,669.637756   C453.962341,673.242798 453.962341,676.803406 453.962341,680.364014   C453.592468,680.512878 453.222565,680.661743 452.852692,680.810608   C451.933655,679.714050 451.014618,678.617493 448.999664,676.213379   C448.999664,681.065369 448.999664,684.644897 448.718018,688.867798   C448.901123,692.492188 449.365875,695.473267 449.682465,697.503845   C445.464539,697.947021 440.620483,699.253601 435.974365,698.746521   C429.870117,698.080261 429.484772,702.279846 427.695038,706.011353   C427.019043,706.549988 426.287903,707.134583 426.385254,707.495850   C427.504974,711.650146 428.446045,715.891785 430.031982,719.872192   C432.575745,726.256775 431.173706,730.807495 425.045013,733.137634   C426.366211,734.208679 427.510284,735.136169 427.774963,735.350708   C427.249023,737.981873 426.874176,739.857300 426.499329,741.732666   C428.325165,741.483459 430.151001,741.234192 431.976807,740.984924   C433.166168,741.312988 434.370544,741.959656 435.541779,741.904358   C438.163361,741.780701 442.089264,740.119507 443.092743,741.235229   C444.922699,743.269775 445.106995,746.846252 445.755707,749.827759   C445.880432,750.401062 445.113708,751.335815 444.539124,751.866699   C440.592926,755.513855 436.588501,759.097961 432.299561,762.849976   C431.827667,762.996948 431.659027,762.996338 431.237122,762.992798   C430.427856,758.723206 428.168365,756.049988 423.983185,754.697876   C423.084412,754.407471 422.143188,752.293091 422.336945,751.220398   C422.481262,750.421326 424.401031,749.897400 425.572754,749.340759   C427.127838,748.601990 428.724396,747.950378 431.298248,746.826965   C423.965576,743.523865 420.432770,733.700073 422.320160,727.450745   C423.200378,724.536194 422.470673,721.135376 422.470673,717.954956   C421.869385,717.816101 421.268097,717.677185 420.666809,717.538269   C419.322540,719.437683 417.978302,721.337036 416.473694,723.462952   C415.741821,721.730408 414.486816,719.758667 414.116058,717.632690   C413.636414,714.882446 413.463318,711.933655 417.346710,710.885010   C418.118011,710.676697 418.456848,708.866943 418.995117,707.401489  z\",id:\"svg_697\"})),_path696||(_path696=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M428.024719,705.953491   C429.484772,702.279846 429.870117,698.080261 435.974365,698.746521   C440.620483,699.253601 445.464539,697.947021 449.682465,697.503845   C449.365875,695.473267 448.901123,692.492188 448.711914,689.256226   C449.986725,689.761658 450.985931,690.521851 451.802612,691.923523   C451.771393,693.368958 451.787445,694.813110 452.094757,694.877991   C455.226868,695.539368 458.406433,695.976318 461.663605,696.490417   C461.663605,695.728638 461.663605,694.155823 461.663605,691.987793   C459.241608,691.987793 457.115295,691.987793 454.989014,691.987793   C455.480225,686.170837 458.739197,681.502747 462.866028,680.378540   C461.429993,679.821777 459.993958,679.265076 457.377533,678.250671   C461.861511,677.486328 462.317566,669.869629 468.186890,674.580566   C467.830170,675.625854 467.426971,676.807373 467.170898,677.557800   C469.478577,678.658386 471.467957,679.607239 473.727234,680.777344   C473.997406,682.714844 473.997742,684.430969 473.850006,686.903198   C473.349609,688.206116 473.099030,689.112244 472.629486,689.245178   C466.947235,690.854553 466.827393,693.532043 470.165894,698.006775   C472.631775,701.311829 469.922607,702.100647 466.967773,701.631348   C466.377960,699.640686 465.833832,698.025635 464.872467,695.172241   C464.198425,697.820740 463.857788,699.159058 463.817230,699.318481   C460.360382,700.711853 457.682922,701.791016 456.357727,702.325195   C455.539398,709.875427 454.878632,715.972290 454.157776,722.623230   C458.677856,726.031250 458.444733,729.528137 452.742859,733.117859   C451.541809,733.873901 450.813812,735.381348 450.215576,736.115723   C447.798859,733.733704 445.404938,731.374146 443.010986,729.014648   C441.916504,728.007385 440.822052,727.000122 439.190338,725.643799   C438.044312,720.612610 437.435547,715.930420 436.831635,711.285278   C438.916473,710.370117 440.293243,709.765747 441.959229,709.034424   C440.202820,707.550049 438.839172,706.397644 438.313629,705.953491   C434.250824,705.953491 431.137787,705.953491 428.024719,705.953491  M454.704834,699.568726   C454.991119,699.295837 455.277374,699.022949 455.563690,698.750061   C455.450317,698.631775 455.244843,698.404236 455.236816,698.411011   C454.934906,698.665527 454.651184,698.941650 454.704834,699.568726  z\",id:\"svg_698\"})),_path697||(_path697=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M454.615601,691.993347   C457.115295,691.987793 459.241608,691.987793 461.663605,691.987793   C461.663605,694.155823 461.663605,695.728638 461.663605,696.490417   C458.406433,695.976318 455.226868,695.539368 452.094757,694.877991   C451.787445,694.813110 451.771393,693.368958 451.810150,692.297729   C452.747498,692.019897 453.494843,692.009399 454.615601,691.993347  z\",id:\"svg_699\"})),_path698||(_path698=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M470.965576,675.504578   C470.594818,673.094238 470.594818,670.762817 470.594818,668.431396   C471.472290,668.547607 472.349731,668.663818 473.227203,668.780090   C472.596893,671.047852 471.966583,673.315674 470.965576,675.504578  z\",id:\"svg_700\"})),_path699||(_path699=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M488.022308,588.826416   C475.715302,588.533752 463.393280,588.523621 451.105438,587.870483   C438.343872,587.192078 425.572754,586.247131 412.888824,584.726501   C405.570618,583.849243 398.365204,581.795715 391.210754,579.889648   C387.735229,578.963745 384.493408,577.160645 381.296875,575.202209   C381.940796,573.428833 382.433655,572.208008 383.154785,571.262207   C390.660522,571.144775 397.882172,570.914978 402.037292,578.231445   C403.158203,576.617065 404.052734,575.328796 404.971710,574.406250   C407.157227,576.481445 409.110260,578.629333 411.536194,579.780334   C414.107452,581.000183 417.128082,581.272827 420.194824,582.240845   C421.664062,582.665405 422.890930,582.808228 424.458130,582.946533   C425.479095,582.937805 426.159760,582.933533 427.284546,582.955566   C432.721619,583.578857 437.703949,584.335144 442.714417,584.669495   C444.096771,584.761658 445.563049,583.595886 447.365509,583.009949   C453.767700,583.339722 459.795197,583.666870 465.887115,584.282837   C469.312714,584.715820 472.673889,584.859863 476.398712,585.044373   C478.849091,585.054688 480.935791,585.024536 483.260559,585.281250   C484.990753,585.708984 486.482910,585.849976 487.984772,586.346313   C488.003754,587.409912 488.013031,588.118164 488.022308,588.826416  z\",id:\"svg_701\"})),_path700||(_path700=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M295.287231,492.341614   C296.671967,492.284027 297.976471,492.615326 299.632629,493.369324   C301.940887,497.189270 303.897522,500.586517 306.092957,504.258881   C307.216583,505.708710 308.101379,506.883423 308.996399,508.375916   C309.018921,509.117645 309.031281,509.541595 309.026794,510.217255   C309.005219,510.637085 309.000549,510.805176 308.770050,511.088257   C308.380737,511.489105 308.217255,511.774994 308.195801,512.365479   C310.197449,513.752686 312.057098,514.835327 313.950500,515.948914   C313.984222,515.979919 314.057312,516.035278 314.079559,516.396362   C315.539551,520.445374 317.195312,524.066528 318.351349,527.840820   C319.424835,531.345642 321.384094,533.499023 325.037964,534.374573   C325.859650,535.923218 327.332886,537.094360 327.383728,538.324341   C327.577972,543.021667 329.931458,544.024048 334.117798,543.192566   C336.962372,546.561584 337.627716,551.690552 343.044189,552.363770   C347.056519,555.461731 351.007080,558.213623 354.796814,561.040527   C354.775543,561.091187 354.915070,561.066895 355.328491,561.163574   C356.349182,561.492676 357.095917,561.700684 357.880402,562.270203   C357.931061,563.116211 357.943970,563.600586 357.532532,564.064941   C355.403778,564.035522 353.699341,564.026245 351.994873,564.016968   C350.773773,562.757141 349.782867,560.974304 348.295441,560.319580   C335.755035,554.800415 326.455444,545.398560 317.423157,535.121704   C315.703735,529.381165 311.869446,525.399902 308.469086,520.990845   C305.204895,516.758301 302.840332,511.751709 300.565460,506.859741   C298.447144,502.304443 296.967682,497.452057 295.287231,492.341614  z\",id:\"svg_702\"})),_path701||(_path701=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M488.209595,589.083618   C488.013031,588.118164 488.003754,587.409912 487.994751,586.346436   C487.995087,585.991211 487.995270,585.976135 488.330811,585.989319   C489.114136,586.002502 489.561981,586.002502 490.343079,586.146362   C491.466827,586.352905 492.374634,586.701233 493.028992,586.432556   C497.910828,584.427246 503.473969,587.067078 508.391937,583.591858   C510.601654,582.030396 514.509521,582.973511 517.615662,582.550964   C520.761047,582.123047 523.914001,581.587830 526.980713,580.783203   C531.375793,579.630005 535.695557,578.189697 540.478149,576.901550   C548.317017,577.713745 553.717590,572.710693 559.985840,570.226196   C560.509399,570.018616 560.645020,568.832397 561.296082,568.089844   C562.077820,568.078308 562.524414,568.077942 563.191406,568.317444   C564.939758,567.722961 566.467712,566.888550 568.363037,566.006592   C572.101685,564.324158 575.499023,563.030396 579.158325,565.161438   C573.930664,567.671936 568.754211,570.297241 563.459778,572.657959   C558.946838,574.670227 554.388428,576.661865 549.689209,578.156494   C541.991760,580.604858 534.210388,582.828552 526.375977,584.794800   C520.092651,586.371765 513.711121,587.632935 507.312103,588.650696   C501.783569,589.530029 496.173065,589.915344 490.587769,590.388977   C489.892120,590.447998 489.128845,589.709656 488.209595,589.083618  z\",id:\"svg_703\"})),_path702||(_path702=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M357.956848,564.085022   C357.943970,563.600586 357.931061,563.116211 358.109314,562.027100   C359.552490,561.614807 360.804565,561.807129 362.263306,562.104004   C362.728760,562.397888 362.908600,562.644653 363.016571,563.341309   C364.612457,564.434692 366.201294,565.135559 367.897156,565.932922   C368.004181,566.029358 368.211273,566.229675 368.141571,566.554199   C370.255432,567.887207 372.438995,568.895752 374.735077,569.956238   C375.678436,568.937500 376.590698,567.952271 378.062836,566.362488   C378.889893,567.872559 379.522522,569.027649 379.931183,569.773743   C382.036407,568.564636 383.512726,567.716675 384.989075,566.868713   C385.315674,567.351013 385.642303,567.833252 385.968903,568.315491   C384.954742,569.205994 383.940613,570.096558 382.926483,570.987122   C382.433655,572.208008 381.940796,573.428833 381.175842,574.858643   C378.236694,574.331726 375.569611,573.595825 372.442444,572.464478   C371.272705,571.767090 370.563080,571.465149 369.853455,571.163269   C368.795288,571.038391 367.737152,570.913513 366.296204,570.469177   C364.999084,569.725647 364.084686,569.301575 363.170288,568.877563   C363.170288,568.877563 362.701233,568.708435 362.386353,568.320740   C360.699890,566.650391 359.328369,565.367676 357.956848,564.085022  z\",id:\"svg_704\"})),_path703||(_path703=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M579.496338,565.101196   C575.499023,563.030396 572.101685,564.324158 568.377014,565.678467   C568.353943,564.598572 568.684265,563.799316 569.074097,562.655396   C572.747925,556.973633 578.116943,559.033691 582.994751,559.022827   C582.656311,559.843933 582.317871,560.665100 581.831787,561.844543   C582.820312,561.629822 583.728882,561.432434 584.967224,561.197510   C583.476074,562.453552 581.655212,563.747253 579.496338,565.101196  z\",id:\"svg_705\"})),_path704||(_path704=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M357.532532,564.064941   C359.328369,565.367676 360.699890,566.650391 362.149719,568.242310   C358.918579,567.251221 355.609192,565.950928 352.147339,564.333801   C353.699341,564.026245 355.403778,564.035522 357.532532,564.064941  z\",id:\"svg_706\"})),_path705||(_path705=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M606.782166,550.174072   C607.363892,554.679871 605.929749,556.748291 603.048462,555.378540   C604.162659,553.472717 605.331299,551.907471 606.782166,550.174072  z\",id:\"svg_707\"})),_path706||(_path706=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M363.201477,569.232727   C364.084686,569.301575 364.999084,569.725647 366.022583,570.452087   C365.165375,570.365601 364.199036,569.976746 363.201477,569.232727  z\",id:\"svg_708\"})),_path707||(_path707=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M369.947205,571.472107   C370.563080,571.465149 371.272705,571.767090 372.077087,572.373230   C371.461548,572.378662 370.751251,572.079773 369.947205,571.472107  z\",id:\"svg_709\"})),_path708||(_path708=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M255.996948,831.975586   C256.310577,830.875549 256.624176,829.775452 256.974976,828.330750   C257.717163,828.927124 258.621033,829.779236 259.089355,830.826233   C260.417938,833.796265 261.557159,835.851013 265.682037,836.636292   C269.856354,837.431030 268.998260,842.760925 270.186737,846.159973   C269.728363,846.332031 269.269989,846.504150 268.811646,846.676208   C268.330383,845.313660 267.849121,843.951111 267.362762,842.574097   C264.656799,845.382141 264.656799,845.382141 268.298096,850.467712   C269.629364,850.170654 270.960602,849.873596 272.291840,849.576477   C272.439545,849.896667 272.587219,850.216858 272.734924,850.537109   C271.547516,851.870483 270.360107,853.203857 268.725922,855.038940   C267.452606,853.613342 266.200867,852.211914 264.838593,850.686768   C263.300446,851.863892 261.708130,853.082458 260.065247,854.641174   C255.951523,860.009094 253.196655,856.099243 250.094345,853.634521   C247.921982,851.908508 246.163177,848.293579 241.817001,850.771729   C242.733414,849.700867 243.649826,848.630066 245.169525,847.283936   C247.413681,845.853943 249.054535,844.699219 250.695374,843.544495   C250.728790,843.797119 250.762192,844.049683 250.795609,844.302246   C253.306900,843.689392 255.818207,843.076477 258.329498,842.463623   C257.903259,840.725769 257.447388,838.994507 257.059052,837.248230   C256.669922,835.498474 256.348206,833.733765 255.996948,831.975586  M264.390442,840.211975   C264.747284,840.261414 265.104126,840.310913 265.460938,840.360413   C265.463043,840.103821 265.465149,839.847290 265.467255,839.590698   C265.109131,839.629578 264.751038,839.668396 264.390442,840.211975  z\",id:\"svg_710\"})),_path709||(_path709=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M255.635559,831.905396   C256.348206,833.733765 256.669922,835.498474 257.059052,837.248230   C257.447388,838.994507 257.903259,840.725769 258.329498,842.463623   C255.818207,843.076477 253.306900,843.689392 250.795609,844.302246   C250.762192,844.049683 250.728790,843.797119 250.695374,843.544495   C249.054535,844.699219 247.413681,845.853943 245.375061,847.018799   C246.182266,841.354431 241.717987,842.618286 238.407242,841.981506   C238.010559,841.978149 238.003052,842.000000 237.880096,841.704590   C237.168884,840.275696 236.580612,839.142151 235.992340,838.008545   C237.062622,838.006226 238.132919,838.003906 239.653961,838.138000   C240.189941,838.325134 240.275146,838.375793 240.360352,838.426453   C240.237762,838.286255 240.115158,838.146057 239.992554,838.005859   C239.804016,836.562134 239.615463,835.118408 239.430420,833.701416   C240.704575,832.887390 241.920319,832.110718 243.179611,831.306213   C245.212753,832.403625 247.199051,833.475769 250.319366,835.160034   C249.060822,830.041931 248.026794,825.836975 246.983139,821.225037   C247.075378,820.040527 247.177261,819.263000 247.279129,818.485535   C247.627731,818.367371 247.976334,818.249207 248.324921,818.131042   C250.641342,822.699097 252.957748,827.267090 255.635559,831.905396  z\",id:\"svg_711\"})),_path710||(_path710=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M264.861328,865.745483   C266.080261,867.587402 267.300720,869.063904 268.043671,870.750732   C268.518890,871.829773 268.288727,873.219543 268.195129,874.734985   C266.109192,875.791565 264.202881,876.583069 261.942444,877.521729   C259.117676,874.564026 255.868286,871.161682 252.333145,867.460144   C251.800903,871.411011 251.406937,874.335510 251.006485,877.630005   C251.000000,878.000000 251.004303,877.995117 251.004303,877.995117   C249.936646,877.993469 248.868973,877.991760 247.400665,877.994995   C247.000000,878.000000 246.999390,878.000000 246.999390,878.000000   C247.160919,877.206238 247.063614,875.949097 247.524643,875.691589   C251.415970,873.518372 250.563446,871.636108 246.147766,869.770142   C250.777130,866.101257 254.658920,863.024902 258.569519,859.925659   C260.559784,861.737000 262.610168,863.603088 264.861328,865.745483  z\",id:\"svg_712\"})),_path711||(_path711=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M221.033600,860.967773   C223.052170,862.514954 225.070724,864.062195 227.172928,865.673523   C226.318451,867.459106 225.646667,868.862976 224.987427,870.633423   C225.000000,871.000000 225.011139,870.988098 225.011139,870.988098   C218.981369,870.841309 224.012161,867.917603 223.926437,866.490417   C222.899445,864.790771 221.980789,863.270508 221.030609,861.375610   C220.999084,861.001038 221.033585,860.967773 221.033600,860.967773  z\",id:\"svg_713\"})),_path712||(_path712=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M260.007080,855.354675   C262.602234,855.533813 265.186584,856.080505 267.770935,856.627136   C267.675629,857.084534 267.580353,857.541992 267.485046,857.999390   C266.351166,858.454163 265.217285,858.908875 264.046906,859.682556   C262.672394,858.575073 261.334351,857.148621 260.007080,855.354675  z\",id:\"svg_714\"})),_path713||(_path713=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M233.993225,864.993042   C234.760498,866.428650 235.527771,867.864197 236.258514,869.231384   C233.963196,869.596008 231.361603,870.009277 227.301422,870.654175   C229.830444,868.304443 231.570267,866.687988 233.655029,865.035767   C233.999969,865.000000 233.993225,864.993042 233.993225,864.993042  z\",id:\"svg_715\"})),_path714||(_path714=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M232.001221,874.000427   C232.567505,875.707275 233.133774,877.414185 233.700043,879.121033   C233.510193,879.390625 233.320343,879.660156 233.130493,879.929749   C231.432739,878.630676 229.735001,877.331604 228.037262,876.032532   C229.099350,875.363037 230.161469,874.693481 231.611786,874.011963   C232.000000,874.000000 232.001221,874.000427 232.001221,874.000427  z\",id:\"svg_716\"})),_path715||(_path715=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M220.981979,861.017822   C215.870667,858.246704 215.310104,856.923767 218.408081,854.173462   C219.308853,856.275940 220.171875,858.290283 221.034241,860.636230   C221.033585,860.967773 220.999084,861.001038 220.981979,861.017822  z\",id:\"svg_717\"})),_path716||(_path716=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M215.033218,869.017944   C216.012070,867.916992 216.990921,866.816040 217.985214,865.357178   C218.000656,864.999207 218.019180,864.980591 218.019180,864.980591   C220.581711,864.997986 222.077789,865.883911 219.962509,868.326416   C218.907852,869.544189 217.127762,870.133667 215.323044,870.673218   C214.991241,869.898743 215.012238,869.458313 215.033218,869.017944  z\",id:\"svg_718\"})),_path717||(_path717=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M214.688385,868.961182   C215.012238,869.458313 214.991241,869.898743 214.945190,870.669067   C214.920120,870.998962 214.459686,870.988464 213.980698,870.992432   C213.501709,870.996460 213.004211,870.993896 213.004211,870.993896   C211.635910,869.022156 210.267609,867.050354 208.899307,865.078613   C209.138687,864.930847 209.378067,864.783142 209.617447,864.635376   C211.192810,866.058411 212.768173,867.481445 214.688385,868.961182  z\",id:\"svg_719\"})),_path718||(_path718=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M238.471954,853.666016   C237.292297,852.729248 236.410294,851.943359 235.528290,851.157471   C235.794235,850.788391 236.060181,850.419312 236.326141,850.050293   C237.735565,850.984680 239.145004,851.919067 240.554443,852.853394   C239.959518,853.174622 239.364548,853.495850 238.471954,853.666016  z\",id:\"svg_720\"})),_path719||(_path719=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M207.979782,868.689697   C206.981796,867.531738 205.982666,866.146790 204.981339,864.379761   C205.965210,864.791748 206.951263,865.585815 207.969513,866.949524   C208.001709,867.519165 207.988632,868.009033 207.988632,868.009033   C207.988632,868.009033 207.978622,868.462769 207.979782,868.689697  z\",id:\"svg_721\"})),_path720||(_path720=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M212.559296,861.399170   C212.739609,860.468933 213.166550,859.794434 213.593491,859.119873   C214.001587,859.539734 214.409683,859.959656 214.817749,860.379578   C214.147141,860.804688 213.476532,861.229797 212.559296,861.399170  z\",id:\"svg_722\"})),_path721||(_path721=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M211.211060,856.029175   C210.303207,855.267334 209.653000,854.488525 209.003387,853.354858   C209.754776,852.996216 210.505569,852.992371 211.633392,853.370544   C212.001953,854.503052 211.993500,855.253601 211.985046,856.004150   C211.812943,856.006836 211.640823,856.009521 211.211060,856.029175  z\",id:\"svg_723\"})),_path722||(_path722=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M257.988342,879.572937   C257.649994,878.908630 257.619385,878.247803 257.588776,877.586914   C257.868347,877.590881 258.147919,877.594849 258.427490,877.598816   C258.383698,878.257996 258.339874,878.917175 257.988342,879.572937  z\",id:\"svg_724\"})),_path723||(_path723=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M247.000305,878.000000   C246.567032,878.885254 246.133469,879.770508 245.699921,880.655762   C245.345032,880.352356 244.990143,880.048950 244.635223,879.745605   C245.233841,879.240295 245.832443,878.734924 246.715225,878.114807   C246.999390,878.000000 247.000000,878.000000 247.000305,878.000000  z\",id:\"svg_725\"})),_path724||(_path724=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M233.386749,859.022095   C233.207504,859.680969 232.736862,860.308411 232.266220,860.935791   C231.994156,860.672607 231.722092,860.409363 231.450027,860.146179   C231.998474,859.760986 232.546921,859.375793 233.386749,859.022095  z\",id:\"svg_726\"})),_path725||(_path725=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M234.002991,865.003296   C234.562927,864.383545 235.119843,863.760376 235.676758,863.137268   C235.974045,863.420837 236.271317,863.704407 236.568604,863.987915   C235.941711,864.319519 235.314835,864.651062 234.340576,864.987854   C233.993225,864.993042 233.999969,865.000000 234.002991,865.003296  z\",id:\"svg_727\"})),_path726||(_path726=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M217.991241,865.008179   C217.264633,864.512878 216.547440,864.008606 215.830246,863.504395   C216.082809,863.214722 216.335358,862.924988 216.587906,862.635315   C217.048569,863.207703 217.509232,863.780029 217.994537,864.666504   C218.019180,864.980591 218.000656,864.999207 217.991241,865.008179  z\",id:\"svg_728\"})),_path727||(_path727=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M246.019684,872.739502   C245.831512,873.223328 245.448593,873.510132 245.065689,873.796997   C244.886520,873.425842 244.707336,873.054749 244.528137,872.683594   C244.960419,872.636597 245.392685,872.589539 246.019684,872.739502  z\",id:\"svg_729\"})),_path728||(_path728=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M212.244324,855.842896   C211.993500,855.253601 212.001953,854.503052 212.008865,853.377319   C212.763596,853.058960 213.519867,853.115845 214.544357,853.192810   C213.708237,854.212524 213.105896,854.947083 212.244324,855.842896  z\",id:\"svg_730\"})),_path729||(_path729=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M268.958618,867.764526   C268.330048,867.625549 267.671265,867.143005 266.945557,866.338135   C267.561859,866.484131 268.245148,866.952515 268.958618,867.764526  z\",id:\"svg_731\"})),_path730||(_path730=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M250.997711,878.002197   C251.515198,878.245789 252.046844,878.467468 252.536057,878.760010   C252.583786,878.788574 252.370010,879.254333 252.277618,879.517212   C251.876221,879.204468 251.474838,878.891785 251.038879,878.287109   C251.004303,877.995117 251.000000,878.000000 250.997711,878.002197  z\",id:\"svg_732\"})),_path731||(_path731=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M213.137848,849.305786   C213.599899,849.176270 214.165878,849.310669 214.913391,849.682007   C214.936234,850.344299 214.777542,850.769653 214.618835,851.195007   C214.159821,850.653259 213.700806,850.111450 213.137848,849.305786  z\",id:\"svg_733\"})),_path732||(_path732=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M224.993988,871.005493   C225.523819,871.239197 226.068222,871.451538 226.577942,871.727783   C226.615891,871.748352 226.404861,872.228210 226.309540,872.494629   C225.895340,872.188293 225.481140,871.881958 225.039047,871.281860   C225.011139,870.988098 225.000000,871.000000 224.993988,871.005493  z\",id:\"svg_734\"})),_path733||(_path733=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M231.999390,873.998779   C232.242432,873.536621 232.486069,873.075623 232.729675,872.614685   C232.941437,872.804626 233.153214,872.994568 233.364975,873.184448   C233.087784,873.452087 232.810577,873.719666 232.267303,873.993896   C232.001221,874.000427 232.000000,874.000000 231.999390,873.998779  z\",id:\"svg_735\"})),_path734||(_path734=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M248.091370,882.734375   C248.196823,882.234924 248.346893,881.973694 248.496948,881.712463   C248.647842,881.973694 248.978241,882.313354 248.906555,882.477295   C248.804764,882.710144 248.407166,882.813721 248.091370,882.734375  z\",id:\"svg_736\"})),_path735||(_path735=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M271.702972,869.015259   C271.875671,869.411987 271.772736,869.800354 271.669800,870.188782   C271.435730,869.968567 271.201660,869.748413 270.921753,869.272705   C271.059753,869.013672 271.243561,869.010315 271.702972,869.015259  z\",id:\"svg_737\"})),_path736||(_path736=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M214.292358,873.383179   C214.159180,873.550781 213.924561,873.575378 213.689972,873.599976   C213.856949,873.480042 214.023926,873.360107 214.292358,873.383179  z\",id:\"svg_738\"})),_path737||(_path737=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M213.091370,871.162415   C213.004211,870.993896 213.501709,870.996460 213.750458,870.995789   C213.725647,871.107056 213.452103,871.218994 213.091370,871.162415  z\",id:\"svg_739\"})),_path738||(_path738=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M254.448517,875.432373   C254.528778,875.379089 254.557480,875.591309 254.557480,875.591309   C254.557480,875.591309 254.368256,875.485596 254.448517,875.432373  z\",id:\"svg_740\"})),_path739||(_path739=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M208.158020,867.924683   C207.988632,868.009033 208.001709,867.519165 208.012360,867.274780   C208.192947,867.196472 208.376862,867.351929 208.519653,867.538757   C208.544510,867.571350 208.395889,867.736511 208.158020,867.924683  z\",id:\"svg_741\"})),_path740||(_path740=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M220.411423,853.571655   C220.349899,853.486816 220.583084,853.451721 220.583084,853.451721   C220.583084,853.451721 220.472946,853.656494 220.411423,853.571655  z\",id:\"svg_742\"})),_path741||(_path741=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M217.476929,852.448242   C217.529999,852.417603 217.423859,852.478882 217.476929,852.448242  z\",id:\"svg_743\"})),_path742||(_path742=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M208.890656,851.831116   C208.714630,851.873840 208.439255,851.673218 208.051300,851.239136   C208.222900,851.199829 208.507095,851.393799 208.890656,851.831116  z\",id:\"svg_744\"})),_path743||(_path743=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M209.954514,859.852905   C209.730469,859.864502 209.853867,859.382141 209.915100,859.139648   C210.155060,859.115356 210.340744,859.328796 210.496658,859.562134   C210.506882,859.577515 210.289856,859.744751 209.954514,859.852905  z\",id:\"svg_745\"})),_path744||(_path744=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M365.997253,705.529907   C363.086487,706.683105 360.105286,707.481262 357.052887,708.647339   C354.594757,707.993530 352.207794,706.971863 349.816071,705.948120   C352.032898,704.697266 354.280060,703.429321 356.527222,702.161316   C356.544312,701.520691 356.561401,700.880127 356.578522,700.239502   C359.694611,701.884583 362.810730,703.529724 365.997253,705.529907  z\",id:\"svg_746\"})),_path745||(_path745=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M363.008911,711.336365   C363.495270,710.399048 363.988281,709.818665 364.755463,709.136719   C365.010925,710.000305 365.141174,711.001587 364.918579,711.917114   C364.781281,712.481750 364.105896,712.915588 363.672058,713.408081   C363.453217,712.836487 363.234375,712.264893 363.008911,711.336365  z\",id:\"svg_747\"})),_path746||(_path746=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M379.999390,689.998779   C379.696747,690.508057 379.394684,691.018616 379.092621,691.529114   C378.882935,691.347412 378.673218,691.165649 378.463501,690.983948   C378.786377,690.679260 379.109253,690.374573 379.716675,690.035706   C380.001221,690.001526 380.000000,690.000000 379.999390,689.998779  z\",id:\"svg_748\"})),_path747||(_path747=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M352.954895,702.607544   C352.712616,702.211121 352.714203,701.816772 352.744385,701.424561   C352.745209,701.413574 353.051331,701.426025 353.215118,701.427551   C353.211029,701.821655 353.206909,702.215820 352.954895,702.607544  z\",id:\"svg_749\"})),_path748||(_path748=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M441.022705,249.003860   C440.112885,248.551102 439.203064,248.098343 438.177551,247.001099   C438.555084,243.833832 439.666473,242.780197 442.431244,243.879776   C443.356567,244.247818 444.792542,243.331848 446.353485,242.995422   C447.740723,242.130707 448.769623,241.273346 450.028290,240.224548   C450.226685,240.306366 451.073639,240.655609 452.291260,241.011795   C454.696228,239.872009 456.730560,238.725281 458.673370,237.630127   C459.495575,238.412308 460.303589,239.180954 461.275452,240.251099   C462.703583,242.346741 463.967834,244.140900 465.241394,245.948212   C468.706146,242.832062 468.041107,241.519348 461.953796,238.703705   C461.294800,235.866425 460.633484,233.427353 460.254517,230.805862   C461.646851,230.014969 462.756897,229.406464 464.396820,228.507477   C464.026062,234.025375 464.199097,238.417099 468.949005,240.920013   C469.702667,241.256561 470.519958,241.498688 471.194153,241.953110   C472.071655,242.544571 472.893005,243.254349 473.585571,244.046890   C473.687958,244.164047 472.950348,245.015305 472.601349,245.526947   C471.682953,244.851730 470.764587,244.176529 469.215118,243.037308   C469.458221,244.998108 469.639771,246.462158 469.832001,248.012497   C466.646912,249.547272 463.446747,251.089310 459.542816,252.970474   C459.167358,252.708115 458.080170,251.948425 456.992981,251.188721   C456.725098,251.542664 456.457214,251.896606 456.189331,252.250549   C457.856079,253.480743 457.447113,257.417450 461.716736,255.238876   C462.396912,254.891800 462.996033,254.385895 463.593475,253.980042   C466.193237,256.349762 468.550293,258.498199 471.152832,260.870453   C468.742401,262.584961 466.753082,263.999969 464.894745,265.321808   C466.530884,268.473877 471.080139,262.455444 470.661469,268.638550   C469.550201,269.334076 468.776733,269.668274 467.865540,270.056213   C467.817657,270.072083 467.907562,270.034210 468.295380,270.036987   C469.251312,270.451233 469.909302,270.824860 470.809235,271.335876   C470.874939,270.484131 470.932220,269.741455 470.989502,268.998749   C473.049438,269.988342 475.109406,270.977936 477.575378,272.330505   C477.987152,273.468445 477.992920,274.243408 477.625183,275.012207   C475.177124,276.013672 473.102600,277.021332 471.013245,278.013855   C470.998474,277.998718 470.968140,277.969055 470.962524,277.604309   C469.040253,275.475403 467.123566,273.711182 464.326935,271.137054   C465.914490,276.309387 466.985870,279.800049 468.057251,283.290710   C467.711487,283.541901 467.365723,283.793091 467.019958,284.044281   C465.680786,283.030304 464.341614,282.016357 462.895264,280.784515   C462.591125,280.294403 462.332764,280.106689 462.048645,279.628601   C462.299011,276.004883 462.513702,272.756104 462.794739,268.503601   C461.337677,270.162506 460.584137,271.020447 459.823364,271.886627   C456.377228,269.258331 453.259186,266.880280 450.042053,264.426636   C449.809967,265.523102 449.446564,267.239899 448.751221,268.942993   C443.911560,266.582062 439.403809,264.234802 435.081299,261.665955   C435.844299,260.959808 436.422089,260.475311 437.332428,259.941467   C438.063782,259.290833 438.489319,258.702942 438.811035,258.062897   C438.837067,258.011108 438.150818,257.601318 437.795563,257.357880   C437.533783,257.915833 437.271973,258.473785 436.622742,259.024139   C434.603149,258.452820 432.970978,257.889099 431.160492,257.263794   C430.169617,257.913513 428.979553,258.693848 427.383209,259.740570   C427.223969,258.198212 427.110901,257.103058 426.998657,255.673126   C426.999634,254.892044 426.999817,254.445801 427.292969,253.780106   C429.389893,253.041672 431.193848,252.522659 433.140808,252.335846   C433.490417,253.116806 433.618164,253.630005 433.920807,254.000183   C434.460022,254.659637 435.078949,255.265411 435.743805,255.793945   C435.815002,255.850525 436.760132,255.083664 436.709015,254.973938   C436.338531,254.178436 435.953217,253.284409 435.301331,252.756668   C434.714813,252.281830 433.783112,252.233444 433.113281,251.780823   C433.420685,251.295181 433.677704,251.106125 433.993896,250.997528   C436.111725,250.903030 438.229523,250.808517 441.039154,250.849106   C442.428131,250.362640 443.125305,249.741089 443.822510,249.119537   C442.889252,249.080978 441.955963,249.042419 441.022705,249.003860  M461.679413,259.907715   C462.108185,259.193542 462.536987,258.479340 462.965759,257.765167   C462.585236,257.590118 462.204712,257.415100 461.824188,257.240051   C461.549866,258.160431 461.275543,259.080841 460.367981,260.048859   C459.786407,260.499695 459.204834,260.950531 458.623260,261.401398   C458.913422,261.655701 459.203613,261.909973 459.493774,262.164276   C459.995453,261.442444 460.497131,260.720612 461.679413,259.907715  M454.258362,260.009064   C453.544098,260.485046 452.829803,260.961029 452.115540,261.437042   C452.652863,261.879059 453.190186,262.321106 453.727509,262.763123   C454.148895,261.839539 454.570282,260.915955 455.664459,259.886566   C455.970490,259.183655 456.276520,258.480743 456.582520,257.777832   C456.210663,257.648956 455.838776,257.520050 455.466888,257.391144   C455.314056,258.263611 455.161255,259.136047 454.258362,260.009064  M442.222504,254.783783   C442.351440,254.956757 442.480408,255.129715 442.609375,255.302673   C442.580658,255.059814 442.551971,254.816940 442.222504,254.783783  M472.523590,273.576569   C472.464966,273.809875 472.406311,274.043182 472.347656,274.276459   C472.493591,274.125916 472.639526,273.975372 472.523590,273.576569  M440.492065,255.609390   C440.492065,255.609390 440.415405,255.480484 440.492065,255.609390  z\",id:\"svg_750\"})),_path749||(_path749=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M546.955322,264.055725   C546.527893,264.059509 546.100403,264.063263 545.134460,263.780334   C543.272095,262.451996 541.948242,261.410370 540.321106,260.130127   C535.678589,261.709320 530.836487,263.356415 525.870361,264.712921   C525.495056,263.631012 525.243835,262.839691 524.998413,261.706726   C525.002747,260.910065 525.001404,260.455048 525.370850,259.992401   C526.501038,258.996002 527.260315,258.007202 528.383301,257.005371   C529.585083,256.147522 530.423035,255.302673 531.260986,254.457825   C530.966003,254.148468 530.670959,253.839096 530.375977,253.529739   C529.716675,253.905228 528.840454,254.133286 528.457642,254.696609   C528.053467,255.291382 528.119690,256.205872 527.610718,256.990662   C526.494019,258.000427 525.747009,259.000214 524.623901,259.998993   C523.495422,260.002014 522.743042,260.006012 521.994690,260.005432   C521.998718,260.000854 521.989624,260.011047 521.989624,260.011047   C523.982300,257.356140 525.607239,254.274857 528.062927,252.156769   C530.979919,249.640823 531.703491,247.887970 528.054932,245.343124   C527.999512,244.999985 527.991699,244.994995 528.287720,244.849701   C528.720032,243.469589 528.856323,242.234787 528.990845,240.753052   C528.989075,240.506119 528.978760,240.012314 529.088257,239.752106   C529.467163,238.997040 529.736511,238.502182 530.325195,237.960083   C531.097107,237.275406 531.549622,236.637970 532.002197,236.000549   C533.748047,236.909668 535.493958,237.818771 537.830322,239.035370   C536.124573,240.502640 535.218384,241.282089 534.312256,242.061523   C534.391052,242.391403 534.469849,242.721283 534.548645,243.051163   C535.677612,242.918991 536.810608,242.814438 537.934326,242.646988   C539.071655,242.477478 540.199646,242.245773 541.331726,242.041351   C540.800232,243.002945 540.480469,244.220139 539.692810,244.872574   C538.087646,246.202179 536.230347,247.227402 534.045166,248.661331   C536.428650,250.588089 538.440918,252.214844 540.752075,254.083176   C540.046997,255.367111 539.232300,256.850555 538.417603,258.333984   C538.595703,258.557861 538.773865,258.781738 538.952026,259.005615   C541.184509,257.414764 543.417053,255.823914 545.884460,254.065659   C546.608765,255.016586 547.245361,255.852341 548.443359,257.425140   C550.701599,252.501724 548.223022,248.409210 547.431091,245.701965   C552.486206,245.447815 556.872803,245.227264 561.490906,245.305374   C560.836548,246.730011 559.950745,247.855988 558.837158,249.271454   C560.352844,250.658295 561.657776,251.852264 562.962708,253.046249   C563.418091,253.676010 563.873474,254.305786 564.761414,255.198441   C565.394043,255.731125 565.647034,255.935394 565.952881,256.074158   C565.952881,256.074158 565.981934,256.539246 565.994141,257.113190   C566.013184,258.142456 566.020081,258.597778 566.052979,259.331238   C567.057617,259.743835 568.036133,259.878265 569.032959,260.317261   C569.386719,261.098206 569.722290,261.574585 570.014771,262.304016   C569.922791,262.721039 569.873840,262.885040 569.497009,263.214478   C567.121887,262.954285 564.615967,263.100555 563.162659,261.934662   C561.835571,260.870087 561.648315,258.384552 561.367432,257.627289   C558.577942,258.761627 555.761292,259.835876 553.006592,261.050598   C550.948120,261.958344 548.969482,263.047424 546.955322,264.055725  M532.692505,245.599228   C532.983215,245.383057 533.273926,245.166885 533.564636,244.950714   C533.387268,244.766159 533.209839,244.581604 533.032471,244.397049   C532.803284,244.677551 532.574158,244.958054 532.692505,245.599228  M532.483093,251.606323   C532.483093,251.606323 532.396790,251.471741 532.483093,251.606323  z\",id:\"svg_751\"})),_path750||(_path750=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M477.998657,275.018372   C477.992920,274.243408 477.987152,273.468445 477.963196,272.303955   C477.944977,271.914429 477.962616,271.468536 478.342102,271.236908   C479.812805,270.002197 480.903992,268.999084 482.311218,267.954224   C483.242889,267.207611 483.928223,266.551483 484.461517,265.789032   C486.386230,263.037109 488.404877,261.547821 490.867523,265.360352   C490.544281,266.497406 490.354645,267.342560 490.165009,268.187683   C490.555969,268.344360 490.946960,268.501038 491.337952,268.657684   C491.909393,267.429596 492.480835,266.201508 493.244446,264.960327   C493.436646,264.947235 493.821686,264.936798 494.155273,264.959106   C494.711517,264.970886 494.934174,264.960327 495.450256,264.998993   C496.180511,265.636108 496.617310,266.223999 496.881348,267.020996   C497.465698,267.074341 498.222809,266.918518 499.089569,266.594482   C499.379761,266.222473 499.597565,266.073151 499.852692,265.978210   C501.651489,265.091431 503.450287,264.204681 505.807922,263.042450   C504.998627,267.156311 504.304565,270.684265 503.338745,275.593536   C506.223145,273.060638 508.447510,271.107269 510.671906,269.153931   C511.046936,269.346313 511.421997,269.538696 511.797058,269.731079   C510.925201,271.296814 510.053345,272.862518 509.212646,274.787598   C509.243744,275.146942 509.183563,275.139526 508.961609,275.182861   C508.884094,275.463409 509.028503,275.700623 509.172913,275.937805   C509.201935,276.287201 509.230957,276.636627 508.860016,277.387329   C508.004791,277.865051 507.549500,277.941467 506.722046,277.989868   C505.015289,278.778778 503.680756,279.595673 502.195984,280.504486   C501.150513,280.109924 499.866547,279.625366 498.582611,279.140808   C498.399841,279.676666 498.217072,280.212555 498.034271,280.748444   C499.744568,281.243652 501.454865,281.738861 503.060120,282.574280   C501.673767,284.219818 500.392426,285.525146 498.772095,286.871124   C497.348663,286.693512 496.264221,286.475220 494.999054,286.011444   C491.867401,287.181061 488.916473,288.596222 485.751678,289.911804   C485.265411,289.632599 485.071411,289.390228 485.073242,288.806763   C485.449890,287.989960 485.709198,287.451447 486.129089,286.623840   C487.793304,284.598511 489.296936,282.862335 490.800568,281.126160   C488.944672,281.226166 487.695648,282.238861 486.274292,282.638275   C485.713623,282.795807 484.768738,281.585968 484.341736,280.962158   C486.122559,279.699432 487.560455,278.473297 488.998322,277.247162   C488.552094,276.835724 488.105835,276.424316 487.659576,276.012909   C486.440125,277.675690 485.220673,279.338440 483.656342,281.043274   C483.552185,283.039154 483.792877,284.992889 483.929321,287.170105   C483.638184,287.676300 483.387299,287.880157 482.859497,287.844543   C481.115234,288.839935 479.583801,289.995850 478.052368,291.151794   C477.669525,290.718658 477.286682,290.285492 476.903870,289.852356   C478.268036,288.424591 479.632172,286.996796 481.098236,285.462372   C480.008789,284.235413 479.083130,283.192963 478.542328,282.583923   C480.329559,280.225281 481.846039,278.223969 483.591400,275.920593   C480.944611,275.493622 479.471649,275.256012 477.998657,275.018372  M500.222382,271.002136   C500.891418,270.771362 501.560486,270.540619 502.229523,270.309845   C502.087799,269.927368 501.946045,269.544891 501.804291,269.162415   C501.244904,269.570404 500.685516,269.978363 500.222382,271.002136  z\",id:\"svg_752\"})),_path751||(_path751=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M532.169189,235.745575   C531.549622,236.637970 531.097107,237.275406 529.982910,237.924408   C527.888123,236.954483 526.455078,235.972992 524.842163,234.729645   C522.740967,234.721832 520.819519,234.975861 519.487366,235.151978   C521.702271,238.301178 523.414062,240.735001 525.823975,244.161438   C523.305725,243.174393 521.689819,242.541016 519.899536,241.672180   C519.178955,241.259369 518.632751,241.082047 518.036987,240.564178   C515.776733,235.045288 515.006042,241.669937 513.788879,241.035675   C512.216553,240.144501 511.103210,239.513489 509.882690,238.689590   C509.583313,238.257339 509.339874,238.094513 509.037109,237.632507   C509.020142,236.505371 509.011292,235.753906 509.346863,234.998871   C510.303467,234.657990 510.915619,234.320663 511.527802,233.983337   C511.228088,233.694534 510.928406,233.405731 510.628662,233.116913   C510.084961,233.743790 509.541260,234.370667 508.651733,235.030304   C506.520081,237.042053 504.734192,239.021027 502.948303,241.000000   C502.159668,240.904007 501.371033,240.808014 500.630005,240.717819   C501.653778,237.778931 502.586548,235.101395 503.087341,231.932800   C501.435303,230.289352 500.215210,229.136963 498.995148,227.984573   C498.995148,227.984573 498.996887,227.998413 499.004395,228.001038   C500.414001,227.669617 501.816101,227.335587 503.610382,227.002197   C504.002594,227.002853 504.013519,227.013855 504.071320,227.265015   C504.420471,227.678528 504.711823,227.840866 505.001587,228.001602   C505.000000,228.000000 504.997864,227.997757 504.997864,227.997742   C505.910187,229.273254 506.822510,230.548767 507.734833,231.824295   C508.975830,230.193909 510.309296,228.623199 511.416992,226.906784   C511.934723,226.104568 512.015869,225.020630 512.649048,224.344604   C513.536438,225.625977 514.069702,226.627121 514.252258,226.969849   C516.218445,225.747650 517.623413,224.874359 519.028320,224.001053   C519.437134,224.916336 519.845947,225.831604 520.254761,226.746887   C520.842834,225.991669 521.481323,225.269485 522.004272,224.471619   C522.489624,223.731110 522.851562,222.909790 523.633301,222.051743   C524.710083,223.713303 525.421509,225.447174 526.132874,227.181061   C526.581421,227.026489 527.030029,226.871902 527.478577,226.717331   C527.403503,225.380371 527.328430,224.043427 527.253357,222.706467   C527.792297,222.492325 528.331238,222.278183 528.870178,222.064041   C529.916931,224.818909 530.963684,227.573792 531.757141,230.845276   C531.680542,231.806213 531.857300,232.250534 532.033997,232.694839   C532.690674,232.148941 533.347351,231.603058 534.004028,231.057205   C534.648804,229.925934 535.293518,228.794632 536.293945,227.370483   C536.079041,229.045197 535.508362,231.012772 534.937744,232.980377   C534.070618,233.817123 533.203369,234.653854 532.169189,235.745575  M517.592102,228.518890   C517.592102,228.518890 517.477234,228.588379 517.592102,228.518890  z\",id:\"svg_753\"})),_path752||(_path752=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M468.969482,240.540466   C464.199097,238.417099 464.026062,234.025375 464.396820,228.507477   C462.756897,229.406464 461.646851,230.014969 460.053070,230.805283   C459.569305,230.987106 459.165802,230.978714 459.165802,230.978714   C459.990997,229.430542 460.486572,227.524841 461.704102,226.402206   C465.150238,223.224777 465.752441,219.695435 464.129700,215.468857   C463.840668,214.716049 464.213318,213.709213 464.280426,212.819672   C464.736877,212.722382 465.193329,212.625076 465.649780,212.527786   C467.034515,217.107605 468.419250,221.687439 469.804016,226.267258   C470.004364,226.308105 470.204681,226.348953 470.405029,226.389801   C470.948395,219.899582 471.491730,213.409348 472.046692,206.491058   C472.844727,205.993622 473.631165,205.924286 474.671570,206.386429   C474.629425,210.382690 474.333282,213.847458 474.037170,217.312241   C474.590027,217.341629 475.142883,217.371017 475.695740,217.400406   C475.824585,215.957428 475.953400,214.514465 476.082214,213.071487   C477.459839,213.703751 478.837463,214.335999 480.534698,215.040161   C481.063202,215.654953 481.272095,216.197830 481.739136,216.889008   C481.997253,217.037292 481.996277,217.008011 482.093018,217.240295   C482.398590,217.741013 482.668213,217.915695 482.998566,217.996628   C482.616180,221.018570 482.702606,224.134491 479.428711,226.050781   C478.814575,226.410233 479.340820,228.717972 479.340820,230.440857   C478.486237,230.137039 477.555969,229.806320 476.234711,229.336609   C476.336700,230.980362 476.419769,232.319199 476.566681,234.687057   C474.861145,233.176285 473.906250,232.330429 473.128815,231.641785   C471.635956,232.779343 470.183075,233.886429 468.311157,234.860672   C467.808014,234.678436 467.723877,234.629013 467.639740,234.579590   C467.760651,234.719070 467.881531,234.858551 468.002441,234.998032   C468.331635,236.718994 468.660828,238.439957 468.969482,240.540466  z\",id:\"svg_754\"})),_path753||(_path753=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M493.821686,264.936798   C493.821686,264.936798 493.436646,264.947235 492.902008,264.979340   C491.911957,265.030457 491.456543,265.049469 491.001129,265.068481   C488.404877,261.547821 486.386230,263.037109 484.461517,265.789032   C483.928223,266.551483 483.242889,267.207611 482.064026,268.049805   C480.687195,268.121918 479.873688,268.056732 479.060150,267.991547   C478.500122,267.775024 477.952057,267.517670 477.377808,267.349792   C475.825043,266.895905 474.118896,266.709717 472.798798,265.892212   C472.456390,265.680145 473.267639,263.528412 473.622620,262.288727   C473.970612,261.073364 474.412384,259.884827 474.812988,258.684509   C475.304932,258.726685 475.796875,258.768829 476.288788,258.810974   C476.155548,260.349976 476.022278,261.888977 475.889008,263.427979   C476.102875,263.624268 476.316742,263.820557 476.530609,264.016846   C477.376007,262.792511 478.502930,261.675323 479.016785,260.324890   C480.970581,255.190063 483.117096,254.783035 487.289795,258.350037   C488.999146,259.811218 490.402283,263.609528 493.932343,260.346680   C494.000244,259.999634 494.016724,259.982758 494.016724,259.982758   C495.196014,260.952484 496.375275,261.922211 497.199066,262.599609   C499.002899,261.643494 500.587219,260.803772 502.584412,259.980896   C502.997345,259.997711 503.043671,260.044312 503.043671,260.044312   C502.004059,261.781891 500.964447,263.519440 499.888794,265.617615   C499.597565,266.073151 499.379761,266.222473 498.769806,266.643005   C497.911652,266.843842 497.482880,266.827850 497.054138,266.811859   C496.617310,266.223999 496.180511,265.636108 495.398132,264.736877   C494.913330,264.183807 494.774109,263.942047 494.634918,263.700317   C494.363831,264.112488 494.092773,264.524628 493.821686,264.936798  z\",id:\"svg_755\"})),_path754||(_path754=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M524.992676,262.048340   C525.243835,262.839691 525.495056,263.631012 525.668823,264.968323   C524.229370,265.514313 522.867310,265.514313 520.996582,265.514313   C521.863770,266.592133 522.435120,267.302155 523.006409,268.012207   C520.930115,269.001587 518.853882,269.990967 516.388794,270.992065   C516.865356,269.707275 517.730652,268.410706 518.523987,267.222015   C516.944336,265.286011 515.383850,263.373413 513.986572,261.660980   C516.680420,261.093811 518.986328,260.608307 521.640930,260.066895   C521.989624,260.011047 521.998718,260.000854 522.045532,260.352570   C523.059143,261.152313 524.025940,261.600311 524.992676,262.048340  z\",id:\"svg_756\"})),_path755||(_path755=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M520.073853,241.907639   C521.689819,242.541016 523.305725,243.174393 525.823975,244.161438   C523.414062,240.735001 521.702271,238.301178 519.487366,235.151978   C520.819519,234.975861 522.740967,234.721832 524.832031,234.974365   C525.001770,235.480942 524.993713,235.970566 524.687378,236.005539   C524.574890,236.726822 524.768616,237.413147 525.160339,238.331329   C526.220764,239.026733 527.083313,239.490265 527.778442,240.055450   C527.725281,240.450546 527.839539,240.743988 527.964661,241.433136   C527.980957,242.884247 527.986328,243.939621 527.991699,244.994995   C527.991699,244.994995 527.999512,244.999985 527.995728,244.995560   C525.243713,244.990524 522.495483,244.989914 519.373657,244.994446   C519.000000,244.999557 518.995117,244.993896 519.022095,244.681854   C519.342346,243.597229 519.635742,242.824646 519.966919,242.017578   C520.004700,241.983078 520.073853,241.907639 520.073853,241.907639  z\",id:\"svg_757\"})),_path756||(_path756=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M509.989899,238.882477   C511.103210,239.513489 512.216553,240.144501 513.788879,241.035675   C515.006042,241.669937 515.776733,235.045288 518.006653,240.601212   C518.025879,240.978790 517.971619,241.057632 517.656250,241.184677   C516.560303,242.541550 515.779663,243.771378 514.999512,245.000610   C515.000000,245.000000 515.000854,244.998779 515.000854,244.998779   C513.532776,245.505096 512.064636,246.011414 510.666992,246.493439   C509.381805,245.690491 508.067078,244.869064 506.376923,244.024658   C506.001495,244.001678 505.972015,243.973145 505.972015,243.973145   C505.983704,243.229340 505.995422,242.485519 506.003571,241.370850   C506.000000,241.000000 505.997284,241.001938 506.378387,241.002441   C507.836273,240.296127 508.913086,239.589294 509.989899,238.882477  z\",id:\"svg_758\"})),_path757||(_path757=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M484.429382,235.449387   C484.631927,237.554840 478.782440,236.754028 482.278748,240.685226   C480.786621,239.610123 479.294525,238.535034 477.671539,237.365646   C478.782043,235.772339 479.781952,234.337677 481.030884,232.545700   C482.037903,233.374252 483.142517,234.283096 484.429382,235.449387  z\",id:\"svg_759\"})),_path758||(_path758=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M486.128052,244.004715   C487.389709,244.643600 488.357391,245.124039 490.316498,246.096710   C487.539856,246.793854 485.695770,247.256851 483.851715,247.719849   C483.672913,245.958893 483.494110,244.197922 483.238312,241.678574   C484.609467,242.823608 485.221771,243.334946 486.128052,244.004715  z\",id:\"svg_760\"})),_path759||(_path759=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M509.002441,235.002441   C509.011292,235.753906 509.020142,236.505371 508.709930,237.667328   C507.593048,239.052521 506.795166,240.027237 505.997284,241.001938   C505.997284,241.001938 506.000000,241.000000 506.001038,240.998932   C505.239410,240.999283 504.476685,241.000717 503.331146,241.001083   C504.734192,239.021027 506.520081,237.042053 508.652954,235.031525   C509.000000,235.000000 509.002441,235.002441 509.002441,235.002441  z\",id:\"svg_761\"})),_path760||(_path760=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M499.001160,228.384338   C500.215210,229.136963 501.435303,230.289352 502.841797,231.722473   C500.648010,232.229080 498.690765,231.926636 499.001160,228.384338  z\",id:\"svg_762\"})),_path761||(_path761=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M478.917358,268.285217   C479.873688,268.056732 480.687195,268.121918 481.747925,268.091522   C480.903992,268.999084 479.812805,270.002197 478.356201,271.014221   C478.252075,270.208405 478.513336,269.393616 478.917358,268.285217  z\",id:\"svg_763\"})),_path762||(_path762=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M486.321655,240.862213   C486.296570,240.213623 486.598816,239.643112 486.901062,239.072601   C487.409698,239.343658 487.918304,239.614716 488.426941,239.885773   C487.834290,240.237274 487.241669,240.588776 486.321655,240.862213  z\",id:\"svg_764\"})),_path763||(_path763=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M519.002441,245.002960   C518.162109,247.746704 516.838440,247.769867 515.071655,245.344421   C515.000854,244.998779 515.000000,245.000000 515.399170,244.992111   C516.863953,244.987442 517.929504,244.990662 518.995117,244.993896   C518.995117,244.993896 519.000000,244.999557 519.002441,245.002960  z\",id:\"svg_765\"})),_path764||(_path764=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M502.973816,259.974792   C503.384399,259.080353 503.818542,258.208832 504.252686,257.337311   C504.691895,257.733704 505.131073,258.130096 505.570251,258.526489   C504.955902,259.017365 504.341553,259.508270 503.385437,260.021729   C503.043671,260.044312 502.997345,259.997711 502.973816,259.974792  z\",id:\"svg_766\"})),_path765||(_path765=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M493.991882,260.007843   C492.794312,259.418396 491.605103,258.820770 490.415863,258.223114   C490.683350,257.803589 490.950867,257.384064 491.218353,256.964508   C492.125610,257.744598 493.032898,258.524689 493.978455,259.643768   C494.016724,259.982758 494.000244,259.999634 493.991882,260.007843  z\",id:\"svg_767\"})),_path766||(_path766=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M506.015930,244.016296   C505.514160,244.993576 504.997955,245.956253 504.481750,246.918930   C504.064392,246.615112 503.647064,246.311295 503.229706,246.007477   C503.929047,245.359344 504.628387,244.711197 505.649872,244.018097   C505.972015,243.973145 506.001495,244.001678 506.015930,244.016296  z\",id:\"svg_768\"})),_path767||(_path767=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M497.547729,234.397583   C497.608093,233.925690 497.845276,233.637451 498.082458,233.349213   C498.261902,233.538452 498.441376,233.727707 498.620850,233.916962   C498.322083,234.138382 498.023315,234.359802 497.547729,234.397583  z\",id:\"svg_769\"})),_path768||(_path768=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M507.723175,267.096863   C507.808929,267.399414 507.716125,267.799133 507.497009,267.888245   C507.322327,267.959259 506.993591,267.651337 506.733215,267.511597   C506.985504,267.361053 507.237823,267.210541 507.723175,267.096863  z\",id:\"svg_770\"})),_path769||(_path769=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M482.890808,217.778625   C482.668213,217.915695 482.398590,217.741013 482.089783,217.249481   C482.318970,217.108353 482.583374,217.286423 482.890808,217.778625  z\",id:\"svg_771\"})),_path770||(_path770=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M535.004517,219.363953   C537.264954,220.646332 539.537231,222.302231 542.378906,224.373093   C542.457458,222.677017 542.503967,221.673386 542.507202,221.603516   C545.006226,221.018097 547.132019,220.520126 549.624207,220.017685   C549.990662,220.013199 549.998108,220.000031 550.015503,220.349457   C551.352478,221.803253 552.672119,222.907608 553.991760,224.011963   C553.991760,224.011963 554.000000,224.000000 553.987976,224.419373   C553.980347,226.222321 553.984741,227.605927 553.989136,228.989517   C553.989136,228.989517 554.000000,229.000000 553.622681,228.990692   C551.242859,226.938736 549.240295,224.896088 547.237793,222.853424   C546.702759,223.348557 546.167786,223.843674 545.632812,224.338806   C548.417114,227.228745 551.201355,230.118698 553.985657,233.008652   C553.985657,233.008652 554.000000,233.000000 554.019592,233.364471   C554.362549,234.865829 554.685852,236.002716 554.668640,237.110443   C552.012390,238.105728 549.085266,238.472687 549.070007,241.970917   C547.718079,240.563416 546.366150,239.155930 545.303223,237.340195   C545.881592,236.497543 546.170959,236.063156 546.460327,235.628784   C545.640259,236.086670 544.820129,236.544556 544.000000,237.002441   C543.004456,236.567825 542.008911,236.133224 541.383057,235.301834   C544.872375,233.611893 544.053345,231.626312 542.468567,229.468475   C541.982483,231.309769 541.496399,233.151047 541.010254,234.992340   C540.465088,234.743179 539.919800,234.494019 538.922729,233.935440   C541.655579,227.732361 541.191772,226.166153 535.021729,221.978653   C535.019897,221.231583 535.018127,220.484528 535.004517,219.363953  z\",id:\"svg_772\"})),_path771||(_path771=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M547.240601,264.304199   C548.969482,263.047424 550.948120,261.958344 553.006592,261.050598   C555.761292,259.835876 558.577942,258.761627 561.367432,257.627289   C561.648315,258.384552 561.835571,260.870087 563.162659,261.934662   C564.615967,263.100555 567.121887,262.954285 569.565247,263.508606   C571.635559,263.435028 573.309692,263.232727 574.983826,263.030426   C576.229309,265.435913 576.845581,268.861603 580.955566,266.342468   C581.895996,266.290680 583.522766,266.484436 583.579590,266.895355   C583.994202,269.892334 585.555786,270.980560 588.512939,271.310394   C589.454773,271.415466 590.147461,273.754059 590.954468,275.438843   C587.038696,274.219238 583.197510,272.399597 579.187439,271.102020   C574.143005,269.469757 568.932922,268.355988 563.849976,266.833008   C561.615417,266.163483 559.578491,264.494385 557.344116,264.245270   C554.122864,263.886108 550.803467,264.407227 547.240601,264.304199  z\",id:\"svg_773\"})),_path772||(_path772=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M582.025696,254.835648   C581.602112,253.789658 581.178528,252.743652 580.674194,251.498245   C589.576782,248.435257 577.858154,245.771591 580.856873,242.240814   C581.865479,242.975403 582.913940,243.739059 583.939514,244.486023   C584.588501,242.891510 585.245728,241.276688 585.951233,239.331146   C585.999451,239.000427 586.002441,238.997559 586.321960,238.998932   C587.066467,239.004288 587.491394,239.008286 588.100952,239.261185   C589.190369,240.010986 590.095154,240.511887 591.000000,241.012787   C591.000000,241.012787 591.001099,240.999115 591.097778,241.226074   C591.465271,241.639893 591.736023,241.826752 592.006775,242.013596   C592.006775,242.013596 592.001587,241.999130 592.001465,242.350357   C591.650818,243.799530 591.300293,244.897461 590.695312,246.114594   C589.956848,246.790543 589.472778,247.347321 588.674866,247.965271   C587.942261,248.673355 587.523438,249.320282 586.729126,250.043854   C585.901550,251.750107 585.449585,253.379715 584.625793,254.991531   C583.511230,254.927719 582.768494,254.881683 582.025696,254.835648  z\",id:\"svg_774\"})),_path773||(_path773=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M591.834534,255.125732   C592.441833,255.593918 593.049194,256.062103 593.824585,256.766968   C593.987488,257.442383 593.982361,257.881134 593.980957,258.906250   C593.987366,259.663940 593.990051,259.835266 593.992676,260.006531   C591.839905,260.352509 589.659241,260.580139 587.542480,261.078796   C585.560852,261.545624 583.646851,262.299591 581.349609,262.965576   C582.329895,260.918976 583.663635,258.833954 584.998718,256.374451   C585.000000,256.000000 585.002441,255.997543 585.390442,255.972015   C587.797119,255.672897 589.815857,255.399323 591.834534,255.125732  z\",id:\"svg_775\"})),_path774||(_path774=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M563.335144,253.027206   C561.657776,251.852264 560.352844,250.658295 558.837158,249.271454   C559.950745,247.855988 560.836548,246.730011 561.864258,245.304596   C562.006042,245.005142 562.000000,245.000763 562.372681,245.008621   C564.490295,245.679016 566.235291,246.341553 567.980286,247.004089   C567.980286,247.004089 567.997437,247.002701 567.999084,247.358032   C568.650330,248.448914 569.299866,249.184464 569.949463,249.920044   C570.612793,251.053741 571.276123,252.187439 571.969727,253.660583   C572.000000,254.000000 571.997559,254.003052 571.997559,254.003052   C570.617615,253.277527 569.237732,252.552032 567.488037,251.632126   C566.601257,251.954910 565.154419,252.481537 563.335144,253.027206  z\",id:\"svg_776\"})),_path775||(_path775=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M535.010254,221.989960   C541.191772,226.166153 541.655579,227.732361 538.629272,233.874207   C537.606750,233.934357 536.425842,233.746292 535.091309,233.269302   C535.508362,231.012772 536.079041,229.045197 536.322144,227.035980   C535.994629,226.994339 536.000000,227.000458 535.974243,226.635864   C535.624573,224.855225 535.300720,223.439194 534.976929,222.023148   C534.976929,222.023148 534.998840,222.001251 535.010254,221.989960  z\",id:\"svg_777\"})),_path776||(_path776=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M555.009216,237.139618   C554.685852,236.002716 554.362549,234.865829 554.015564,233.371338   C556.395325,235.026611 558.798706,237.039490 562.438293,240.087677   C559.606506,240.546021 558.212585,240.771637 556.380493,240.652679   C555.631287,239.251938 555.320251,238.195786 555.009216,237.139618  z\",id:\"svg_778\"})),_path777||(_path777=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M553.995300,232.606812   C551.201355,230.118698 548.417114,227.228745 545.632812,224.338806   C546.167786,223.843674 546.702759,223.348557 547.237793,222.853424   C549.240295,224.896088 551.242859,226.938736 553.617065,228.985382   C553.994080,230.061249 553.999512,231.133102 553.995300,232.606812  z\",id:\"svg_779\"})),_path778||(_path778=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M575.180664,262.750488   C573.309692,263.232727 571.635559,263.435028 569.893188,263.343201   C569.873840,262.885040 569.922791,262.721039 570.256226,262.128052   C570.699097,261.134308 570.857300,260.569580 571.015564,260.004883   C573.112366,259.026794 575.209229,258.048706 577.649963,257.286194   C577.993896,257.501770 577.976807,258.001221 577.976807,258.001221   C577.110352,259.490997 576.243896,260.980804 575.180664,262.750488  z\",id:\"svg_780\"})),_path779||(_path779=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M554.668640,237.110443   C555.320251,238.195786 555.631287,239.251938 555.978210,240.641571   C553.960510,241.312378 551.906860,241.649719 549.461670,241.978973   C549.085266,238.472687 552.012390,238.105728 554.668640,237.110443  z\",id:\"svg_781\"})),_path780||(_path780=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M567.953491,246.645966   C566.235291,246.341553 564.490295,245.679016 562.375122,245.012238   C562.433228,243.736633 562.861572,242.465286 563.289917,241.193924   C564.336121,242.063980 565.467712,242.852798 566.399414,243.831833   C567.050171,244.515717 567.427368,245.459930 567.953491,246.645966  z\",id:\"svg_782\"})),_path781||(_path781=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M562.703735,226.431183   C561.730591,227.476562 560.905518,228.198471 560.080383,228.920380   C559.756104,228.731766 559.431824,228.543152 559.107544,228.354538   C559.969849,226.449112 560.832153,224.543701 561.694458,222.638290   C562.019470,222.661484 562.344421,222.684662 562.669373,222.707855   C562.730164,223.841141 562.790894,224.974411 562.703735,226.431183  z\",id:\"svg_783\"})),_path782||(_path782=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M554.361328,228.928116   C553.984741,227.605927 553.980347,226.222321 553.981812,224.423798   C554.435791,224.006210 554.883911,224.003571 555.666016,224.000458   C556.000000,224.000000 555.995911,223.996063 555.995911,223.996063   C555.575073,225.619614 555.154297,227.243164 554.361328,228.928116  z\",id:\"svg_784\"})),_path783||(_path783=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M553.963135,223.666412   C552.672119,222.907608 551.352478,221.803253 550.010010,220.353302   C551.302917,221.112106 552.618713,222.216476 553.963135,223.666412  z\",id:\"svg_785\"})),_path784||(_path784=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M574.186401,244.882599   C573.696167,245.765579 572.967102,246.408432 572.238037,247.051285   C571.907043,246.502075 571.576111,245.952881 571.245117,245.403687   C572.145935,245.149948 573.046692,244.896210 574.186401,244.882599  z\",id:\"svg_786\"})),_path785||(_path785=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M566.026917,259.053101   C566.020081,258.597778 566.013184,258.142456 566.009277,257.345703   C567.030762,257.019470 568.049255,257.034698 569.581604,257.293762   C570.369019,257.746796 570.642578,257.955994 570.916199,258.165192   C570.803772,258.424927 570.629578,258.632965 569.806885,258.880859   C568.155701,258.999298 567.091309,259.026215 566.026917,259.053101  z\",id:\"svg_787\"})),_path786||(_path786=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M556.002014,224.001984   C556.416565,223.120300 556.829102,222.236649 557.241577,221.352997   C557.692566,221.751526 558.143494,222.150055 558.594482,222.548584   C557.961487,223.030380 557.328430,223.512177 556.345703,223.995026   C555.995911,223.996063 556.000000,224.000000 556.002014,224.001984  z\",id:\"svg_788\"})),_path787||(_path787=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M566.459717,236.421860   C565.606140,235.719147 564.972961,234.808105 564.339722,233.897049   C564.691772,233.689972 565.043762,233.482895 565.395752,233.275818   C565.823914,234.255051 566.252075,235.234283 566.459717,236.421860  z\",id:\"svg_789\"})),_path788||(_path788=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M580.668213,263.042236   C581.007874,263.746674 581.011902,264.497498 581.007385,265.623535   C580.776794,265.028717 580.554749,264.058624 580.668213,263.042236  z\",id:\"svg_790\"})),_path789||(_path789=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M569.960876,249.575104   C569.299866,249.184464 568.650330,248.448914 567.998413,247.366394   C568.654785,247.756363 569.313538,248.493271 569.960876,249.575104  z\",id:\"svg_791\"})),_path790||(_path790=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M572.001221,253.998474   C572.860840,254.159256 573.719299,254.321579 574.577698,254.483887   C574.448059,254.851242 574.318420,255.218582 574.188782,255.585938   C573.489929,255.281723 572.791138,254.977509 572.044922,254.338165   C571.997559,254.003052 572.000000,254.000000 572.001221,253.998474  z\",id:\"svg_792\"})),_path791||(_path791=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M544.252441,237.004593   C544.820129,236.544556 545.640259,236.086670 546.460327,235.628784   C546.170959,236.063156 545.881592,236.497543 545.301025,236.973389   C544.841492,237.012131 544.673157,237.009430 544.252441,237.004593  z\",id:\"svg_793\"})),_path792||(_path792=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M566.052979,259.331268   C567.091309,259.026215 568.155701,258.999298 569.620728,258.968872   C570.021423,258.965332 569.996460,259.457764 569.746948,259.723450   C569.497437,259.989105 569.014648,260.012726 569.014648,260.012695   C568.036133,259.878265 567.057617,259.743835 566.052979,259.331268  z\",id:\"svg_794\"})),_path793||(_path793=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M558.481812,230.602020   C558.425171,231.067474 558.194336,231.350922 557.963501,231.634369   C557.785034,231.447708 557.606628,231.261047 557.428223,231.074402   C557.721313,230.856262 558.014465,230.638138 558.481812,230.602020  z\",id:\"svg_795\"})),_path794||(_path794=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M566.183960,255.912659   C565.647034,255.935394 565.394043,255.731125 565.076660,255.245255   C565.461121,254.855286 565.962830,254.681381 566.464539,254.507477   C566.448059,254.922028 566.431580,255.336594 566.183960,255.912659  z\",id:\"svg_796\"})),_path795||(_path795=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M569.032959,260.317291   C569.014648,260.012726 569.497437,259.989105 569.738159,259.969788   C570.151550,259.961426 570.324158,259.972351 570.756165,259.994080   C570.857300,260.569580 570.699097,261.134308 570.299316,261.874969   C569.722290,261.574585 569.386719,261.098206 569.032959,260.317291  z\",id:\"svg_797\"})),_path796||(_path796=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M578.279785,258.023499   C577.976807,258.001221 577.993896,257.501770 578.003662,257.252106   C578.899902,257.127563 579.786316,257.252686 580.672668,257.377808   C580.642090,257.660187 580.611450,257.942566 580.580811,258.224945   C579.914795,258.165222 579.248718,258.105499 578.279785,258.023499  z\",id:\"svg_798\"})),_path797||(_path797=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M582.182617,255.146927   C582.768494,254.881683 583.511230,254.927719 584.624023,255.238556   C584.994080,255.503342 585.002441,255.997543 585.002441,255.997543   C585.002441,255.997543 585.000000,256.000000 584.998779,256.001099   C584.111572,255.820877 583.225586,255.639542 582.182617,255.146927  z\",id:\"svg_799\"})),_path798||(_path798=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M585.022827,237.286880   C585.004883,236.987061 585.495972,237.038254 585.744995,237.384186   C585.996826,238.152603 585.999634,238.575073 586.002441,238.997559   C586.002441,238.997559 585.999451,239.000427 585.995239,239.003281   C585.674194,238.532990 585.357422,238.059845 585.022827,237.286880  z\",id:\"svg_800\"})),_path799||(_path799=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M575.470093,248.446259   C575.523865,248.414520 575.416321,248.478012 575.470093,248.446259  z\",id:\"svg_801\"})),_path800||(_path800=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M563.456421,231.440582   C563.522583,231.398453 563.390198,231.482712 563.456421,231.440582  z\",id:\"svg_802\"})),_path801||(_path801=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M564.430908,238.534668   C564.383484,238.463486 564.575439,238.443024 564.575439,238.443024   C564.575439,238.443024 564.478333,238.605850 564.430908,238.534668  z\",id:\"svg_803\"})),_path802||(_path802=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M559.461060,242.449127   C559.516907,242.415222 559.405212,242.483032 559.461060,242.449127  z\",id:\"svg_804\"})),_path803||(_path803=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M565.008789,229.010376   C564.909851,229.048615 564.802490,229.077332 564.838013,229.045715   C564.980774,228.985397 565.000366,229.000870 565.008789,229.010376  z\",id:\"svg_805\"})),_path804||(_path804=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M570.841797,257.895874   C570.642578,257.955994 570.369019,257.746796 569.963440,257.312561   C570.143494,257.267212 570.455444,257.446899 570.841797,257.895874  z\",id:\"svg_806\"})),_path805||(_path805=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M578.449707,259.533844   C578.416565,259.478119 578.482849,259.589569 578.449707,259.533844  z\",id:\"svg_807\"})),_path806||(_path806=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M519.304932,223.756256   C517.623413,224.874359 516.218445,225.747650 514.252258,226.969849   C514.069702,226.627121 513.536438,225.625977 512.991821,224.281158   C512.152344,219.137695 511.324280,214.337906 510.496185,209.538116   C510.976410,209.389862 511.456665,209.241592 511.936890,209.093338   C512.868713,211.853348 513.800598,214.613373 514.793457,217.554184   C521.079407,216.895721 514.584778,212.646271 516.449524,210.783386   C521.564453,214.804581 521.993835,216.549500 519.304932,223.756256  z\",id:\"svg_808\"})),_path807||(_path807=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M503.997437,226.997253   C505.670013,223.914124 507.347778,220.836609 508.923859,217.945587   C510.696167,220.971069 508.804749,227.500671 505.334961,228.013458   C504.997864,227.997757 505.000000,228.000000 504.940491,227.751404   C504.591858,227.339813 504.302673,227.176834 504.013519,227.013855   C504.013519,227.013855 504.002594,227.002853 503.997437,226.997253  z\",id:\"svg_809\"})),_path808||(_path808=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M501.998596,204.000992   C503.770966,206.580612 505.544708,209.159241 507.318481,211.737854   C502.117706,211.543686 503.060974,207.545395 502.010437,204.387360   C502.002930,203.997101 502.000000,204.000000 501.998596,204.000992  z\",id:\"svg_810\"})),_path809||(_path809=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M523.994385,216.413452   C527.072571,217.589264 526.690918,219.622269 524.347961,221.926941   C523.985046,220.282730 523.990540,218.563263 523.994385,216.413452  z\",id:\"svg_811\"})),_path810||(_path810=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M476.063873,212.651459   C475.953400,214.514465 475.824585,215.957428 475.695740,217.400406   C475.142883,217.371017 474.590027,217.341629 474.037170,217.312241   C474.333282,213.847458 474.629425,210.382690 474.904419,206.505249   C475.001740,204.658630 475.120178,203.224686 475.238647,201.790741   C475.797089,201.823593 476.355530,201.856461 476.914001,201.889313   C476.624512,205.336685 476.335022,208.784058 476.063873,212.651459  z\",id:\"svg_812\"})),_path811||(_path811=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M534.631592,222.030807   C535.300720,223.439194 535.624573,224.855225 535.977051,226.638580   C532.071167,224.637344 531.690063,223.536362 534.631592,222.030807  z\",id:\"svg_813\"})),_path812||(_path812=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M533.657959,231.045776   C533.347351,231.603058 532.690674,232.148941 532.033997,232.694839   C531.857300,232.250534 531.680542,231.806213 531.713867,231.191406   C532.386597,231.025421 532.849182,231.029892 533.657959,231.045776  z\",id:\"svg_814\"})),_path813||(_path813=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M537.467407,214.447662   C537.522095,214.414383 537.412659,214.480927 537.467407,214.447662  z\",id:\"svg_815\"})),_path814||(_path814=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M498.010986,713.007324   C498.008514,713.450195 498.006012,713.893066 497.662201,714.819458   C492.513763,717.075378 487.706696,718.847717 482.848419,720.638977   C480.601746,718.373413 480.446960,713.005554 474.660248,715.008667   C473.886688,715.002625 473.444550,715.000122 472.894653,714.778198   C472.587006,714.285645 472.325531,714.098572 472.001709,713.575684   C472.395752,710.552734 472.790527,707.951660 473.307800,704.543518   C475.018127,706.608887 475.928436,707.708130 477.280640,709.341003   C477.950195,704.927673 478.475739,701.463806 479.001221,698.000000   C479.809174,699.598999 480.622375,701.195312 481.423920,702.797485   C482.897522,705.742920 484.616913,708.127686 488.508514,708.053162   C493.450012,707.958557 494.318451,707.106384 493.963348,702.186829   C493.878326,701.009155 494.597412,699.773560 494.946686,698.564575   C496.066650,699.226074 497.500824,699.645020 498.239227,700.601196   C499.652863,702.431763 500.670929,704.567871 501.853088,706.577271   C502.650024,706.083984 503.446960,705.590637 504.243866,705.097351   C504.824463,703.322449 505.405060,701.547546 505.992188,699.387512   C510.390961,698.342163 510.108032,701.314026 509.998169,704.574280   C509.505157,705.261292 509.012756,705.525024 507.978546,706.032227   C507.622070,707.186279 507.807373,708.096802 507.992676,709.007324   C507.994659,710.071411 507.996643,711.135498 507.946533,712.943054   C506.931244,714.122742 505.968079,714.558960 505.004883,714.995117   C503.904388,714.329468 502.803894,713.663818 501.316528,712.655762   C500.350128,711.666321 499.770569,711.019287 499.190979,710.372192   C498.797638,711.250549 498.404297,712.128906 498.010986,713.007324  z\",id:\"svg_816\"})),_path815||(_path815=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M479.000244,697.586487   C478.475739,701.463806 477.950195,704.927673 477.280640,709.341003   C475.928436,707.708130 475.018127,706.608887 473.307800,704.543518   C472.790527,707.951660 472.395752,710.552734 471.668549,713.576660   C470.891968,713.998901 470.447815,713.998230 470.000702,713.660522   C469.669830,712.549377 469.341919,711.775330 468.994019,710.701904   C468.652039,709.932617 468.330017,709.462646 467.997955,708.598633   C467.660675,706.140015 467.333435,704.075317 467.003510,702.005859   C467.000824,702.001099 467.013428,702.006958 467.013428,702.006958   C469.922607,702.100647 472.631775,701.311829 470.165894,698.006775   C466.827393,693.532043 466.947235,690.854553 472.629486,689.245178   C473.099030,689.112244 473.349609,688.206116 473.849152,687.332031   C475.322113,688.311096 477.111908,689.399902 477.852386,690.980347   C478.714172,692.819885 478.657349,695.089844 479.000244,697.586487  z\",id:\"svg_817\"})),_path816||(_path816=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M497.045502,695.392700   C497.287933,695.789917 497.286255,696.185242 497.255859,696.578308   C497.255005,696.589417 496.948608,696.576965 496.784668,696.575439   C496.788910,696.180420 496.793152,695.785400 497.045502,695.392700  z\",id:\"svg_818\"})),_path817||(_path817=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M537.003601,714.991699   C537.241943,716.195740 537.408142,718.428711 537.729370,718.451172   C543.666748,718.867737 543.923828,722.685669 543.346680,727.201843   C543.288757,727.654907 544.045166,728.212097 544.677246,729.230957   C543.968384,730.415161 543.005981,731.089294 542.043579,731.763428   C540.848877,729.548706 539.591858,727.364685 538.480896,725.108704   C537.710754,723.544800 537.141907,721.881836 536.483093,720.263184   C536.164856,720.437927 535.846680,720.612732 535.528442,720.787476   C535.528442,725.076660 535.528442,729.365784 535.528442,734.010193   C531.825928,731.804504 528.419556,729.775146 525.013123,727.745850   C524.424927,728.519348 523.836670,729.292786 523.248413,730.066284   C524.449097,730.757568 525.918091,731.205078 526.804932,732.181396   C531.161987,736.978271 536.941345,738.292175 542.775024,735.877686   C544.372498,735.216553 546.278259,735.300110 548.036255,735.394714   C548.016785,737.496704 548.003540,739.245911 547.564636,740.996704   C545.647522,740.970337 544.097839,741.196289 542.674377,740.870728   C536.130493,739.374512 534.336853,740.521362 532.881042,746.904236   C532.620850,748.045044 531.187256,748.918213 530.295410,749.914978   C529.434998,749.112305 528.336853,748.447632 527.771179,747.473694   C526.972046,746.097839 526.566467,744.493408 525.992676,742.986633   C526.557434,741.647034 527.122253,740.307495 527.641541,739.075806   C525.420532,736.776367 522.296448,734.849182 521.330627,732.149841   C520.478394,729.768005 522.034607,726.524536 522.527405,723.661499   C522.998291,723.588074 523.469177,723.514648 523.940002,723.441223   C522.227844,721.470581 520.515625,719.499939 518.520569,717.203735   C517.593018,720.172180 517.062073,721.871582 516.531067,723.570923   C515.389343,723.035034 513.520325,722.737000 513.251709,721.915527   C512.619995,719.983948 512.752747,717.802429 512.574707,715.704712   C518.968689,715.398193 519.869934,714.248169 521.722168,705.243896   C526.614746,706.695190 529.168396,710.207092 530.905518,714.642395   C531.438171,716.002319 532.893616,719.006592 534.161560,714.114990   C535.223145,714.014404 536.113342,714.503052 537.003601,714.991699  z\",id:\"svg_819\"})),_path818||(_path818=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M537.431763,714.994629   C536.113342,714.503052 535.223145,714.014404 534.164001,713.763306   C533.641968,711.898071 533.288818,709.795105 532.971497,707.341187   C534.116760,706.914185 535.226257,706.838196 536.445801,706.754578   C536.445801,705.125305 536.445801,703.773315 536.445801,701.992798   C539.337708,702.950623 541.851868,703.783325 544.606873,704.695801   C544.075806,707.827148 543.538635,710.994446 543.000732,714.574341   C541.286621,714.990417 539.573242,714.993958 537.431763,714.994629  z\",id:\"svg_820\"})),_path819||(_path819=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M520.998291,701.568787   C519.213318,701.092102 517.429077,700.184143 515.327271,699.135986   C514.639771,697.735291 514.039856,696.488403 513.964966,695.210693   C513.891541,693.958740 514.352539,692.675537 514.578918,691.406006   C516.373779,692.206177 519.008057,692.543335 519.765137,693.915833   C520.879150,695.935486 520.653809,698.693848 520.998291,701.568787  z\",id:\"svg_821\"})),_path820||(_path820=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352214\",opacity:1,stroke:\"none\",d:\" M530.578613,671.998413   C531.714233,676.747192 532.236206,681.536133 533.233887,686.223877   C533.558289,687.747986 535.125732,689.007629 536.266479,690.584412   C535.655334,690.906189 534.676575,691.421570 533.345581,691.976990   C531.540771,691.433411 530.088074,690.849731 528.328247,690.126404   C527.022705,684.267151 526.024414,678.547546 525.019165,672.420044   C526.724792,672.007874 528.437378,672.003540 530.578613,671.998413  z\",id:\"svg_822\"})),_path821||(_path821=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M278.004364,353.012207   C276.669983,349.933838 275.335602,346.855499 274.001221,343.777130   C273.810059,343.887482 273.618866,343.997833 273.427704,344.108185   C272.954681,341.983582 272.481689,339.858978 272.004333,337.367188   C272.000000,337.000000 272.006104,336.993896 272.006104,336.993896   C273.783661,337.834351 275.561218,338.674805 278.256500,339.949158   C277.469330,337.839539 276.951416,336.451569 276.429108,335.051849   C281.167969,331.786926 281.138306,330.017395 276.929291,325.293671   C274.877808,325.446564 273.489746,325.550049 272.379333,325.253845   C274.441315,322.901642 276.225616,320.949127 278.009918,318.996613   C278.009918,318.996613 277.998779,318.998779 278.365479,319.000793   C281.220154,320.868408 283.708099,322.734009 286.877472,325.110596   C287.301941,323.195496 287.652069,321.615906 288.327606,320.039154   C289.086884,320.041046 289.520721,320.040131 290.056366,320.211853   C290.440430,320.258331 290.722687,320.132141 291.004303,319.674530   C291.028717,318.902222 291.053833,318.461365 291.303650,318.036163   C291.528351,318.051849 291.978638,318.037964 292.321259,317.985901   C295.439728,316.689117 297.139771,312.480194 301.294556,314.735321   C301.354919,314.768127 302.415863,312.957458 303.009796,312.007141   C303.009796,312.007141 303.000000,312.000000 303.373291,312.031677   C305.416046,312.645355 307.085541,313.227325 309.035004,313.906921   C308.729401,312.975983 308.404938,311.987518 308.080444,310.999054   C308.080444,310.999054 308.512512,311.009033 309.085388,311.042542   C312.723999,312.699646 315.789795,314.323303 318.776917,316.286804   C317.037567,320.810913 313.483002,323.625610 313.379578,329.189911   C313.213135,338.145355 310.587677,347.055054 308.685486,356.130676   C307.227295,356.808380 305.351288,358.058380 305.056976,357.758118   C302.441559,355.089752 300.313324,357.404083 298.008179,357.751465   C295.583099,350.968201 294.314209,358.020020 292.866516,357.890686   C290.307861,356.230835 288.078827,354.784821 285.855988,353.342834   C284.195923,355.751831 282.717285,357.780396 280.633209,353.861694   C280.322601,353.277679 278.908142,353.280731 278.004364,353.012207  M292.061707,322.602234   C292.324371,322.936951 292.587006,323.271667 292.849640,323.606384   C293.016937,323.418701 293.184235,323.230988 293.351532,323.043274   C292.927338,322.723663 292.503113,322.404083 292.061707,322.602234  M275.483551,343.587067   C275.483551,343.587067 275.418030,343.476501 275.483551,343.587067  z\",id:\"svg_823\"})),_path822||(_path822=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M341.615112,278.844208   C340.144989,281.334869 338.311981,283.658966 336.426727,286.049316   C337.635345,286.529602 338.829010,287.003967 340.022705,287.478333   C339.615875,288.226105 339.209045,288.973907 338.802246,289.721680   C336.090179,289.721680 333.378113,289.721680 330.293335,289.538879   C329.275482,288.573029 328.630341,287.789948 327.902710,286.836700   C327.551544,286.780334 327.282928,286.894196 327.007141,287.004639   C327.000000,287.001221 327.008545,287.016510 326.756409,287.012238   C326.336212,287.005737 326.168121,287.003479 326.032440,286.631927   C327.040833,284.174713 328.016815,282.086792 329.283630,279.859619   C330.052765,278.813141 330.531006,277.905945 331.009247,276.998749   C334.423553,277.558380 337.837891,278.118011 341.615112,278.844208  z\",id:\"svg_824\"})),_path823||(_path823=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M322.997559,297.015411   C323.999573,297.006897 325.041809,296.819641 325.993774,297.033752   C327.277161,297.322418 328.491058,297.920074 329.825623,299.035034   C327.001343,302.781464 324.086243,305.877960 320.781158,308.979980   C316.930664,307.658325 313.470123,306.331116 310.009613,305.003876   C314.380615,303.994354 317.631775,301.481445 320.322327,297.299438   C321.499420,296.976929 322.248505,296.996155 322.997559,297.015411  z\",id:\"svg_825\"})),_path824||(_path824=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M309.654358,305.064117   C313.470123,306.331116 316.930664,307.658325 320.731506,309.365265   C320.333069,311.812317 319.594299,313.879608 318.855560,315.946930   C315.789795,314.323303 312.723999,312.699646 309.301453,311.043579   C309.062836,309.048889 309.180969,307.086639 309.654358,305.064117  z\",id:\"svg_826\"})),_path825||(_path825=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M288.002197,320.036316   C287.652069,321.615906 287.301941,323.195496 286.877472,325.110596   C283.708099,322.734009 281.220154,320.868408 278.364746,319.006348   C278.332764,317.739441 278.668182,316.468964 279.003601,315.198486   C279.409729,315.711639 279.815857,316.224792 280.222015,316.737946   C281.393829,316.359528 282.565643,315.981079 283.868713,315.301331   C284.000000,315.000000 284.001221,314.998779 284.001221,314.998779   C285.053741,315.005280 286.106232,315.011780 287.833374,314.902771   C289.035950,314.510315 289.563904,314.233307 290.091858,313.956299   C291.133179,313.968201 292.174530,313.980072 293.411346,314.268127   C293.064087,315.708862 292.521362,316.873413 291.978638,318.037964   C291.978638,318.037964 291.528351,318.051849 290.970642,318.053925   C289.609375,318.716125 288.805786,319.376221 288.002197,320.036316  z\",id:\"svg_827\"})),_path826||(_path826=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M328.992798,279.998871   C328.016815,282.086792 327.040833,284.174713 325.825317,286.895142   C324.716095,287.684570 323.846375,287.841522 322.984619,287.600586   C322.990295,286.141602 322.988037,285.080444 322.992493,283.588928   C322.994019,281.439972 322.988800,279.721375 322.983582,278.002777   C322.983582,278.002777 322.998779,277.998596 323.345642,278.026978   C324.793365,278.364349 325.894226,278.673370 326.995117,278.982391   C327.162598,278.984772 327.330078,278.987183 327.855591,279.212830   C328.410431,279.710693 328.670166,279.898315 328.992798,279.998871  z\",id:\"svg_828\"})),_path827||(_path827=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M292.321228,317.985901   C292.521362,316.873413 293.064087,315.708862 293.801880,314.264160   C296.348694,311.573975 298.831085,309.694427 302.668640,311.969849   C302.415863,312.957458 301.354919,314.768127 301.294556,314.735321   C297.139771,312.480194 295.439728,316.689117 292.321228,317.985901  z\",id:\"svg_829\"})),_path828||(_path828=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M323.040344,296.695404   C322.248505,296.996155 321.499420,296.976929 320.375854,296.947144   C321.002502,294.884644 322.003662,292.832642 323.402405,290.393311   C324.866669,290.003998 325.933319,290.002014 327.000092,290.000122   C327.000183,290.000214 327.006104,290.006653 326.867004,290.326538   C326.470093,291.763489 326.212311,292.880524 325.954529,293.997589   C324.997406,294.790192 324.040283,295.582794 323.040344,296.695404  z\",id:\"svg_830\"})),_path829||(_path829=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M322.985779,284.019287   C322.988037,285.080444 322.990295,286.141602 322.766754,287.699524   C322.272980,288.384796 322.070648,288.627930 321.703430,288.783264   C321.115906,288.366638 320.758972,288.092468 320.402008,287.818268   C320.303864,288.546722 320.205719,289.275208 320.107574,290.003662   C319.192535,289.854126 318.277527,289.704559 317.240631,289.535065   C317.910980,287.728210 318.465485,286.233521 319.404663,284.367432   C320.854797,284.003784 321.920288,284.011536 322.985779,284.019287  z\",id:\"svg_831\"})),_path830||(_path830=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M307.791168,310.818115   C308.404938,311.987518 308.729401,312.975983 309.035004,313.906921   C307.085541,313.227325 305.416046,312.645355 303.376587,312.036682   C302.802979,310.502625 302.599365,308.995239 302.204071,306.069000   C304.592529,308.128479 306.047211,309.382843 307.791168,310.818115  z\",id:\"svg_832\"})),_path831||(_path831=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M277.646362,319.023315   C276.225616,320.949127 274.441315,322.901642 272.326660,324.914886   C271.996338,324.975586 271.507568,324.997986 271.263000,324.995300   C271.678894,321.506805 274.019440,319.792023 277.646362,319.023315  z\",id:\"svg_833\"})),_path832||(_path832=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M322.992493,283.588928   C321.920288,284.011536 320.854797,284.003784 319.389099,283.995453   C318.988892,283.994843 319.001282,284.000885 319.008911,283.639099   C318.976044,282.547577 318.935516,281.817902 318.894958,281.088196   C320.029816,280.096283 321.164673,279.104370 322.641541,278.057617   C322.988800,279.721375 322.994019,281.439972 322.992493,283.588928  z\",id:\"svg_834\"})),_path833||(_path833=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M326.987427,278.609924   C325.894226,278.673370 324.793365,278.364349 323.347839,278.019257   C323.709015,277.349243 324.414825,276.715302 325.120636,276.081390   C325.740356,276.800079 326.360046,277.518738 326.987427,278.609924  z\",id:\"svg_835\"})),_path834||(_path834=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M288.766663,296.104614   C288.331207,296.773071 287.810089,297.129395 287.288971,297.485718   C287.067352,296.835968 286.845764,296.186218 286.624176,295.536469   C287.309784,295.621796 287.995392,295.707123 288.766663,296.104614  z\",id:\"svg_836\"})),_path835||(_path835=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M329.283630,279.859619   C328.670166,279.898315 328.410431,279.710693 328.106812,279.216797   C328.477020,278.414673 328.954041,277.831787 329.953674,277.129211   C330.651154,277.003265 330.826019,276.996979 331.000916,276.990692   C331.000916,276.990692 331.000336,276.998901 331.004791,276.998840   C330.531006,277.905945 330.052765,278.813141 329.283630,279.859619  z\",id:\"svg_837\"})),_path836||(_path836=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M300.916992,284.351471   C301.002747,285.096283 300.784210,285.826782 300.565674,286.557312   C300.176453,286.417206 299.787231,286.277100 299.397980,286.136993   C299.802887,285.537048 300.207794,284.937103 300.916992,284.351471  z\",id:\"svg_838\"})),_path837||(_path837=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M318.574280,281.125793   C318.935516,281.817902 318.976044,282.547577 319.011108,283.644531   C318.754944,283.062286 318.504242,282.112854 318.574280,281.125793  z\",id:\"svg_839\"})),_path838||(_path838=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M332.797668,264.200989   C332.432739,264.804565 332.003967,265.107971 331.575226,265.411346   C331.459534,264.962799 331.343842,264.514282 331.228149,264.065735   C331.730072,264.010773 332.231964,263.955780 332.797668,264.200989  z\",id:\"svg_840\"})),_path839||(_path839=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M360.066620,257.347961   C360.882751,257.257294 361.711639,257.455780 362.540497,257.654297   C362.237976,258.075073 361.935486,258.495850 361.314636,258.962585   C360.690674,258.551422 360.385010,258.094299 360.066620,257.347961  z\",id:\"svg_841\"})),_path840||(_path840=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M320.467834,290.000427   C320.205719,289.275208 320.303864,288.546722 320.402008,287.818268   C320.758972,288.092468 321.115906,288.366638 321.933807,288.906769   C322.596497,289.448456 322.798248,289.724243 323.000000,290.000000   C322.276031,289.999084 321.552094,289.998138 320.467834,290.000427  z\",id:\"svg_842\"})),_path841||(_path841=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M301.364014,289.890259   C301.157471,289.406281 301.226593,288.946045 301.295746,288.485779   C301.696564,288.552887 302.097412,288.619995 302.498230,288.687103   C302.212067,289.096069 301.925903,289.505035 301.364014,289.890259  z\",id:\"svg_843\"})),_path842||(_path842=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M349.006714,253.992889   C348.706848,254.500534 348.400299,255.015289 348.093750,255.530060   C347.882782,255.347626 347.671783,255.165176 347.460785,254.982727   C347.787567,254.676529 348.114380,254.370331 348.727722,254.025345   C349.014252,253.986557 349.000000,254.000000 349.006714,253.992889  z\",id:\"svg_844\"})),_path843||(_path843=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M300.956970,277.327026   C301.364410,277.013916 301.832916,277.004883 302.651978,276.996948   C302.771362,277.535278 302.540222,278.072479 302.309082,278.609650   C301.878723,278.283478 301.448395,277.957306 300.956970,277.327026  z\",id:\"svg_845\"})),_path844||(_path844=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M298.704529,281.075012   C298.520355,280.501984 298.520966,280.105560 298.521545,279.709106   C298.875397,279.903992 299.229248,280.098907 299.583099,280.293793   C299.351837,280.613037 299.120575,280.932312 298.704529,281.075012  z\",id:\"svg_846\"})),_path845||(_path845=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M305.046387,274.888123   C305.550415,274.820801 306.054443,274.753479 306.558472,274.686157   C306.235291,275.100739 305.912079,275.515350 305.312378,275.688080   C305.039398,275.260193 305.042877,275.074158 305.046387,274.888123  z\",id:\"svg_847\"})),_path846||(_path846=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M324.526978,257.395813   C324.583679,256.936096 324.811737,256.656799 325.039795,256.377502   C325.216095,256.561157 325.392365,256.744812 325.568665,256.928467   C325.278564,257.144379 324.988464,257.360291 324.526978,257.395813  z\",id:\"svg_848\"})),_path847||(_path847=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M283.999390,315.000610   C283.484985,314.757874 282.958801,314.534912 282.476227,314.240356   C282.426697,314.210175 282.638336,313.752014 282.728790,313.492432   C283.132874,313.801331 283.536957,314.110229 283.971130,314.708954   C284.001221,314.998779 284.000000,315.000000 283.999390,315.000610  z\",id:\"svg_849\"})),_path848||(_path848=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M343.605835,249.532104   C344.058533,249.648926 344.336212,249.934097 344.592377,250.237442   C344.599030,250.245316 344.370392,250.451889 344.251526,250.565796   C343.977020,250.278152 343.702484,249.990509 343.605835,249.532104  z\",id:\"svg_850\"})),_path849||(_path849=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M304.157959,281.284088   C304.503998,281.572815 304.624847,281.830811 304.745697,282.088806   C304.500397,282.162903 304.255066,282.237000 304.009735,282.311096   C303.984100,281.958496 303.958435,281.605896 304.157959,281.284088  z\",id:\"svg_851\"})),_path850||(_path850=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M289.904297,313.724792   C289.563904,314.233307 289.035950,314.510315 288.227936,314.890167   C288.537476,314.493103 289.127106,313.993195 289.904297,313.724792  z\",id:\"svg_852\"})),_path851||(_path851=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M330.994019,276.727997   C330.826019,276.996979 330.651154,277.003265 330.213226,277.004700   C330.171326,276.579498 330.392426,276.159149 330.613525,275.738770   C330.738068,275.980957 330.862610,276.223114 330.994019,276.727997  z\",id:\"svg_853\"})),_path852||(_path852=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M321.318481,273.383820   C321.178711,273.565247 320.932953,273.594452 320.687195,273.623627   C320.862305,273.492950 321.037415,273.362274 321.318481,273.383820  z\",id:\"svg_854\"})),_path853||(_path853=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M291.997833,294.001526   C292.248566,294.354187 292.501495,294.705261 292.754425,295.056366   C292.627960,295.143799 292.501465,295.231201 292.374969,295.318604   C292.254486,295.040070 292.134033,294.761536 292.009216,294.239044   C292.004822,293.995117 292.000000,294.000000 291.997833,294.001526  z\",id:\"svg_855\"})),_path854||(_path854=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M337.014709,250.738373   C336.888367,250.711670 336.759338,250.416336 336.821289,250.026718   C337.012177,250.111542 337.012115,250.290649 337.014709,250.738373  z\",id:\"svg_856\"})),_path855||(_path855=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M274.005188,316.006775   C274.096680,315.971588 274.182953,315.929688 274.127930,315.938782   C273.986603,315.989838 274.000000,316.000061 274.005188,316.006775  z\",id:\"svg_857\"})),_path856||(_path856=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M304.867432,274.995117   C305.042877,275.074158 305.039398,275.260193 305.029053,275.725311   C304.836761,275.818604 304.634918,275.644958 304.480652,275.436127   C304.451874,275.397247 304.614288,275.217102 304.867432,274.995117  z\",id:\"svg_858\"})),_path857||(_path857=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M316.550110,278.467438   C316.583435,278.523346 316.516815,278.411530 316.550110,278.467438  z\",id:\"svg_859\"})),_path858||(_path858=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M337.534027,270.551575   C337.477112,270.585693 337.590942,270.517426 337.534027,270.551575  z\",id:\"svg_860\"})),_path859||(_path859=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M316.985168,272.009338   C316.182922,271.697083 315.395081,271.373993 314.607208,271.050903   C314.754425,270.722656 314.901642,270.394440 315.048859,270.066193   C315.675751,270.494354 316.302673,270.922485 316.975159,271.659973   C317.020752,271.969269 316.999573,271.998474 316.985168,272.009338  z\",id:\"svg_861\"})),_path860||(_path860=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M228.009216,374.026520   C227.985718,378.644501 230.404968,376.485382 232.726913,374.893585   C232.437393,376.697906 232.266510,377.762909 232.087326,378.879608   C233.576141,378.300110 235.018951,377.738525 236.461746,377.176941   C236.683731,377.558289 236.905716,377.939667 237.127716,378.321014   C236.247742,379.372284 235.367783,380.423553 234.279800,381.723328   C235.023712,382.645325 235.808807,383.618347 237.426010,385.622681   C235.250137,387.102722 232.965897,388.656494 230.322083,390.454834   C232.087784,391.721313 232.934753,392.328827 233.972458,393.073120   C232.421844,394.827576 231.057022,396.371796 229.336670,397.711700   C228.977997,397.336334 228.974854,397.165314 228.756561,396.727112   C227.362701,396.972931 226.183975,397.485870 224.660248,398.034302   C223.212219,398.381714 222.109207,398.693665 221.006180,399.005585   C221.006180,399.005585 221.000397,399.000610 220.997253,398.997375   C220.476578,397.405457 219.959030,395.816742 219.261261,393.674805   C220.577332,394.000427 221.492783,394.226959 222.475601,394.470154   C222.854919,388.675934 217.552841,393.744263 216.326019,391.092651   C216.550156,389.345490 216.783340,387.527710 216.998474,384.913971   C217.330383,379.435791 217.680328,374.753540 218.399231,370.048279   C220.516357,369.349335 222.264542,368.673431 224.012726,367.997559   C224.012726,367.997559 223.998886,368.001221 224.026764,368.337463   C225.372818,370.458008 226.691010,372.242249 228.009216,374.026520  M222.630310,371.526520   C222.630310,371.526520 222.448380,371.424866 222.448380,371.424866   C222.448380,371.424866 222.476181,371.631409 222.630310,371.526520  z\",id:\"svg_862\"})),_path861||(_path861=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M218.030304,370.071320   C217.680328,374.753540 217.330383,379.435791 216.948273,384.584839   C216.288193,384.556244 215.660263,384.060852 214.878876,383.673828   C213.890182,376.993622 210.516846,370.135773 215.329544,363.481720   C215.585403,363.127991 215.095779,362.235077 214.853119,361.265564   C214.888977,360.534821 215.024902,360.131714 215.230713,359.416931   C215.560486,359.075623 215.781158,358.966522 216.289932,358.484009   C216.805420,357.891785 216.993561,357.593536 217.496185,357.131927   C219.193527,355.635895 220.351242,353.700165 222.001617,353.084045   C226.906616,351.252808 232.005432,349.940796 237.028503,348.425873   C237.024689,349.363007 237.020874,350.300140 237.031586,351.586487   C235.178925,352.372803 233.000671,352.350739 231.517883,353.355255   C229.324707,354.840973 227.777481,357.256195 225.648575,358.871460   C224.659103,359.622131 222.903030,359.283447 221.583847,359.713043   C220.960495,359.916077 220.547516,360.765045 220.033142,361.900330   C220.027084,362.479279 220.030548,362.950745 219.722229,362.971130   C218.877380,363.096344 218.340851,363.201111 217.804337,363.305878   C217.808182,363.479889 217.812042,363.653900 217.815887,363.827942   C218.543701,363.896179 219.271500,363.964417 219.954514,364.388000   C219.283249,366.519318 218.656769,368.295319 218.030304,370.071320  z\",id:\"svg_863\"})),_path862||(_path862=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M208.932678,388.446930   C208.072464,389.088531 207.241425,389.414520 206.413177,389.746613   C206.809906,391.232971 207.203857,392.713165 207.597809,394.193359   C207.171829,394.461517 206.745865,394.729675 206.319901,394.997833   C204.900330,393.703369 203.335815,392.517181 202.206985,391.005615   C202.023468,390.759857 203.769028,389.073517 204.622955,388.053040   C206.048172,389.248627 207.588058,384.085602 208.932678,388.446930  z\",id:\"svg_864\"})),_path863||(_path863=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M212.896729,388.651428   C212.595245,387.880585 212.594299,387.172424 212.593353,386.464233   C213.154709,386.636688 213.716064,386.809143 214.277435,386.981628   C213.917374,387.559143 213.557297,388.136658 212.896729,388.651428  z\",id:\"svg_865\"})),_path864||(_path864=/*#__PURE__*/React.createElement(\"path\",{fill:\"#615337\",opacity:1,stroke:\"none\",d:\" M319.447479,710.528198   C319.415558,710.475525 319.479401,710.580933 319.447479,710.528198  z\",id:\"svg_866\"})),_path865||(_path865=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M621.030579,308.001190   C619.150269,305.495514 617.150574,303.069153 615.420044,300.463959   C613.290039,297.257416 611.384521,293.901764 609.633057,290.297302   C612.624939,290.457794 612.522644,288.944519 611.915161,287.078156   C612.670654,287.513245 613.479675,287.877594 614.169128,288.399841   C615.233154,289.205811 616.215271,290.119781 617.776733,291.260437   C619.547241,291.367432 620.773254,291.201904 621.999207,291.036407   C623.239258,294.807739 624.479309,298.579102 625.860229,303.050659   C626.000732,304.500977 626.000366,305.251099 625.654663,306.054230   C623.882996,306.738556 622.456787,307.369873 621.030579,308.001190  z\",id:\"svg_867\"})),_path866||(_path866=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M611.626038,286.903137   C612.522644,288.944519 612.624939,290.457794 609.566528,289.969757   C605.902832,286.165924 602.612366,282.323975 599.144470,278.649567   C598.684387,278.162140 597.321472,278.526855 596.169189,278.263000   C595.811646,276.464996 595.661560,274.900970 595.381775,271.985168   C601.293823,277.448059 606.315369,282.088074 611.626038,286.903137  z\",id:\"svg_868\"})),_path867||(_path867=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M641.991943,290.008911   C639.457153,291.963837 636.931458,293.908997 634.256653,295.968964   C633.921570,295.044586 633.494507,293.866425 633.033691,292.344147   C633.000000,292.000000 633.002197,291.997986 633.002197,291.997986   C633.471008,291.245209 634.018494,290.529327 634.392395,289.732025   C635.179321,288.053833 635.875366,286.333038 637.637085,285.112091   C637.770447,286.176880 637.903870,287.241669 638.037231,288.306458   C639.142761,287.899445 640.248291,287.492432 641.675171,287.041138   C641.996643,286.996887 642.000000,287.000000 641.998413,287.374237   C642.003906,288.492950 642.011047,289.237396 642.018188,289.981873   C642.018188,289.981873 642.000916,289.999176 641.991943,290.008911  z\",id:\"svg_869\"})),_path868||(_path868=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M605.532959,265.316101   C604.749390,263.555481 607.423401,261.058624 609.639832,261.417145   C610.723022,261.592377 611.723755,262.276886 613.116150,262.885864   C611.647278,264.900208 610.331421,266.704742 608.776611,268.836914   C607.767883,267.610321 606.810425,266.446167 605.532959,265.316101  z\",id:\"svg_870\"})),_path869||(_path869=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M622.272217,290.830627   C620.773254,291.201904 619.547241,291.367432 618.129883,291.266479   C619.596191,288.892303 621.253967,286.784607 622.955811,284.338470   C630.280518,286.718536 622.476440,288.401428 622.272217,290.830627  z\",id:\"svg_871\"})),_path870||(_path870=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M648.003784,281.272888   C649.567200,281.031738 651.134338,281.031738 652.701538,281.031738   C652.947937,281.331573 653.194397,281.631378 653.440857,281.931213   C651.158936,283.714661 648.877075,285.498138 646.595154,287.281586   C646.329590,287.148071 646.064087,287.014557 645.798523,286.881073   C646.493835,285.480804 647.189148,284.080536 647.943481,282.338318   C648.002441,281.996338 648.007568,281.514008 648.003784,281.272888  z\",id:\"svg_872\"})),_path871||(_path871=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M606.342773,256.965210   C607.730225,255.337250 609.480286,253.669998 611.616333,251.996857   C610.236694,253.635956 608.471069,255.280945 606.342773,256.965210  z\",id:\"svg_873\"})),_path872||(_path872=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M628.999268,303.000610   C629.109009,302.682343 629.300354,302.424713 630.108093,302.138733   C631.076355,302.061707 631.509827,302.073639 632.066345,302.333313   C631.792053,303.718445 631.394836,304.855804 630.664246,305.996185   C629.886475,306.000366 629.442017,306.001526 628.997803,305.627014   C628.998413,304.501099 628.998840,303.750854 628.999268,303.000610  z\",id:\"svg_874\"})),_path873||(_path873=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M622.848083,283.692749   C621.692627,284.550201 620.385254,285.099976 619.078430,285.651062   C619.480957,281.885651 619.480957,281.885651 622.848083,283.692749  z\",id:\"svg_875\"})),_path874||(_path874=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M628.624451,303.000641   C628.998840,303.750854 628.998413,304.501099 628.999023,305.625671   C629.000000,306.000000 629.002441,305.997314 628.628662,305.983337   C627.507446,305.983765 626.760132,305.998199 626.008667,306.008575   C626.004639,306.004517 626.000000,306.001221 626.000000,306.001221   C626.000366,305.251099 626.000732,304.500977 626.002075,303.377106   C626.751892,303.002472 627.500793,303.001587 628.624451,303.000641  z\",id:\"svg_876\"})),_path875||(_path875=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M632.998901,292.000977   C632.219666,291.718567 631.441528,291.435150 630.663391,291.151703   C631.111755,290.591217 631.560181,290.030731 632.008545,289.470215   C632.332214,290.090210 632.655884,290.710175 632.990845,291.664062   C633.002197,291.997986 633.000000,292.000000 632.998901,292.000977  z\",id:\"svg_877\"})),_path876||(_path876=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M628.762939,296.067352   C629.079407,296.767059 629.080017,297.482239 629.097168,298.553406   C628.891479,297.967194 628.669250,297.024994 628.762939,296.067352  z\",id:\"svg_878\"})),_path877||(_path877=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M645.923340,275.138916   C646.283142,275.561157 646.389465,275.922791 646.495789,276.284424   C645.971069,276.106049 645.446411,275.927643 644.921692,275.749268   C645.171082,275.525604 645.420410,275.301971 645.923340,275.138916  z\",id:\"svg_879\"})),_path878||(_path878=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M585.543945,264.390747   C585.602295,263.930237 585.833008,263.649445 586.063721,263.368652   C586.239441,263.552795 586.415222,263.736969 586.590942,263.921112   C586.299377,264.137543 586.007751,264.354004 585.543945,264.390747  z\",id:\"svg_880\"})),_path879||(_path879=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M631.943359,302.085571   C631.509827,302.073639 631.076355,302.061707 630.319214,302.016571   C630.195679,301.437988 630.395874,300.892609 630.937134,300.396973   C631.438232,300.659271 631.644165,300.808624 631.926025,301.191711   C631.951721,301.687653 631.947510,301.886627 631.943359,302.085571  z\",id:\"svg_881\"})),_path880||(_path880=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M605.190796,258.011536   C605.147095,257.775940 605.325562,257.387390 605.756470,256.990112   C605.810364,257.273773 605.611694,257.566162 605.190796,258.011536  z\",id:\"svg_882\"})),_path881||(_path881=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M617.544922,252.546936   C617.486206,252.580917 617.603638,252.512955 617.544922,252.546936  z\",id:\"svg_883\"})),_path882||(_path882=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M631.895996,300.894714   C631.644165,300.808624 631.438232,300.659271 631.208008,300.270111   C631.137878,300.093506 631.566895,300.040070 631.781982,300.018646   C631.997009,299.997223 632.000000,300.000000 631.978577,300.224915   C631.957153,300.449829 631.895996,300.894714 631.895996,300.894714  z\",id:\"svg_884\"})),_path883||(_path883=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M594.164795,259.915466   C593.990051,259.835266 593.987366,259.663940 593.981812,259.235352   C594.098206,259.260162 594.217529,259.542236 594.164795,259.915466  z\",id:\"svg_885\"})),_path884||(_path884=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M606.442505,259.532837   C606.400330,259.466400 606.484680,259.599243 606.442505,259.532837  z\",id:\"svg_886\"})),_path885||(_path885=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M650.445862,274.537842   C650.410828,274.479645 650.480896,274.596069 650.445862,274.537842  z\",id:\"svg_887\"})),_path886||(_path886=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M585.390442,255.972015   C585.002441,255.997543 584.994080,255.503342 584.995850,255.256317   C585.449585,253.379715 585.901550,251.750107 587.046387,250.007309   C588.155823,249.230774 588.572266,248.567429 588.988708,247.904099   C589.472778,247.347321 589.956848,246.790543 591.038452,246.120117   C592.092224,246.003891 592.548584,246.001328 593.004883,245.998779   C594.887512,246.425186 596.770203,246.851578 598.652832,247.277969   C593.623474,247.256653 591.242126,249.167709 591.889404,254.697510   C589.815857,255.399323 587.797119,255.672897 585.390442,255.972015  z\",id:\"svg_888\"})),_path887||(_path887=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M590.000000,233.999878   C592.383972,234.516861 594.082764,235.327515 591.336182,237.950241   C591.001831,238.001236 591.011353,238.008163 590.871765,237.686600   C590.488098,236.243484 590.244080,235.121948 590.000000,234.000397   C590.000000,234.000397 590.000000,234.000000 590.000000,233.999878  z\",id:\"svg_889\"})),_path888||(_path888=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M593.171631,245.732590   C592.548584,246.001328 592.092224,246.003891 591.292847,246.000931   C591.300293,244.897461 591.650818,243.799530 591.994019,242.349121   C594.118408,242.498322 596.194824,243.021530 593.171631,245.732590  z\",id:\"svg_890\"})),_path889||(_path889=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M591.002075,240.635132   C590.095154,240.511887 589.190369,240.010986 588.321228,238.998123   C589.241760,238.326828 590.126526,238.167496 591.011353,238.008163   C591.011353,238.008163 591.001831,238.001236 590.997070,237.996475   C590.996216,238.746964 591.000183,239.502213 591.002075,240.635132  z\",id:\"svg_891\"})),_path890||(_path890=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M591.903992,241.784637   C591.736023,241.826752 591.465271,241.639893 591.091187,241.224396   C591.258911,241.182388 591.530090,241.369034 591.903992,241.784637  z\",id:\"svg_892\"})),_path891||(_path891=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M648.744263,307.815613   C649.880859,308.599030 650.829895,309.062164 651.568176,309.751160   C651.971497,310.127563 652.018066,310.886169 652.230469,311.966370   C652.442505,312.733704 652.711731,312.914734 653.043030,313.003510   C653.043030,313.003510 653.520264,312.996216 653.747864,313.370392   C652.866028,314.875000 651.756592,316.005432 650.918152,316.859741   C651.278076,318.231720 651.639343,319.608704 652.000610,320.985718   C650.130005,322.285919 648.259399,323.586090 646.290527,324.954590   C649.244507,328.059814 657.090881,318.212616 655.234680,330.099030   C656.867554,328.838898 657.938171,328.012695 659.008728,327.186493   C659.428955,327.534149 659.849182,327.881805 660.269409,328.229492   C658.373535,330.535156 656.865784,333.907959 654.450684,334.786469   C652.725525,335.414001 649.782654,332.693756 647.051941,331.298065   C646.188171,332.452515 645.069214,333.948059 643.880371,335.537048   C647.460815,339.394836 651.177429,343.399353 655.127197,347.655060   C654.150879,348.462952 653.234619,349.221130 651.957092,350.278290   C653.628479,350.559723 654.830627,350.762177 656.048218,350.967194   C654.374451,352.985931 652.811340,354.871185 651.433594,356.532837   C652.763123,357.914490 653.882629,359.077911 655.001099,360.620544   C655.000000,360.999756 654.991577,361.008545 654.991577,361.008545   C654.236572,361.719238 652.993103,362.328156 652.819824,363.160034   C652.335815,365.482849 652.294983,367.898010 652.039673,370.638367   C652.000000,371.000000 651.999817,371.001221 651.999817,371.001221   C651.322449,369.886353 650.645081,368.771484 650.210754,367.211548   C650.432007,366.395325 650.410217,366.024109 650.388306,365.652924   C650.247192,366.090363 650.106079,366.527832 649.964966,366.965271   C646.857849,365.402802 643.750671,363.840332 640.321777,362.138916   C640.000000,362.000000 640.002441,361.998779 639.991455,361.641388   C638.318787,359.531464 636.657104,357.778931 635.278931,355.995056   C635.715271,355.902344 635.901978,355.875610 636.011230,355.769287   C636.112793,355.670410 636.221008,355.442169 636.173584,355.346802   C635.468323,353.929718 634.135925,352.532135 634.119690,351.116608   C634.057251,345.683411 634.439392,340.245819 634.542847,334.807770   C634.547852,334.542786 633.484436,334.257477 632.929260,333.589386   C632.290710,330.456787 631.641418,327.716461 631.224976,324.713226   C633.428345,324.734344 635.398926,325.018341 637.461609,325.315613   C638.838135,323.650208 640.360596,321.808258 642.027771,319.791290   C638.618469,316.166687 635.992554,311.478210 629.994141,315.000549   C629.999084,314.999023 629.997559,315.011017 629.997559,315.010986   C632.262573,312.027344 634.658447,309.130676 636.728455,306.017303   C637.559326,304.767731 637.674133,303.042023 638.360596,300.691528   C638.356934,300.690277 639.692383,301.146057 641.976501,301.925568   C642.565430,300.865997 643.426941,299.316010 644.359436,297.638458   C648.347595,302.404724 643.241577,302.633789 642.016968,304.457031   C644.339172,305.584534 646.403931,306.587036 648.744263,307.815613  M645.232361,347.453705   C643.558899,348.261963 641.810242,348.959595 640.289795,349.993103   C640.050903,350.155426 640.543884,352.286072 641.217529,352.745514   C644.194153,354.775513 646.645081,353.687775 648.893066,350.705078   C647.762878,349.768707 646.691162,348.880768 645.232361,347.453705  M637.526245,311.841888   C637.941711,310.793945 638.357178,309.745972 638.772644,308.698029   C638.128723,308.588104 637.484741,308.478180 636.840820,308.368256   C636.840820,309.485443 636.840820,310.602631 637.526245,311.841888  M642.601746,310.132599   C643.272583,310.825470 643.943481,311.518372 644.614380,312.211243   C644.930725,311.733856 645.247070,311.256439 645.563416,310.779053   C644.721130,310.404877 643.878906,310.030670 642.601746,310.132599  M648.815491,314.884369   C648.270386,314.319794 647.725281,313.755249 647.180176,313.190704   C646.932312,313.535095 646.684509,313.879486 646.436646,314.223907   C647.100220,314.596344 647.763733,314.968781 648.815491,314.884369  z\",id:\"svg_893\"})),_path892||(_path892=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M630.979248,380.013885   C629.543152,380.996826 628.107117,381.979767 626.300903,382.947754   C627.926819,376.535919 631.738403,370.647949 631.931091,363.178192   C633.376343,362.173950 634.244812,361.575439 635.465942,361.026978   C637.213318,361.384308 638.607849,361.691559 640.002441,361.998779   C640.002441,361.998779 640.000000,362.000000 640.000000,361.998779   C640.792480,363.731689 641.584900,365.465851 642.367737,367.178864   C640.217407,369.029114 636.232483,369.249725 637.084717,373.751831   C635.836792,375.530548 634.680847,377.053772 632.959595,378.809753   C631.922607,379.366302 631.450928,379.690094 630.979248,380.013885  z\",id:\"svg_894\"})),_path893||(_path893=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M673.003662,376.645538   C671.565186,376.034668 670.125549,375.059326 668.345337,374.049744   C667.545715,372.433594 667.086609,370.851715 666.455261,368.676697   C666.693848,368.192932 667.314758,366.934052 667.969055,365.333954   C669.306702,364.109406 670.611023,363.226135 671.411682,362.683899   C674.444458,364.861877 677.202209,366.842346 681.102722,369.643524   C677.525085,371.106628 675.149109,372.078308 672.340820,373.226807   C672.394165,373.472931 672.698303,374.877014 673.003662,376.645538  z\",id:\"svg_895\"})),_path894||(_path894=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M671.000000,333.998779   C672.545044,333.127014 674.090088,332.255249 675.008789,331.736847   C677.913208,333.696289 680.838806,335.670013 683.186523,337.253845   C681.671631,341.915222 675.679871,341.250885 677.010254,346.578796   C677.004333,346.996155 676.979675,347.028076 676.979675,347.028076   C672.497131,346.599548 673.763855,342.478638 672.564636,339.989594   C671.784546,338.370422 671.554016,336.486481 671.038635,334.360565   C671.000000,334.000000 671.000000,333.998779 671.000000,333.998779  z\",id:\"svg_896\"})),_path895||(_path895=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M652.001343,320.992279   C651.639343,319.608704 651.278076,318.231720 650.918152,316.859741   C651.756592,316.005432 652.866028,314.875000 653.986511,313.371674   C654.308838,311.664124 654.620056,310.329468 654.931274,308.994781   C655.394226,309.069946 655.857178,309.145111 656.320068,309.220245   C656.155396,310.206055 655.741272,311.232788 655.894470,312.166412   C656.055481,313.147675 656.759766,314.039825 657.588379,314.926422   C657.966309,315.352997 657.982483,315.824097 657.756104,316.809998   C657.346863,317.872009 657.180115,318.419159 657.013306,318.966339   C657.013306,318.966339 656.991699,318.986847 656.717102,318.856049   C655.817566,318.316650 655.192627,317.908051 654.084351,317.183441   C654.483093,318.875671 654.739136,319.962341 654.995239,321.049011   C654.995178,321.049011 654.993835,321.506561 654.731506,321.739960   C654.293030,321.982697 654.116943,321.992035 653.940918,322.001373   C653.940918,322.001373 653.498474,321.990753 653.159790,321.770874   C652.611938,321.278839 652.342468,321.095276 652.012634,321.000244   C652.012634,321.000244 652.002136,320.998840 652.001343,320.992279  z\",id:\"svg_897\"})),_path896||(_path896=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M652.014954,380.001831   C652.874451,379.188812 653.691040,377.764099 654.603149,377.700104   C656.130371,377.592957 657.718506,378.353790 659.628418,378.837250   C659.143433,379.871948 658.578857,381.076477 658.007935,382.633118   C658.001526,382.985199 657.995667,382.998383 657.638184,383.005035   C656.488159,383.546783 655.634338,384.010559 654.914368,384.629883   C652.392578,386.798981 651.961182,385.348450 652.000000,383.000610   C652.000000,383.000000 652.000000,382.998779 652.317627,382.961517   C653.220032,382.345673 653.804871,381.767120 654.389648,381.188538   C653.592163,380.786987 652.794617,380.385437 651.997437,379.991394   C651.997742,379.998901 652.014954,380.001862 652.014954,380.001831  z\",id:\"svg_898\"})),_path897||(_path897=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M646.004456,386.002136   C645.179077,384.539825 644.347961,383.074829 643.636292,381.820282   C646.185974,381.221313 648.729797,380.623718 651.644287,380.013977   C652.014954,380.001862 651.997742,379.998901 651.990112,380.368500   C651.988342,381.491669 651.994202,382.245209 652.000000,382.998779   C652.000000,382.998779 652.000000,383.000000 651.638184,383.003296   C649.515808,384.001007 647.755249,384.995422 645.994690,385.989807   C645.994690,385.989838 645.998779,385.999451 646.004456,386.002136  z\",id:\"svg_899\"})),_path898||(_path898=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M690.660156,343.004852   C691.681030,344.730530 692.345886,346.497437 693.007812,348.637329   C691.717346,347.901917 690.429749,346.793518 688.901062,345.477509   C688.330383,345.972137 687.528992,346.666656 686.565308,347.501831   C685.752930,345.858978 685.014832,344.366364 684.361938,343.046051   C686.513977,343.046051 688.409058,343.046051 690.660156,343.004852  z\",id:\"svg_900\"})),_path899||(_path899=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M643.690063,375.969666   C644.679382,374.425598 645.758667,372.041809 647.340576,371.640900   C648.662170,371.305939 650.571960,373.292145 653.310181,374.883087   C649.110596,375.381714 646.554199,375.685242 643.690063,375.969666  z\",id:\"svg_901\"})),_path900||(_path900=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M655.004883,360.995209   C657.452942,361.007233 659.885620,358.308411 662.675903,361.244324   C663.012695,361.526367 662.992676,362.006104 662.992676,362.006104   C660.368225,361.903107 657.743774,361.800140 655.055420,361.352844   C654.991577,361.008545 655.000000,360.999756 655.004883,360.995209  z\",id:\"svg_902\"})),_path901||(_path901=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M663.210327,362.269409   C662.992676,362.006104 663.012695,361.526367 663.024780,361.287048   C664.074402,360.465485 665.111938,359.883209 666.149475,359.300964   C666.378113,359.853424 666.862915,360.853851 666.797119,360.891510   C665.715088,361.510376 664.563721,362.007935 663.210327,362.269409  z\",id:\"svg_903\"})),_path902||(_path902=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M663.991455,342.993530   C663.237732,343.984406 662.484009,344.975311 661.365112,345.983093   C661.000000,346.000000 661.009766,346.009735 661.009766,346.009735   C661.759277,345.006012 662.508850,344.002289 663.629150,342.999420   C664.000000,343.000275 663.991455,342.993530 663.991455,342.993530  z\",id:\"svg_904\"})),_path903||(_path903=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M667.255981,356.834900   C667.869690,356.121490 668.557068,355.748840 669.244507,355.376221   C669.391785,355.945587 669.539001,356.514923 669.686279,357.084290   C668.900696,357.114746 668.115173,357.145172 667.255981,356.834900  z\",id:\"svg_905\"})),_path904||(_path904=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M677.010986,313.989441   C677.892822,314.553558 678.762939,315.128876 679.633118,315.704163   C679.227356,316.086426 678.821594,316.468658 678.415833,316.850891   C677.938660,316.146301 677.461487,315.441711 676.980103,314.380249   C676.975952,314.023376 676.999329,314.000671 677.010986,313.989441  z\",id:\"svg_906\"})),_path905||(_path905=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M671.000000,334.000610   C669.984253,333.554718 668.968506,333.108215 667.952759,332.661713   C668.257874,332.161682 668.563049,331.661621 668.868225,331.161591   C669.555664,331.879456 670.243164,332.597321 670.965332,333.656982   C671.000000,333.998779 671.000000,334.000000 671.000000,334.000610  z\",id:\"svg_907\"})),_path906||(_path906=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M667.008850,342.990265   C666.170593,342.925415 665.332275,342.860596 664.242737,342.894653   C663.991455,342.993530 664.000000,343.000275 664.004333,343.004761   C664.540955,342.134460 665.073303,341.259674 665.605591,340.384949   C666.070862,341.026917 666.536194,341.668884 667.000732,342.655426   C667.000000,343.000000 667.008850,342.990265 667.008850,342.990265  z\",id:\"svg_908\"})),_path907||(_path907=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M673.953918,357.955994   C674.455383,356.962891 675.008789,356.021149 675.562134,355.079437   C675.958130,355.380066 676.354126,355.680725 676.750061,355.981354   C676.078003,356.651917 675.405945,357.322449 674.420898,358.052490   C674.107910,358.111969 674.005859,358.007385 673.953918,357.955994  z\",id:\"svg_909\"})),_path908||(_path908=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M655.318054,320.993835   C654.739136,319.962341 654.483093,318.875671 654.084351,317.183441   C655.192627,317.908051 655.817566,318.316650 656.704224,318.863586   C656.524292,319.647491 656.082581,320.293091 655.318054,320.993835  z\",id:\"svg_910\"})),_path909||(_path909=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M660.995544,345.995117   C660.437378,346.616669 659.883667,347.243073 659.330017,347.869507   C659.030762,347.586823 658.731445,347.304108 658.432190,347.021393   C659.059509,346.686737 659.686768,346.352081 660.661926,346.013550   C661.009766,346.009735 661.000000,346.000000 660.995544,345.995117  z\",id:\"svg_911\"})),_path910||(_path910=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M666.995239,343.004608   C667.524475,343.228149 668.068176,343.428955 668.575317,343.698456   C668.618530,343.721436 668.418274,344.202515 668.331055,344.470764   C667.917969,344.170502 667.504822,343.870239 667.050293,343.280121   C667.008850,342.990265 667.000000,343.000000 666.995239,343.004608  z\",id:\"svg_912\"})),_path911||(_path911=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M657.305054,318.945557   C657.180115,318.419159 657.346863,317.872009 657.756836,317.162415   C657.865601,317.641602 657.731201,318.283173 657.305054,318.945557  z\",id:\"svg_913\"})),_path912||(_path912=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M652.001221,370.999390   C652.437866,371.121796 652.873291,371.244843 653.308716,371.367859   C652.954224,371.384552 652.599731,371.401215 652.122559,371.209534   C651.999817,371.001221 652.000000,371.000000 652.001221,370.999390  z\",id:\"svg_914\"})),_path913||(_path913=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M677.018555,346.981628   C677.465149,347.105774 677.897644,347.244415 678.330078,347.383026   C677.966003,347.402283 677.601929,347.421570 677.108765,347.234467   C676.979675,347.028076 677.004333,346.996155 677.018555,346.981628  z\",id:\"svg_915\"})),_path914||(_path914=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M656.375061,343.668640   C656.554871,343.807281 656.583740,344.054749 656.612671,344.302246   C656.483154,344.127319 656.353699,343.952393 656.375061,343.668640  z\",id:\"svg_916\"})),_path915||(_path915=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M656.664673,375.605591   C656.803589,375.425354 657.049255,375.396332 657.294922,375.367310   C657.120422,375.497162 656.945984,375.626953 656.664673,375.605591  z\",id:\"svg_917\"})),_path916||(_path916=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M646.551270,377.577148   C646.475891,377.626770 646.448547,377.428741 646.448547,377.428741   C646.448547,377.428741 646.626709,377.527527 646.551270,377.577148  z\",id:\"svg_918\"})),_path917||(_path917=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M652.119385,321.226990   C652.342468,321.095276 652.611938,321.278839 652.938477,321.769897   C652.779297,321.810425 652.502686,321.632080 652.119385,321.226990  z\",id:\"svg_919\"})),_path918||(_path918=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M654.046265,322.169861   C654.116943,321.992035 654.293030,321.982697 654.733643,321.968719   C654.716003,322.088837 654.433838,322.213593 654.046265,322.169861  z\",id:\"svg_920\"})),_path919||(_path919=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M630.992126,324.976105   C631.641418,327.716461 632.290710,330.456787 632.749634,333.593964   C632.559265,333.990784 632.198914,333.962433 632.198914,333.962433   C631.219910,333.962433 630.240906,333.962433 629.609619,333.962433   C629.153137,330.813232 628.716736,327.802643 628.085693,324.137146   C627.264282,322.989563 626.637451,322.496918 626.010681,322.004242   C624.349182,317.585388 622.687683,313.166534 621.028381,308.374420   C622.456787,307.369873 623.882996,306.738556 625.654602,306.054230   C626.000000,306.001221 626.004639,306.004517 626.012695,306.368561   C625.364990,308.192261 624.709290,309.651947 623.606750,312.106384   C626.033752,310.653961 627.478638,309.789246 628.965454,308.966431   C629.007263,309.008362 629.090027,309.093048 629.090027,309.093048   C628.498291,310.550262 627.751221,311.974304 627.427612,313.488831   C627.349731,313.853088 628.676636,314.517517 629.677490,315.027466   C629.997559,315.011017 629.999084,314.999023 629.989319,315.364990   C630.983887,316.797516 631.988281,317.864075 632.899902,319.198700   C632.532349,319.958588 632.257446,320.450378 631.642212,321.011658   C631.198669,322.379456 631.095398,323.677795 630.992126,324.976105  z\",id:\"svg_921\"})),_path920||(_path920=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M631.926025,301.191711   C631.895996,300.894714 631.957153,300.449829 631.980042,300.226501   C635.423157,301.884583 634.332642,304.230621 632.137390,306.712341   C631.391724,306.524872 631.194641,306.259003 630.997559,305.993164   C631.394836,304.855804 631.792053,303.718445 632.066345,302.333313   C631.947510,301.886627 631.951721,301.687653 631.926025,301.191711  z\",id:\"svg_922\"})),_path921||(_path921=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M659.005371,286.978943   C659.567078,288.412903 660.118713,289.863739 660.670288,291.314575   C660.087585,291.394165 659.504883,291.473755 658.922180,291.553314   C658.767822,289.966522 658.613403,288.379730 658.745605,286.891541   C659.032288,286.990173 658.995361,286.995819 659.005371,286.978943  z\",id:\"svg_923\"})),_path922||(_path922=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M642.364746,289.981628   C642.011047,289.237396 642.003906,288.492950 642.000122,287.375977   C642.881165,287.535461 643.758789,288.067413 644.636475,288.599335   C643.994751,289.060028 643.353027,289.520691 642.364746,289.981628  z\",id:\"svg_924\"})),_path923||(_path923=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M630.664246,305.996155   C631.194641,306.259003 631.391724,306.524872 631.815613,306.901611   C631.286682,307.680420 630.530884,308.348297 629.432617,309.054626   C629.090027,309.093048 629.007263,309.008362 629.007568,308.603760   C629.006042,307.465179 629.004211,306.731262 629.002441,305.997314   C629.002441,305.997314 629.000000,306.000000 628.998779,306.001343   C629.442017,306.001526 629.886475,306.000366 630.664246,305.996155  z\",id:\"svg_925\"})),_path924||(_path924=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8E674E\",opacity:1,stroke:\"none\",d:\" M654.717651,276.105591   C655.289673,276.664520 655.621704,277.441986 655.963257,278.550110   C655.474426,278.028564 654.976074,277.176331 654.717651,276.105591  z\",id:\"svg_926\"})),_path925||(_path925=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M647.548950,303.461548   C647.585510,303.520905 647.512451,303.402161 647.548950,303.461548  z\",id:\"svg_927\"})),_path926||(_path926=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M661.397461,297.952362   C661.791565,297.710266 662.183899,297.711914 662.573853,297.743011   C662.585938,297.743988 662.573608,298.050140 662.572693,298.214020   C662.180237,298.209503 661.787842,298.204987 661.397461,297.952362  z\",id:\"svg_928\"})),_path927||(_path927=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M666.441162,308.540863   C666.403992,308.480988 666.478394,308.600739 666.441162,308.540863  z\",id:\"svg_929\"})),_path928||(_path928=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M652.925110,312.786987   C652.711731,312.914734 652.442505,312.733704 652.120972,312.242493   C652.337402,312.112701 652.604248,312.294647 652.925110,312.786987  z\",id:\"svg_930\"})),_path929||(_path929=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M228.357132,373.988586   C226.691010,372.242249 225.372818,370.458008 224.028137,368.330505   C225.811981,366.878174 227.622345,365.769073 229.703781,364.493927   C230.891556,365.980835 232.297729,367.741119 234.039810,369.921936   C232.230026,371.288666 230.467545,372.619659 228.357132,373.988586  z\",id:\"svg_931\"})),_path930||(_path930=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M221.041702,399.344971   C222.109207,398.693665 223.212219,398.381714 224.657623,398.034882   C225.000000,398.000000 225.001358,397.994812 224.999969,398.346588   C225.205841,399.683685 225.413071,400.669037 225.620300,401.654358   C226.007690,401.642365 226.395065,401.630371 226.782440,401.618378   C226.856796,400.404694 226.931137,399.191010 227.171783,397.738098   C227.882599,397.330658 228.427139,397.162445 228.971695,396.994263   C228.974854,397.165314 228.977997,397.336334 228.989197,397.764099   C228.998734,399.078918 229.000244,400.137054 228.742126,401.784943   C228.342194,403.207367 228.201889,404.040009 228.061584,404.872650   C228.061584,404.872650 227.969635,404.972198 227.919128,405.019714   C226.229095,405.866425 224.589569,406.665619 223.004623,407.438202   C222.374039,404.901367 221.725632,402.292877 221.041702,399.344971  z\",id:\"svg_932\"})),_path931||(_path931=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M220.030548,362.950745   C220.030548,362.950745 220.027084,362.479279 220.023926,362.243713   C223.625824,362.082245 224.080414,364.522614 224.020447,367.670593   C222.264542,368.673431 220.516357,369.349335 218.399246,370.048279   C218.656769,368.295319 219.283249,366.519318 219.970947,364.117554   C220.031647,363.311462 220.031097,363.131104 220.030548,362.950745  z\",id:\"svg_933\"})),_path932||(_path932=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M235.585052,358.718628   C237.240311,357.522766 238.600372,356.516693 239.960434,355.510590   C240.214539,355.964813 240.468643,356.419037 240.722748,356.873260   C239.447098,358.280365 238.267944,359.798523 236.844513,361.035645   C236.331589,361.481506 235.231812,361.252258 234.399841,361.331116   C234.696518,360.523529 234.993179,359.715942 235.585052,358.718628  z\",id:\"svg_934\"})),_path933||(_path933=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M228.391647,404.953888   C228.201889,404.040009 228.342194,403.207367 228.746277,402.182129   C230.666061,403.751495 232.322098,405.513458 233.987823,407.636505   C232.238892,407.010071 230.480301,406.022583 228.391647,404.953888  z\",id:\"svg_935\"})),_path934||(_path934=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M244.185471,380.017090   C244.260300,377.001984 244.635239,373.993317 245.306519,370.853455   C245.676117,373.557892 245.749329,376.393494 245.747025,379.697083   C245.276184,380.117889 244.880875,380.070709 244.185471,380.017090  z\",id:\"svg_936\"})),_path935||(_path935=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M245.378998,382.003174   C245.456421,383.236328 245.197693,384.613129 244.615082,386.149536   C244.541763,384.921692 244.792297,383.534271 245.378998,382.003174  z\",id:\"svg_937\"})),_path936||(_path936=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M235.507355,389.645874   C236.088745,389.933929 236.445694,390.445770 236.802643,390.957611   C236.434250,391.157013 236.065872,391.356415 235.697495,391.555817   C235.559296,390.993774 235.421082,390.431732 235.507355,389.645874  z\",id:\"svg_938\"})),_path937||(_path937=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M261.656982,377.015594   C262.642914,378.344177 263.263245,379.669952 264.081146,381.418060   C263.618591,382.118744 262.714569,383.488129 260.962128,386.142700   C263.835907,385.482697 265.230072,385.162537 266.624207,384.842346   C266.895111,385.208679 267.166016,385.574982 267.436920,385.941315   C265.877869,386.960480 264.318817,387.979645 262.346985,388.705200   C261.525696,388.092377 261.117157,387.773193 260.708649,387.454010   C260.613647,387.719727 260.394928,388.190735 260.442657,388.219543   C260.939148,388.518707 261.478516,388.746735 262.005981,388.994476   C262.835449,390.757690 263.664917,392.520905 264.494415,394.284119   C264.266632,394.545715 264.038879,394.807312 263.811127,395.068878   C260.866364,392.326935 257.921631,389.585022 255.339493,387.180695   C253.804733,387.481689 252.256058,387.785400 250.362030,388.074280   C250.014328,387.586090 250.011948,387.112671 250.300873,386.102753   C250.178894,384.702881 249.765610,383.839539 249.352325,382.976196   C249.268082,382.237213 249.183838,381.498199 249.115662,380.387268   C251.140259,380.614746 253.148788,381.214233 255.368896,381.876831   C255.366333,381.853149 255.296646,381.209076 255.113678,380.282349   C255.000366,379.999695 255.008881,379.991455 255.008881,379.991455   C257.103027,378.998566 259.197174,378.005707 261.656982,377.015594  z\",id:\"svg_939\"})),_path938||(_path938=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M249.248993,383.304565   C249.765610,383.839539 250.178894,384.702881 250.364899,385.753845   C249.806961,385.171967 249.476318,384.402466 249.248993,383.304565  z\",id:\"svg_940\"})),_path939||(_path939=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M252.037598,400.977753   C251.765091,400.482391 251.492584,399.987030 251.101822,399.233582   C251.360580,398.605682 251.737610,398.235809 252.484863,397.872681   C252.855087,397.879425 253.055954,398.057831 253.031433,398.384674   C252.683807,399.466919 252.360703,400.222351 252.037598,400.977753  z\",id:\"svg_941\"})),_path940||(_path940=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M252.927475,396.285034   C253.663834,396.441742 254.349915,396.885956 254.747070,397.685791   C253.990753,398.046875 253.523361,398.052368 253.055954,398.057861   C253.055954,398.057831 252.855087,397.879425 252.746124,397.794922   C252.717163,397.331116 252.797180,396.951813 252.927475,396.285034  z\",id:\"svg_942\"})),_path941||(_path941=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M237.378876,348.276398   C232.005432,349.940796 226.906616,351.252808 222.001617,353.084045   C220.351242,353.700165 219.193527,355.635895 217.430923,356.852905   C216.854752,356.426575 216.658295,356.115845 216.461823,355.805115   C216.285126,356.180206 216.108414,356.555298 215.931702,356.930389   C215.154068,356.869843 214.376419,356.809326 213.598770,356.748810   C213.374115,356.366150 213.149445,355.983490 212.924789,355.600830   C216.622803,352.779358 220.352661,349.997406 223.973587,347.080261   C224.370850,346.760162 224.142715,345.663788 223.852844,344.835876   C224.251251,344.054291 225.001495,343.364380 225.909943,342.407593   C229.228119,341.778656 232.396179,341.096283 235.544937,341.176117   C237.393036,341.222992 239.210403,342.482697 241.041595,343.196838   C239.937485,344.840240 238.833359,346.483582 237.378876,348.276398  z\",id:\"svg_943\"})),_path942||(_path942=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M221.996948,330.997559   C221.992630,330.247192 221.988297,329.496857 221.993942,328.371307   C222.003906,327.996124 222.000000,328.000000 221.998077,328.001862   C225.600677,328.669556 229.250488,329.168121 232.776794,330.122864   C233.622177,330.351776 234.730576,332.900604 234.580170,333.026855   C231.930603,335.250702 229.104416,337.264099 225.719833,339.135223   C226.999130,335.261292 227.269867,332.152100 222.365662,331.004578   C222.000000,331.000000 221.996948,330.997559 221.996948,330.997559  z\",id:\"svg_944\"})),_path943||(_path943=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M259.004822,352.995148   C256.652832,351.762909 254.792648,357.347046 252.095886,353.149597   C251.941040,352.816711 251.949310,352.396240 251.992188,352.190155   C253.197769,351.497803 254.378082,350.593384 255.518295,350.641418   C256.686401,350.690613 257.815247,351.672241 258.980652,352.622864   C259.000000,353.000000 259.004822,352.995148 259.004822,352.995148  z\",id:\"svg_945\"})),_path944||(_path944=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M221.052933,332.961578   C221.884933,333.752655 222.716949,334.543701 223.548950,335.334778   C223.200256,335.603333 222.851547,335.871887 222.502838,336.140442   C221.999146,335.329773 221.495468,334.519104 220.999802,333.351196   C221.007828,332.993927 221.052933,332.961578 221.052933,332.961578  z\",id:\"svg_946\"})),_path945||(_path945=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M218.884506,337.651184   C219.165146,337.364594 219.582947,337.245911 220.009003,337.186340   C220.082275,337.176056 220.190689,337.417084 220.282867,337.541992   C219.863403,337.640991 219.443924,337.740021 218.884506,337.651184  z\",id:\"svg_947\"})),_path946||(_path946=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M220.985214,333.010010   C221.107925,332.366638 221.253250,331.707214 221.697769,331.022675   C221.996948,330.997559 222.000000,331.000000 222.001022,331.001221   C221.752518,331.487305 221.502991,331.972168 221.153198,332.709290   C221.052933,332.961578 221.007828,332.993927 220.985214,333.010010  z\",id:\"svg_948\"})),_path947||(_path947=/*#__PURE__*/React.createElement(\"path\",{fill:\"#431E11\",opacity:1,stroke:\"none\",d:\" M215.983704,357.309662   C216.108414,356.555298 216.285126,356.180206 216.461823,355.805115   C216.658295,356.115845 216.854752,356.426575 217.116455,357.016296   C216.993561,357.593536 216.805420,357.891785 216.379669,358.318604   C216.106613,358.194427 216.071152,357.941681 215.983704,357.309662  z\",id:\"svg_949\"})),_path948||(_path948=/*#__PURE__*/React.createElement(\"path\",{fill:\"#42332B\",opacity:1,stroke:\"none\",d:\" M364.001038,579.001221   C364.093872,578.964844 364.185699,578.927185 364.137543,578.943604   C363.997559,578.997559 364.000000,579.000000 364.001038,579.001221  z\",id:\"svg_950\"})),_path949||(_path949=/*#__PURE__*/React.createElement(\"path\",{fill:\"#431E11\",opacity:1,stroke:\"none\",d:\" M495.179779,286.256958   C496.264221,286.475220 497.348663,286.693512 498.976501,286.923157   C499.519897,286.934570 499.932892,287.021088 499.942322,287.236847   C499.951752,287.452606 499.910583,287.882721 499.568298,287.973053   C497.238953,290.139648 495.412201,292.406128 493.227325,294.247620   C489.952026,297.008209 486.425323,299.470459 482.679504,302.109863   C481.927582,302.258209 481.501709,302.356262 480.726196,302.395691   C478.980621,302.449402 477.584778,302.561768 475.893555,302.536896   C474.957214,302.454529 474.316254,302.509399 473.485077,302.259521   C470.791351,300.659821 468.287842,299.364899 465.776306,297.750641   C465.128632,296.973633 464.489014,296.515930 463.791870,295.726440   C459.094116,290.584473 454.491180,285.737640 449.804504,280.973175   C443.520508,274.584991 434.612457,273.799500 426.574158,270.320648   C425.257538,270.097595 424.298126,269.945221 423.186096,269.446838   C421.324554,268.819641 419.615601,268.538422 417.516113,268.174835   C411.757538,268.034760 406.389526,267.977020 401.021362,267.655457   C400.294739,267.698639 399.568268,268.005676 398.480164,268.249878   C397.155273,268.263855 396.192047,268.340637 394.797455,268.315094   C389.503998,269.418549 384.641876,270.624329 379.592896,271.890259   C379.406006,271.950439 379.073486,272.159271 378.681793,272.111603   C376.850159,272.687408 375.410187,273.310852 373.580017,274.003174   C370.830414,274.825409 368.471039,275.578796 365.810608,276.334534   C365.015472,276.936493 364.521393,277.536133 363.653992,278.122192   C362.074860,278.700073 360.869019,279.291534 359.305054,279.884216   C356.916138,281.228638 354.885315,282.571808 352.463379,283.945557   C351.026947,284.015259 349.981598,284.054352 348.936249,284.093445   C352.646729,276.758636 360.456635,275.598694 366.820892,272.300171   C370.933685,270.168549 375.206512,268.345795 379.718231,266.232819   C380.913757,266.228058 381.798645,266.375122 383.225098,266.304810   C384.533325,265.068329 385.299957,264.049225 386.066589,263.030151   C386.066620,263.030151 385.999756,263.016479 386.298126,263.259857   C387.955444,264.191528 389.374695,265.554810 390.661926,265.439850   C394.328247,265.112396 397.929840,263.687317 401.577087,263.606628   C407.014038,263.486359 412.496002,263.913513 417.905701,264.555450   C421.719391,265.007935 425.439392,266.228607 429.212097,267.056824   C431.223907,267.498505 433.258820,267.835114 435.973419,268.350037   C438.155823,269.484222 441.104340,270.956421 443.992584,272.538635   C445.913147,273.590698 447.903351,274.607391 449.592468,275.973602   C455.421082,280.688049 461.131256,285.548950 466.868347,290.487549   C466.850220,290.621002 466.886719,290.887909 466.926453,291.252319   C470.901337,297.665070 476.708954,300.709229 481.699371,297.767883   C486.712769,294.813049 490.727448,290.163727 495.179779,286.256958  z\",id:\"svg_951\"})),_path950||(_path950=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M466.886505,290.354095   C461.131256,285.548950 455.421082,280.688049 449.592468,275.973602   C447.903351,274.607391 445.913147,273.590698 443.992584,272.538635   C441.104340,270.956421 438.155823,269.484222 435.973419,268.350037   C433.258820,267.835114 431.223907,267.498505 429.212097,267.056824   C425.439392,266.228607 421.719391,265.007935 417.905701,264.555450   C412.496002,263.913513 407.014038,263.486359 401.577087,263.606628   C397.929840,263.687317 394.328247,265.112396 390.661926,265.439850   C389.374695,265.554810 387.955444,264.191528 386.309509,263.292053   C388.866638,262.242065 391.679230,261.261047 394.567322,260.620789   C396.160919,260.267517 397.881531,260.449219 399.544525,260.458008   C401.003723,260.465698 402.462402,260.568481 403.974060,260.307434   C404.196198,259.983093 404.365601,259.980591 404.773651,259.976105   C405.012268,259.974152 405.026215,259.959808 405.048340,260.265503   C405.742737,260.677338 406.415039,260.783417 407.455841,260.915833   C409.893005,260.295685 411.961670,259.649200 414.275513,258.999817   C414.520691,258.996948 415.010986,258.989014 415.369812,258.995026   C416.442963,258.990570 417.157318,258.980103 417.939270,259.322845   C419.568817,260.646851 421.092743,262.360107 422.700256,262.442505   C426.745422,262.649811 430.828308,262.121155 434.896088,261.887543   C439.403809,264.234802 443.911560,266.582062 449.057434,269.122742   C450.145996,270.157318 450.692871,270.961548 451.030884,271.845703   C453.012421,277.028229 457.964020,280.733032 462.012970,280.003540   C462.332764,280.106689 462.591125,280.294403 462.897766,281.159637   C464.300446,284.619781 465.593475,287.486938 466.886505,290.354095  M432.756622,264.103302   C432.483856,263.813812 432.216736,263.518250 431.924835,263.249451   C431.906799,263.232819 431.694458,263.427155 431.572540,263.523346   C431.860901,263.829681 432.149261,264.136017 432.756622,264.103302  z\",id:\"svg_952\"})),_path951||(_path951=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M389.964294,257.043488   C388.249207,257.910309 386.460144,258.659576 384.840790,259.678558   C383.367462,260.605652 382.078461,261.825745 380.362183,262.950653   C380.016144,262.984619 380.000000,263.000000 380.006805,262.991943   C378.395660,256.606018 375.957062,262.123383 373.852722,262.795746   C373.531097,262.470947 373.209473,262.146118 372.887848,261.821320   C375.140564,259.038666 377.393280,256.256042 379.700470,253.406158   C381.133759,254.248322 382.494446,255.047806 383.549072,255.667465   C386.165100,253.670090 388.520599,251.871628 391.996216,249.217926   C391.078613,252.418854 390.532837,254.322647 389.992615,256.615387   C389.998108,257.004333 389.964294,257.043488 389.964294,257.043488  z\",id:\"svg_953\"})),_path952||(_path952=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M402.992828,233.397842   C407.388336,233.798767 405.727966,237.794128 406.994629,240.587006   C406.016937,240.839584 405.030396,240.705948 404.043884,240.572296   C404.054443,239.961182 404.064972,239.350067 404.075531,238.738968   C399.787933,242.209396 395.806702,247.546417 389.263214,241.005920   C395.716766,241.367111 399.866425,238.465103 402.992828,233.397842  z\",id:\"svg_954\"})),_path953||(_path953=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M380.941406,237.771072   C380.169495,235.125488 379.574615,232.798752 378.979736,230.472031   C379.581238,230.329987 380.182739,230.187927 380.784241,230.045868   C381.808899,232.376572 382.833557,234.707260 384.188629,237.789505   C383.454865,237.861298 382.286652,237.975616 380.941406,237.771072  z\",id:\"svg_955\"})),_path954||(_path954=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M407.016785,241.381897   C408.443665,240.815735 409.860138,240.634628 411.276642,240.453537   C411.514832,240.701431 411.753052,240.949326 411.991272,241.197220   C409.248413,243.767685 406.505524,246.338150 403.413849,248.935608   C404.378815,246.564041 405.692596,244.165497 407.016785,241.381897  z\",id:\"svg_956\"})),_path955||(_path955=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M385.745483,263.042145   C385.299957,264.049225 384.533325,265.068329 383.389648,266.071716   C383.816528,265.055389 384.620453,264.054749 385.745483,263.042145  z\",id:\"svg_957\"})),_path956||(_path956=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M393.636536,238.890213   C392.699982,238.622131 392.096710,238.271591 391.493408,237.921051   C392.006073,237.641663 392.518768,237.362274 393.031433,237.082901   C393.344238,237.657852 393.657013,238.232803 393.636536,238.890213  z\",id:\"svg_958\"})),_path957||(_path957=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M394.304779,255.374847   C394.165894,255.553223 393.922821,255.581467 393.679779,255.609711   C393.853394,255.481384 394.027008,255.353043 394.304779,255.374847  z\",id:\"svg_959\"})),_path958||(_path958=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M390.017456,256.987152   C390.162903,257.146667 390.289001,257.323334 390.415100,257.500031   C390.306274,257.452545 390.197449,257.405060 390.026459,257.200531   C389.964294,257.043488 389.998108,257.004333 390.017456,256.987152  z\",id:\"svg_960\"})),_path959||(_path959=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M348.674805,284.306854   C349.981598,284.054352 351.026947,284.015259 352.803711,284.090332   C357.972870,286.469269 360.870789,283.509796 364.334412,281.107239   C366.470123,280.705902 368.993347,280.929474 369.813171,279.854248   C372.531006,276.289551 375.544098,275.792999 379.236633,277.661499   C381.393311,274.624725 383.680511,272.793274 386.988190,276.422546   C387.871307,279.287323 388.749481,281.745880 389.627686,284.204437   C390.220490,284.109741 390.813263,284.015015 391.406036,283.920288   C391.599762,282.641724 391.793488,281.363129 391.993927,279.793335   C391.996338,279.307922 391.992004,279.113770 392.002380,278.679230   C392.017090,278.438873 392.063202,277.959503 392.445312,277.972534   C393.597870,277.979462 394.368286,277.973358 395.325195,278.069824   C395.746307,278.343872 395.924347,278.561676 396.053650,279.173645   C396.727112,280.012848 397.392609,280.504211 398.375977,280.988129   C399.117767,280.977783 399.541656,280.974915 399.969940,281.323242   C400.333252,282.465851 400.692200,283.257202 401.133881,284.213776   C401.474976,284.246277 401.733337,284.113556 401.995453,283.988800   C401.999207,283.996765 401.979706,283.983459 402.342834,283.984192   C403.837341,282.971375 404.968719,281.957794 406.481140,280.602814   C407.296936,281.999054 408.156677,283.470581 408.762146,285.166473   C408.342041,286.263885 408.176208,287.136871 407.676727,288.028748   C406.930237,289.329590 406.517395,290.611572 405.693542,291.919373   C404.184509,291.959778 403.086517,291.974396 401.839783,291.672974   C398.586548,290.896698 394.966064,291.270721 392.514709,289.754517   C389.760895,288.051270 389.228973,289.793243 387.598633,291.014343   C384.746857,291.692841 382.269470,292.706665 379.727966,292.906921   C373.575104,293.391754 367.720734,294.240784 363.556213,299.962158   C359.778320,300.986115 356.402435,301.998047 352.744049,303.203796   C352.304596,304.289734 352.147644,305.181915 351.888641,306.277832   C351.597473,306.734711 351.350983,306.904816 350.685059,307.000183   C348.796814,308.041107 347.270752,309.073792 345.421936,310.071869   C344.086914,309.696564 343.074554,309.355835 341.681946,308.999634   C340.543121,308.998291 339.784607,309.012360 339.012390,308.780334   C338.998657,308.534210 338.977264,308.041656 338.977966,307.693481   C338.911621,306.663361 338.844543,305.981415 339.129761,305.192200   C343.270294,301.589172 341.556610,299.421783 337.799072,297.416229   C338.914154,295.045044 339.945618,293.025665 340.977051,291.006287   C343.455811,288.844269 345.934570,286.682281 348.674805,284.306854  M380.577515,279.469086   C380.811981,279.528351 381.046448,279.587616 381.280914,279.646912   C381.128815,279.497894 380.976715,279.348877 380.577515,279.469086  M394.375366,283.473480   C394.375366,283.473480 394.551422,283.571655 394.551422,283.571655   C394.551422,283.571655 394.524780,283.375397 394.375366,283.473480  M394.409027,280.484711   C394.409027,280.484711 394.526489,280.412323 394.409027,280.484711  z\",id:\"svg_961\"})),_path960||(_path960=/*#__PURE__*/React.createElement(\"path\",{fill:\"#431E11\",opacity:1,stroke:\"none\",d:\" M340.687073,291.172668   C339.945618,293.025665 338.914154,295.045044 337.474609,297.526672   C335.059784,300.025818 333.053040,302.062714 330.697693,304.150787   C328.878021,307.449554 327.406982,310.697083 325.567261,314.006348   C324.495300,314.632843 323.507965,315.051544 323.131042,315.784271   C317.178833,327.354279 313.566315,339.821686 312.716248,352.613159   C312.260956,359.464691 314.304779,367.101410 317.280975,373.412201   C321.418518,382.185455 330.059418,387.317596 337.665283,393.076965   C340.984100,395.590057 345.160614,397.593170 344.240540,403.003906   C343.773407,403.607330 343.571777,404.114655 343.105713,404.789795   C341.840210,405.911621 340.839142,406.865601 339.815369,407.796448   C339.792664,407.773346 339.735413,407.742981 339.735413,407.742981   C336.157043,409.479065 332.544861,411.149506 329.010437,412.970825   C325.873688,414.587250 322.823242,416.371185 319.323975,417.784607   C318.902740,417.293579 318.892242,417.099152 319.093018,416.636047   C321.655762,413.596375 324.007324,410.825439 326.358856,408.054504   C326.358856,408.054504 326.585541,408.160492 327.084351,408.188599   C328.081543,408.199097 328.579926,408.181549 329.452515,408.104309   C334.080444,406.577637 338.547882,405.415405 340.982635,399.785614   C338.547028,398.980499 335.989960,398.700165 334.191315,397.383667   C332.349670,396.035675 331.574768,393.252380 329.753601,391.849304   C326.773895,389.553650 323.324951,387.867035 320.073944,385.923492   C320.073944,385.923492 320.033508,385.993622 320.030518,385.608276   C315.307892,379.482635 311.060242,373.508270 310.289093,365.784637   C310.259277,365.485718 309.967163,365.212982 309.886902,364.567322   C309.651367,361.465820 309.326233,358.724945 309.001099,355.984100   C310.587677,347.055054 313.213135,338.145355 313.379578,329.189911   C313.483002,323.625610 317.037567,320.810913 318.776917,316.286804   C319.594299,313.879608 320.333069,311.812317 321.121460,309.359741   C324.086243,305.877960 327.001343,302.781464 329.957947,299.336426   C333.465302,296.438324 336.931183,293.888702 340.687073,291.172668  z\",id:\"svg_962\"})),_path961||(_path961=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M326.341858,293.993347   C326.212311,292.880524 326.470093,291.763489 327.193909,290.329285   C328.095520,290.020599 328.531128,290.029114 328.966705,290.037598   C328.220856,291.354767 327.475006,292.671936 326.341858,293.993347  z\",id:\"svg_963\"})),_path962||(_path962=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M329.212463,290.023773   C328.531128,290.029114 328.095520,290.020599 327.333008,290.009399   C327.006104,290.006653 327.000183,290.000214 326.999695,289.626953   C327.002350,288.507996 327.005432,287.762238 327.008545,287.016510   C327.008545,287.016510 327.000000,287.001221 327.249817,287.003387   C327.499634,287.005554 327.985229,287.006897 327.985229,287.006897   C328.630341,287.789948 329.275482,288.573029 329.935486,289.676880   C329.950378,289.997650 329.458252,290.009949 329.212463,290.023773  z\",id:\"svg_964\"})),_path963||(_path963=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M366.997559,256.002441   C365.964508,255.688614 364.933929,255.372330 363.903320,255.056061   C364.123016,254.553940 364.342712,254.051819 364.562439,253.549698   C365.347504,254.150452 366.132599,254.751205 366.961121,255.673553   C367.004547,255.995117 367.000000,256.000000 366.997559,256.002441  z\",id:\"svg_965\"})),_path964||(_path964=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M366.723480,260.100555   C366.030334,260.683319 365.060669,261.366638 364.091034,262.049988   C363.875885,261.588928 363.660706,261.127899 363.445557,260.666870   C364.446045,260.511627 365.446503,260.356384 366.723480,260.100555  z\",id:\"svg_966\"})),_path965||(_path965=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M367.001831,266.001831   C366.460785,266.623291 365.917908,267.242920 365.375000,267.862549   C365.070099,267.578552 364.765228,267.294586 364.460327,267.010590   C365.075409,266.674438 365.690491,266.338257 366.650940,265.999207   C366.996338,265.996338 367.000000,266.000000 367.001831,266.001831  z\",id:\"svg_967\"})),_path966||(_path966=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M370.000000,252.999695   C369.485138,252.754852 368.957184,252.531647 368.474274,252.235062   C368.421936,252.202896 368.630493,251.746017 368.718018,251.486130   C369.121460,251.798141 369.524902,252.110153 369.964172,252.711395   C370.000000,253.000610 370.000000,253.000000 370.000000,252.999695  z\",id:\"svg_968\"})),_path967||(_path967=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M415.010986,258.989014   C415.010986,258.989014 414.520691,258.996948 414.271423,258.646362   C414.016388,257.823059 414.010620,257.350342 414.004883,256.877594   C413.676514,255.137619 413.348114,253.397644 413.019714,251.657684   C413.517120,251.669617 414.014587,251.681549 414.878540,252.052338   C415.594727,252.395782 415.944427,252.380356 416.294098,252.364929   C415.863129,252.243088 415.432190,252.121231 415.001221,251.999390   C414.411346,248.194107 416.414520,248.022461 419.772736,249.238297   C420.888397,249.689224 421.457764,249.886002 422.027161,250.082779   C422.777405,251.375031 423.527649,252.667267 424.649963,253.966354   C425.022003,253.973206 425.015259,253.986954 425.007690,254.324600   C424.997345,255.112015 424.994537,255.561768 424.736237,256.219452   C423.811188,257.932800 423.374084,259.678802 421.130768,257.831696   C420.358856,257.196106 419.014862,257.255219 417.584442,256.998260   C416.494781,257.662689 415.752869,258.325867 415.010986,258.989014  M419.566315,254.298035   C419.292236,254.010742 419.018188,253.723434 418.744141,253.436157   C418.625397,253.550110 418.397003,253.756622 418.403778,253.764648   C418.659271,254.067490 418.936432,254.352036 419.566315,254.298035  z\",id:\"svg_969\"})),_path968||(_path968=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M445.995117,243.002792   C444.792542,243.331848 443.356567,244.247818 442.431244,243.879776   C439.666473,242.780197 438.555084,243.833832 438.025452,246.721222   C436.599548,247.221924 435.210052,247.358017 433.720398,247.503906   C434.151459,245.881424 434.569061,244.309586 435.237976,242.373505   C435.656738,242.012238 435.824219,242.015198 436.041473,242.329468   C439.762756,243.569595 437.935120,240.139786 439.113007,238.707962   C439.151031,237.291931 439.060669,236.158340 438.977325,234.644379   C438.987640,233.502731 438.990936,232.741440 438.994232,231.980148   C438.994232,231.980148 439.001221,232.001221 439.369385,232.003113   C440.494171,231.996796 441.250732,231.988586 442.383881,231.992950   C443.860809,233.983719 444.961182,235.961914 446.027100,237.973511   C445.992645,238.006943 445.923462,238.073441 445.600525,238.021194   C444.143799,237.764969 443.010010,237.560989 441.876251,237.357010   C442.125244,238.683258 442.024323,240.253113 442.727570,241.263077   C443.355133,242.164398 444.871155,242.447113 445.995117,243.002792  z\",id:\"svg_970\"})),_path969||(_path969=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M413.645386,256.862671   C414.010620,257.350342 414.016388,257.823059 414.026245,258.649231   C411.961670,259.649200 409.893005,260.295685 407.261719,260.691956   C406.141479,260.281067 405.583832,260.120453 405.026215,259.959808   C405.026215,259.959808 405.012268,259.974152 405.027649,259.967163   C404.740662,258.586456 404.438324,257.212738 404.151337,255.908813   C405.538086,255.108749 406.714355,254.430115 407.945251,253.376007   C407.999908,253.000549 408.051453,253.049164 408.051453,253.049164   C409.796295,254.315353 411.541107,255.581558 413.645386,256.862671  z\",id:\"svg_971\"})),_path970||(_path970=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M438.657410,231.989288   C438.990936,232.741440 438.987640,233.502731 438.724426,234.814529   C437.643036,236.576691 436.821533,237.788345 435.999695,239.377060   C435.996765,240.508804 435.994232,241.263489 435.991669,242.018173   C435.824219,242.015198 435.656738,242.012238 435.237915,242.004913   C433.996399,241.247864 433.006195,240.495163 432.007996,239.371231   C432.000000,239.000000 432.001221,238.999390 432.337036,238.952087   C432.454224,237.942627 432.235565,236.980453 432.008484,236.009201   C432.000061,236.000137 431.982574,235.982651 431.991516,235.652374   C432.000305,234.881393 432.000153,234.440689 432.244781,233.842346   C433.983948,233.125931 435.478333,232.567184 436.972717,232.008423   C437.421997,232.005096 437.871307,232.001770 438.657410,231.989288  z\",id:\"svg_972\"})),_path971||(_path971=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M432.997803,252.003662   C431.193848,252.522659 429.389893,253.041672 426.961884,253.775558   C425.896973,253.989273 425.456116,253.988113 425.015259,253.986954   C425.015259,253.986954 425.022003,253.973206 425.031128,253.960846   C426.689606,251.284302 428.338898,248.620132 430.279907,245.484818   C431.741302,247.650208 432.675659,249.034622 433.801941,250.708282   C433.677704,251.106125 433.420685,251.295181 433.111450,251.782349   C433.000000,252.000000 432.997803,252.003662 432.997803,252.003662  z\",id:\"svg_973\"})),_path972||(_path972=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M431.999390,239.000305   C429.567261,236.469254 427.135742,233.937897 425.111938,231.098297   C425.985626,230.498367 426.451660,230.206650 427.110504,230.178955   C429.500610,230.794495 432.192352,230.493164 431.685211,234.026764   C430.742920,234.433823 430.115448,234.814133 428.650543,235.701981   C430.430328,235.851898 431.206451,235.917267 431.982574,235.982651   C431.982574,235.982651 432.000061,236.000137 431.999268,236.381439   C431.999359,237.508286 432.000305,238.253845 432.001221,238.999390   C432.001221,238.999390 432.000000,239.000000 431.999390,239.000305  z\",id:\"svg_974\"})),_path973||(_path973=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M426.917694,229.914932   C426.451660,230.206650 425.985626,230.498367 425.264923,230.893341   C425.577606,229.214005 426.144958,227.431412 427.258362,225.317490   C428.874237,224.987274 429.944092,224.988388 430.907837,225.268784   C430.884857,226.701660 430.968018,227.855255 430.725067,228.897095   C429.238556,229.161850 428.078125,229.538391 426.917694,229.914932  z\",id:\"svg_975\"})),_path974||(_path974=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M431.013916,224.989502   C429.944092,224.988388 428.874237,224.987274 427.403381,224.995941   C426.998627,224.579208 426.994873,224.152679 426.984985,223.407928   C429.169708,222.784012 431.360504,222.478287 434.608002,222.025116   C433.452484,223.583160 433.018066,224.168945 432.290894,224.876846   C431.998199,224.998962 431.983429,224.987793 431.891418,224.823914   C431.527954,224.777115 431.256439,224.894196 430.991699,225.006226   C430.998444,225.001160 431.013916,224.989502 431.013916,224.989502  z\",id:\"svg_976\"})),_path975||(_path975=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M422.218536,249.856689   C421.457764,249.886002 420.888397,249.689224 420.143982,249.241531   C420.389374,247.458344 420.809723,245.926086 421.230103,244.393814   C421.623383,244.464722 422.016632,244.535629 422.409912,244.606537   C422.409912,246.281235 422.409912,247.955917 422.218536,249.856689  z\",id:\"svg_977\"})),_path976||(_path976=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M441.025696,249.335159   C441.955963,249.042419 442.889252,249.080978 443.822510,249.119537   C443.125305,249.741089 442.428131,250.362640 441.378906,250.987823   C441.027435,250.549789 441.028046,250.108124 441.025696,249.335159  z\",id:\"svg_978\"})),_path977||(_path977=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M408.024323,253.027435   C407.426086,252.501648 406.803406,251.949005 406.180756,251.396362   C406.460693,251.094650 406.740601,250.792953 407.020538,250.491241   C407.348267,251.112671 407.675964,251.734100 408.027557,252.702347   C408.051453,253.049164 407.999908,253.000549 408.024323,253.027435  z\",id:\"svg_979\"})),_path978||(_path978=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M404.463867,230.991119   C404.547699,230.352615 404.948151,229.712540 405.659271,229.017517   C405.573486,229.638214 405.176971,230.313873 404.463867,230.991119  z\",id:\"svg_980\"})),_path979||(_path979=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M409.707703,250.052307   C409.249969,249.706512 408.949310,249.171631 408.648682,248.636765   C408.936096,248.589096 409.445129,248.442932 409.474884,248.509827   C409.663788,248.934769 409.746857,249.406754 409.707703,250.052307  z\",id:\"svg_981\"})),_path980||(_path980=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M446.061554,237.940094   C444.961182,235.961914 443.860809,233.983719 442.381409,231.619064   C441.998413,230.483353 441.994446,229.734085 441.990509,228.984833   C441.990509,228.984833 442.028534,228.502106 442.060272,228.262177   C442.092010,228.022247 442.552734,228.007538 442.783264,227.999969   C443.996033,228.483490 444.978271,228.974564 446.356598,229.663651   C446.235107,227.239792 446.121368,224.970337 446.007629,222.700867   C446.446960,222.419144 446.886261,222.137421 447.325592,221.855698   C448.896545,223.645706 450.467468,225.435715 451.673218,227.584747   C450.295135,227.947739 449.282227,227.951706 448.269348,227.955673   C448.456787,228.522171 448.644257,229.088654 448.831696,229.655151   C449.883911,229.099136 450.936127,228.543106 451.988312,227.987061   C452.436066,227.994217 452.883820,228.001404 453.667511,228.014252   C454.003448,228.019928 453.999237,227.996674 453.996918,228.403717   C453.303284,232.875458 452.611938,236.940170 451.920593,241.004868   C451.073639,240.655609 450.226685,240.306366 450.028290,240.224548   C448.769623,241.273346 447.740723,242.130707 446.353485,242.995422   C444.871155,242.447113 443.355133,242.164398 442.727570,241.263077   C442.024323,240.253113 442.125244,238.683258 441.876251,237.357010   C443.010010,237.560989 444.143799,237.764969 445.623291,238.319824   C446.198395,239.203735 446.427734,239.736771 446.657104,240.269806   C446.988342,239.962921 447.319580,239.656036 447.650848,239.349152   C447.121094,238.879471 446.591309,238.409790 446.061554,237.940094  M446.829132,231.314713   C446.782471,231.690735 446.735809,232.066772 446.689178,232.442795   C446.955566,232.446136 447.221985,232.449478 447.488373,232.452820   C447.445343,232.072433 447.402344,231.692062 446.829132,231.314713  z\",id:\"svg_982\"})),_path981||(_path981=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M427.110504,230.178955   C428.078125,229.538391 429.238556,229.161850 430.935181,228.781189   C431.733337,228.571716 431.911133,228.309341 432.004822,227.989929   C433.080566,228.615417 434.156281,229.240906 435.847565,229.919312   C436.662781,229.983765 436.862488,229.995331 437.062195,230.006897   C437.038055,230.451401 437.013916,230.895905 436.981262,231.674408   C435.478333,232.567184 433.983948,233.125931 432.244781,233.842346   C432.192352,230.493164 429.500610,230.794495 427.110504,230.178955  z\",id:\"svg_983\"})),_path982||(_path982=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M437.352112,229.779984   C436.862488,229.995331 436.662781,229.983765 436.163940,229.933990   C436.398529,227.142868 436.932312,224.389984 437.466095,221.637085   C438.079803,221.763855 438.693481,221.890640 439.307190,222.017410   C438.752136,224.529297 438.197113,227.041183 437.352112,229.779984  z\",id:\"svg_984\"})),_path983||(_path983=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M441.652344,229.027695   C441.994446,229.734085 441.998413,230.483353 442.004852,231.606476   C441.250732,231.988586 440.494171,231.996796 439.359009,231.999634   C439.758331,231.019669 440.536285,230.045105 441.652344,229.027695  z\",id:\"svg_985\"})),_path984||(_path984=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M432.005859,227.617874   C431.911133,228.309341 431.733337,228.571716 431.261292,228.892944   C430.968018,227.855255 430.884857,226.701660 430.907837,225.268784   C431.013916,224.989502 430.998444,225.001160 431.241364,224.998825   C431.484283,224.996490 431.983429,224.987793 431.983429,224.987793   C431.983429,224.987793 431.998199,224.998962 432.006287,225.006500   C432.011902,225.757965 432.009369,226.501892 432.005859,227.617874  z\",id:\"svg_986\"})),_path985||(_path985=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M278.002258,353.343445   C278.908142,353.280731 280.322601,353.277679 280.633209,353.861694   C282.717285,357.780396 284.195923,355.751831 285.855988,353.342834   C288.078827,354.784821 290.307861,356.230835 292.866516,357.890686   C294.314209,358.020020 295.583099,350.968201 297.940613,358.062164   C296.920990,359.516418 295.939880,360.268585 294.631287,361.064819   C293.599213,363.063202 292.894623,365.017548 292.300446,366.665680   C291.447205,366.287079 289.509338,364.916656 289.047028,365.304596   C285.951263,367.902374 282.907074,370.213440 278.530945,369.306549   C278.501770,369.625031 278.472565,369.943512 278.368591,371.078217   C281.055206,371.414459 283.755615,371.752441 286.798950,372.133331   C286.840118,372.712799 286.920563,373.845245 287.001007,374.977692   C284.387421,376.595978 281.773834,378.214264 278.769409,380.074554   C278.633118,378.742554 278.517883,377.616272 278.350922,375.984772   C276.627411,376.933685 275.155029,377.744324 272.975861,378.944122   C273.608826,377.041229 274.039001,375.747986 274.925415,373.083221   C271.409485,375.498260 268.975952,377.169830 266.531586,378.848816   C265.320374,378.266968 264.037903,377.650879 262.386963,377.028687   C262.476227,372.973877 264.847900,371.481964 269.494476,372.638824   C269.799072,371.283264 270.102783,369.931610 270.105743,369.918396   C272.754211,369.112885 274.540009,368.569763 276.325806,368.026642   C275.622803,366.082184 275.013062,364.096588 274.180634,362.209198   C273.705780,361.132629 272.867554,360.216278 272.192963,359.227783   C272.652130,358.900360 273.111298,358.572906 273.570465,358.245483   C274.776337,359.075500 275.982178,359.905518 277.352203,360.848511   C277.352203,358.643372 277.352203,356.865936 277.817200,355.258179   C278.717133,355.432404 279.152069,355.436981 279.587036,355.441589   C279.528229,355.158020 279.469391,354.874451 279.410583,354.590881   C278.940369,354.727264 278.470184,354.863617 278.000000,355.000000   C278.000061,354.558228 278.000122,354.116455 278.002258,353.343445  M280.233246,375.182251   C280.402802,375.125488 280.572388,375.068756 280.741943,375.011993   C280.571594,374.957306 280.401215,374.902618 280.233246,375.182251  z\",id:\"svg_987\"})),_path986||(_path986=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M271.996948,337.002930   C271.383881,336.460205 270.773834,335.914612 270.163818,335.369019   C270.445282,335.071198 270.726746,334.773376 271.008240,334.475525   C271.335114,335.086731 271.662018,335.697906 271.997528,336.651489   C272.006104,336.993896 272.000000,337.000000 271.996948,337.002930  z\",id:\"svg_988\"})),_path987||(_path987=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M258.997650,353.002319   C259.778259,353.071564 260.561249,353.138428 262.311890,353.287964   C260.890015,354.175171 260.264923,354.565216 259.319885,354.977661   C259.000000,355.000061 258.987793,354.990051 258.987793,354.990051   C258.993988,354.546783 259.000183,354.103516 259.005615,353.327698   C259.004822,352.995148 259.000000,353.000000 258.997650,353.002319  z\",id:\"svg_989\"})),_path988||(_path988=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M254.996216,380.002502   C254.695847,379.343597 254.399658,378.681854 254.103470,378.020142   C254.317383,377.951019 254.531296,377.881897 254.745209,377.812775   C254.832169,378.340302 254.919144,378.867859 255.007492,379.693420   C255.008881,379.991455 255.000366,379.999695 254.996216,380.002502  z\",id:\"svg_990\"})),_path989||(_path989=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M261.302917,347.377319   C261.152863,347.571899 260.890167,347.603302 260.627502,347.634705   C260.815125,347.494507 261.002716,347.354309 261.302917,347.377319  z\",id:\"svg_991\"})),_path990||(_path990=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M259.005035,355.006317   C258.904633,355.042755 258.799164,355.072906 258.840759,355.046570   C258.987793,354.990051 259.000000,355.000061 259.005035,355.006317  z\",id:\"svg_992\"})),_path991||(_path991=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M682.290527,367.127441   C682.252258,366.545044 682.388123,366.129913 682.523987,365.714783   C682.638794,365.827087 682.867493,365.964447 682.849243,366.047516   C682.756104,366.470978 682.599182,366.880371 682.290527,367.127441  z\",id:\"svg_993\"})),_path992||(_path992=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M687.757324,379.138672   C687.881958,379.354706 687.702637,379.605713 687.219849,379.893372   C687.098877,379.680878 687.277893,379.428741 687.757324,379.138672  z\",id:\"svg_994\"})),_path993||(_path993=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M452.291260,241.011795   C452.611938,236.940170 453.303284,232.875458 453.986298,228.402847   C455.553162,229.123962 457.128357,230.252975 458.934662,231.180359   C459.165802,230.978714 459.569305,230.987106 459.770752,230.987686   C460.633484,233.427353 461.294800,235.866425 461.863953,238.888580   C461.604523,239.703888 461.384460,239.863205 461.111572,239.949615   C460.303589,239.180954 459.495575,238.412308 458.673370,237.630127   C456.730560,238.725281 454.696228,239.872009 452.291260,241.011795  z\",id:\"svg_995\"})),_path994||(_path994=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M734.710327,388.131592   C733.679138,387.001495 732.894897,386.080627 732.110657,385.159790   C732.353577,384.894775 732.596436,384.629761 732.839355,384.364746   C734.057922,385.429749 735.276489,386.494720 736.495056,387.559692   C735.982483,387.820099 735.469849,388.080475 734.710327,388.131592  z\",id:\"svg_996\"})),_path995||(_path995=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M713.222290,379.121887   C713.188354,378.496307 713.452820,378.014526 713.812744,377.276886   C714.577698,377.799164 715.247314,378.577301 715.958496,379.677704   C716.000000,380.000000 716.002991,379.997040 716.002991,379.997040   C715.175537,379.753235 714.348083,379.509430 713.222290,379.121887  z\",id:\"svg_997\"})),_path996||(_path996=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M715.998535,380.001434   C716.736633,379.996735 717.476196,379.990631 718.607178,379.991638   C718.998535,379.998749 719.041931,380.041046 719.041931,380.041046   C718.472534,382.226685 717.535339,382.716003 716.027771,380.343140   C716.002991,379.997040 716.000000,380.000000 715.998535,380.001434  z\",id:\"svg_998\"})),_path997||(_path997=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M718.976868,379.977570   C719.150085,379.090576 719.345032,378.224762 719.539978,377.358948   C719.919128,377.500244 720.298279,377.641510 720.677429,377.782806   C720.360901,378.503906 720.044373,379.225006 719.384888,379.993591   C719.041931,380.041046 718.998535,379.998749 718.976868,379.977570  z\",id:\"svg_999\"})),_path998||(_path998=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M738.908875,389.360352   C739.132324,389.976593 739.066650,390.606689 739.000977,391.236816   C738.739197,391.167206 738.245544,391.060547 738.249878,391.033447   C738.339172,390.474945 738.485046,389.925507 738.908875,389.360352  z\",id:\"svg_1000\"})),_path999||(_path999=/*#__PURE__*/React.createElement(\"path\",{fill:\"#794A31\",opacity:1,stroke:\"none\",d:\" M253.031433,398.384705   C253.523361,398.052368 253.990753,398.046875 254.811371,398.013794   C255.164597,397.986176 255.572403,397.992889 255.776077,397.992828   C256.677612,399.964844 257.375458,401.936920 258.230408,404.352966   C257.769531,404.483398 256.809113,404.755219 255.494141,405.040802   C254.116669,403.920349 253.093719,402.786133 252.054184,401.314819   C252.360703,400.222351 252.683807,399.466919 253.031433,398.384705  z\",id:\"svg_1001\"})),_path1000||(_path1000=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M739.719116,435.598450   C739.847229,435.437012 740.069336,435.413605 740.291504,435.390198   C740.132080,435.505615 739.972656,435.621002 739.719116,435.598450  z\",id:\"svg_1002\"})),_path1001||(_path1001=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M737.981018,413.979919   C738.107239,413.534485 738.251770,413.106476 738.396301,412.678467   C738.415344,413.044891 738.434387,413.411346 738.246460,413.902832   C738.039551,414.027924 737.999329,413.997314 737.981018,413.979919  z\",id:\"svg_1003\"})),_path1002||(_path1002=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M740.464844,432.453918   C740.520203,432.421143 740.409546,432.486694 740.464844,432.453918  z\",id:\"svg_1004\"})),_path1003||(_path1003=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M590.871765,237.686600   C590.126526,238.167496 589.241760,238.326828 588.136658,238.749222   C587.491394,239.008286 587.066467,239.004288 586.321960,238.998932   C585.999634,238.575073 585.996826,238.152603 585.989990,237.415253   C587.109192,236.050812 588.232483,235.001205 589.677917,233.976013   C590.244080,235.121948 590.488098,236.243484 590.871765,237.686600  z\",id:\"svg_1005\"})),_path1004||(_path1004=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M586.986206,226.013687   C586.010498,225.515930 585.047058,225.006058 584.083618,224.496185   C584.386597,224.075821 584.689636,223.655472 584.992676,223.235107   C585.641418,223.933823 586.290161,224.632538 586.980469,225.654007   C587.021973,225.976776 586.998474,226.001556 586.986206,226.013687  z\",id:\"svg_1006\"})),_path1005||(_path1005=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M583.000000,230.999390   C583.239685,230.484116 583.460938,229.958450 583.750061,229.473236   C583.776550,229.428772 584.237061,229.642929 584.496094,229.737000   C584.190735,230.139526 583.885376,230.542053 583.290039,230.972900   C583.000000,231.001221 583.000000,231.000000 583.000000,230.999390  z\",id:\"svg_1007\"})),_path1006||(_path1006=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M577.000000,226.999695   C577.437927,227.394470 577.875793,227.789566 578.313721,228.184662   C578.131287,228.331131 577.948914,228.477585 577.766479,228.624039   C577.526611,228.264221 577.286743,227.904404 577.023438,227.272614   C577.000000,227.000610 577.000000,227.000000 577.000000,226.999695  z\",id:\"svg_1008\"})),_path1007||(_path1007=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392B1F\",opacity:1,stroke:\"none\",d:\" M488.996796,747.000000   C490.666046,749.188599 492.847382,751.167664 493.853729,753.627441   C494.772736,755.873962 494.949890,757.934570 498.067963,758.164368   C499.096588,758.240173 500.277191,759.743286 500.915131,760.863281   C502.045197,762.847412 502.359100,765.451416 503.823608,767.058960   C507.265961,770.837280 505.037079,772.700378 501.149933,774.361450   C501.618591,772.774414 502.087250,771.187439 502.555939,769.600464   C502.173431,769.359131 501.790924,769.117798 501.408417,768.876465   C499.959686,771.017395 498.510986,773.158325 496.627258,775.651978   C492.187012,777.055115 490.887665,779.840088 492.643127,783.611633   C495.420197,789.578003 494.586823,791.292053 488.511536,792.439819   C487.626373,792.606995 486.850159,793.350891 486.114777,793.775269   C484.615234,792.434021 483.324677,791.279663 482.034119,790.125244   C481.720306,790.400818 481.406494,790.676331 481.092712,790.951904   C482.072571,793.312195 483.052429,795.672546 484.032288,798.032898   C483.851227,798.577759 483.670166,799.122559 482.901886,799.778320   C477.442322,795.208862 475.338440,789.256165 473.571259,782.415771   C479.220123,783.423279 478.000641,779.335388 478.969055,776.672058   C478.292908,775.226135 477.644012,774.113098 476.996124,772.621887   C477.006897,771.487610 477.016663,770.731506 477.388855,769.977112   C480.899902,768.381714 484.048553,766.784546 487.197235,765.187317   C487.769836,765.693970 488.342438,766.200623 488.915039,766.707275   C489.942017,763.473145 490.968994,760.239014 491.858276,756.682800   C491.477142,755.238037 491.233704,754.115356 490.988037,752.628418   C490.322815,750.509460 489.659821,748.754700 488.996796,747.000000  M495.104553,769.610657   C494.996155,770.273743 494.887787,770.936890 494.779388,771.599976   C495.350922,771.534851 495.922424,771.469788 496.493927,771.404663   C496.228333,770.717529 495.962769,770.030396 495.104553,769.610657  z\",id:\"svg_1009\"})),_path1008||(_path1008=/*#__PURE__*/React.createElement(\"path\",{fill:\"#22201E\",opacity:1,stroke:\"none\",d:\" M477.026459,769.975342   C477.016663,770.731506 477.006897,771.487610 476.641235,772.661255   C475.618927,774.173706 474.952484,775.268616 474.286011,776.363525   C475.856140,776.577332 477.426239,776.791077 478.996338,777.004883   C478.000641,779.335388 479.220123,783.423279 473.571259,782.415771   C475.338440,789.256165 477.442322,795.208862 482.656128,799.939331   C483.189209,801.356384 483.380890,802.723389 483.635559,804.539856   C479.057892,803.445068 475.069580,802.491211 470.702637,801.446838   C470.605682,802.403564 470.493378,803.511414 470.476074,803.682190   C467.403870,803.413269 464.577637,803.165833 461.375702,802.959229   C461.000000,803.000000 460.996338,802.997559 460.996338,802.997559   C459.514526,802.082703 458.032684,801.167847 456.273010,800.124084   C457.215179,796.979797 458.313324,793.906616 459.704376,790.972290   C460.450256,789.398987 461.699951,788.064575 463.013367,785.954102   C464.200531,781.858093 465.096619,778.430298 465.992676,775.002441   C465.992676,775.002441 465.999512,775.000000 466.000977,774.996338   C468.015717,775.050842 471.235321,777.825134 471.044739,772.048218   C473.078461,770.213257 475.049927,769.110901 477.019165,768.336426   C477.020142,769.101379 477.023285,769.538330 477.026459,769.975342  z\",id:\"svg_1010\"})),_path1009||(_path1009=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M497.998535,816.589355   C496.574188,817.645996 495.151642,818.311523 493.311615,818.631836   C490.927887,817.848816 488.961639,817.411011 486.995361,816.973267   C486.895691,817.283691 486.712738,817.533020 486.233002,817.598328   C486.019531,817.475464 486.020752,817.029297 486.020752,817.029297   C486.028259,815.960205 486.035736,814.891113 486.037537,813.421997   C486.562195,811.869446 487.092468,810.716980 488.138977,809.247314   C489.094086,808.281860 489.533020,807.633545 489.971924,806.985168   C491.777008,804.100342 493.582092,801.215515 495.994690,798.036072   C498.391296,796.150269 500.180359,794.559143 501.969421,792.968018   C501.998077,794.095581 502.026764,795.223206 501.744507,796.710571   C501.111298,797.375366 500.789001,797.680481 500.466736,797.985596   C500.676208,798.167175 500.885681,798.348816 501.095123,798.530457   C501.395905,798.019470 501.696716,797.508484 501.997559,796.997559   C505.308807,794.478027 508.620026,791.958496 513.072754,788.570435   C512.374023,795.945923 514.827209,802.382629 512.697937,807.622314   C508.900269,808.189758 506.483582,808.550842 503.369415,809.016174   C503.343536,808.981384 502.728638,808.154602 501.499359,806.501709   C500.157135,810.221252 499.078735,813.209717 497.998535,816.589355  z\",id:\"svg_1011\"})),_path1010||(_path1010=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2E231C\",opacity:1,stroke:\"none\",d:\" M502.025085,792.595703   C500.180359,794.559143 498.391296,796.150269 496.302338,797.872437   C494.073334,795.914185 492.006439,794.883728 489.174103,796.533630   C487.876251,797.289612 486.282227,797.537109 484.427399,798.024048   C483.052429,795.672546 482.072571,793.312195 481.092712,790.951904   C481.406494,790.676331 481.720306,790.400818 482.034119,790.125244   C483.324677,791.279663 484.615234,792.434021 486.114777,793.775269   C486.850159,793.350891 487.626373,792.606995 488.511536,792.439819   C494.586823,791.292053 495.420197,789.578003 492.643127,783.611633   C490.887665,779.840088 492.187012,777.055115 496.591125,776.006592   C497.170654,782.719299 498.676849,784.734619 504.586456,784.849976   C503.685974,787.499817 502.883362,789.861633 502.025085,792.595703  z\",id:\"svg_1012\"})),_path1011||(_path1011=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M485.977753,832.007324   C485.986267,833.389648 485.994751,834.772034 486.012970,836.568237   C485.230927,837.069824 484.439178,837.157532 482.716522,837.348389   C484.467102,838.726624 485.563843,839.590088 487.725037,841.291626   C484.750793,841.291626 482.893646,841.291626 480.827148,841.291626   C480.094543,844.019165 479.355591,846.770386 478.325073,849.754883   C476.791595,849.841431 475.549622,849.694641 474.944672,849.623169   C474.944672,845.664917 475.695465,842.014465 474.758148,838.866638   C473.535553,834.760803 475.010925,831.844971 476.964722,828.368835   C477.754211,828.006287 478.501099,828.005249 479.629761,828.359741   C480.865875,831.040649 481.610809,833.532349 485.247192,832.001221   C485.490723,832.002441 485.977753,832.007324 485.977753,832.007324  z\",id:\"svg_1013\"})),_path1012||(_path1012=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M484.004883,870.965820   C482.879822,870.976868 481.754761,870.987854 480.316681,870.997131   C478.199158,868.956543 475.974976,867.142334 474.724731,864.806702   C473.748413,862.982727 472.346832,860.062012 476.591614,859.002625   C478.369873,861.539856 479.519196,864.276245 481.256348,866.566956   C481.994507,867.540405 483.964264,867.580017 485.817749,868.323853   C485.509094,869.390991 484.756989,870.178406 484.004883,870.965820  z\",id:\"svg_1014\"})),_path1013||(_path1013=/*#__PURE__*/React.createElement(\"path\",{fill:\"#22201E\",opacity:1,stroke:\"none\",d:\" M461.001831,803.001221   C459.956696,805.551697 458.909729,808.100952 457.862793,810.650208   C457.246307,810.378357 456.629791,810.106567 456.013306,809.834717   C456.145294,806.934021 455.814911,803.806885 460.615601,803.001465   C460.996338,802.997559 461.000000,803.000000 461.001831,803.001221  z\",id:\"svg_1015\"})),_path1014||(_path1014=/*#__PURE__*/React.createElement(\"path\",{fill:\"#36271E\",opacity:1,stroke:\"none\",d:\" M464.042480,855.647583   C462.231995,856.913818 460.630615,857.072266 461.161926,854.410400   C461.453766,852.948120 462.634308,851.663147 463.733673,850.140930   C468.276489,851.731812 464.007996,853.524963 464.042480,855.647583  z\",id:\"svg_1016\"})),_path1015||(_path1015=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2E231C\",opacity:1,stroke:\"none\",d:\" M489.652527,807.029663   C489.533020,807.633545 489.094086,808.281860 488.334198,808.973083   C488.453217,808.368713 488.893158,807.721436 489.652527,807.029663  z\",id:\"svg_1017\"})),_path1016||(_path1016=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M478.024841,853.325562   C478.230682,853.635071 478.425201,854.280579 478.324890,854.965820   C478.024536,854.557556 478.019012,854.109497 478.024841,853.325562  z\",id:\"svg_1018\"})),_path1017||(_path1017=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M427.844482,797.303711   C429.418823,795.932190 430.836426,794.864380 432.155914,793.870422   C434.125549,795.789856 436.226349,797.837097 438.588593,800.139160   C438.980255,799.975708 440.133606,799.494507 441.636780,799.007812   C442.900665,800.795593 443.814758,802.588684 444.865051,804.692139   C443.044556,805.246399 441.087891,805.490295 438.729370,805.784302   C438.657867,804.825867 438.581940,803.808228 438.542511,803.279358   C434.584869,802.953552 430.709351,802.634460 426.694336,802.303894   C424.177216,805.987427 421.605713,809.750549 418.517517,814.269775   C418.280396,812.228455 418.138763,811.008911 417.998535,809.394714   C418.445923,807.656982 419.386566,806.244263 419.209717,804.989014   C418.999573,803.497253 417.828766,802.140930 417.035889,800.364136   C420.503632,798.948303 424.836975,801.586548 427.844482,797.303711  z\",id:\"svg_1019\"})),_path1018||(_path1018=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M417.964600,808.715454   C417.489288,808.697815 416.978607,808.395630 416.467896,808.093384   C416.649475,807.882996 416.831055,807.672607 417.012634,807.462219   C417.318176,807.785095 417.623688,808.108032 417.964600,808.715454  z\",id:\"svg_1020\"})),_path1019||(_path1019=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M425.393097,811.950928   C425.791656,811.708191 426.188873,811.710083 426.583801,811.741516   C426.595856,811.742432 426.583557,812.049866 426.582642,812.214478   C426.185577,812.209656 425.788513,812.204773 425.393097,811.950928  z\",id:\"svg_1021\"})),_path1020||(_path1020=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M422.722778,814.603699   C422.849731,814.443298 423.069550,814.420105 423.289398,814.396973   C423.131470,814.511658 422.973541,814.626282 422.722778,814.603699  z\",id:\"svg_1022\"})),_path1021||(_path1021=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392B1F\",opacity:1,stroke:\"none\",d:\" M465.623138,775.009766   C465.096619,778.430298 464.200531,781.858093 463.146667,785.639282   C459.135223,785.079468 457.467407,781.633057 459.852875,778.997559   C461.323761,777.372559 463.431702,776.324219 465.623138,775.009766  z\",id:\"svg_1023\"})),_path1022||(_path1022=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M453.999390,853.998779   C454.177948,855.403625 454.357086,856.809692 454.536255,858.215759   C454.132324,858.296326 453.728424,858.376892 453.324524,858.457458   C453.324524,857.006653 453.324524,855.555847 453.662872,854.053223   C454.001221,854.001343 454.000000,854.000000 453.999390,853.998779  z\",id:\"svg_1024\"})),_path1023||(_path1023=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M447.230560,856.598022   C446.371704,855.998535 445.795105,855.540405 445.218506,855.082214   C445.461792,854.731201 445.705078,854.380188 445.948364,854.029175   C447.003754,854.809509 448.059113,855.589783 449.114471,856.370117   C448.580597,856.493164 448.046692,856.616211 447.230560,856.598022  z\",id:\"svg_1025\"})),_path1024||(_path1024=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3E2A20\",opacity:1,stroke:\"none\",d:\" M411.033447,863.287598   C411.509766,863.238525 412.031647,863.457031 412.510742,863.746338   C412.558868,863.775391 412.348236,864.233154 412.257751,864.491882   C411.860779,864.186340 411.463837,863.880798 411.033447,863.287598  z\",id:\"svg_1026\"})),_path1025||(_path1025=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M264.462830,834.434021   C264.528412,834.392578 264.397217,834.475464 264.462830,834.434021  z\",id:\"svg_1027\"})),_path1026||(_path1026=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M276.440735,876.540894   C276.405640,876.484863 276.475861,876.596863 276.440735,876.540894  z\",id:\"svg_1028\"})),_path1027||(_path1027=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M525.651367,743.045532   C526.566467,744.493408 526.972046,746.097839 527.771179,747.473694   C528.336853,748.447632 529.434998,749.112305 530.295410,749.914978   C531.187256,748.918213 532.620850,748.045044 532.881042,746.904236   C534.336853,740.521362 536.130493,739.374512 542.674377,740.870728   C544.097839,741.196289 545.647522,740.970337 547.596802,741.329224   C548.403503,742.848999 549.364685,744.282715 549.002930,745.187500   C546.470398,751.522095 546.382935,751.487122 552.553894,751.582886   C554.880737,755.543091 555.087097,761.992310 562.743591,760.419922   C562.566833,758.849792 562.394104,757.315063 562.315979,756.621094   C565.984558,754.739868 569.155396,753.113892 571.349060,751.989014   C574.921570,755.585266 578.044250,758.728821 581.166992,761.872314   C580.804688,762.279480 580.442383,762.686646 580.080078,763.093750   C577.366821,761.754761 574.653564,760.415710 572.281067,759.244873   C571.420776,762.830811 570.635559,766.103638 569.781067,769.665283   C570.490967,769.566101 571.539001,769.393066 572.593323,769.279480   C573.745605,769.155273 574.903809,769.085938 576.059387,768.992676   C578.549805,771.829590 578.954895,774.443176 575.094910,776.900146   C574.382935,775.980530 573.752869,775.166809 572.756165,773.879456   C570.852905,776.997864 569.178101,779.741943 567.285278,782.843201   C564.293945,778.372314 557.253418,777.206848 557.611267,769.969177   C557.630859,769.572571 554.449097,769.017700 553.085938,768.629944   C552.510864,771.416504 552.152832,773.075378 551.833130,774.741577   C551.721619,775.322937 551.518616,775.980896 551.682617,776.501465   C552.031921,777.610535 552.593933,778.652527 553.068787,779.722046   C552.243774,780.045349 551.044006,780.879028 550.662231,780.598755   C549.382812,779.659363 547.888245,778.496704 547.407471,777.099182   C546.543640,774.588440 546.808228,771.643494 545.746704,769.260681   C544.844543,767.235657 542.799500,765.686096 541.148132,764.038452   C539.601929,762.495667 537.908630,761.100281 536.090881,758.987061   C533.933411,756.556946 531.965149,754.779785 529.996887,753.002625   C528.172546,752.855835 526.348145,752.709045 524.223877,751.913940   C523.615112,749.842957 523.306335,748.420288 522.997559,746.997559   C523.768372,745.699829 524.539185,744.402100 525.651367,743.045532  z\",id:\"svg_1029\"})),_path1028||(_path1028=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M468.007996,708.992676   C468.330017,709.462646 468.652039,709.932617 468.640167,710.738525   C466.646576,711.990540 464.986816,712.906616 463.608948,713.667114   C464.856201,716.357483 465.932892,718.679810 467.009888,721.375427   C467.014801,722.495056 467.019379,723.241394 467.020752,724.358398   C467.466766,725.766418 467.915924,726.803894 468.365112,727.841309   C468.749664,727.770203 469.134216,727.699036 469.518768,727.627869   C469.678772,726.418579 469.838776,725.209290 470.388611,723.997681   C471.856079,722.999390 472.933655,722.003357 474.384674,721.005310   C475.505402,721.002136 476.252716,721.001038 477.001221,721.248779   C477.002441,721.497559 477.004974,721.995117 477.005005,721.995117   C478.334595,727.727783 479.664185,733.460449 480.629883,739.559570   C479.558105,739.529724 478.873505,738.847900 478.138245,738.787964   C475.349274,738.560913 472.543915,738.535156 469.744629,738.434143   C470.077850,740.842407 470.219055,743.299255 470.812714,745.641541   C471.200165,747.170227 472.244476,748.532349 472.994568,749.969116   C469.694427,750.701599 466.394318,751.434021 463.216614,752.139282   C461.754089,749.893127 460.522583,748.001770 459.689880,746.722900   C462.617035,743.774353 465.315582,741.056091 468.014130,738.337891   C467.753876,737.938049 467.493652,737.538269 467.233398,737.138489   C463.090454,739.270447 457.481750,737.203064 454.385834,742.795349   C453.679596,744.071106 450.880829,744.188477 450.125427,744.456177   C448.232697,740.803711 446.504028,737.564636 444.873383,734.276917   C444.151245,732.820923 443.627472,731.266602 443.012329,729.385742   C445.404938,731.374146 447.798859,733.733704 450.215576,736.115723   C450.813812,735.381348 451.541809,733.873901 452.742859,733.117859   C458.444733,729.528137 458.677856,726.031250 454.157776,722.623230   C454.878632,715.972290 455.539398,709.875427 456.357727,702.325195   C457.682922,701.791016 460.360382,700.711853 463.817230,699.318481   C463.857788,699.159058 464.198425,697.820740 464.872467,695.172241   C465.833832,698.025635 466.377960,699.640686 466.967773,701.631348   C467.013428,702.006958 467.000824,702.001099 466.680298,702.142151   C465.334137,702.753784 464.308533,703.224426 461.756866,704.395264   C464.370972,706.317810 466.189484,707.655273 468.007996,708.992676  z\",id:\"svg_1030\"})),_path1029||(_path1029=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M576.050049,768.629517   C574.903809,769.085938 573.745605,769.155273 572.593323,769.279480   C571.539001,769.393066 570.490967,769.566101 569.781067,769.665283   C570.635559,766.103638 571.420776,762.830811 572.281067,759.244873   C574.653564,760.415710 577.366821,761.754761 580.080078,763.093750   C580.442383,762.686646 580.804688,762.279480 581.166992,761.872314   C578.044250,758.728821 574.921570,755.585266 571.349060,751.989014   C569.155396,753.113892 565.984558,754.739868 562.315979,756.621094   C562.394104,757.315063 562.566833,758.849792 562.743591,760.419922   C555.087097,761.992310 554.880737,755.543091 552.553894,751.582886   C546.382935,751.487122 546.470398,751.522095 549.002930,745.187500   C549.364685,744.282715 548.403503,742.848999 548.022461,741.327576   C548.003540,739.245911 548.016785,737.496704 548.366699,735.392700   C549.464050,735.362671 550.224731,735.687439 550.986389,736.457275   C551.035095,739.228638 550.757568,741.626709 551.249146,743.855164   C551.557373,745.252502 553.003418,747.391968 553.971497,747.409607   C555.304626,747.433838 556.655762,745.748901 558.023376,744.832214   C558.994080,744.181519 560.004761,743.590332 561.311401,743.136597   C565.149292,744.098816 567.223572,748.546509 572.494568,748.435486   C570.067810,745.157410 568.529053,743.078674 567.101990,740.781433   C567.415344,740.290100 567.677307,740.100891 568.354065,739.992554   C569.469971,739.326660 570.231323,738.663330 570.996338,737.751831   C570.999939,737.503662 571.010010,737.007324 571.010010,737.007324   C572.004150,737.624695 573.063660,738.160339 573.971252,738.886047   C574.664673,739.440491 575.342102,740.917847 575.725647,740.818909   C580.102478,739.689087 581.031799,743.755859 583.674988,745.838135   C583.285522,747.104004 582.194275,748.136536 581.966248,749.333496   C581.695679,750.754272 581.806824,753.456177 582.375549,753.636353   C586.710571,755.009766 587.054871,759.196106 588.782593,762.877319   C587.705200,765.008179 586.844116,766.484192 585.767334,768.074341   C585.280212,768.387512 585.091003,768.646606 584.611084,768.971436   C583.492004,768.984680 582.746033,768.992310 582.000000,769.000000   C580.402039,767.736816 578.804138,766.473572 576.717896,764.824341   C576.428284,766.296326 576.234497,767.281311 576.050049,768.629517  z\",id:\"svg_1031\"})),_path1030||(_path1030=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M488.752075,746.803589   C489.659821,748.754700 490.322815,750.509460 490.607178,752.630981   C485.689819,753.204285 483.533997,756.225342 481.744812,759.980347   C481.497864,759.989563 481.003937,760.007324 480.667542,759.967651   C479.123444,759.074768 477.915741,758.221497 476.387848,757.141968   C475.506836,758.953918 474.763580,760.482605 473.968323,762.337036   C472.954285,763.453430 471.992218,764.244080 471.030212,765.034790   C468.986084,765.423523 466.941925,765.812195 464.138245,766.345398   C464.515320,764.578491 465.087738,761.895996 465.785126,758.627991   C473.524902,763.599365 472.477173,756.270203 475.231689,753.312988   C478.633911,752.611084 481.520477,752.237183 485.003418,751.786011   C484.080109,748.778381 483.040039,745.390381 482.000000,742.002441   C486.017242,741.020874 488.471222,742.757385 488.752075,746.803589  z\",id:\"svg_1032\"})),_path1031||(_path1031=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M530.005615,753.401489   C531.965149,754.779785 533.933411,756.556946 535.949585,758.668274   C534.095581,761.426453 532.193604,763.850464 529.910889,766.759705   C532.157227,769.845215 536.655945,773.261780 530.733093,777.742188   C530.269531,776.233521 529.834595,774.818054 529.290527,773.047180   C527.529541,774.425537 526.216431,775.995728 524.569641,776.521973   C523.697815,776.800659 522.245911,775.264282 521.355408,773.612793   C522.455566,773.535461 523.555786,773.458130 524.836060,773.368164   C519.660767,765.380493 519.715027,764.872681 526.440186,756.181091   C526.879333,756.281860 527.318481,756.382568 527.757629,756.483337   C526.561768,759.803345 525.365906,763.123352 523.856140,767.314880   C530.040588,763.523743 531.487488,759.898621 530.005615,753.401489  z\",id:\"svg_1033\"})),_path1032||(_path1032=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M477.402954,721.998291   C477.004974,721.995117 477.002441,721.497559 476.997437,720.884094   C476.325562,718.517822 475.658630,716.765015 474.991699,715.012207   C480.446960,713.005554 480.601746,718.373413 482.848419,720.638977   C487.706696,718.847717 492.513763,717.075378 497.661652,715.151611   C498.326599,718.754333 498.650787,722.508301 499.001343,726.567871   C495.761108,724.901367 493.068420,723.516418 489.680634,721.774048   C488.693939,723.827332 487.908630,725.699402 486.907288,727.447693   C486.386780,728.356384 485.304993,729.799683 484.792877,729.677429   C483.750488,729.428650 482.777618,728.398560 482.037109,727.480042   C480.589752,725.684753 482.109314,721.614929 477.402954,721.998291  z\",id:\"svg_1034\"})),_path1033||(_path1033=/*#__PURE__*/React.createElement(\"path\",{fill:\"#574432\",opacity:1,stroke:\"none\",d:\" M481.753357,741.838074   C483.040039,745.390381 484.080109,748.778381 485.003418,751.786011   C481.520477,752.237183 478.633911,752.611084 475.376099,752.991272   C474.565338,752.028015 474.125824,751.058533 473.340454,750.029053   C472.244476,748.532349 471.200165,747.170227 470.812714,745.641541   C470.219055,743.299255 470.077850,740.842407 469.744629,738.434143   C472.543915,738.535156 475.349274,738.560913 478.138245,738.787964   C478.873505,738.847900 479.558105,739.529724 480.625671,739.970398   C481.159149,740.567749 481.332916,741.120728 481.753357,741.838074  z\",id:\"svg_1035\"})),_path1034||(_path1034=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M594.717407,776.746338   C595.012695,777.437500 595.028809,777.874939 594.918579,778.933044   C594.518555,780.356934 594.244812,781.160156 593.971008,781.963257   C593.230530,781.966919 592.490051,781.970581 591.357056,781.678589   C590.647095,780.919373 590.329651,780.455811 590.012207,779.992188   C589.539978,779.675781 589.067749,779.359375 588.298889,779.015503   C586.631042,778.268188 585.111572,777.724854 583.952942,776.751892   C583.399963,776.287476 583.532166,775.007141 583.982544,774.013062   C584.739929,772.949951 584.868713,771.970093 585.329895,770.988892   C586.105164,770.981201 586.548096,770.974854 586.991028,770.968506   C591.182190,770.506226 594.558716,771.142090 594.717407,776.746338  z\",id:\"svg_1036\"})),_path1035||(_path1035=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M514.967163,751.100830   C514.903748,752.804260 514.822205,754.096802 514.716125,755.777771   C512.263367,755.012146 509.771729,755.151184 510.647858,751.483582   C511.418915,748.255798 509.674316,746.979004 504.779144,747.820801   C506.526276,745.265808 507.894867,742.428772 508.465607,742.581116   C510.445587,743.109619 512.490051,744.382263 513.839661,745.949158   C514.778503,747.039246 514.618225,749.075989 514.967163,751.100830  z\",id:\"svg_1037\"})),_path1036||(_path1036=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M577.174438,797.628906   C577.065857,796.223450 576.457947,795.047363 576.319580,793.818420   C576.189941,792.666809 576.557312,791.459229 576.705994,790.276306   C577.776672,790.992859 579.122925,791.502136 579.853943,792.474243   C580.971191,793.959961 581.663757,795.765015 582.784973,797.909424   C582.075867,799.244446 581.111755,801.059570 580.416382,802.368713   C577.606201,801.470703 575.164917,800.690552 571.523438,799.526855   C573.743042,798.825928 575.311584,798.330566 577.174438,797.628906  z\",id:\"svg_1038\"})),_path1037||(_path1037=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M522.572388,746.998657   C523.306335,748.420288 523.615112,749.842957 523.963135,751.630371   C518.974854,751.758118 522.154785,755.667175 521.188782,757.956177   C517.995239,755.346008 517.573181,752.053711 518.266724,748.744446   C518.437866,747.927673 520.794983,747.568970 522.572388,746.998657  z\",id:\"svg_1039\"})),_path1038||(_path1038=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M505.004425,715.359863   C505.968079,714.558960 506.931244,714.122742 507.948425,713.342041   C512.409119,713.529541 513.227783,715.257202 509.825958,716.844543   C508.525909,717.451233 507.139648,717.873169 505.483521,718.495483   C505.318451,717.541687 505.161194,716.633057 505.004425,715.359863  z\",id:\"svg_1040\"})),_path1039||(_path1039=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M584.997559,770.990234   C584.868713,771.970093 584.739929,772.949951 584.305542,773.962463   C583.368652,772.560242 582.737305,771.125305 582.052979,769.345215   C582.746033,768.992310 583.492004,768.984680 584.617004,769.309265   C584.996521,770.091125 584.997009,770.540649 584.997559,770.990234  z\",id:\"svg_1041\"})),_path1040||(_path1040=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M498.385132,713.005676   C498.404297,712.128906 498.797638,711.250549 499.190979,710.372192   C499.770569,711.019287 500.350128,711.666321 500.967773,712.653076   C500.257019,712.996460 499.508148,713.000244 498.385132,713.005676  z\",id:\"svg_1042\"})),_path1041||(_path1041=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M517.013672,727.460449   C517.412720,728.045715 517.510681,728.627258 517.608643,729.208740   C517.198242,729.203613 516.787781,729.198486 516.377380,729.193298   C516.489136,728.614441 516.600891,728.035583 517.013672,727.460449  z\",id:\"svg_1043\"})),_path1042||(_path1042=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M507.995819,708.631836   C507.807373,708.096802 507.622070,707.186279 507.720215,706.140076   C508.002075,706.755066 508.000519,707.505676 507.995819,708.631836  z\",id:\"svg_1044\"})),_path1043||(_path1043=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M484.006989,871.350342   C484.756989,870.178406 485.509094,869.390991 486.142090,868.298645   C489.442139,866.332825 492.861267,864.671997 496.641418,863.004333   C495.155396,866.799011 493.308319,870.600403 491.481293,874.360535   C493.567841,876.623962 495.733307,878.972900 497.950012,881.660156   C497.133850,882.332764 496.278168,882.857178 495.393494,882.911743   C495.018494,882.934875 494.648926,881.629333 494.159210,881.534485   C493.375122,881.382446 492.476135,881.673035 491.657745,881.894775   C490.982666,882.077637 490.354004,882.431763 488.604492,883.181519   C490.083649,880.744812 490.934906,879.342468 491.786133,877.940186   C491.331390,878.187683 490.876648,878.435120 490.421906,878.682617   C488.284302,876.366699 486.146698,874.050781 484.006989,871.350342  z\",id:\"svg_1045\"})),_path1044||(_path1044=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M598.357910,773.002319   C597.990417,773.009766 597.495239,772.999390 597.247620,772.994019   C597.171692,769.830688 599.316833,766.726440 597.153931,763.427734   C596.967041,763.142822 598.629822,761.645020 599.313782,760.849731   C600.907410,764.379578 602.121948,767.069824 603.671509,770.502014   C602.267578,771.209595 600.496521,772.102173 598.357910,773.002319  z\",id:\"svg_1046\"})),_path1045||(_path1045=/*#__PURE__*/React.createElement(\"path\",{fill:\"#53413A\",opacity:1,stroke:\"none\",d:\" M585.982971,767.960205   C586.844116,766.484192 587.705200,765.008179 588.792725,763.257629   C589.019226,762.983093 589.514404,762.992920 589.762085,762.996460   C592.308167,768.740112 592.230408,768.913452 587.065552,768.135254   C586.320923,767.980774 586.151917,767.970520 585.982971,767.960205  z\",id:\"svg_1047\"})),_path1046||(_path1046=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M592.181458,763.243408   C591.992859,762.247192 591.995483,761.492004 592.000244,760.358643   C592.899902,760.671814 593.797363,761.363159 594.694763,762.054504   C593.920715,762.531128 593.146729,763.007751 592.181458,763.243408  z\",id:\"svg_1048\"})),_path1047||(_path1047=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M592.002441,758.631592   C591.169128,758.640808 590.335815,758.274231 589.502502,757.907654   C590.109253,757.274170 590.716003,756.640686 591.660156,756.004883   C591.999146,756.753601 592.000793,757.504700 592.002441,758.631592  z\",id:\"svg_1049\"})),_path1048||(_path1048=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M585.767334,768.074341   C586.151917,767.970520 586.320923,767.980774 586.743774,768.000427   C586.996826,768.749817 586.996094,769.489807 586.993164,770.599121   C586.548096,770.974854 586.105164,770.981201 585.329895,770.988892   C584.997009,770.540649 584.996521,770.091125 584.989990,769.303711   C585.091003,768.646606 585.280212,768.387512 585.767334,768.074341  z\",id:\"svg_1050\"})),_path1049||(_path1049=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M500.000610,857.000488   C500.078705,856.209229 500.156158,855.417542 500.233612,854.625916   C500.542816,854.502319 500.852051,854.378723 501.161255,854.255066   C501.669922,855.193665 502.178589,856.132202 502.687256,857.070801   C501.986084,857.125916 501.284882,857.180969 500.291260,857.117065   C499.998779,856.998169 500.000000,857.000000 500.000610,857.000488  z\",id:\"svg_1051\"})),_path1050||(_path1050=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M594.277283,782.097290   C594.244812,781.160156 594.518555,780.356934 594.935181,779.260925   C595.671082,779.877014 596.264282,780.786011 596.857422,781.694946   C596.099487,781.873718 595.341492,782.052551 594.277283,782.097290  z\",id:\"svg_1052\"})),_path1051||(_path1051=/*#__PURE__*/React.createElement(\"path\",{fill:\"#47352B\",opacity:1,stroke:\"none\",d:\" M589.897949,780.266846   C590.329651,780.455811 590.647095,780.919373 590.986816,781.676941   C590.493408,782.100891 589.977722,782.230774 589.462097,782.360718   C589.569336,781.754333 589.676514,781.147888 589.897949,780.266846  z\",id:\"svg_1053\"})),_path1052||(_path1052=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M487.269073,817.180359   C488.961639,817.411011 490.927887,817.848816 492.955048,818.634033   C492.690308,819.089172 492.424927,819.280518 492.109314,819.777710   C490.513458,819.129150 489.028137,818.258301 487.269073,817.180359  z\",id:\"svg_1054\"})),_path1053||(_path1053=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2D23\",opacity:1,stroke:\"none\",d:\" M485.003662,832.000000   C481.610809,833.532349 480.865875,831.040649 480.003357,828.359985   C481.414825,828.338806 482.834564,828.672668 484.626160,829.384277   C484.999939,830.508057 485.001801,831.254028 485.003662,832.000000  z\",id:\"svg_1055\"})),_path1054||(_path1054=/*#__PURE__*/React.createElement(\"path\",{fill:\"#35221B\",opacity:1,stroke:\"none\",d:\" M485.247192,832.001221   C485.001801,831.254028 484.999939,830.508057 484.995361,829.389587   C485.296082,828.490967 485.599518,827.964905 485.903015,827.438843   C486.265533,828.067566 486.628082,828.696350 486.994690,829.658875   C486.677460,830.464844 486.356110,830.937012 486.006256,831.708252   C485.977753,832.007324 485.490723,832.002441 485.247192,832.001221  z\",id:\"svg_1056\"})),_path1055||(_path1055=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M485.678986,817.021606   C486.020752,817.029297 486.019531,817.475464 486.019836,817.697632   C485.220306,818.098022 484.420502,818.276123 483.620667,818.454285   C484.192841,817.974182 484.765045,817.494019 485.678986,817.021606  z\",id:\"svg_1057\"})),_path1056||(_path1056=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M655.565552,841.082886   C656.383240,843.325134 656.902710,845.727234 657.370911,847.892395   C659.250061,848.187805 661.762207,848.582703 664.636719,848.988770   C664.999023,849.000000 665.006165,848.979004 665.006165,848.979004   C661.831116,853.088379 658.672485,857.210938 655.421204,861.259155   C655.291260,861.420959 653.749084,860.810791 653.766235,860.672302   C653.931641,859.339111 654.290771,858.030029 653.678772,855.856079   C652.482483,857.321350 651.286133,858.786682 650.023560,860.592041   C648.890381,860.763245 647.823425,860.594482 646.931030,860.453247   C647.866150,857.758667 648.722595,855.413391 649.412415,853.019958   C649.457092,852.864929 648.218872,852.340210 647.231445,851.953247   C647.177917,846.396362 652.476379,844.803833 655.565552,841.082886  z\",id:\"svg_1058\"})),_path1057||(_path1057=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M710.000000,843.000000   C709.691406,845.905579 709.382751,848.811157 709.075989,851.699280   C706.321228,849.818298 703.534485,847.915466 700.376343,846.008789   C700.004883,846.004883 700.000000,846.000000 699.998230,845.623291   C699.997620,844.497681 699.998840,843.748840 700.311157,842.862488   C702.170166,841.843201 703.718140,840.961426 704.914490,840.279907   C706.868835,841.325195 708.434448,842.162598 710.000000,843.000000  z\",id:\"svg_1059\"})),_path1058||(_path1058=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M667.984375,848.995117   C669.102295,848.765747 670.410034,848.829102 671.301758,848.250854   C673.767334,846.651978 675.814514,847.677429 676.417175,849.781555   C676.766357,851.000610 674.931152,852.845398 674.078979,854.408630   C673.577087,854.148010 673.075195,853.887390 672.573303,853.626831   C673.001770,852.453613 673.430176,851.280396 674.081116,849.498047   C672.834351,849.915344 671.928650,850.055481 671.205078,850.495239   C669.783630,851.359070 668.304810,853.032776 668.003479,849.340820   C668.000000,849.000000 667.984375,848.995117 667.984375,848.995117  z\",id:\"svg_1060\"})),_path1059||(_path1059=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M703.998779,858.001160   C708.911987,860.172668 709.949219,861.766724 707.994385,865.191223   C706.568726,862.890686 705.284790,860.818848 704.001587,858.372314   C704.002441,857.997559 704.000000,858.000000 703.998779,858.001160  z\",id:\"svg_1061\"})),_path1060||(_path1060=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6F4B30\",opacity:1,stroke:\"none\",d:\" M667.997559,848.992249   C667.247864,848.980103 666.500549,848.975708 665.379761,848.975098   C665.006165,848.979004 664.999023,849.000000 665.009705,848.996826   C664.340271,847.932312 663.318176,846.937073 663.096069,845.787354   C662.938782,844.972778 663.863098,843.949341 664.652283,843.009521   C665.000000,843.000000 664.988953,842.989746 664.988953,842.989746   C665.962036,844.756714 666.935181,846.523682 667.946289,848.642883   C667.984375,848.995117 668.000000,849.000000 667.997559,848.992249  z\",id:\"svg_1062\"})),_path1061||(_path1061=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M691.004639,849.004639   C690.514221,850.240479 690.018677,851.471191 689.523132,852.701843   C688.981262,852.375061 688.439331,852.048279 687.897461,851.721436   C688.680603,850.816223 689.463806,849.911011 690.617798,848.997070   C690.988586,848.988464 690.999512,848.999451 691.004639,849.004639  z\",id:\"svg_1063\"})),_path1062||(_path1062=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M678.386841,878.950073   C679.249512,878.054565 680.142517,877.490967 681.035461,876.927368   C681.276978,877.503296 681.518494,878.079163 681.760010,878.655090   C680.645691,878.864014 679.531433,879.072937 678.386841,878.950073  z\",id:\"svg_1064\"})),_path1063||(_path1063=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M672.000366,880.989868   C672.408569,880.052734 672.817078,879.125000 673.225586,878.197205   C673.686768,878.500916 674.147888,878.804626 674.609009,879.108398   C673.972412,879.714417 673.335815,880.320435 672.359375,880.962830   C672.019531,880.999207 672.000793,880.999268 672.000366,880.989868  z\",id:\"svg_1065\"})),_path1064||(_path1064=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M698.002441,876.997559   C697.692932,878.101074 697.383423,879.204529 697.040649,880.652832   C696.652405,879.895203 696.297485,878.792847 696.307983,877.349365   C697.116455,877.004639 697.559448,877.001099 698.002441,876.997559  z\",id:\"svg_1066\"})),_path1065||(_path1065=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M698.001221,876.998779   C697.559448,877.001099 697.116455,877.004639 696.341492,877.016113   C696.432251,876.018616 696.855042,875.013062 697.638794,874.003723   C697.999756,873.999939 698.010010,874.012207 697.908508,874.259888   C697.870972,875.339172 697.934937,876.170776 697.998901,877.002441   C697.998901,877.002441 698.000000,877.000000 698.001221,876.998779  z\",id:\"svg_1067\"})),_path1066||(_path1066=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M713.150452,852.857483   C713.131042,853.667419 712.878418,854.245178 712.625793,854.822998   C712.145203,854.342224 711.664551,853.861450 711.183899,853.380737   C711.761658,853.128967 712.339417,852.877136 713.150452,852.857483  z\",id:\"svg_1068\"})),_path1067||(_path1067=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6F4B30\",opacity:1,stroke:\"none\",d:\" M665.005127,843.005432   C665.502563,842.032227 665.994934,841.053528 666.487305,840.074829   C666.910034,840.379028 667.332764,840.683228 667.755554,840.987366   C667.050903,841.630432 666.346313,842.273499 665.315308,842.953125   C664.988953,842.989746 665.000000,843.000000 665.005127,843.005432  z\",id:\"svg_1069\"})),_path1068||(_path1068=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M676.190552,882.801636   C676.518555,882.152344 676.908936,881.806152 677.299316,881.459961   C677.443481,882.007690 677.587769,882.555420 677.731995,883.103210   C677.238953,883.103699 676.745972,883.104187 676.190552,882.801636  z\",id:\"svg_1070\"})),_path1069||(_path1069=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M696.655884,868.006409   C696.460632,868.614685 695.921326,869.229492 695.382080,869.844238   C695.078491,869.564209 694.774841,869.284119 694.471191,869.004028   C695.084717,868.673645 695.698242,868.343262 696.655884,868.006409  z\",id:\"svg_1071\"})),_path1070||(_path1070=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M697.992859,873.992981   C698.287415,873.145630 698.588867,872.305237 698.890259,871.464783   C699.256592,872.077576 699.622986,872.690430 699.662964,873.653320   C698.894348,874.006348 698.452209,874.009277 698.010010,874.012207   C698.010010,874.012207 697.999756,873.999939 697.992859,873.992981  z\",id:\"svg_1072\"})),_path1071||(_path1071=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M697.313110,867.960388   C697.310120,867.203186 697.620178,866.406372 697.930237,865.609558   C698.264099,865.759033 698.597961,865.908569 698.931824,866.058044   C698.496643,866.678955 698.061401,867.299866 697.313110,867.960388  z\",id:\"svg_1073\"})),_path1072||(_path1072=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M682.997192,883.673462   C682.833313,883.999390 682.666687,883.998840 682.250000,883.999146   C681.785828,883.211609 681.571716,882.423279 681.357544,881.634888   C681.613281,881.540344 681.869019,881.445801 682.124695,881.351257   C682.414612,882.016479 682.704529,882.681641 682.997192,883.673462  z\",id:\"svg_1074\"})),_path1073||(_path1073=/*#__PURE__*/React.createElement(\"path\",{fill:\"#603D21\",opacity:1,stroke:\"none\",d:\" M661.606812,859.057739   C661.244202,859.350403 660.884827,859.390747 660.525452,859.431091   C660.528748,859.174927 660.532043,858.918823 660.535339,858.662659   C660.893555,858.710205 661.251770,858.757812 661.606812,859.057739  z\",id:\"svg_1075\"})),_path1074||(_path1074=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M682.379761,874.968689   C682.783691,874.721802 683.183594,874.726318 683.583435,874.730774   C683.581177,874.896790 683.586975,875.207397 683.575562,875.208069   C683.176575,875.230164 682.776001,875.223022 682.379761,874.968689  z\",id:\"svg_1076\"})),_path1075||(_path1075=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M692.650757,873.115967   C692.361938,872.834351 692.242371,872.415833 692.182007,871.989014   C692.171692,871.916260 692.414368,871.807678 692.540161,871.715576   C692.640076,872.135864 692.739990,872.556091 692.650757,873.115967  z\",id:\"svg_1077\"})),_path1076||(_path1076=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M697.908508,874.259888   C698.452209,874.009277 698.894348,874.006348 699.668274,874.001709   C699.529785,874.912476 699.059570,875.825012 698.294067,876.869995   C697.934937,876.170776 697.870972,875.339172 697.908508,874.259888  z\",id:\"svg_1078\"})),_path1077||(_path1077=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M724.026367,861.982666   C724.177124,862.427856 724.299011,862.895813 724.420898,863.363831   C724.278076,863.091125 724.135254,862.818359 723.967896,862.300659   C723.943420,862.055664 723.997375,862.005432 724.026367,861.982666  z\",id:\"svg_1079\"})),_path1078||(_path1078=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M709.991943,842.625916   C708.434448,842.162598 706.868835,841.325195 704.914490,840.279907   C703.718140,840.961426 702.170166,841.843201 700.311157,842.862488   C700.781738,841.337219 701.563477,839.674377 702.163818,838.397400   C701.617432,836.880676 700.270691,834.857361 700.761047,834.195679   C702.536194,831.800720 703.452942,833.778503 704.545715,835.368469   C706.198364,837.772949 708.155945,839.967834 709.991943,842.625916  z\",id:\"svg_1080\"})),_path1079||(_path1079=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M699.994751,857.642029   C699.121399,857.440247 698.242798,856.880493 697.364258,856.320740   C697.762451,855.936584 698.160706,855.552368 698.558899,855.168213   C699.035767,855.873474 699.512634,856.578735 699.994751,857.642029  z\",id:\"svg_1081\"})),_path1080||(_path1080=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M699.653809,843.000488   C699.998840,843.748840 699.997620,844.497681 699.995789,845.620850   C699.126160,845.461670 698.257202,844.928162 697.388245,844.394653   C698.028015,843.930115 698.667786,843.465576 699.653809,843.000488  z\",id:\"svg_1082\"})),_path1081||(_path1081=/*#__PURE__*/React.createElement(\"path\",{fill:\"#574432\",opacity:1,stroke:\"none\",d:\" M427.695038,706.011353   C431.137787,705.953491 434.250824,705.953491 438.313629,705.953491   C438.839172,706.397644 440.202820,707.550049 441.959229,709.034424   C440.293243,709.765747 438.916473,710.370117 436.831635,711.285278   C437.435547,715.930420 438.044312,720.612610 438.795624,725.638550   C438.653870,727.086060 438.369568,728.189941 438.050903,730.015015   C438.009827,731.489807 438.003052,732.243469 437.619629,733.007568   C435.824951,735.340210 434.406921,737.662415 432.988953,739.984619   C432.884277,740.308105 432.694427,740.569824 432.198120,740.877319   C430.151001,741.234192 428.325165,741.483459 426.499329,741.732666   C426.874176,739.857300 427.249023,737.981873 427.774963,735.350708   C427.510284,735.136169 426.366211,734.208679 425.045013,733.137634   C431.173706,730.807495 432.575745,726.256775 430.031982,719.872192   C428.446045,715.891785 427.504974,711.650146 426.385254,707.495850   C426.287903,707.134583 427.019043,706.549988 427.695038,706.011353  z\",id:\"svg_1083\"})),_path1082||(_path1082=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2E231C\",opacity:1,stroke:\"none\",d:\" M481.003937,760.007324   C481.003937,760.007324 481.497864,759.989563 482.065002,760.030762   C483.082001,760.710388 483.531860,761.348816 483.649231,762.036987   C481.218292,764.060608 479.119812,766.034546 477.021362,768.008545   C475.049927,769.110901 473.078461,770.213257 471.044678,771.664917   C470.636505,771.049377 469.953278,770.056946 470.029358,769.126648   C470.126526,767.938354 470.836517,766.800110 471.156250,765.337524   C471.992218,764.244080 472.954285,763.453430 474.320740,762.299316   C476.818115,761.293030 478.911011,760.650208 481.003937,760.007324  z\",id:\"svg_1084\"})),_path1083||(_path1083=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M433.367432,739.983887   C434.406921,737.662415 435.824951,735.340210 437.620514,733.338501   C437.992523,734.099854 437.986969,734.540710 437.981415,734.981628   C436.569611,736.648804 435.157806,738.315979 433.367432,739.983887  z\",id:\"svg_1085\"})),_path1084||(_path1084=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M438.338898,734.981201   C437.986969,734.540710 437.992523,734.099854 437.997192,733.328003   C438.003052,732.243469 438.009827,731.489807 438.030334,730.359131   C441.094055,732.286621 441.246124,733.451904 438.338898,734.981201  z\",id:\"svg_1086\"})),_path1085||(_path1085=/*#__PURE__*/React.createElement(\"path\",{fill:\"#312216\",opacity:1,stroke:\"none\",d:\" M405.889160,712.675171   C405.248810,711.589966 404.662964,710.110718 404.148499,708.226318   C404.794495,709.307800 405.369080,710.794495 405.889160,712.675171  z\",id:\"svg_1087\"})),_path1086||(_path1086=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M414.506866,704.334106   C413.963928,703.989563 413.638275,703.429626 413.312622,702.869751   C413.591095,702.742126 413.869568,702.614441 414.148010,702.486816   C414.340027,703.030762 414.532074,703.574768 414.506866,704.334106  z\",id:\"svg_1088\"})),_path1087||(_path1087=/*#__PURE__*/React.createElement(\"path\",{fill:\"#513926\",opacity:1,stroke:\"none\",d:\" M224.795868,822.739014   C225.639938,825.052185 226.300369,827.129517 227.044983,829.561340   C225.378799,829.528687 223.628464,829.141663 221.241730,828.613831   C223.473297,826.924683 218.821808,822.419861 224.795868,822.739014  z\",id:\"svg_1089\"})),_path1088||(_path1088=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6F4B30\",opacity:1,stroke:\"none\",d:\" M235.741058,837.990234   C236.580612,839.142151 237.168884,840.275696 237.888184,841.701050   C237.011597,840.900330 236.003952,839.807800 234.991089,838.346863   C235.153824,837.976257 235.321793,837.974060 235.741058,837.990234  z\",id:\"svg_1090\"})),_path1089||(_path1089=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M220.526520,833.382751   C220.581650,832.915588 220.813049,832.631592 221.044479,832.347595   C221.226028,832.535828 221.407562,832.724060 221.589081,832.912292   C221.293655,833.130127 220.998245,833.347961 220.526520,833.382751  z\",id:\"svg_1091\"})),_path1090||(_path1090=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M210.633209,847.401794   C210.484146,847.210144 210.503464,846.896362 210.522797,846.582581   C210.615723,846.814941 210.708649,847.047302 210.633209,847.401794  z\",id:\"svg_1092\"})),_path1091||(_path1091=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M216.691452,847.329224   C216.983353,847.343689 217.145157,847.501831 217.306976,847.660034   C217.058426,847.597717 216.809891,847.535339 216.691452,847.329224  z\",id:\"svg_1093\"})),_path1092||(_path1092=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M286.950500,375.322418   C286.920563,373.845245 286.840118,372.712799 286.798950,372.133331   C283.755615,371.752441 281.055206,371.414459 278.368591,371.078217   C278.472565,369.943512 278.501770,369.625031 278.530945,369.306549   C282.907074,370.213440 285.951263,367.902374 289.047028,365.304596   C289.509338,364.916656 291.447205,366.287079 292.300446,366.665680   C292.894623,365.017548 293.599213,363.063202 294.644501,361.433350   C295.209778,362.718384 295.434326,363.678955 295.818390,365.321991   C296.771118,363.807312 297.213562,362.974854 297.775330,362.232727   C300.483521,358.654999 303.168274,358.175140 306.122467,362.094269   C307.020325,363.285400 308.554535,363.996857 309.797302,364.928009   C309.967163,365.212982 310.259277,365.485718 310.289093,365.784637   C311.060242,373.508270 315.307892,379.482635 320.044617,385.573792   C315.348663,388.181244 315.575623,382.356293 313.859192,382.411896   C311.075043,385.612366 308.276184,388.800232 305.518768,392.023560   C304.937195,392.703430 304.507751,393.513397 304.004089,394.631439   C304.000000,394.999420 304.016724,395.005890 304.016724,395.005890   C302.936951,394.110870 301.857178,393.215851 300.125427,391.780396   C298.563019,393.740204 294.993469,395.302460 295.596100,400.066681   C295.718658,401.035431 292.891876,402.580963 291.227509,403.505676   C289.964569,404.207367 288.388519,404.345428 286.593750,404.831177   C284.592834,402.289581 285.334259,400.931946 291.119263,398.602600   C290.730042,397.750031 290.433472,396.853363 289.938080,396.084869   C289.444916,395.319855 288.752075,394.683563 288.663239,393.095520   C289.840759,393.541931 291.018280,393.988342 292.383331,394.505859   C292.383331,392.668976 292.383331,390.813843 292.383331,388.656616   C291.273804,388.656616 289.936646,388.656616 288.319611,388.656616   C289.313721,386.777588 290.131409,385.231995 291.192444,383.234009   C291.693756,382.597565 291.874084,382.355682 292.205994,381.936646   C292.626007,381.537018 292.816864,381.256714 293.005554,380.990295   C293.003387,381.004150 292.975464,381.001831 293.341675,380.958130   C294.760437,380.105255 295.812988,379.296082 296.865540,378.486938   C295.857574,377.992554 294.849609,377.498169 293.655304,376.900208   C293.239777,376.611847 293.084839,376.377899 292.994202,375.816040   C292.322418,375.693634 291.660614,375.849945 290.996704,376.259644   C290.990326,376.681885 290.986023,376.850769 290.651428,377.014832   C289.547150,377.997253 288.773163,378.984497 287.980591,380.272888   C287.644806,381.050446 287.327576,381.526855 287.010345,382.003265   C286.146973,379.905640 283.972351,377.830841 286.950500,375.322418  M300.384399,378.675995   C301.082367,378.957947 301.780334,379.239899 302.478302,379.521851   C302.545441,378.933899 302.612549,378.345947 302.679657,377.757996   C302.004913,377.863708 301.330139,377.969452 300.384399,378.675995  M304.809143,387.241028   C304.867432,387.415070 304.925720,387.589081 304.984009,387.763123   C305.040710,387.587952 305.097443,387.412781 304.809143,387.241028  M302.516235,389.409485   C302.516235,389.409485 302.585541,389.523743 302.516235,389.409485  M298.654968,381.525391   C298.654968,381.525391 298.449524,381.415466 298.449524,381.415466   C298.449524,381.415466 298.484802,381.646271 298.654968,381.525391  z\",id:\"svg_1094\",className:\"\"})),_path1093||(_path1093=/*#__PURE__*/React.createElement(\"path\",{fill:\"#705247\",opacity:1,stroke:\"none\",d:\" M320.054199,386.304596   C323.324951,387.867035 326.773895,389.553650 329.753601,391.849304   C331.574768,393.252380 332.349670,396.035675 334.191315,397.383667   C335.989960,398.700165 338.547028,398.980499 340.982635,399.785614   C338.547882,405.415405 334.080444,406.577637 329.429749,407.710846   C329.018555,406.596161 329.004364,405.815216 328.967651,404.685181   C328.616760,403.231354 328.288361,402.126678 327.959961,401.022003   C327.971741,400.565308 327.983551,400.108643 328.272491,399.446960   C329.178558,399.646271 329.807495,400.050598 330.756042,400.660339   C330.066010,398.157715 329.508820,396.136902 328.806183,393.833557   C327.781921,393.706696 326.903168,393.862396 326.015930,394.014954   C326.007477,394.011810 326.024323,394.038330 325.656189,394.025513   C324.193939,393.668701 323.099762,393.324707 322.005585,392.980713   C321.348572,390.882385 320.691528,388.784027 320.054199,386.304596  z\",id:\"svg_1095\"})),_path1094||(_path1094=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M293.004181,376.094727   C293.084839,376.377899 293.239777,376.611847 293.670441,377.244751   C293.573059,378.795868 293.274261,379.898865 292.975464,381.001831   C292.975464,381.001831 293.003387,381.004150 292.766968,381.096375   C292.345978,381.477692 292.161407,381.766815 291.976837,382.055939   C291.874084,382.355682 291.693756,382.597565 291.229370,382.879883   C289.850250,383.405396 288.320099,383.500488 287.563843,384.314545   C283.203186,389.008484 282.964111,389.081146 277.896362,384.465454   C280.435547,382.513489 282.569000,379.955139 286.639832,381.968262   C287.327576,381.526855 287.644806,381.050446 288.351807,380.268372   C289.488251,378.981689 290.234955,378.000671 290.981689,377.019653   C290.986023,376.850769 290.990326,376.681885 291.331299,376.264557   C292.113403,376.042297 292.558807,376.068512 293.004181,376.094727  z\",id:\"svg_1096\"})),_path1095||(_path1095=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M325.952759,408.039551   C324.007324,410.825439 321.655762,413.596375 318.776123,416.680298   C317.772705,417.383911 317.297455,417.774506 316.822205,418.165100   C316.582062,418.291199 316.326569,418.360168 315.865295,418.363708   C315.674957,418.355438 315.317352,418.187164 315.049927,417.870453   C314.592865,417.272125 314.336426,417.079376 314.013153,416.975464   C314.013153,416.975464 314.050720,416.528809 314.054443,416.305603   C314.058167,416.082367 314.045105,416.045563 314.256897,415.951904   C314.331848,415.524414 314.194977,415.190582 314.058136,414.856750   C313.855652,413.672058 313.653168,412.487366 313.450684,411.302643   C314.061676,410.823792 314.672699,410.344940 315.283722,409.866089   C315.734833,411.458588 316.185974,413.051086 316.629883,414.618195   C320.220886,411.962799 322.883759,409.993683 325.952759,408.039551  z\",id:\"svg_1097\"})),_path1096||(_path1096=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M304.002777,395.007324   C304.605682,394.997833 305.337952,394.749268 305.782806,395.003479   C307.585785,396.033844 309.300415,397.218719 311.650391,398.735687   C310.296082,398.922546 308.280334,398.915558 306.470795,399.522858   C304.226562,400.276093 302.099457,401.443970 300.030640,402.623657   C299.125793,403.139648 298.490967,404.129150 297.366760,404.951782   C297.000000,405.000000 296.997559,404.997559 296.997559,404.997559   C298.551453,402.751740 300.068390,400.478943 301.676941,398.272949   C302.345947,397.355438 303.210449,396.580475 304.001404,395.373291   C304.016724,395.005890 304.000000,394.999420 304.002777,395.007324  z\",id:\"svg_1098\"})),_path1097||(_path1097=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M328.990143,405.034302   C329.004364,405.815216 329.018555,406.596161 329.055542,407.770538   C328.579926,408.181549 328.081543,408.199097 327.208801,408.175781   C324.511536,405.495361 322.188629,402.855865 319.865692,400.216370   C320.092041,399.884125 320.318359,399.551880 320.544678,399.219635   C321.496307,399.716034 322.447968,400.212433 323.936249,400.883911   C324.472870,401.059021 324.955811,401.037842 324.955811,401.037842   C324.955811,401.037842 324.994873,400.999664 325.018677,401.378357   C326.358398,402.849457 327.674286,403.941864 328.990143,405.034302  z\",id:\"svg_1099\"})),_path1098||(_path1098=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M321.672638,393.027466   C323.099762,393.324707 324.193939,393.668701 325.660095,394.420685   C326.016632,395.884552 326.001129,396.940460 325.985626,397.996338   C322.188843,396.826111 320.459137,394.993591 321.672638,393.027466  z\",id:\"svg_1100\"})),_path1099||(_path1099=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M274.970337,392.029358   C274.225952,392.020172 273.481537,392.010986 272.364655,391.996979   C271.992157,391.992157 272.000000,392.000000 272.003998,392.003967   C271.169525,390.257782 270.331055,388.507660 269.492554,386.757507   C269.800262,386.455750 270.107971,386.154022 270.415649,385.852264   C271.953247,387.647308 273.490845,389.442352 275.013153,391.619812   C274.997864,392.002197 274.970337,392.029358 274.970337,392.029358  z\",id:\"svg_1101\"})),_path1100||(_path1100=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M326.284149,398.016846   C326.001129,396.940460 326.016632,395.884552 326.028229,394.433502   C326.024323,394.038330 326.007477,394.011810 326.382050,394.032196   C327.488312,394.073761 328.219971,394.094940 328.951660,394.116119   C329.508820,396.136902 330.066010,398.157715 330.756042,400.660339   C329.807495,400.050598 329.178558,399.646271 328.282135,399.104462   C327.537323,398.657074 327.059998,398.347198 326.284149,398.016846  z\",id:\"svg_1102\"})),_path1101||(_path1101=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M271.530640,381.286926   C272.901978,382.606720 273.943420,383.788605 274.984833,384.970490   C274.709595,385.229858 274.434387,385.489227 274.159149,385.748566   C272.330261,384.569122 270.501404,383.389679 268.004242,381.779236   C269.357025,381.512543 270.278870,381.330811 271.530640,381.286926  z\",id:\"svg_1103\"})),_path1102||(_path1102=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M328.967651,404.685181   C327.674286,403.941864 326.358398,402.849457 325.004181,401.400757   C325.715027,401.031982 326.464203,401.019562 327.586670,401.014557   C328.288361,402.126678 328.616760,403.231354 328.967651,404.685181  z\",id:\"svg_1104\"})),_path1103||(_path1103=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M275.011719,391.988892   C275.899200,392.546326 276.772766,393.117065 277.646362,393.687775   C277.246704,394.072021 276.847015,394.456268 276.447327,394.840485   C275.965515,394.139435 275.483704,393.438354 274.986145,392.383331   C274.970337,392.029358 274.997864,392.002197 275.011719,391.988892  z\",id:\"svg_1105\"})),_path1104||(_path1104=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M297.001221,405.001221   C296.449036,405.616333 295.895630,406.230225 295.342224,406.844116   C295.034058,406.551483 294.725861,406.258820 294.417694,405.966187   C295.043671,405.638275 295.669617,405.310394 296.646576,404.990051   C296.997559,404.997559 297.000000,405.000000 297.001221,405.001221  z\",id:\"svg_1106\"})),_path1105||(_path1105=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M304.896973,403.266663   C304.796265,403.752808 304.652161,404.007874 304.508057,404.262939   C304.365173,404.008148 304.055969,403.691742 304.121704,403.514191   C304.203094,403.294464 304.595520,403.189911 304.896973,403.266663  z\",id:\"svg_1107\"})),_path1106||(_path1106=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M324.955566,400.780457   C324.955811,401.037842 324.472870,401.059021 324.231567,401.043549   C324.199646,400.619537 324.409058,400.211029 324.618530,399.802521   C324.730804,400.042694 324.843079,400.282898 324.955566,400.780457  z\",id:\"svg_1108\"})),_path1107||(_path1107=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M314.042725,415.145447   C314.194977,415.190582 314.331848,415.524414 314.263947,415.934906   C314.048553,415.819092 314.037933,415.626648 314.042725,415.145447  z\",id:\"svg_1109\"})),_path1108||(_path1108=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M339.009583,412.024994   C339.192322,412.019409 339.375061,412.013855 340.140167,412.046661   C341.147552,412.722534 341.572571,413.360046 341.668335,414.034119   C340.897095,415.394165 340.455078,416.717590 340.008118,418.414917   C339.461975,420.052887 338.920746,421.317047 338.379517,422.581207   C337.918823,422.040131 337.458099,421.499023 337.142395,420.656281   C337.425354,419.422699 337.563263,418.490753 337.848846,416.560852   C335.176544,419.094513 333.178802,420.706146 331.578217,422.645538   C330.940247,423.418549 331.180023,424.916046 331.193909,426.311340   C331.908112,426.693054 332.448547,426.847137 332.860229,427.313293   C331.591705,431.488312 334.763855,429.410797 336.034546,430.288971   C336.470642,430.888977 336.873352,431.198761 337.276093,431.508575   C337.366302,431.248383 337.577209,430.788635 337.528015,430.758850   C337.042999,430.465454 336.514740,430.243469 336.001495,429.751221   C336.005646,429.334564 336.007111,429.167877 336.343140,429.000427   C337.123901,428.998840 337.570068,428.998077 338.359192,429.030762   C339.799866,429.375732 340.897491,429.687225 342.373596,430.005493   C348.117004,432.589722 348.117004,432.589722 345.618347,436.897980   C345.166779,435.306335 344.715240,433.714691 344.263672,432.123047   C342.125122,434.215485 340.762909,434.999969 340.186127,436.171265   C339.671783,437.215790 340.025909,438.687958 340.032654,440.347351   C343.159576,451.520996 334.964661,445.022552 331.565369,445.873627   C331.206512,446.387665 330.847656,446.901703 330.488770,447.415741   C332.322845,448.603546 334.156891,449.791382 335.649323,451.018738   C333.539703,452.706329 331.771667,454.354401 329.705078,456.035034   C329.208344,456.095947 329.010132,456.124268 328.528076,456.071350   C326.082031,455.484711 330.763397,451.191956 325.806885,452.052704   C325.349762,452.014465 325.166840,452.004822 325.105469,451.702332   C324.147095,449.598480 323.067169,447.787445 322.130463,445.659485   C322.516815,444.227264 322.759918,443.111969 323.001526,441.998352   C323.000000,442.000000 322.997955,442.002838 323.368958,441.998169   C326.534698,439.485657 329.329437,436.977844 332.124207,434.470032   C326.697815,435.809082 323.225494,434.206055 319.000885,427.582275   C319.133698,426.798431 319.252350,426.358063 319.371002,425.917664   C320.049683,425.654327 321.342590,425.255096 321.318726,425.147217   C320.300171,420.543671 323.312897,419.706543 326.745667,418.856201   C328.375000,418.452606 329.786926,417.171509 331.994080,416.144592   C334.797089,414.675842 336.903320,413.350403 339.009583,412.024994  z\",id:\"svg_1110\"})),_path1109||(_path1109=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M303.979858,455.004242   C299.450623,450.744751 302.617889,447.211304 305.100708,443.235168   C305.891907,441.646790 306.637268,440.432159 307.577545,438.899841   C308.807587,439.869904 309.787415,440.642639 310.767242,441.415375   C310.338043,441.022369 309.908875,440.629333 309.479706,440.236298   C310.544220,438.386597 311.608765,436.536926 312.673279,434.687225   C313.440125,435.589630 314.206940,436.492065 314.973755,437.394470   C314.973755,435.822357 314.973755,434.250275 315.333130,432.395142   C317.024658,434.001038 318.356812,435.889923 319.684845,437.773041   C318.754608,438.823242 317.859406,439.833923 317.454224,440.291351   C319.591675,440.951233 321.294800,441.477020 322.997955,442.002838   C322.997955,442.002838 323.000000,442.000000 322.677429,442.029480   C321.548065,442.377319 320.741302,442.695648 319.651459,443.141785   C314.749146,445.699707 320.459412,446.996765 319.603210,448.982513   C317.142517,449.994720 315.072418,450.995697 312.878784,451.793762   C312.407379,451.604797 312.059479,451.618744 311.711609,451.632690   C312.139771,451.756409 312.567963,451.880127 312.953217,452.341431   C311.612152,453.445557 310.313995,454.212097 308.953918,454.845703   C308.805664,454.665405 308.719391,454.617981 308.633118,454.570587   C308.747833,454.719360 308.862549,454.868134 308.971710,455.284241   C308.286774,455.695984 307.607361,455.840332 306.733826,455.720093   C305.686432,455.305054 304.833130,455.154633 303.979858,455.004242  z\",id:\"svg_1111\"})),_path1110||(_path1110=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M341.997559,413.997559   C341.572571,413.360046 341.147552,412.722534 340.414368,412.044556   C340.031036,410.866669 339.955902,409.729279 339.808075,408.167419   C339.735413,407.742981 339.792664,407.773346 340.143494,407.975220   C344.132019,411.576630 345.999481,408.823639 348.115967,405.936218   C348.598022,405.525879 348.827087,405.236298 349.372314,404.918274   C350.566437,404.407196 351.444458,403.924561 352.305817,403.451019   C352.427551,405.877533 352.530426,407.928650 352.639984,410.112396   C351.633911,410.705536 350.514252,411.365601 348.946808,412.289703   C350.935242,413.313904 352.357849,414.046692 353.332733,414.548828   C353.591980,416.977386 353.807404,418.995117 354.015137,421.348389   C354.007507,422.466156 354.007507,423.248413 354.007507,423.516266   C350.839417,422.646606 347.889526,421.836823 345.139832,420.753265   C346.978424,419.149445 348.255829,417.854614 345.000610,417.000610   C345.000000,417.000000 344.998779,416.998779 344.990967,416.627838   C343.989594,415.505402 342.996033,414.753937 342.001221,414.001221   C342.000000,414.000000 341.997559,413.997559 341.997559,413.997559  z\",id:\"svg_1112\"})),_path1111||(_path1111=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M323.368958,441.998169   C321.294800,441.477020 319.591675,440.951233 317.454224,440.291351   C317.859406,439.833923 318.754608,438.823242 319.684845,437.773041   C318.356812,435.889923 317.024658,434.001038 315.390167,432.097656   C314.651215,431.740143 314.214661,431.397064 313.658661,430.738770   C315.355072,429.590942 317.170898,428.758362 318.986725,427.925751   C323.225494,434.206055 326.697815,435.809082 332.124207,434.470032   C329.329437,436.977844 326.534698,439.485657 323.368958,441.998169  z\",id:\"svg_1113\"})),_path1112||(_path1112=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M319.000885,427.582275   C317.170898,428.758362 315.355072,429.590942 313.370392,430.709534   C312.800323,431.575745 312.399078,432.155975 311.997864,432.736206   C312.824066,428.812805 314.483093,425.659149 319.143341,425.619598   C319.252350,426.358063 319.133698,426.798431 319.000885,427.582275  z\",id:\"svg_1114\"})),_path1113||(_path1113=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M338.629181,412.010254   C336.903320,413.350403 334.797089,414.675842 332.310394,415.988892   C334.036224,414.649536 336.142517,413.322510 338.629181,412.010254  z\",id:\"svg_1115\"})),_path1114||(_path1114=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M317.185425,418.176697   C317.297455,417.774506 317.772705,417.383911 318.564880,416.949036   C318.892242,417.099152 318.902740,417.293579 318.947144,417.778229   C318.503601,418.108368 318.026123,418.148346 317.185425,418.176697  z\",id:\"svg_1116\"})),_path1115||(_path1115=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M314.107300,417.200562   C314.336426,417.079376 314.592865,417.272125 314.874359,417.779663   C314.644592,417.900269 314.389679,417.706940 314.107300,417.200562  z\",id:\"svg_1117\"})),_path1116||(_path1116=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M268.004578,399.996277   C268.133392,400.145447 268.257599,400.298340 268.381805,400.451202   C268.287964,400.401794 268.194122,400.352417 268.046448,400.156250   C267.992584,400.009521 268.000000,400.000000 268.004578,399.996277  z\",id:\"svg_1118\"})),_path1117||(_path1117=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M305.854187,503.983765   C303.897522,500.586517 301.940887,497.189270 299.974426,493.405060   C299.671265,490.887573 299.377930,488.757050 299.519775,486.283386   C301.298492,485.964996 302.641998,485.989807 304.023224,486.315613   C304.475067,486.935913 304.889191,487.255219 305.303314,487.574554   C305.534332,487.048370 305.765350,486.522217 306.374268,486.005432   C313.271271,488.233032 303.871735,489.206482 306.875122,491.442322   C310.748901,494.835052 314.427277,493.935394 317.612518,489.425110   C317.831848,489.114471 318.517395,489.133057 319.357361,489.005066   C320.448273,489.535461 321.618866,489.933807 321.805908,490.605896   C322.456635,492.943512 322.766388,495.376007 323.200897,497.745697   C325.185120,496.978851 326.240997,496.570770 327.796722,495.969543   C326.658691,498.476166 325.833527,500.293640 325.017487,502.326782   C325.026581,502.542480 325.018829,502.974152 324.837646,503.057617   C324.581787,503.249146 324.422943,503.426208 324.445953,503.454254   C324.604187,503.647369 324.800446,503.809265 324.984009,504.223999   C324.983521,504.466797 324.954865,504.951538 324.578491,504.993713   C318.632477,508.783386 318.702850,500.069336 314.493469,500.773438   C313.594269,501.847992 312.619202,503.013275 311.451569,504.408630   C310.357361,503.005890 309.632721,502.076965 308.752960,500.949127   C307.612244,502.143311 306.733215,503.063538 305.854187,503.983765  M308.463379,497.247040   C308.596344,496.848663 308.750305,496.455139 308.843903,496.047729   C308.861755,495.970093 308.641174,495.837708 308.530640,495.730621   C308.398895,496.127869 308.267151,496.525116 308.463379,497.247040  z\",id:\"svg_1119\"})),_path1118||(_path1118=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M303.989319,455.003235   C304.833130,455.154633 305.686432,455.305054 306.475708,455.918274   C305.607025,457.919922 304.802277,459.458740 303.646454,461.001434   C302.317383,461.595032 301.339386,462.184723 299.130280,463.516754   C301.783905,463.804382 302.872650,463.922394 303.951508,464.394897   C304.617706,466.822998 305.293793,468.896576 305.734741,470.990295   C305.231720,471.136169 304.963806,471.261902 304.695923,471.387665   C305.136902,471.267212 305.577881,471.146759 306.302673,470.917847   C307.154663,470.655182 307.722809,470.500946 309.511230,470.015472   C306.358307,473.313568 306.295135,475.574890 309.887970,477.357727   C311.269440,479.176392 312.583984,480.657288 313.931580,482.332886   C313.964691,482.527588 314.044464,482.914368 313.765198,483.127014   C311.005157,487.019714 309.341797,483.483459 307.584137,482.512024   C306.055389,481.667023 304.775146,479.437012 303.592102,482.994202   C301.795380,483.002869 300.413940,483.025208 299.032501,483.047546   C299.032501,483.047546 299.010468,482.606079 299.023804,482.052185   C299.025482,481.277527 299.013763,481.056763 299.002075,480.836029   C299.001312,475.373230 299.193054,469.901154 298.930603,464.450958   C298.762299,460.956879 299.917816,458.497589 303.147278,456.293213   C303.624390,455.539429 303.814575,455.264008 304.004730,454.988586   C304.004730,454.988586 303.998749,455.002258 303.989319,455.003235  z\",id:\"svg_1120\"})),_path1119||(_path1119=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M299.047699,483.395325   C300.413940,483.025208 301.795380,483.002869 303.587921,482.989777   C303.999023,482.999023 303.991760,482.991394 303.980774,483.365906   C303.984741,484.488678 303.999695,485.236908 304.007812,485.992065   C304.001038,485.998932 303.985535,486.014648 303.985535,486.014648   C302.641998,485.989807 301.298492,485.964996 299.562927,485.879028   C299.134918,485.126251 299.098907,484.434692 299.047699,483.395325  z\",id:\"svg_1121\"})),_path1120||(_path1120=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M303.764923,454.992065   C303.814575,455.264008 303.624390,455.539429 303.212860,455.941437   C303.169342,455.710541 303.347229,455.353058 303.764923,454.992065  z\",id:\"svg_1122\"})),_path1121||(_path1121=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M298.803833,480.961487   C299.013763,481.056763 299.025482,481.277527 299.019958,481.831177   C298.870331,481.805054 298.737976,481.445984 298.803833,480.961487  z\",id:\"svg_1123\"})),_path1122||(_path1122=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M507.094238,278.017883   C507.549500,277.941467 508.004791,277.865051 508.769714,277.635742   C511.118805,277.011749 513.172119,276.593262 515.195251,276.060272   C522.550720,274.122345 529.875977,272.065552 537.254395,270.220734   C540.595703,269.385315 544.053223,268.351135 547.425903,268.454498   C552.983276,268.624878 558.514526,269.646057 564.551880,270.771423   C566.516663,271.640259 567.986328,272.046265 569.456055,272.452240   C570.093567,272.460968 570.731140,272.469696 571.778809,272.888092   C572.775635,273.543243 573.362244,273.788727 573.948914,274.034241   C574.679382,274.098022 575.409790,274.161804 576.592041,274.609955   C577.772400,275.265045 578.500977,275.535828 579.229492,275.806580   C582.277039,277.103516 585.324585,278.400452 588.663452,280.195984   C588.963806,281.135620 588.972839,281.576691 588.986450,282.013184   C588.991089,282.008636 588.996643,282.003357 588.587708,282.014252   C585.792908,281.611420 583.407104,281.197662 581.035339,280.621033   C581.049438,280.458191 581.031982,280.131775 580.870178,279.819580   C579.819031,279.346924 578.929749,279.186462 577.761353,278.848480   C571.357056,277.307129 565.231812,275.943359 559.090088,274.575897   C559.080322,274.722717 559.036987,275.372833 558.694885,275.901184   C557.592529,275.512970 556.788940,275.246521 555.990845,274.991638   C555.996399,275.003204 556.021423,275.007599 555.985840,274.646729   C554.951843,273.859344 553.953552,273.432800 552.587891,273.008759   C549.805237,273.355072 547.389893,273.698883 544.631714,273.884399   C539.508179,274.165710 534.727478,274.605377 529.879944,275.051178   C530.190857,276.134460 530.389526,276.826935 530.603333,277.571991   C527.504089,277.710388 524.768372,277.832550 521.900696,277.742523   C521.386047,277.555786 521.003418,277.581268 520.620789,277.606720   C521.065735,277.752869 521.510742,277.898987 521.892700,278.395081   C520.033691,279.128784 518.237610,279.512573 516.333862,279.919373   C516.559875,280.800293 516.835510,281.874817 516.841553,282.872253   C516.081482,282.528870 515.591064,282.262573 514.875610,281.740662   C511.757385,281.651459 508.864227,281.817871 506.142242,281.677551   C506.573669,280.253204 506.833954,279.135559 507.094238,278.017883  z\",id:\"svg_1124\"})),_path1123||(_path1123=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M592.019165,281.983459   C601.240540,285.798767 607.280701,292.904205 611.808411,301.442383   C615.019653,307.498108 618.233765,313.586517 620.872803,319.900177   C622.821777,324.563019 623.845459,329.612579 624.843994,334.631348   C624.406677,334.772827 624.106873,334.875732 624.029663,334.741058   C623.843628,334.573029 623.734802,334.539703 623.625977,334.506378   C623.725281,334.691620 623.824585,334.876862 623.787476,335.363892   C622.442749,336.083649 621.234497,336.501556 620.064758,336.562256   C621.216370,333.741547 621.582153,331.656769 617.541077,331.948517   C618.466492,330.845673 619.154297,330.025970 619.743713,329.323578   C618.714722,328.069763 617.868469,327.038605 617.010742,326.003357   C616.999207,325.999298 617.008057,326.022095 617.364380,325.967346   C619.395203,323.241364 619.393005,323.238922 615.030151,322.636414   C615.042969,321.904755 615.049255,321.486633 615.387939,320.992615   C617.872314,319.366730 617.227295,318.483093 615.015991,317.589661   C614.138733,311.972839 612.803772,310.990082 607.893433,311.636322   C607.878540,310.885284 607.853088,310.456055 608.113525,309.862671   C608.931458,308.398010 611.520691,306.894257 608.030457,305.630127   C608.200562,303.976929 608.373352,302.684509 608.562744,301.267365   C607.106506,301.572449 606.039307,301.796021 604.943115,301.677612   C603.982056,299.596802 603.049927,297.857941 602.350891,295.942932   C602.574341,295.328125 602.564758,294.889404 602.555115,294.450714   C602.027893,294.624054 601.500671,294.797394 600.743347,294.991608   C600.513245,295.012482 600.053589,295.060822 599.909424,294.763794   C598.820007,293.291870 597.874878,292.117035 597.071289,290.671143   C595.955627,287.246246 593.250427,285.757416 590.658142,286.923340   C589.856873,286.233002 589.378479,285.589661 588.945923,284.580627   C588.993408,283.477722 588.994995,282.740540 588.996643,282.003357   C588.996643,282.003357 588.991089,282.008636 589.366821,282.024719   C590.501465,282.021698 591.260315,282.002563 592.019165,281.983459  z\",id:\"svg_1125\"})),_path1124||(_path1124=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M607.924011,392.936035   C607.517700,392.927734 607.111328,392.919464 606.402588,392.885468   C604.684753,390.640900 602.258545,388.755432 603.785339,385.539856   C603.861206,385.380066 602.555786,384.564392 601.396118,383.800354   C600.981873,382.807800 600.908264,382.003723 601.182861,381.344788   C601.652893,380.217041 602.340942,379.180176 603.318970,378.060730   C604.812561,376.689514 605.924561,375.362732 607.386597,374.061157   C609.565063,374.836151 611.393555,375.585938 613.863403,376.598755   C612.001282,373.335571 610.809937,371.247864 609.271790,368.552429   C614.470520,369.412628 618.481689,366.546295 621.381104,361.137726   C621.777954,362.141113 622.187622,363.305603 621.807495,364.084869   C621.115173,365.504211 619.954285,366.694946 618.877197,368.236145   C619.139954,369.336853 619.514343,370.182526 619.868225,371.389465   C619.579590,374.797150 619.311462,377.843475 618.779846,381.084381   C617.683044,382.539978 616.849670,383.800995 616.016357,385.062042   C616.049744,385.480804 616.083130,385.899536 615.685547,386.638672   C614.130859,387.281586 613.007019,387.604156 611.548950,387.956299   C610.151001,388.315399 609.087402,388.644958 607.963867,388.640991   C607.198364,388.000092 606.492859,387.692688 605.787354,387.385284   C605.655151,387.753815 605.522949,388.122314 605.390808,388.490845   C606.250977,388.670227 607.111145,388.849609 607.965454,389.420898   C607.947693,390.853851 607.935852,391.894928 607.924011,392.936035  M615.463318,372.539948   C615.955322,372.605774 616.447327,372.671600 616.939331,372.737427   C616.579834,371.951263 616.220276,371.165131 615.860718,370.378937   C615.552429,371.085052 615.244141,371.791168 615.463318,372.539948  z\",id:\"svg_1126\"})),_path1125||(_path1125=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M619.043335,380.889832   C619.311462,377.843475 619.579590,374.797150 620.223755,371.330383   C620.991760,370.332886 621.383606,369.755859 621.775513,369.178802   C620.846619,368.779541 619.917786,368.380310 618.988892,367.981049   C619.954285,366.694946 621.115173,365.504211 621.807495,364.084869   C622.187622,363.305603 621.777954,362.141113 621.366577,360.765839   C620.388550,358.970673 619.768250,357.559937 618.805176,355.369751   C619.698242,354.421692 621.452026,352.559998 623.205811,350.698273   C622.771240,350.552185 622.336670,350.406097 621.902100,350.260010   C621.835632,348.832947 621.950134,347.367096 621.654907,345.989044   C621.320312,344.427582 622.832214,341.541779 619.174194,341.668274   C619.253845,340.912170 619.338196,340.484283 619.505737,340.083618   C619.588989,340.110809 619.763245,340.127716 620.133301,340.123016   C622.199524,339.145203 623.895752,338.172119 625.591919,337.199036   C623.105469,340.453430 629.259705,344.430389 624.729370,347.513885   C630.388550,354.801758 627.061951,362.625885 625.501953,370.730591   C624.671326,372.230530 624.428467,373.309357 624.185608,374.388153   C623.521362,376.048737 622.857117,377.709320 621.695312,379.689636   C620.479614,380.302856 619.761475,380.596344 619.043335,380.889832  z\",id:\"svg_1127\"})),_path1126||(_path1126=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M632.085266,334.315582   C632.198914,333.962433 632.559265,333.990784 632.738892,333.986206   C633.484436,334.257477 634.547852,334.542786 634.542847,334.807770   C634.439392,340.245819 634.057251,345.683411 634.119690,351.116608   C634.135925,352.532135 635.468323,353.929718 636.173584,355.346802   C636.221008,355.442169 636.112793,355.670410 636.011230,355.769287   C635.901978,355.875610 635.715271,355.902344 635.007507,356.182861   C634.672852,357.926971 634.893066,359.451935 635.113220,360.976929   C634.244812,361.575439 633.376343,362.173950 632.203247,362.888000   C631.861755,355.963989 632.180237,348.895050 631.600586,341.900513   C631.390259,339.361877 629.047180,337.001343 632.085266,334.315582  z\",id:\"svg_1128\"})),_path1127||(_path1127=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M523.371948,268.016724   C522.435120,267.302155 521.863770,266.592133 520.996582,265.514313   C522.867310,265.514313 524.229370,265.514313 525.792908,265.258911   C530.836487,263.356415 535.678589,261.709320 540.321106,260.130127   C541.948242,261.410370 543.272095,262.451996 544.814209,263.764587   C543.245789,265.853424 541.770508,266.015656 538.883972,265.368103   C535.519104,264.613281 531.502625,266.874939 527.742554,267.709259   C526.448181,267.996460 525.074768,267.927521 523.371948,268.016724  z\",id:\"svg_1129\"})),_path1128||(_path1128=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M618.779846,381.084381   C619.761475,380.596344 620.479614,380.302856 621.488647,379.971802   C621.292297,382.793945 620.153076,385.004761 616.389465,385.018433   C616.849670,383.800995 617.683044,382.539978 618.779846,381.084381  z\",id:\"svg_1130\"})),_path1129||(_path1129=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M611.883240,387.926697   C613.007019,387.604156 614.130859,387.281586 615.628174,386.948730   C614.968506,388.662018 613.935425,390.385590 612.567017,392.187134   C612.231812,392.265137 612.091309,392.103668 612.067444,391.702545   C611.990112,390.176514 611.936646,389.051636 611.883240,387.926697  z\",id:\"svg_1131\"})),_path1130||(_path1130=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M625.632935,336.875061   C623.895752,338.172119 622.199524,339.145203 620.182800,339.721588   C619.916931,338.523071 619.971558,337.721283 620.026245,336.919495   C621.234497,336.501556 622.442749,336.083649 623.835205,335.319275   C624.019348,334.972839 624.106873,334.875732 624.106873,334.875732   C624.106873,334.875732 624.406677,334.772827 624.561340,334.799744   C625.035339,335.401428 625.354675,335.976257 625.632935,336.875061  z\",id:\"svg_1132\"})),_path1131||(_path1131=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M569.269775,272.170349   C567.986328,272.046265 566.516663,271.640259 564.928345,270.915222   C566.234375,271.026917 567.658997,271.457672 569.269775,272.170349  z\",id:\"svg_1133\"})),_path1132||(_path1132=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M591.925720,281.659180   C591.260315,282.002563 590.501465,282.021698 589.362244,282.029297   C588.972839,281.576691 588.963806,281.135620 588.969238,280.364319   C589.933167,280.467651 590.882751,280.901245 591.925720,281.659180  z\",id:\"svg_1134\"})),_path1133||(_path1133=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M624.515015,374.265076   C624.428467,373.309357 624.671326,372.230530 625.243896,371.043182   C625.330505,372.003754 625.087463,373.072906 624.515015,374.265076  z\",id:\"svg_1135\"})),_path1134||(_path1134=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M579.140747,275.488068   C578.500977,275.535828 577.772400,275.265045 576.949219,274.692871   C577.587036,274.650818 578.319519,274.910187 579.140747,275.488068  z\",id:\"svg_1136\"})),_path1135||(_path1135=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M573.883301,273.774597   C573.362244,273.788727 572.775635,273.543243 572.088379,272.974304   C572.597778,272.938873 573.207764,273.226929 573.883301,273.774597  z\",id:\"svg_1137\"})),_path1136||(_path1136=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M626.039917,322.323669   C626.637451,322.496918 627.264282,322.989563 627.891724,323.820984   C627.284607,323.654175 626.676880,323.148621 626.039917,322.323669  z\",id:\"svg_1138\"})),_path1137||(_path1137=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M509.170776,275.736877   C509.028503,275.700623 508.884094,275.463409 508.931335,275.181396   C509.123016,275.136597 509.168671,275.535919 509.170776,275.736877  z\",id:\"svg_1139\"})),_path1138||(_path1138=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M645.999084,386.353760   C647.755249,384.995422 649.515808,384.001007 651.638184,383.003906   C651.961182,385.348450 652.392578,386.798981 654.914368,384.629883   C655.634338,384.010559 656.488159,383.546783 657.632324,383.008179   C657.108582,384.580414 656.233093,386.156128 654.878418,388.594208   C658.037659,388.883789 662.505310,384.904449 662.558533,390.478149   C662.164673,393.277191 661.770813,396.076263 661.714783,398.930115   C660.273926,400.830658 658.495117,402.676392 656.716370,404.522095   C656.303589,404.134277 655.890869,403.746429 655.478088,403.358612   C655.814148,402.515747 656.150269,401.672913 656.666260,400.378845   C655.372681,400.593262 654.183777,400.488159 653.382385,400.995331   C652.231934,401.723450 651.363892,402.897858 650.375244,403.881775   C648.915466,402.179535 647.455688,400.477295 646.341736,398.388824   C647.307007,397.680786 647.926453,397.359009 648.545898,397.037231   C648.247498,396.746552 647.949036,396.455902 647.650635,396.165283   C647.102539,396.779205 646.554443,397.393127 646.006287,398.007080   C645.012268,397.250153 644.018250,396.493225 643.012329,395.368530   C643.000427,395.000763 642.985779,395.001221 642.985779,395.001221   C644.331848,394.229126 645.677856,393.457031 647.266113,392.546021   C648.302368,392.928741 649.720032,393.452362 652.405823,394.444366   C649.675354,391.149109 647.839417,388.933411 645.999084,386.353760  M657.407043,398.484192   C657.407043,398.484192 657.521362,398.411652 657.407043,398.484192  z\",id:\"svg_1140\"})),_path1139||(_path1139=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M624.360840,398.001434   C623.152527,396.436920 622.314880,394.870422 621.272949,392.921997   C622.501160,391.835938 623.949036,390.555573 625.694275,389.121521   C627.893982,392.302429 631.546997,395.881287 624.360840,398.001434  z\",id:\"svg_1141\"})),_path1140||(_path1140=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M639.991577,394.991577   C639.143860,396.268585 638.296082,397.545624 637.448364,398.822632   C636.981140,398.428162 636.513977,398.033661 636.046753,397.639191   C637.141785,396.778839 638.236877,395.918488 639.665955,395.029053   C640.000000,395.000000 639.991577,394.991577 639.991577,394.991577  z\",id:\"svg_1142\"})),_path1141||(_path1141=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M643.025024,392.024414   C643.014709,392.768585 643.004395,393.512787 642.989929,394.629089   C642.985779,395.001221 643.000427,395.000763 643.000366,394.993317   C642.248230,394.986176 641.496094,394.986481 640.367798,394.989197   C639.991577,394.991577 640.000000,395.000000 640.004150,395.004364   C640.792603,394.079651 641.576843,393.150543 642.679138,392.109344   C642.997192,391.997223 643.025085,392.024414 643.025024,392.024414  z\",id:\"svg_1143\"})),_path1142||(_path1142=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M626.988464,417.011780   C626.115417,416.842224 625.252563,416.662170 624.389771,416.482117   C624.523193,416.111969 624.656677,415.741852 624.790100,415.371704   C625.499451,415.682922 626.208801,415.994171 626.968384,416.642944   C627.018616,416.980469 626.998718,417.001282 626.988464,417.011780  z\",id:\"svg_1144\"})),_path1143||(_path1143=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M642.983154,391.983582   C643.152344,391.103851 643.335510,390.237793 643.518738,389.371735   C643.892334,389.507935 644.265869,389.644135 644.639404,389.780334   C644.326843,390.490692 644.014282,391.201050 643.363403,391.967926   C643.025085,392.024414 642.997192,391.997223 642.983154,391.983582  z\",id:\"svg_1145\"})),_path1144||(_path1144=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M617.985352,403.975769   C618.633789,403.657379 619.306274,403.369934 619.978821,403.082520   C620.048523,403.293854 620.118225,403.505188 620.187927,403.716492   C619.673706,403.824463 619.159424,403.932434 618.353516,404.052612   C618.061951,404.064850 618.009338,404.006714 617.985352,403.975769  z\",id:\"svg_1146\"})),_path1145||(_path1145=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M631.282288,380.000305   C631.450928,379.690094 631.922607,379.366302 632.695068,379.025513   C632.525635,379.334564 632.055481,379.660645 631.282288,380.000305  z\",id:\"svg_1147\"})),_path1146||(_path1146=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M634.612061,400.299744   C634.442505,400.165771 634.417480,399.928284 634.392456,399.690796   C634.513855,399.859283 634.635193,400.027771 634.612061,400.299744  z\",id:\"svg_1148\"})),_path1147||(_path1147=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M662.451660,403.410553   C662.539795,403.348297 662.575256,403.587646 662.575256,403.587646   C662.575256,403.587646 662.363464,403.472809 662.451660,403.410553  z\",id:\"svg_1149\"})),_path1148||(_path1148=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M602.668396,425.007446   C603.295410,425.153198 603.565247,425.349762 603.624817,425.904175   C601.157715,427.131897 600.557190,428.677948 602.368103,430.331604   C607.823120,435.313080 613.428955,440.129333 618.976013,445.010010   C618.976013,445.010010 618.996521,445.000641 619.095398,445.221863   C619.387207,445.710205 619.644714,445.878418 619.966797,445.947784   C620.305481,446.722748 620.644226,447.497742 620.672729,448.655579   C620.068176,449.467621 619.773865,449.896820 619.479553,450.326019   C620.318726,450.554077 621.157959,450.782135 621.997131,451.010193   C621.997131,451.010193 622.000000,451.000000 621.971680,451.376862   C622.976379,454.517670 624.009338,457.281616 624.752563,459.856445   C622.625793,459.452698 620.788818,459.238037 618.902100,459.017609   C618.902100,458.166412 619.428833,456.381592 618.770325,455.363129   C617.925720,454.056915 616.127930,453.366974 614.740845,452.411499   C613.890991,453.878601 611.966125,456.120117 612.371521,456.682953   C614.482422,459.613312 613.240662,461.979126 611.096741,463.360840   C610.359924,463.835663 607.789795,461.469818 606.061584,460.394592   C605.923950,460.308960 605.839905,460.103302 605.699036,460.061981   C604.229309,459.630920 601.747253,458.513306 601.453430,458.930267   C600.204956,460.701965 597.531311,462.809387 600.942505,465.128021   C601.266968,465.348572 601.355469,465.916321 601.382385,465.971619   C600.472900,467.117737 599.747009,468.032532 599.665344,468.135437   C602.055603,468.842346 604.027954,469.425659 605.897217,470.223999   C605.603638,470.708801 605.351196,470.894196 604.678894,470.997192   C603.547302,471.666138 602.773682,472.333069 601.646729,473.066071   C599.571167,476.765808 599.802856,477.073853 605.139648,478.350403   C605.526062,479.362122 605.787537,480.102905 605.709900,480.941162   C598.271240,484.213379 601.437073,491.331726 599.301025,496.787567   C598.285583,496.550110 597.213013,496.299316 596.140442,496.048492   C595.891968,496.480652 595.643494,496.912811 595.394958,497.344940   C597.504517,498.771484 599.614075,500.198029 601.642151,501.569489   C600.897827,502.795319 600.007507,504.261536 599.117188,505.727722   C599.513794,505.962769 599.910461,506.197845 600.307068,506.432892   C601.502258,505.940948 602.697388,505.449005 603.875732,505.320496   C598.270142,509.815308 592.681396,513.946716 586.798218,517.869507   C584.076660,516.782837 581.649658,515.904846 578.982056,514.741821   C578.164734,512.966492 577.587952,511.476196 577.260010,509.878601   C578.344299,510.124237 579.179626,510.477173 580.005371,511.109161   C580.427124,511.561798 580.858582,511.735382 581.602478,511.930176   C583.274231,511.635651 584.633423,511.319946 585.945435,510.664642   C585.188538,509.901428 584.478760,509.477783 583.498657,509.022217   C582.816040,508.674927 582.403809,508.359558 581.986328,507.666656   C580.978821,506.528839 579.976440,505.768555 578.988281,505.003174   C579.002441,504.998108 578.991516,505.026123 578.996460,504.668274   C578.375549,503.601196 577.749756,502.891968 577.123901,502.182739   C577.085510,503.127014 577.047119,504.071259 577.115112,505.296814   C576.894836,506.294464 576.568115,507.010834 576.241394,507.727173   C575.156860,506.809204 574.072327,505.891235 572.997131,504.600220   C572.950256,503.097748 572.893982,501.968262 572.834656,500.777191   C569.005981,500.947235 568.897522,503.402557 569.020142,506.012939   C569.005249,506.000000 569.027527,506.026794 568.831055,506.113159   C568.832947,506.455841 569.031311,506.712189 569.523682,507.140320   C571.168884,507.966827 572.520142,508.621521 573.896118,509.288239   C573.072327,510.876923 572.502563,511.975555 571.575317,513.006470   C569.045532,512.055786 566.840271,511.105194 566.705078,514.878296   C565.632080,514.481934 564.851562,514.204773 564.026733,513.589172   C560.654846,512.500061 557.327454,511.749420 553.995483,510.648315   C553.640564,509.395538 553.290161,508.493256 552.822327,507.288574   C552.073975,509.572418 551.511230,511.289886 550.721558,513.008667   C550.494690,513.009949 550.040955,513.016113 550.034607,512.628784   C548.873291,510.296631 547.718323,508.351898 546.325073,506.005920   C546.580017,505.282532 547.052979,503.940521 547.681702,502.156708   C544.641052,503.961823 542.183105,505.421051 538.810303,507.423401   C539.822144,504.406067 540.404175,502.670227 541.054321,500.592163   C542.413818,498.499023 543.705322,496.748108 545.336060,494.990601   C546.070618,494.226196 546.466003,493.468414 546.918396,492.355927   C548.543701,485.684692 550.985474,491.014038 553.472839,491.961945   C553.677734,490.405518 553.836426,489.199982 554.303223,488.013062   C555.158081,487.938904 555.704773,487.846161 556.251526,487.753448   C556.193237,487.517212 556.134949,487.280975 556.076660,487.044708   C555.385498,487.364685 554.694275,487.684631 553.631592,488.018921   C551.199829,486.990173 549.139648,485.947113 547.030273,484.535156   C546.640747,482.987946 546.300415,481.809601 546.043945,480.344727   C546.461548,479.107422 546.795227,478.156708 547.119873,477.183228   C547.110840,477.160492 547.148804,477.129578 547.419739,477.058716   C548.207031,476.796906 548.723450,476.605988 549.444214,476.676025   C550.478333,476.352997 551.307983,475.769073 552.580566,474.873352   C553.112793,475.066711 554.532837,475.582611 555.952820,476.098511   C552.779785,472.791107 550.637268,469.797821 553.377930,465.314514   C551.739746,465.590790 550.464111,465.805939 549.112427,465.710449   C548.998535,464.975159 548.960632,464.550446 549.232788,464.067871   C549.297119,462.590057 549.051514,461.170074 548.641968,459.468994   C548.296570,458.151642 548.115112,457.115448 548.065918,455.777283   C548.475647,454.653931 548.753174,453.832489 549.385132,453.041321   C552.036133,454.271179 554.277222,455.597778 556.646301,456.630737   C558.588196,457.477417 560.682556,457.974731 562.709290,458.626953   C561.871948,459.985016 561.034546,461.343109 560.205017,462.688538   C561.684875,464.305054 563.142944,465.897705 564.649231,467.542999   C569.670349,465.330658 564.877258,463.588165 564.480042,462.294403   C566.065430,460.527802 567.473389,459.185577 568.605103,457.640869   C570.044861,455.675659 569.753845,454.224487 566.994019,454.000397   C567.000183,453.999573 567.000000,454.012085 566.998413,453.611084   C566.997131,452.140686 566.997498,451.071259 566.998901,450.000916   C567.000000,450.000000 567.002075,449.997925 567.373169,450.021057   C569.032410,451.458496 570.320557,452.872803 571.747314,454.439331   C572.586548,453.324829 573.482422,452.135071 574.378357,450.945312   C574.786072,451.124603 575.193726,451.303894 575.601440,451.483154   C574.722900,453.644409 573.844299,455.805634 572.677368,458.006165   C572.091309,458.458862 571.793701,458.872284 571.496094,459.285706   C571.758362,459.382172 572.222046,459.603699 572.251831,459.555786   C572.551880,459.072754 572.780762,458.545563 573.403076,458.015106   C575.524231,456.006287 577.271912,454.013153 579.392151,452.016479   C580.511169,452.012634 581.257568,452.012238 581.980835,452.356140   C581.628662,453.792542 581.299561,454.884644 580.830078,456.038147   C580.800598,456.075745 580.911621,456.051910 581.380676,455.991333   C584.679016,454.562775 588.134399,453.487701 586.004333,448.613525   C584.751221,447.755798 582.795837,446.541229 582.408203,446.922119   C580.983948,448.321503 580.080139,450.250580 578.700928,451.956909   C576.615234,450.623566 574.809021,449.313629 573.001465,448.001831   C573.000000,448.000000 572.995117,447.996338 572.982056,447.619354   C571.293030,444.639587 569.803833,441.789551 566.007507,441.642639   C565.666565,440.682343 565.330383,440.067169 564.994202,439.451996   C564.711182,439.756470 564.428162,440.060944 564.145081,440.365387   C564.759277,440.914307 565.373535,441.463257 565.996582,442.362152   C566.482910,443.885651 566.960388,445.059174 567.492981,446.368317   C566.196533,446.368317 564.946594,446.355804 563.697144,446.371613   C562.244751,446.389984 560.792603,446.433228 559.340393,446.465668   C559.718506,444.636627 559.921997,442.747345 560.526428,440.996399   C561.071960,439.415741 562.056030,437.986420 562.592896,436.970612   C559.157471,436.970612 556.562866,436.970612 553.967041,436.589539   C554.876892,432.158752 556.388916,428.580292 560.360229,426.439178   C561.229553,425.970490 561.384033,424.303680 562.109314,423.377899   C562.402283,423.004028 563.343201,423.137817 564.171143,423.360199   C568.108948,424.751892 571.864807,425.823944 575.620667,426.895996   C575.753174,426.497253 575.885620,426.098511 576.018127,425.699738   C574.931274,424.927460 573.844482,424.155182 572.312866,423.066772   C574.279419,421.970001 575.129822,421.495697 576.029175,421.353760   C576.786682,421.980072 577.495300,422.273987 578.203918,422.567932   C578.333618,422.200500 578.463257,421.833099 578.592957,421.465698   C577.736694,421.302185 576.880432,421.138672 576.018921,420.604553   C576.017761,419.493011 576.021851,418.752075 576.025879,418.011169   C580.683167,414.810883 583.371094,415.195251 587.074341,419.817413   C588.028503,419.033783 588.979675,418.252594 590.186646,417.261292   C591.370789,418.767181 592.511047,420.217224 594.249329,422.427826   C591.880371,422.187866 590.371399,421.637665 589.158630,422.022064   C587.903015,422.420044 586.934692,423.724548 585.935791,425.315247   C591.661316,422.630707 594.339233,425.495300 596.265686,429.649139   C598.179443,428.195923 600.245361,426.627075 602.668396,425.007446  M586.108521,505.660339   C586.805115,506.072632 587.501770,506.484955 588.198364,506.897247   C588.368713,506.512115 588.539062,506.126984 588.709473,505.741852   C587.803833,505.497009 586.898193,505.252197 585.988037,504.312653   C585.656067,503.687927 585.324036,503.063202 584.992126,502.438507   C584.704285,502.735046 584.416504,503.031586 584.128662,503.328094   C584.754700,503.882935 585.380676,504.437775 586.108521,505.660339  M579.995911,482.009338   C579.995911,482.009338 580.047302,482.041260 579.356445,482.016174   C578.923523,483.076691 578.490540,484.137177 578.014038,485.949890   C578.954468,487.929443 579.601257,490.147583 580.944153,491.800049   C581.763794,492.808624 584.159546,493.786407 584.960876,493.304382   C586.728943,492.240845 590.129211,491.877167 589.176697,487.642456   C589.966675,486.325592 590.756592,485.008728 591.546509,483.691864   C591.223755,483.434540 590.901062,483.177216 590.578308,482.919891   C589.054626,484.660370 587.531006,486.400818 586.011841,488.858002   C585.210999,489.666260 584.410156,490.474487 582.723877,492.176422   C582.876587,489.449066 582.945618,488.216248 583.654358,486.670563   C586.333923,483.514313 589.013550,480.358063 591.583496,477.331024   C589.825195,475.447052 588.115723,473.615417 585.910156,471.252136   C587.800842,471.143158 588.894531,471.080139 590.323792,471.499298   C590.881042,470.998108 591.438354,470.496887 592.694092,470.003937   C593.341919,469.542175 593.989807,469.080414 594.637634,468.618683   C593.763672,468.073853 592.889709,467.528992 591.989929,466.244934   C591.342285,465.579285 590.694641,464.913666 590.046997,464.248047   C589.768860,464.592407 589.490784,464.936798 589.212708,465.281189   C590.136230,465.859589 591.059753,466.438019 591.975037,467.762329   C591.984741,468.509216 591.994385,469.256104 591.493530,470.221313   C591.001343,470.473541 590.509155,470.725739 589.916626,470.292114   C587.167786,467.175751 584.418884,464.059387 581.672852,460.946228   C580.121643,462.112640 578.897583,463.135437 577.573425,464.005829   C575.339661,465.474030 575.554565,465.959167 577.972290,467.297424   C580.062439,468.454376 581.362732,471.038055 583.000000,473.000000   C583.000000,473.000000 582.990234,473.011841 582.254578,473.006409   C581.278381,473.229065 580.302124,473.451752 579.496704,473.635468   C580.457214,475.693726 581.228577,477.346863 581.296936,479.100525   C580.878601,480.084412 580.460266,481.068329 579.995911,482.009338  M566.352722,470.081604   C565.382019,473.341949 565.758972,473.988129 569.198730,475.123779   C568.485718,473.464447 567.740417,471.729950 567.688232,469.988739   C568.304321,469.665222 568.920471,469.341736 569.536621,469.018250   C569.237305,468.724579 568.938049,468.430939 568.638794,468.137299   C568.094177,468.759827 567.549561,469.382385 566.352722,470.081604  M560.132568,475.164703   C561.364990,474.985107 562.597351,474.805511 565.183960,474.428558   C561.753113,472.553833 559.690308,471.426605 557.627441,470.299377   C557.400818,470.735901 557.174194,471.172424 556.947571,471.608948   C557.915222,472.633820 558.882874,473.658691 560.132568,475.164703  M581.552368,436.689941   C580.094910,435.411774 578.637512,434.133606 576.369263,432.144379   C575.688171,437.879486 579.087524,437.045563 581.552368,436.689941  M610.916382,452.588104   C610.611816,451.988342 610.307251,451.388611 610.002625,450.788879   C609.458679,451.542999 608.914734,452.297150 608.370850,453.051270   C609.153442,453.105743 609.936096,453.160217 610.916382,452.588104  M592.437683,481.351440   C593.219299,481.236237 594.000977,481.121063 594.782532,481.005829   C594.694702,480.558746 594.606812,480.111664 594.518982,479.664551   C593.791931,480.007812 593.064941,480.351044 592.437683,481.351440  M598.226074,471.284058   C597.608032,471.545319 596.990051,471.806610 596.372009,472.067871   C596.873901,472.574982 597.375732,473.082092 597.877625,473.589172   C598.150146,472.979156 598.422607,472.369141 598.226074,471.284058  M579.525879,498.136780   C579.338257,498.671509 579.150635,499.206238 578.962952,499.740936   C579.723572,499.677246 580.484192,499.613556 581.244812,499.549866   C580.877869,499.100159 580.510864,498.650482 579.525879,498.136780  M564.420349,509.332550   C565.088257,509.376373 565.756104,509.420166 566.424072,509.463989   C566.430359,509.181946 566.436646,508.899933 566.442871,508.617889   C565.774048,508.649872 565.105225,508.681885 564.420349,509.332550  M599.261169,431.848816   C599.401306,432.402069 599.541504,432.955353 599.681702,433.508575   C600.043762,433.313202 600.405823,433.117828 600.767944,432.922455   C600.413513,432.417908 600.059082,431.913391 599.261169,431.848816  M557.716309,460.529144   C558.081360,460.041992 558.446350,459.554810 558.811401,459.067627   C558.458069,458.864960 558.104736,458.662292 557.751343,458.459656   C557.599182,459.001526 557.447021,459.543396 557.716309,460.529144  M608.345276,446.899963   C608.984009,447.399475 609.622681,447.898956 610.261414,448.398468   C610.412781,448.109680 610.564148,447.820892 610.715454,447.532135   C610.054565,447.212341 609.393616,446.892578 608.345276,446.899963  M594.769409,473.820435   C594.310242,473.855835 593.851135,473.891205 593.391968,473.926575   C593.544495,474.324615 593.697021,474.722656 593.849487,475.120697   C594.204407,474.869568 594.559387,474.618408 594.769409,473.820435  M581.573547,444.294250   C581.354919,443.999115 581.136353,443.704010 580.917725,443.408875   C580.731201,443.588013 580.544617,443.767151 580.358093,443.946320   C580.642090,444.179169 580.926025,444.412048 581.573547,444.294250  M574.372437,500.194733   C574.730591,500.244354 575.088806,500.293976 575.446960,500.343597   C575.447266,500.087708 575.447571,499.831787 575.447876,499.575897   C575.087769,499.613495 574.727600,499.651123 574.372437,500.194733  M587.874878,443.121948   C587.350220,443.349731 586.825562,443.577515 586.300842,443.805298   C586.418091,444.026093 586.535400,444.246857 586.652649,444.467621   C587.189575,444.126160 587.726501,443.784668 587.874878,443.121948  M561.595825,443.476349   C561.830811,443.535706 562.065735,443.595062 562.300720,443.654419   C562.149353,443.507019 561.997986,443.359650 561.595825,443.476349  M600.238770,480.813812   C600.364258,480.985657 600.489685,481.157532 600.615173,481.329407   C600.588806,481.089233 600.562439,480.849060 600.238770,480.813812  M576.484802,446.604065   C576.484802,446.604065 576.410156,446.480225 576.484802,446.604065  M606.482971,449.614685   C606.482971,449.614685 606.397095,449.482849 606.482971,449.614685  M578.603516,447.519135   C578.603516,447.519135 578.472473,447.601044 578.603516,447.519135  M608.608032,439.523163   C608.608032,439.523163 608.480347,439.603943 608.608032,439.523163  M574.523254,437.362030   C574.523254,437.362030 574.416504,437.551788 574.416504,437.551788   C574.416504,437.551788 574.637878,437.522644 574.523254,437.362030  z\",id:\"svg_1150\"})),_path1149||(_path1149=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M581.023376,408.164093   C579.166748,409.911072 577.310120,411.658020 575.453491,413.404999   C575.030762,413.142029 574.607971,412.879059 574.185242,412.616119   C574.446289,414.133728 574.707397,415.651367 574.668762,417.438904   C573.322510,417.102112 572.275879,416.495331 571.054382,415.649841   C570.536316,415.226410 570.193176,415.041718 569.718323,414.513000   C570.360657,413.067383 571.134705,411.965820 572.246704,410.768921   C574.194214,408.510193 575.803894,406.346802 577.643555,404.115387   C578.191345,403.921600 578.411865,403.699341 578.854858,403.315369   C581.876038,400.251312 584.577576,397.252472 587.211060,394.138763   C587.143005,394.023895 587.239380,394.272980 587.572876,394.246460   C588.399841,393.522827 588.893372,392.825684 589.591431,392.119568   C589.795959,392.110596 590.201965,392.057281 590.580200,392.047974   C591.981079,393.036652 593.003662,394.034607 594.026306,395.032562   C594.026306,395.032562 594.000000,395.000000 593.666626,395.036499   C590.843567,398.069458 588.353821,401.065918 585.864075,404.062378   C585.864075,404.062378 585.548889,404.092834 585.024597,404.082153   C583.341309,405.435699 582.182373,406.799896 581.023376,408.164093  z\",id:\"svg_1151\"})),_path1150||(_path1150=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AD703F\",opacity:1,stroke:\"none\",d:\" M594.406921,395.019409   C593.003662,394.034607 591.981079,393.036652 590.648193,391.795044   C590.620117,391.113403 590.902344,390.675446 591.174622,390.203491   C591.164734,390.169525 591.108582,390.129120 591.367615,390.049377   C591.747375,389.649109 591.868103,389.328613 592.149292,388.711487   C593.637268,386.397491 594.964722,384.380157 596.604126,382.242645   C598.421997,379.426758 599.928040,376.731049 601.695496,374.037659   C602.353149,374.373535 602.749329,374.707123 603.105835,375.323090   C603.023254,376.438690 602.980347,377.271942 602.937439,378.105164   C602.340942,379.180176 601.652893,380.217041 601.182861,381.344788   C600.908264,382.003723 600.981873,382.807800 601.052002,383.828888   C599.839966,387.092346 598.558350,390.116547 597.056641,393.027222   C596.628845,393.856445 595.561584,394.355713 594.406921,395.019409  z\",id:\"svg_1152\"})),_path1151||(_path1151=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M571.229309,415.888580   C572.275879,416.495331 573.322510,417.102112 574.649231,417.829041   C575.111877,417.962097 575.294373,417.975037 575.751343,417.999573   C576.021851,418.752075 576.017761,419.493011 576.007751,420.616089   C576.001831,420.998230 575.980225,421.021423 575.980225,421.021423   C575.129822,421.495697 574.279419,421.970001 572.312866,423.066772   C573.844482,424.155182 574.931274,424.927460 576.018127,425.699738   C575.885620,426.098511 575.753174,426.497253 575.620667,426.895996   C571.864807,425.823944 568.108948,424.751892 564.499512,423.208374   C568.379028,422.059631 569.528931,419.306824 570.332153,416.008850   C570.831604,415.952026 571.030457,415.920288 571.229309,415.888580  z\",id:\"svg_1153\"})),_path1152||(_path1152=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AD703F\",opacity:1,stroke:\"none\",d:\" M586.229248,404.050018   C588.353821,401.065918 590.843567,398.069458 593.683472,395.048645   C591.553894,398.028717 589.074097,401.033173 586.229248,404.050018  z\",id:\"svg_1154\"})),_path1153||(_path1153=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AD703F\",opacity:1,stroke:\"none\",d:\" M581.385193,408.099121   C582.182373,406.799896 583.341309,405.435699 584.867432,404.062927   C584.072021,405.380981 582.909485,406.707581 581.385193,408.099121  z\",id:\"svg_1155\"})),_path1154||(_path1154=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M629.094482,463.899902   C629.895813,465.351593 631.196228,466.733154 631.411743,468.267090   C632.328003,474.790710 632.936646,481.358032 633.590149,487.916138   C633.619568,488.211151 632.991699,488.571564 632.283081,488.638428   C631.258545,487.907654 630.620850,487.439941 629.861694,486.681671   C629.580994,485.077087 629.466064,483.755859 629.253113,482.450592   C628.845581,479.952637 628.382263,477.463776 628.101929,474.645172   C628.210571,471.984528 628.159485,469.649872 628.397400,467.244904   C628.822449,466.083069 628.958496,464.991486 629.094482,463.899902  z\",id:\"svg_1156\"})),_path1155||(_path1155=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M629.050842,463.540649   C628.958496,464.991486 628.822449,466.083069 628.271606,466.974487   C626.918579,464.531433 625.980408,462.288483 625.042297,460.045563   C624.009338,457.281616 622.976379,454.517670 621.966675,451.378479   C623.015381,451.002838 624.040833,451.002502 625.450195,451.018311   C625.885864,451.196136 625.937622,451.357819 626.056091,451.765320   C627.084229,455.734589 628.045715,459.458008 629.050842,463.540649  z\",id:\"svg_1157\"})),_path1156||(_path1156=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M629.983154,486.972229   C630.620850,487.439941 631.258545,487.907654 631.952515,488.698334   C631.919556,491.701080 631.830444,494.380829 631.623596,497.492523   C630.583252,497.945984 629.660706,497.967499 628.380127,497.603424   C628.675842,493.802612 629.329529,490.387421 629.983154,486.972229  z\",id:\"svg_1158\"})),_path1157||(_path1157=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M618.985107,444.618958   C613.428955,440.129333 607.823120,435.313080 602.368103,430.331604   C600.557190,428.677948 601.157715,427.131897 603.734314,426.132782   C608.570068,430.534454 613.186523,434.972626 617.525696,439.666992   C618.509033,440.730835 618.530151,442.684082 618.985107,444.618958  z\",id:\"svg_1159\"})),_path1158||(_path1158=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M621.963074,450.714111   C621.157959,450.782135 620.318726,450.554077 619.479553,450.326019   C619.773865,449.896820 620.068176,449.467621 620.685059,448.995667   C621.314697,449.441284 621.621887,449.929657 621.963074,450.714111  z\",id:\"svg_1160\"})),_path1159||(_path1159=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M619.863159,445.737671   C619.644714,445.878418 619.387207,445.710205 619.090942,445.231506   C619.305298,445.097382 619.562622,445.266602 619.863159,445.737671  z\",id:\"svg_1161\"})),_path1160||(_path1160=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M661.003662,382.996338   C663.085388,384.476929 665.163452,385.961212 667.241516,387.445465   C666.762817,387.986603 666.284119,388.527771 665.805481,389.068909   C664.208496,387.289124 662.611511,385.509369 661.003418,383.368958   C660.992249,383.008331 661.000000,383.000061 661.003662,382.996338  z\",id:\"svg_1162\"})),_path1161||(_path1161=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M671.013245,383.017059   C670.908691,383.054535 670.791504,383.076843 670.822388,383.037781   C670.970459,382.976471 671.000549,383.001892 671.013245,383.017059  z\",id:\"svg_1163\"})),_path1162||(_path1162=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M611.548950,387.956299   C611.936646,389.051636 611.990112,390.176514 611.994934,391.623810   C610.840149,392.274139 609.734070,392.602051 608.276001,392.932983   C607.935852,391.894928 607.947693,390.853851 607.978760,389.407379   C607.997986,389.002014 608.023804,388.974518 608.023804,388.974518   C609.087402,388.644958 610.151001,388.315399 611.548950,387.956299  z\",id:\"svg_1164\"})),_path1163||(_path1163=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M587.092712,518.078186   C592.681396,513.946716 598.270142,509.815308 604.231018,505.319580   C605.073608,504.981445 605.544006,505.007568 606.011475,505.015442   C606.008423,504.997192 605.971497,504.998627 606.081055,505.220917   C606.400635,505.715576 606.671936,505.895386 607.010681,506.223358   C607.016785,506.464081 607.025024,506.945557 606.713257,506.993256   C606.275330,508.268372 606.149109,509.495789 605.998291,511.121826   C607.086304,513.150574 608.198975,514.780701 609.311646,516.410828   C609.773010,516.138062 610.234436,515.865356 610.695801,515.592590   C610.436218,514.416748 610.176575,513.240845 610.242371,512.050781   C611.001770,512.024841 611.435791,512.013062 612.160522,512.033447   C613.336487,512.368835 614.221741,512.672058 615.454956,512.943848   C619.410706,511.284027 618.975952,513.885010 619.018921,515.986145   C618.857788,518.536133 618.696655,521.086182 618.252502,523.845764   C616.527832,525.820374 615.086182,527.585449 613.644531,529.350525   C613.150879,528.993530 612.657227,528.636475 612.163574,528.279480   C613.059753,526.960205 613.955872,525.640930 614.884094,524.274292   C607.630127,518.760132 600.052307,521.490234 593.545898,523.162292   C593.343750,526.598511 593.176941,529.434875 593.005005,532.635620   C593.000000,533.000000 593.004211,532.995117 593.004211,532.995117   C587.839722,535.700867 584.293274,532.391174 580.752319,529.521240   C579.716187,530.708008 578.816284,531.738708 577.916321,532.769470   C577.642822,532.599609 577.369324,532.429749 577.095764,532.259949   C577.729675,530.739868 578.363525,529.219849 579.144409,527.041077   C580.514526,525.590698 581.737671,524.799011 583.258911,524.103943   C584.735596,522.159790 585.914185,520.118958 587.092712,518.078186  z\",id:\"svg_1165\"})),_path1164||(_path1164=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M569.014648,563.000000   C568.684265,563.799316 568.353943,564.598572 568.009644,565.726013   C566.467712,566.888550 564.939758,567.722961 563.076111,568.006836   C562.159851,566.313416 561.579285,565.170593 561.005066,563.679810   C561.018433,561.872253 561.025391,560.412598 561.023438,558.552368   C561.006470,557.083069 560.998535,556.014526 560.996582,554.582458   C561.789673,552.634644 562.576782,551.050293 562.963684,550.271545   C560.409973,549.355652 557.987488,548.581421 555.727783,547.474670   C555.568237,547.396545 556.608765,544.867920 556.745422,544.474426   C555.315796,542.405029 554.155151,540.724976 553.095154,538.822021   C553.379761,538.313538 553.631897,538.114441 554.254517,538.120728   C555.370117,538.494629 556.183533,538.749756 556.996948,539.004883   C557.693481,539.805786 558.389954,540.606750 559.086548,541.407715   C559.707703,540.801941 560.328857,540.196228 561.343567,539.263916   C562.488403,537.956238 563.239685,536.975281 563.990967,535.994263   C564.161255,535.990967 564.331543,535.987671 565.080444,536.016663   C566.090820,536.036255 566.522583,536.023621 566.954285,536.010986   C566.954285,536.010986 566.978882,536.020630 566.973633,536.382141   C567.636047,537.476196 568.303650,538.208801 568.971313,538.941345   C570.886047,541.273743 572.800781,543.606140 574.896423,546.158875   C574.280090,546.553162 573.150085,547.276123 572.020020,547.999084   C572.003479,548.452759 571.986938,548.906494 571.970398,549.360229   C573.398926,549.584961 574.827393,549.809692 576.720337,550.269775   C577.476929,551.276062 577.769165,552.046936 577.733032,552.881287   C576.960999,552.982056 576.517334,553.019348 575.892212,552.800903   C575.127136,552.365356 574.543579,552.185669 573.586548,552.003723   C571.135437,553.002502 569.057861,554.003479 566.991272,555.003662   C567.002319,555.002930 566.997986,555.020508 566.948853,554.677490   C565.399231,552.362061 564.446045,552.649292 564.009399,555.408447   C565.008972,556.520264 566.000610,557.260132 567.284058,558.032288   C567.686646,559.057129 567.689758,560.078247 567.943848,561.032654   C568.130554,561.733765 568.645813,562.347412 569.014648,563.000000  z\",id:\"svg_1166\"})),_path1165||(_path1165=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M553.952271,538.001831   C553.631897,538.114441 553.379761,538.313538 552.808716,539.009155   C549.486877,542.326294 546.552124,545.233398 543.617371,548.140564   C543.375732,547.892883 543.134094,547.645264 542.892456,547.397644   C543.870850,546.185669 544.849304,544.973694 545.515686,544.148193   C544.172363,542.181458 543.084961,540.589539 542.339661,538.997681   C543.609192,538.651917 544.536621,538.306091 545.837280,537.821045   C543.157104,535.732300 541.868042,535.808105 541.623413,539.007263   C540.492981,540.045105 539.741638,541.078186 538.625061,542.080444   C536.659119,541.192017 535.058350,540.334351 533.456970,539.475830   C532.298157,540.343445 531.139954,541.211914 529.854248,541.767212   C529.135193,539.286438 528.543701,537.118713 528.273926,534.895752   C528.934387,534.133972 529.273132,533.427551 529.958984,532.801270   C531.125488,533.324890 531.944702,533.768494 532.867554,534.478760   C533.692078,534.533142 534.412964,534.320801 535.399414,533.940186   C536.441223,533.531555 537.217590,533.291199 538.143188,533.341858   C542.528381,533.420349 546.764160,533.207825 551.028076,533.315430   C551.699158,534.408691 552.342163,535.181763 552.985229,535.954773   C552.985229,535.954773 553.479370,535.985779 553.720581,536.327271   C553.958618,537.113098 553.955444,537.557495 553.952271,538.001831  z\",id:\"svg_1167\"})),_path1166||(_path1166=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M586.798218,517.869507   C585.914185,520.118958 584.735596,522.159790 583.141296,523.808105   C578.043091,521.043579 574.382446,525.039185 570.145752,525.453735   C570.100159,525.458191 570.083374,525.756714 570.053101,525.917969   C570.042542,526.085327 570.032043,526.252686 569.657593,526.670044   C567.825439,527.604736 566.357239,528.289429 564.889038,528.973999   C564.543152,528.971924 564.197327,528.969849 563.494751,528.633057   C563.096191,527.841553 563.054382,527.384827 563.004761,526.566589   C562.442017,524.653442 561.887207,523.101746 561.239014,521.288879   C567.216858,522.931396 569.518494,521.666138 570.431335,516.841919   C571.486572,516.836487 572.190063,516.816589 572.932556,517.134766   C573.309509,518.078552 573.647522,518.684204 573.985535,519.289856   C574.662720,518.507812 575.339905,517.725769 576.372986,516.939819   C577.560059,516.299561 578.391296,515.663208 579.222595,515.026855   C581.649658,515.904846 584.076660,516.782837 586.798218,517.869507  z\",id:\"svg_1168\"})),_path1167||(_path1167=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M605.894897,537.575623   C605.533203,538.039673 605.318604,538.212280 604.661926,538.666626   C603.451782,539.933899 602.717590,540.961426 601.983398,541.988953   C601.983398,541.988953 601.995850,541.998657 601.988892,541.990845   C599.388977,543.795471 596.796082,545.607910 594.166748,547.445740   C593.153503,546.735901 591.947998,545.891479 590.372009,545.024292   C590.001465,545.001526 589.978699,544.978455 589.978699,544.978455   C591.551147,544.325378 593.123657,543.672363 595.502563,542.684448   C599.464661,533.066162 599.464661,533.066162 610.269104,533.826782   C608.551086,535.203857 607.279663,536.223022 605.894897,537.575623  z\",id:\"svg_1169\"})),_path1168||(_path1168=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M578.061401,552.817871   C577.769165,552.046936 577.476929,551.276062 577.050049,550.219360   C577.691406,549.622986 578.467346,549.312439 579.622009,549.328125   C580.421631,549.933167 580.842590,550.211853 581.263550,550.490601   C581.366699,550.232056 581.605347,549.783081 581.551758,549.744934   C581.096680,549.421204 580.588379,549.172241 580.096008,548.900879   C580.427490,547.654907 580.759033,546.408936 581.052002,545.307800   C584.157410,548.057861 586.777954,550.378540 589.706421,552.841431   C588.213928,554.244202 586.413452,555.504700 584.137756,556.577393   C581.795410,555.199097 579.928406,554.008484 578.061401,552.817871  z\",id:\"svg_1170\"})),_path1169||(_path1169=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M570.431885,525.947998   C570.083374,525.756714 570.100159,525.458191 570.145752,525.453735   C574.382446,525.039185 578.043091,521.043579 582.843140,523.711426   C581.737671,524.799011 580.514526,525.590698 579.150879,526.675293   C577.462524,527.878540 575.914734,528.788940 574.339539,529.715515   C573.224731,528.534790 572.017639,527.256348 570.431885,525.947998  z\",id:\"svg_1171\"})),_path1170||(_path1170=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M563.012634,526.928101   C563.054382,527.384827 563.096191,527.841553 563.235291,528.629700   C562.102234,530.128784 560.871826,531.296448 559.053833,532.637085   C557.995300,532.820740 557.524414,532.831299 557.053528,532.841858   C557.053528,532.841858 557.068481,532.440491 556.902344,531.928833   C555.860046,531.154602 554.983887,530.891968 553.969482,530.485840   C553.272522,530.244568 552.713684,530.146729 552.320862,529.799561   C553.029602,528.745056 553.572388,527.939819 554.344971,527.066956   C554.574829,526.999329 555.033142,526.859680 555.352417,526.899902   C556.099548,526.973328 556.527344,527.006470 557.041748,527.376282   C559.556763,530.952209 561.098938,527.547363 563.012634,526.928101  z\",id:\"svg_1172\"})),_path1171||(_path1171=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M552.154907,530.048889   C552.713684,530.146729 553.272522,530.244568 553.937317,530.820068   C554.036560,531.518921 554.029724,531.739990 554.022888,531.961121   C553.757141,533.118469 553.491333,534.275818 553.105347,535.693970   C552.342163,535.181763 551.699158,534.408691 551.006714,533.014038   C551.356506,531.611206 551.755737,530.830078 552.154907,530.048889  z\",id:\"svg_1173\"})),_path1172||(_path1172=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M565.008789,529.263916   C566.357239,528.289429 567.825439,527.604736 569.655334,526.921631   C569.032349,528.520813 568.047729,530.118347 566.807129,532.131104   C565.992737,530.880615 565.560608,530.217163 565.008789,529.263916  z\",id:\"svg_1174\"})),_path1173||(_path1173=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M599.011108,530.015442   C599.270996,529.102417 599.530945,528.189392 599.790833,527.276367   C600.968628,527.891663 602.146423,528.506897 603.324219,529.122192   C603.238220,529.406921 603.152222,529.691650 603.066223,529.976379   C601.949646,529.976379 600.833008,529.976379 599.358337,529.988586   C599.000305,530.000793 599.011108,530.015442 599.011108,530.015442  z\",id:\"svg_1175\"})),_path1174||(_path1174=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M598.994263,529.994507   C598.390076,530.895386 597.791992,531.802551 597.193848,532.709778   C596.804993,532.087708 596.416138,531.465637 596.027283,530.843567   C596.812561,530.478271 597.597839,530.112976 598.697144,529.881592   C599.011108,530.015442 599.000305,530.000793 598.994263,529.994507  z\",id:\"svg_1176\"})),_path1175||(_path1175=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M554.254517,538.120728   C553.955444,537.557495 553.958618,537.113098 553.968018,536.335571   C555.468201,536.420959 558.412048,534.821228 557.261108,538.779236   C556.183533,538.749756 555.370117,538.494629 554.254517,538.120728  z\",id:\"svg_1177\"})),_path1176||(_path1176=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M590.012939,545.013184   C589.139893,545.978821 588.255310,546.932739 587.370789,547.886719   C586.978455,547.456970 586.586121,547.027222 586.193848,546.597473   C587.199219,546.067078 588.204590,545.536621 589.594299,544.992310   C589.978699,544.978455 590.001465,545.001526 590.012939,545.013184  z\",id:\"svg_1178\"})),_path1177||(_path1177=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M563.784790,535.795044   C563.239685,536.975281 562.488403,537.956238 561.370544,538.939697   C561.862183,537.826721 562.720398,536.711243 563.784790,535.795044  z\",id:\"svg_1179\"})),_path1178||(_path1178=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M569.124390,538.652344   C568.303650,538.208801 567.636047,537.476196 566.979248,536.394165   C567.752502,536.817627 568.514954,537.590515 569.124390,538.652344  z\",id:\"svg_1180\"})),_path1179||(_path1179=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M556.914917,533.108643   C557.524414,532.831299 557.995300,532.820740 558.821533,532.845337   C558.141724,533.529480 557.106506,534.178467 556.071289,534.827454   C556.306274,534.343445 556.541260,533.859436 556.914917,533.108643  z\",id:\"svg_1181\"})),_path1180||(_path1180=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M566.979614,535.695923   C566.522583,536.023621 566.090820,536.036255 565.335876,536.017090   C565.474548,535.221924 565.936523,534.458557 566.398499,533.695190   C566.600647,534.257080 566.802795,534.819031 566.979614,535.695923  z\",id:\"svg_1182\"})),_path1181||(_path1181=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M592.997559,533.002441   C593.527344,533.234436 594.069519,533.445984 594.573792,533.725952   C594.616577,533.749695 594.406189,534.229675 594.313477,534.497742   C593.899597,534.192749 593.485779,533.887695 593.038086,533.288879   C593.004211,532.995117 593.000000,533.000000 592.997559,533.002441  z\",id:\"svg_1183\"})),_path1182||(_path1182=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M596.923340,525.294250   C597.496338,525.267029 597.899841,525.396301 598.303284,525.525574   C598.192993,525.633118 598.058594,525.848389 597.976562,525.829956   C597.561523,525.737000 597.160034,525.583191 596.923340,525.294250  z\",id:\"svg_1184\"})),_path1183||(_path1183=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M554.399292,531.978638   C554.029724,531.739990 554.036560,531.518921 554.075562,530.963562   C554.983887,530.891968 555.860046,531.154602 556.888733,531.728516   C556.286072,532.025208 555.530823,532.010742 554.399292,531.978638  z\",id:\"svg_1185\"})),_path1184||(_path1184=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M577.733032,552.881287   C579.928406,554.008484 581.795410,555.199097 583.818604,556.694031   C583.717957,557.498230 583.461121,557.998108 583.099487,558.760376   C578.116943,559.033691 572.747925,556.973633 569.074097,562.655396   C568.645813,562.347412 568.130554,561.733765 567.943848,561.032654   C567.689758,560.078247 567.686646,559.057129 567.283081,557.657837   C566.986938,556.502197 566.983582,555.753296 566.980225,555.004456   C569.057861,554.003479 571.135437,553.002502 573.608398,552.312256   C574.693726,552.767578 575.383728,552.912109 576.073669,553.056702   C576.517334,553.019348 576.960999,552.982056 577.733032,552.881287  M578.728394,556.204895   C578.613037,556.045166 578.497681,555.885437 578.382324,555.725647   C578.406128,555.948914 578.429932,556.172119 578.728394,556.204895  z\",id:\"svg_1186\"})),_path1185||(_path1185=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M602.248962,541.819214   C602.717590,540.961426 603.451782,539.933899 604.549072,538.842224   C604.112976,539.735168 603.313721,540.692261 602.248962,541.819214  z\",id:\"svg_1187\"})),_path1186||(_path1186=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M607.025024,506.945557   C607.025024,506.945557 607.016785,506.464081 607.168213,506.071960   C606.870300,505.452759 606.420898,505.225708 605.971497,504.998627   C605.971497,504.998627 606.008423,504.997192 606.010132,504.633362   C606.006226,503.506592 606.000671,502.743652 606.238525,501.994873   C606.482056,502.009003 606.968140,502.050537 607.177795,502.309875   C608.207092,502.025940 609.057983,501.523529 609.837463,500.927582   C610.578064,500.361267 611.243958,499.697174 612.100220,499.326660   C612.899170,499.651398 613.540527,499.725494 614.181946,499.799622   C614.204956,499.590485 614.228027,499.381317 614.251038,499.172180   C613.525879,499.087616 612.800659,499.003082 612.052979,498.532043   C612.570862,497.091766 612.961365,495.920135 613.679382,495.005768   C616.069885,491.961853 618.577942,489.010284 621.026001,486.008392   C621.010986,485.993469 621.021362,486.033356 621.314514,485.896423   C622.188416,484.877136 622.769104,483.994781 623.672852,483.027252   C624.906372,482.386749 625.816833,481.831360 626.038940,481.695892   C625.244446,479.496185 624.625916,477.783508 624.355835,476.054718   C625.783630,475.682800 626.862915,475.326965 627.942139,474.971130   C628.382263,477.463776 628.845581,479.952637 629.253113,482.450592   C629.466064,483.755859 629.580994,485.077087 629.861694,486.681671   C629.329529,490.387421 628.675842,493.802612 628.031799,497.597870   C627.027405,500.986206 626.175964,504.067291 624.883789,506.950928   C624.565796,507.660736 622.812012,507.727142 621.003418,508.081238   C618.532104,508.708527 616.775635,509.343872 614.960876,509.634888   C614.012634,509.095459 612.697327,508.425446 612.300415,508.780914   C609.282837,511.483490 608.157898,509.316742 607.025024,506.945557  z\",id:\"svg_1188\"})),_path1187||(_path1187=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M615.019165,509.979187   C616.775635,509.343872 618.532104,508.708527 620.647339,508.049408   C621.011353,508.456390 621.016602,508.887177 621.013306,509.982666   C621.008850,511.101929 621.013000,511.556458 621.017090,512.010986   C620.595581,513.311340 620.174072,514.611755 619.385742,515.949158   C618.975952,513.885010 619.410706,511.284027 615.419373,512.584045   C614.993408,511.537842 614.951111,510.819916 614.936401,510.071320   C614.964050,510.040619 615.019165,509.979187 615.019165,509.979187  z\",id:\"svg_1189\"})),_path1188||(_path1188=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M621.314697,511.968140   C621.013000,511.556458 621.008850,511.101929 621.013916,510.306000   C621.219543,510.618164 621.415894,511.271729 621.314697,511.968140  z\",id:\"svg_1190\"})),_path1189||(_path1189=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M567.999573,739.995117   C567.677307,740.100891 567.415344,740.290100 566.714111,740.780212   C564.475586,741.655945 562.736572,742.314270 560.997620,742.972595   C560.004761,743.590332 558.994080,744.181519 558.023376,744.832214   C556.655762,745.748901 555.304626,747.433838 553.971497,747.409607   C553.003418,747.391968 551.557373,745.252502 551.249146,743.855164   C550.757568,741.626709 551.035095,739.228638 551.327515,736.423706   C552.750183,735.616821 553.832703,735.288574 555.078796,735.285522   C556.495422,737.112732 555.753174,741.121521 559.527710,739.384949   C560.918518,738.745117 561.813965,737.028687 562.935364,735.803345   C561.121887,734.868652 559.348145,733.839844 557.474426,733.047424   C556.767517,732.748474 555.829285,732.996460 554.994507,732.666382   C554.987854,731.899902 554.983215,731.462097 554.978638,731.024231   C558.099365,730.301025 561.329041,729.875305 564.314087,728.781738   C568.338989,727.307129 570.637634,729.708191 571.006714,736.601379   C571.010010,737.007324 570.999939,737.503662 570.643433,737.757202   C569.524414,738.672180 568.761963,739.333618 567.999573,739.995117  z\",id:\"svg_1191\"})),_path1190||(_path1190=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M554.678955,730.786743   C554.983215,731.462097 554.987854,731.899902 554.982849,732.994324   C554.953918,734.087402 554.934631,734.523865 554.915283,734.960388   C553.832703,735.288574 552.750183,735.616821 551.326477,735.978638   C550.224731,735.687439 549.464050,735.362671 548.372986,735.039917   C546.278259,735.300110 544.372498,735.216553 542.775024,735.877686   C536.941345,738.292175 531.161987,736.978271 526.804932,732.181396   C525.918091,731.205078 524.449097,730.757568 523.248413,730.066284   C523.836670,729.292786 524.424927,728.519348 525.013123,727.745850   C528.419556,729.775146 531.825928,731.804504 535.528442,734.010193   C535.528442,729.365784 535.528442,725.076660 535.528442,720.787476   C535.846680,720.612732 536.164856,720.437927 536.483093,720.263184   C537.141907,721.881836 537.710754,723.544800 538.480896,725.108704   C539.591858,727.364685 540.848877,729.548706 542.043579,731.763428   C543.005981,731.089294 543.968384,730.415161 544.979980,729.390015   C548.145813,729.542480 551.262573,730.045898 554.678955,730.786743  z\",id:\"svg_1192\"})),_path1191||(_path1191=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352718\",opacity:1,stroke:\"none\",d:\" M539.882568,680.309692   C540.672913,681.094788 541.335754,682.177795 541.998047,683.638062   C541.250061,682.879456 540.502563,681.743469 539.882568,680.309692  z\",id:\"svg_1193\"})),_path1192||(_path1192=/*#__PURE__*/React.createElement(\"path\",{fill:\"#574432\",opacity:1,stroke:\"none\",d:\" M412.000488,691.748596   C411.822266,691.831909 411.632599,691.675415 411.486572,691.485413   C411.458710,691.449097 411.603027,691.280396 411.836182,691.083557   C412.004364,691.161987 412.004303,691.329590 412.000488,691.748596  z\",id:\"svg_1194\"})),_path1193||(_path1193=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M454.534912,699.391785   C454.651184,698.941650 454.934906,698.665527 455.236816,698.411011   C455.244843,698.404236 455.450317,698.631775 455.563660,698.750061   C455.277374,699.022949 454.991119,699.295837 454.534912,699.391785  z\",id:\"svg_1195\"})),_path1194||(_path1194=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M560.990601,554.945923   C560.998535,556.014526 561.006470,557.083069 560.765991,558.569458   C560.345764,558.991516 560.174133,558.995789 559.783936,559.106079   C559.293457,559.409607 559.105835,559.668091 558.859802,560.308350   C558.478149,561.751770 558.239075,562.874695 557.733887,564.179382   C554.716919,567.684570 553.689636,563.851807 552.083435,562.950073   C549.931641,561.742004 547.390320,558.522034 546.078613,559.011658   C541.453796,560.738281 539.520630,557.685730 537.977051,556.276611   C534.304749,556.018250 531.804504,555.842346 528.828552,555.632996   C529.666077,557.207397 530.309204,558.416321 531.176147,560.045959   C529.795532,561.050171 528.389587,562.072815 526.719482,562.891724   C525.100037,561.133423 523.744629,559.578796 522.668274,558.344177   C519.415955,560.127319 517.012024,562.557068 514.672852,562.496216   C509.809509,562.369812 506.377258,563.928406 504.421478,569.027893   C504.364288,569.176941 504.780334,569.507446 505.174377,570.003357   C506.219971,569.456360 507.308136,568.887085 508.855316,568.077698   C509.665863,569.457458 510.483582,570.849426 511.965210,573.371643   C512.827820,570.155701 513.220947,568.689941 513.704712,566.886414   C514.885864,567.366150 515.732239,567.709839 516.674072,568.092346   C516.925293,566.931274 517.187134,565.721130 517.449036,564.510986   C520.238708,570.721985 523.313843,564.280334 526.072754,565.276978   C526.745667,566.350586 527.403198,567.110168 527.915161,568.123352   C527.466858,568.824219 527.164185,569.271423 526.861511,569.718628   C527.582520,569.792236 528.303467,569.865845 529.024292,569.955933   C529.024170,569.972290 529.056641,569.977295 529.080811,570.308350   C530.066345,570.745544 531.027771,570.851685 531.991577,570.980713   C531.994080,571.003601 531.963501,570.968872 532.354126,571.023132   C535.534424,572.561096 540.890991,570.809753 540.047485,576.872009   C535.695557,578.189697 531.375793,579.630005 526.980713,580.783203   C523.914001,581.587830 520.761047,582.123047 517.615662,582.550964   C514.509521,582.973511 510.601654,582.030396 508.391937,583.591858   C503.473969,587.067078 497.910828,584.427246 493.028992,586.432556   C492.374634,586.701233 491.466827,586.352905 490.236237,585.887573   C489.319702,585.221680 488.843353,584.958618 488.366974,584.695557   C488.243073,585.122437 488.119171,585.549255 487.995270,585.976135   C487.995270,585.976135 487.995087,585.991211 487.985107,585.991089   C486.482910,585.849976 484.990753,585.708984 483.261230,584.947998   C483.014740,583.883728 483.005524,583.439453 483.241943,582.994263   C483.767609,582.870789 484.047699,582.748230 484.327789,582.625732   C484.240967,582.497620 484.154175,582.369568 484.067383,582.241455   C483.712402,582.495361 483.357391,582.749329 482.742279,582.804688   C482.894562,580.869812 483.307007,579.133606 483.719421,577.397339   C483.121399,576.927429 482.523407,576.457458 481.925385,575.987549   C480.926849,583.066284 475.218048,579.324280 471.486816,581.235046   C473.392212,582.813904 474.713654,583.908936 476.035065,585.003967   C472.673889,584.859863 469.312714,584.715820 466.072327,583.969604   C468.475861,580.711914 470.758636,578.056458 472.956543,575.499695   C470.702850,574.846741 468.582245,574.232300 467.216248,573.836548   C464.460571,574.778320 462.286987,575.521179 459.781769,576.377319   C460.643982,577.153320 461.357086,577.795105 462.474274,578.800598   C460.747528,579.301819 459.516724,579.659119 458.444977,579.970276   C457.948883,578.949768 457.469360,577.963379 456.997650,576.584656   C457.004852,575.147583 457.004242,574.102905 457.115784,572.775635   C457.110992,571.243103 456.994049,569.993103 456.994598,569.999146   C461.177917,569.541809 465.345062,569.086243 469.837616,568.595093   C469.899048,568.888184 470.185974,570.257019 470.386871,571.215271   C472.206299,571.215271 473.640106,571.123962 475.057037,571.239502   C476.673279,571.371216 478.274475,571.687256 479.882202,571.923279   C480.014191,571.400696 480.146179,570.878113 480.278168,570.355530   C480.795074,571.118896 481.311981,571.882263 481.452179,572.089294   C483.994629,571.941650 486.155212,571.816223 488.522125,571.678772   C487.221619,568.628662 487.968414,565.838013 492.435913,564.800476   C494.111694,565.364685 495.443970,565.822754 496.846954,566.609619   C497.376495,567.876587 497.835266,568.814758 498.444244,570.059998   C501.184570,567.485168 503.534943,565.276733 505.885315,563.068237   C505.624298,562.758728 505.363251,562.449280 505.102203,562.139771   C502.462708,563.371765 499.823212,564.603821 497.141449,565.486938   C496.478668,563.237305 495.858154,561.336487 494.820892,558.158936   C493.578857,559.742065 492.298401,561.374146 490.652649,562.994385   C484.682251,561.617859 491.255737,559.575928 490.382996,557.968933   C491.843658,556.651611 492.929840,555.334229 494.368713,554.037842   C495.511139,553.551147 496.300873,553.043518 497.090637,552.535889   C496.722839,552.134460 496.355042,551.733032 495.987213,551.331665   C495.320343,552.216309 494.653442,553.100952 493.620667,553.998413   C490.154449,554.660034 487.054077,555.308777 483.623932,555.933838   C482.063843,555.728577 480.835419,555.407349 479.602905,555.390564   C475.020813,555.328064 470.437317,555.365662 467.558716,555.365662   C465.261139,557.706848 463.815216,559.180176 462.394409,560.627930   C458.692139,558.334961 456.219086,556.803284 452.743408,554.650635   C452.738525,554.649475 451.368652,554.324585 450.291504,553.801453   C453.090668,552.168457 455.460968,550.309631 458.150757,549.446167   C459.979553,548.859009 462.256042,549.666321 464.908569,549.901123   C464.868835,549.454651 464.937775,550.229431 464.757202,551.173096   C464.409180,551.958862 464.310730,552.575562 464.212280,553.192322   C464.433105,553.216614 464.653931,553.240967 464.874756,553.265259   C464.913910,552.507690 464.953064,551.750061 465.362427,550.988770   C469.596802,550.618835 473.457764,550.212830 477.326080,549.897522   C481.243469,549.578186 485.210724,549.586304 489.057434,548.898804   C489.929901,548.742859 490.395325,546.309692 491.400909,544.899963   C493.500427,544.224731 495.247101,543.574280 496.957336,543.260986   C495.892242,544.922852 494.863525,546.247681 493.834839,547.572449   C494.048981,547.828491 494.263153,548.084534 494.477295,548.340515   C496.008606,547.412537 497.539886,546.484558 498.695496,545.784241   C500.120148,546.523315 501.417877,547.196472 502.715576,547.869690   C503.137726,546.903809 503.559875,545.937988 504.328552,544.939453   C504.675079,543.291016 504.675079,541.675232 504.675079,540.452026   C506.249573,540.914062 508.133209,541.466919 510.008118,542.009827   C509.999329,541.999939 509.980682,541.980835 509.995880,542.368896   C511.863190,544.592407 513.715332,546.427795 515.977783,548.669922   C516.474304,546.975281 516.751526,546.029175 517.177246,544.576172   C518.694641,545.756714 519.877319,546.676880 520.607788,547.245178   C522.628540,546.392822 524.319275,545.679688 525.990723,545.309265   C525.610046,546.734680 525.248535,547.817383 524.696533,548.991821   C524.529602,549.299194 524.553101,549.514709 524.576599,549.730286   C524.759094,549.532715 524.941589,549.335205 525.476074,549.048157   C529.806335,545.375305 533.108887,548.277771 536.906311,550.979858   C535.995422,547.491333 534.202637,544.397583 539.002197,544.360840   C539.483337,547.525696 539.962280,550.307434 540.492615,553.387573   C542.485229,552.080322 544.515076,550.748596 547.296631,548.923767   C548.801453,550.309692 550.711731,552.069031 552.622009,553.828308   C552.756226,553.448120 552.890442,553.067871 553.024597,552.687683   C554.723938,553.259033 556.410706,553.872681 558.127686,554.384766   C559.055237,554.661438 560.034607,554.764526 560.990601,554.945923  M509.490570,576.204834   C509.003204,576.457092 508.515808,576.709351 507.689026,576.366516   C506.700012,575.991821 505.710999,575.617188 504.721954,575.242493   C504.619812,575.665771 504.517670,576.088989 504.415527,576.512268   C505.599518,576.685303 506.783539,576.858398 507.970795,577.727234   C508.352814,578.302368 508.734863,578.877502 509.116913,579.452637   C509.409637,578.300110 509.702393,577.147644 510.726105,576.022156   C511.453491,576.047729 512.180908,576.073303 512.966309,576.826721   C513.641663,577.461853 514.317078,578.096985 514.992493,578.732056   C515.268494,578.232544 515.544434,577.733032 515.820374,577.233459   C514.906677,576.795532 513.992981,576.357605 512.935120,575.270569   C511.958191,575.515320 510.981262,575.760132 509.490570,576.204834  M507.575409,555.184692   C510.102692,556.649048 512.629944,558.113403 515.481140,559.765381   C516.462830,558.659973 517.610229,557.367920 518.998901,555.804260   C514.003540,553.414185 509.387878,551.205811 504.717010,548.971008   C504.717010,551.353821 504.561340,552.977051 504.819794,554.531494   C504.889740,554.952087 506.212982,555.164368 507.575409,555.184692  M522.375916,571.878052   C522.214722,572.492432 522.053528,573.106812 521.892334,573.721252   C522.803772,573.271729 523.715210,572.822205 524.626587,572.372620   C524.066528,572.104248 523.506470,571.835876 522.375916,571.878052  M501.796967,577.326721   C501.747894,577.704895 501.698822,578.083130 501.649719,578.461304   C501.920410,578.463257 502.191071,578.465271 502.461761,578.467285   C502.419067,578.086670 502.376343,577.706055 501.796967,577.326721  M492.514526,549.374451   C492.514526,549.374451 492.412445,549.550171 492.412445,549.550171   C492.412445,549.550171 492.617035,549.526001 492.514526,549.374451  M519.589233,568.514465   C519.589233,568.514465 519.476746,568.582947 519.589233,568.514465  z\",id:\"svg_1196\"})),_path1195||(_path1195=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M449.998779,553.999695   C451.368652,554.324585 452.738525,554.649475 452.743408,554.650635   C456.219086,556.803284 458.692139,558.334961 462.394409,560.627930   C463.815216,559.180176 465.261139,557.706848 467.558716,555.365662   C470.437317,555.365662 475.020813,555.328064 479.602905,555.390564   C480.835419,555.407349 482.063843,555.728577 483.706238,556.304688   C485.729706,557.132080 487.341095,557.564819 489.222015,557.996948   C489.671295,557.996155 489.850983,557.995911 490.017212,557.998169   C490.003693,558.000549 490.008545,557.968872 490.008545,557.968872   C491.255737,559.575928 484.682251,561.617859 490.881287,563.129639   C491.680939,563.749146 491.886658,564.221741 492.092407,564.694275   C487.968414,565.838013 487.221619,568.628662 488.522125,571.678772   C486.155212,571.816223 483.994629,571.941650 481.452179,572.089294   C481.311981,571.882263 480.795074,571.118896 480.278168,570.355530   C480.146179,570.878113 480.014191,571.400696 479.882202,571.923279   C478.274475,571.687256 476.673279,571.371216 475.057037,571.239502   C473.640106,571.123962 472.206299,571.215271 470.386871,571.215271   C470.185974,570.257019 469.899048,568.888184 469.837616,568.595093   C465.345062,569.086243 461.177917,569.541809 456.994598,569.999146   C456.994049,569.993103 457.110992,571.243103 456.810974,572.625916   C454.581207,571.232422 452.768463,569.706177 450.955719,568.179932   C450.600525,568.444153 450.245361,568.708313 449.890198,568.972534   C451.192993,571.146667 452.495789,573.320740 453.861877,575.600464   C453.708435,576.541626 453.474854,577.974426 453.056885,580.538391   C455.089417,578.697876 456.039642,577.837402 456.989868,576.976990   C457.469360,577.963379 457.948883,578.949768 458.444977,579.970276   C459.516724,579.659119 460.747528,579.301819 462.474274,578.800598   C461.357086,577.795105 460.643982,577.153320 459.781769,576.377319   C462.286987,575.521179 464.460571,574.778320 467.216248,573.836548   C468.582245,574.232300 470.702850,574.846741 472.956543,575.499695   C470.758636,578.056458 468.475861,580.711914 466.007904,583.680664   C459.795197,583.666870 453.767700,583.339722 447.369171,582.772034   C446.998138,582.531494 447.010406,582.055969 446.863281,581.728027   C445.808624,579.597778 444.901062,577.795532 444.287476,575.863464   C445.394073,572.779358 446.206757,569.825073 447.120178,566.640320   C447.099335,565.852844 446.977753,565.295837 446.908813,564.387695   C447.432587,562.561157 447.903717,561.085938 448.363647,559.645630   C446.126831,559.645630 443.897552,559.645630 441.428955,559.645630   C442.152374,561.152344 442.737549,562.371155 443.696991,564.369385   C438.756287,562.279419 436.292999,559.820129 438.349518,554.978394   C440.977905,555.244507 443.242065,555.524414 446.389526,555.913635   C446.914429,555.632568 448.450531,554.810181 449.990845,553.991699   C449.995117,553.995605 449.998779,553.999695 449.998779,553.999695  M453.170929,559.103516   C453.049164,559.194275 452.873505,559.262207 452.822449,559.382874   C452.780273,559.482605 452.853699,559.738037 452.930176,559.763794   C453.446747,559.938293 453.977753,560.070190 454.504120,560.215759   C454.227936,559.832214 453.951752,559.448669 453.170929,559.103516  z\",id:\"svg_1197\"})),_path1196||(_path1196=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M383.154785,571.262207   C383.940613,570.096558 384.954742,569.205994 385.968903,568.315491   C385.642303,567.833252 385.315674,567.351013 384.989075,566.868713   C383.512726,567.716675 382.036407,568.564636 379.931183,569.773743   C379.522522,569.027649 378.889893,567.872559 378.062836,566.362488   C376.590698,567.952271 375.678436,568.937500 374.735077,569.956238   C372.438995,568.895752 370.255432,567.887207 368.433777,566.369141   C370.197205,565.232483 371.598724,564.605286 373.045959,564.329590   C377.121185,566.766724 378.437439,564.488342 379.368286,560.996216   C381.808838,559.362366 383.885498,557.737122 386.293243,555.852722   C384.450623,554.564026 383.206390,553.693909 381.051208,552.186646   C382.713531,550.969360 383.953766,550.061157 385.558105,549.094360   C387.014496,549.281921 388.134796,549.821228 389.193848,549.719910   C392.484467,549.405273 395.996185,551.333740 399.436096,548.824280   C400.535614,548.889587 401.268524,548.934875 402.049744,549.327393   C402.703339,551.324402 406.557098,553.656860 400.843933,554.044922   C399.983337,554.383301 399.457611,554.726074 398.616943,554.903320   C397.288635,554.262634 396.097504,553.988098 395.294098,553.276123   C392.505188,550.804504 392.130676,552.589294 391.689148,554.879883   C389.436035,556.274231 387.492584,557.788696 385.061340,559.683411   C389.193787,560.226196 392.101959,560.608215 395.010620,561.370972   C394.053589,563.085266 393.096161,564.418701 392.135315,565.756897   C394.107117,567.179504 395.950226,568.509277 397.393524,569.550598   C399.121368,568.593628 400.560089,567.796814 402.251312,567.002075   C402.672211,567.003784 402.840546,567.003296 402.991577,567.371582   C403.970276,569.209290 404.966309,570.678345 405.946014,572.435120   C405.602234,573.162048 405.274750,573.601257 404.947235,574.040466   C404.052734,575.328796 403.158203,576.617065 402.037292,578.231445   C397.882172,570.914978 390.660522,571.144775 383.154785,571.262207  M384.339844,561.341980   C384.027496,561.574158 383.715149,561.806335 383.402771,562.038513   C383.596649,562.241089 383.790497,562.443665 383.984375,562.646240   C384.229675,562.341309 384.474976,562.036377 384.339844,561.341980  z\",id:\"svg_1198\"})),_path1197||(_path1197=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M404.971710,574.406250   C405.274750,573.601257 405.602234,573.162048 406.212341,572.210388   C406.819702,569.340759 407.144440,566.983521 407.593048,563.727234   C405.735535,565.054504 404.372223,566.028687 403.008911,567.002869   C402.840546,567.003296 402.672211,567.003784 402.223053,566.683533   C401.627747,565.576355 401.313263,564.789795 401.001678,563.650085   C400.208496,561.887695 399.412415,560.478516 398.467133,558.805176   C400.449097,558.508301 402.216675,558.243591 404.360413,557.988892   C406.814423,558.999329 408.892242,559.999634 411.337158,560.990173   C413.244141,560.090637 414.784119,559.200928 416.324066,558.311218   C416.675018,558.677063 417.025940,559.042847 417.376862,559.408630   C415.405884,561.460938 413.434906,563.513184 411.488922,565.539490   C415.360443,567.974365 417.574707,574.298096 424.006226,570.999146   C423.999146,571.002441 423.995026,570.987610 424.137451,571.231079   C425.223175,571.970154 426.166504,572.465698 427.458984,572.969604   C431.860992,572.514221 429.579742,575.530090 430.030884,577.024597   C430.022125,577.009033 430.025848,577.036255 429.710510,577.044373   C428.942627,577.427002 428.490051,577.801514 427.983948,578.524231   C427.567078,580.224670 427.203766,581.576904 426.840424,582.929199   C426.159760,582.933533 425.479095,582.937805 424.355713,582.614868   C422.592804,582.178223 421.272644,582.068665 419.952454,581.959106   C417.128082,581.272827 414.107452,581.000183 411.536194,579.780334   C409.110260,578.629333 407.157227,576.481445 404.971710,574.406250  M403.520172,560.403320   C403.520172,560.403320 403.589203,560.514526 403.520172,560.403320  z\",id:\"svg_1199\"})),_path1198||(_path1198=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M427.284546,582.955505   C427.203766,581.576904 427.567078,580.224670 428.289886,578.485229   C429.108185,577.744141 429.567017,577.390198 430.025879,577.036255   C430.025848,577.036255 430.022125,577.009033 430.406799,577.029175   C432.848785,578.026306 434.906067,579.003418 437.200684,579.988525   C437.437988,579.996521 437.911896,579.990234 437.975586,580.339355   C439.304413,580.817383 440.569550,580.946167 441.914185,581.021484   C441.993652,580.968018 442.136200,580.839905 442.459564,581.015015   C444.192078,581.478699 445.601257,581.767334 447.010406,582.055969   C447.010406,582.055969 446.998138,582.531494 446.994476,582.769409   C445.563049,583.595886 444.096771,584.761658 442.714417,584.669495   C437.703949,584.335144 432.721619,583.578857 427.284546,582.955505  z\",id:\"svg_1200\"})),_path1199||(_path1199=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M482.996338,582.995117   C483.005524,583.439453 483.014740,583.883728 483.023224,584.661255   C480.935791,585.024536 478.849091,585.054688 476.398712,585.044373   C474.713654,583.908936 473.392212,582.813904 471.486816,581.235046   C475.218048,579.324280 480.926849,583.066284 481.925385,575.987549   C482.523407,576.457458 483.121399,576.927429 483.719421,577.397339   C483.307007,579.133606 482.894562,580.869812 482.741089,582.803040   C483.000000,583.000000 482.996338,582.995117 482.996338,582.995117  z\",id:\"svg_1201\"})),_path1200||(_path1200=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M420.194824,582.240845   C421.272644,582.068665 422.592804,582.178223 424.015411,582.619385   C422.890930,582.808228 421.664062,582.665405 420.194824,582.240845  z\",id:\"svg_1202\"})),_path1201||(_path1201=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M325.036255,534.024048   C321.384094,533.499023 319.424835,531.345642 318.351349,527.840820   C317.195312,524.066528 315.539551,520.445374 314.281189,516.267822   C314.444122,515.412537 314.427673,515.046753 314.411224,514.681030   C314.246399,515.093323 314.081573,515.505615 313.916748,515.917908   C312.057098,514.835327 310.197449,513.752686 308.406372,512.235718   C308.738098,511.581635 308.911774,511.305634 308.995911,510.973267   C309.000549,510.805176 309.005219,510.637085 309.411285,510.227112   C310.328613,509.949127 310.844574,509.913025 311.754333,509.898254   C313.727631,509.936066 315.307129,509.952637 317.268188,509.978943   C318.407532,509.984192 319.165375,509.979736 319.956970,510.209900   C319.990784,510.444550 320.036652,510.916504 319.896942,511.218079   C319.260742,512.463074 318.764221,513.406433 318.267731,514.349792   C318.646057,514.592957 319.024353,514.836060 319.402679,515.079224   C320.255920,514.082886 321.109161,513.086548 322.273499,512.198486   C324.385956,511.889496 326.187256,511.472229 327.998474,511.417084   C329.956512,513.034485 332.680023,515.807373 333.716278,515.277893   C337.832916,513.174622 339.675354,515.874695 341.993286,518.364380   C340.322418,520.391602 338.661865,522.040527 336.659607,524.028870   C338.826691,524.833557 340.715454,525.120605 342.016998,526.150024   C343.046387,526.964233 343.354614,528.690186 343.653625,530.009521   C342.883087,530.004700 342.442108,530.001526 342.000671,529.999146   C342.000244,530.000000 342.007355,529.995117 341.956879,529.635620   C341.024658,528.443481 340.142914,527.610779 339.377777,526.888184   C337.897552,528.985474 336.849854,530.469910 335.626770,532.081055   C335.235352,532.409180 335.078644,532.649475 334.626526,532.938599   C333.497162,533.620178 332.722504,534.291565 331.696838,535.000366   C331.279236,535.067444 331.112671,535.096985 330.593018,535.094238   C329.556030,534.711609 328.487518,534.527283 328.252869,533.983276   C327.050842,531.196350 326.079620,532.233765 325.036255,534.024048  M333.336060,520.069946   C331.023499,520.355103 328.710938,520.640198 325.989075,520.975830   C327.783142,522.576111 329.464996,524.076294 331.457733,525.853760   C332.359497,523.771667 333.177307,521.883423 334.700226,519.996704   C335.890137,519.262878 337.080048,518.529053 338.269958,517.795227   C337.907959,517.384705 337.545959,516.974182 337.183960,516.563660   C336.123688,517.710754 335.063446,518.857788 333.336060,520.069946  M323.543091,518.161133   C323.690247,518.644714 323.837402,519.128357 323.984528,519.611938   C324.289642,519.334473 324.594727,519.057007 324.899841,518.779541   C324.582825,518.436646 324.265808,518.093750 323.543091,518.161133  z\",id:\"svg_1203\"})),_path1202||(_path1202=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M362.056610,561.999451   C360.804565,561.807129 359.552490,561.614807 358.071533,561.665527   C357.095917,561.700684 356.349182,561.492676 355.302002,561.147217   C355.001587,561.009705 354.957642,560.965576 354.957642,560.965576   C351.007080,558.213623 347.056519,555.461731 343.051758,552.356445   C342.997559,552.002991 342.993927,552.003845 343.394775,552.006470   C346.652161,551.307556 349.508698,550.606018 352.222931,549.939453   C351.764618,548.084656 351.383240,546.541199 351.000305,544.999207   C350.998779,545.000732 350.992767,545.006653 351.344360,545.041138   C353.047546,546.092163 354.399139,547.108765 354.923370,547.503113   C356.514099,546.154114 357.641663,545.197937 358.845154,544.583435   C361.848358,548.130493 365.076202,551.118164 367.606903,554.610962   C369.594513,557.354187 371.028961,557.166077 373.239258,554.994263   C373.485016,554.988525 373.976440,554.973938 373.979065,555.338196   C373.990143,556.429382 373.998596,557.156372 373.879089,558.194214   C373.499542,559.344421 373.247955,560.183655 372.996277,561.011841   C372.996185,561.000732 373.021210,560.998474 372.681183,560.995972   C371.302490,561.044800 370.263824,561.096130 368.965118,561.160400   C369.382019,559.902588 369.663361,559.053833 370.234436,557.330872   C367.793793,558.930237 366.196259,559.977112 364.655701,560.986633   C363.335938,559.861084 362.207092,558.898315 361.078247,557.935547   C360.843079,558.181946 360.607880,558.428345 360.372681,558.674744   C360.933990,559.783020 361.495300,560.891235 362.056610,561.999451  z\",id:\"svg_1204\"})),_path1203||(_path1203=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M330.946075,535.126587   C331.112671,535.096985 331.279236,535.067444 331.932983,535.272949   C334.744263,536.515625 337.068420,537.523193 339.781616,538.699402   C340.596954,536.604614 341.298462,534.802307 342.335815,533.000488   C343.120209,532.999268 343.568726,532.997559 344.244995,532.988403   C344.472717,532.981018 344.928467,532.980652 344.970703,533.297119   C345.336121,534.390442 345.659302,535.167297 345.846863,536.255371   C347.478058,538.373962 349.244843,540.181213 351.024475,542.365662   C351.022491,543.497437 351.007629,544.252075 350.992767,545.006653   C350.992767,545.006653 350.998779,545.000732 350.643372,545.017456   C348.528961,546.017639 346.769989,547.001038 344.853455,547.720886   C344.053925,547.362427 343.411957,547.267456 342.769989,547.172546   C342.745209,547.401794 342.720459,547.630981 342.695679,547.860229   C343.458771,547.911926 344.221832,547.963623 344.995789,548.360596   C344.335785,549.805176 343.664856,550.904480 342.993927,552.003845   C342.993927,552.003845 342.997559,552.002991 342.989990,552.010376   C337.627716,551.690552 336.962372,546.561584 334.258453,542.914490   C333.146912,539.922363 332.046509,537.524475 330.946075,535.126587  z\",id:\"svg_1205\"})),_path1204||(_path1204=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M316.886627,509.969177   C315.307129,509.952637 313.727631,509.936066 311.640747,509.577820   C310.417603,508.843475 309.701904,508.450806 308.986206,508.058105   C308.101379,506.883423 307.216583,505.708710 306.092957,504.258911   C306.733215,503.063538 307.612244,502.143311 308.752960,500.949127   C309.632721,502.076965 310.357361,503.005890 311.451569,504.408630   C312.619202,503.013275 313.594269,501.847992 314.493469,500.773438   C318.702850,500.069336 318.632477,508.783386 324.848694,505.209961   C326.326416,507.274323 327.157471,509.164642 327.988556,511.054932   C326.187256,511.472229 324.385956,511.889496 322.138123,511.925598   C321.139984,511.335114 320.588318,511.125824 320.036652,510.916504   C320.036652,510.916504 319.990784,510.444550 319.797302,509.937378   C318.698120,509.609863 317.792358,509.789520 316.886627,509.969177  z\",id:\"svg_1206\"})),_path1205||(_path1205=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M330.593018,535.094238   C332.046509,537.524475 333.146912,539.922363 334.106689,542.598328   C329.931458,544.024048 327.577972,543.021667 327.383728,538.324341   C327.332886,537.094360 325.859650,535.923218 325.037964,534.374573   C326.079620,532.233765 327.050842,531.196350 328.252869,533.983276   C328.487518,534.527283 329.556030,534.711609 330.593018,535.094238  z\",id:\"svg_1207\"})),_path1206||(_path1206=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M308.996399,508.375916   C309.701904,508.450806 310.417603,508.843475 311.246948,509.556549   C310.844574,509.913025 310.328613,509.949127 309.428162,509.975403   C309.031281,509.541595 309.018921,509.117645 308.996399,508.375916  z\",id:\"svg_1208\"})),_path1207||(_path1207=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M355.028076,561.026123   C354.915070,561.066895 354.775543,561.091187 354.796814,561.040527   C354.957642,560.965576 355.001587,561.009705 355.028076,561.026123  z\",id:\"svg_1209\"})),_path1208||(_path1208=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M308.770050,511.088257   C308.911774,511.305634 308.738098,511.581635 308.264343,511.931061   C308.217255,511.774994 308.380737,511.489105 308.770050,511.088257  z\",id:\"svg_1210\"})),_path1209||(_path1209=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M526.983643,563.095459   C528.389587,562.072815 529.795532,561.050171 531.176147,560.045959   C530.309204,558.416321 529.666077,557.207397 528.828552,555.632996   C531.804504,555.842346 534.304749,556.018250 537.977051,556.276611   C539.520630,557.685730 541.453796,560.738281 546.078613,559.011658   C547.390320,558.522034 549.931641,561.742004 552.083435,562.950073   C553.689636,563.851807 554.716919,567.684570 558.108643,564.190796   C559.499268,564.022827 560.248962,564.025330 560.998718,564.027771   C561.579285,565.170593 562.159851,566.313416 562.855713,567.766846   C562.524414,568.077942 562.077820,568.078308 560.957458,568.205444   C553.437927,571.017578 546.818359,569.078918 539.272827,568.137512   C539.261353,568.151794 538.506531,569.095154 537.919189,569.829224   C536.191162,568.807007 534.786011,567.975830 533.380859,567.144592   C532.908447,568.419373 532.435974,569.694092 531.963501,570.968872   C531.963501,570.968872 531.994080,571.003601 531.701416,570.863159   C530.624634,570.474304 529.840637,570.225830 529.056641,569.977295   C529.056641,569.977295 529.024170,569.972290 529.035217,569.650879   C528.717773,568.842834 528.389282,568.356323 528.060791,567.869751   C527.403198,567.110168 526.745667,566.350586 526.300903,565.120728   C526.670349,564.132080 526.827026,563.613770 526.983643,563.095459  z\",id:\"svg_1211\"})),_path1210||(_path1210=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M532.354126,571.023132   C532.435974,569.694092 532.908447,568.419373 533.380859,567.144592   C534.786011,567.975830 536.191162,568.807007 537.919189,569.829224   C538.506531,569.095154 539.261353,568.151794 539.272827,568.137512   C546.818359,569.078918 553.437927,571.017578 560.622314,568.216492   C560.645020,568.832397 560.509399,570.018616 559.985840,570.226196   C553.717590,572.710693 548.317017,577.713745 540.478149,576.901550   C540.890991,570.809753 535.534424,572.561096 532.354126,571.023132  z\",id:\"svg_1212\"})),_path1211||(_path1211=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M488.330811,585.989319   C488.119171,585.549255 488.243073,585.122437 488.366974,584.695557   C488.843353,584.958618 489.319702,585.221680 489.902954,585.743591   C489.561981,586.002502 489.114136,586.002502 488.330811,585.989319  z\",id:\"svg_1213\"})),_path1212||(_path1212=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M362.263306,562.104004   C361.495300,560.891235 360.933990,559.783020 360.372681,558.674744   C360.607880,558.428345 360.843079,558.181946 361.078247,557.935547   C362.207092,558.898315 363.335938,559.861084 364.655701,560.986633   C366.196259,559.977112 367.793793,558.930237 370.234436,557.330872   C369.663361,559.053833 369.382019,559.902588 368.965118,561.160400   C370.263824,561.096130 371.302490,561.044800 372.670959,561.371704   C372.992554,562.501892 372.984314,563.253723 372.987610,564.004639   C372.999176,564.003784 373.000244,563.978149 373.000244,563.978149   C371.598724,564.605286 370.197205,565.232483 368.503479,566.044678   C368.211273,566.229675 368.004181,566.029358 367.879883,565.607544   C366.173584,564.440125 364.591583,563.694519 363.009552,562.948914   C362.908600,562.644653 362.728760,562.397888 362.263306,562.104004  M366.991364,562.178711   C366.581696,562.275940 366.172058,562.373108 365.762390,562.470337   C365.853790,562.590027 365.960602,562.821289 366.034027,562.811096   C366.448639,562.753845 366.855255,562.638611 366.991364,562.178711  z\",id:\"svg_1214\"})),_path1213||(_path1213=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M363.016571,563.341309   C364.591583,563.694519 366.173584,564.440125 367.772888,565.511108   C366.201294,565.135559 364.612457,564.434692 363.016571,563.341309  z\",id:\"svg_1215\"})),_path1214||(_path1214=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7B5634\",opacity:1,stroke:\"none\",d:\" M264.391663,839.959595   C264.751038,839.668396 265.109131,839.629578 265.467255,839.590698   C265.465149,839.847290 265.463043,840.103821 265.460938,840.360352   C265.104126,840.310913 264.747284,840.261414 264.391663,839.959595  z\",id:\"svg_1216\"})),_path1215||(_path1215=/*#__PURE__*/React.createElement(\"path\",{fill:\"#341D0D\",opacity:1,stroke:\"none\",d:\" M239.996277,838.002930   C240.115158,838.146057 240.237762,838.286255 240.360352,838.426453   C240.275146,838.375793 240.189941,838.325134 240.055298,838.133423   C240.005859,837.992432 240.000000,838.000000 239.996277,838.002930  z\",id:\"svg_1217\"})),_path1216||(_path1216=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M466.868347,290.487549   C465.593475,287.486938 464.300446,284.619781 463.004944,281.377502   C464.341614,282.016357 465.680786,283.030304 467.019958,284.044281   C467.365723,283.793091 467.711487,283.541901 468.057251,283.290710   C466.985870,279.800049 465.914490,276.309387 464.326935,271.137054   C467.123566,273.711182 469.040253,275.475403 470.677490,277.642883   C470.077179,278.362579 469.756287,278.678986 469.435364,278.995392   C469.645996,279.181305 469.856659,279.367218 470.067322,279.553131   C470.387543,279.045074 470.707794,278.537018 471.028046,278.028992   C473.102600,277.021332 475.177124,276.013672 477.625183,275.012207   C479.471649,275.256012 480.944611,275.493622 483.591400,275.920593   C481.846039,278.223969 480.329559,280.225281 478.542328,282.583923   C479.083130,283.192963 480.008789,284.235413 481.098236,285.462372   C479.632172,286.996796 478.268036,288.424591 476.903870,289.852356   C477.286682,290.285492 477.669525,290.718658 478.052368,291.151794   C479.583801,289.995850 481.115234,288.839935 482.997162,288.099945   C483.883759,288.705627 484.419800,288.895386 484.955872,289.085114   C485.071411,289.390228 485.265411,289.632599 485.718384,290.252258   C480.438843,293.154510 475.077820,298.007507 469.251770,291.253662   C468.855133,290.793854 467.692902,290.994446 466.886719,290.887909   C466.886719,290.887909 466.850220,290.621002 466.868347,290.487549  M474.830261,291.234161   C474.888367,291.408203 474.946472,291.582275 475.004578,291.756317   C475.060852,291.581543 475.117126,291.406799 474.830261,291.234161  z\",id:\"svg_1218\"})),_path1217||(_path1217=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M462.048645,279.628601   C457.964020,280.733032 453.012421,277.028229 451.030884,271.845703   C450.692871,270.961548 450.145996,270.157318 449.389374,269.136414   C449.446564,267.239899 449.809967,265.523102 450.042053,264.426636   C453.259186,266.880280 456.377228,269.258331 459.823364,271.886627   C460.584137,271.020447 461.337677,270.162506 462.794739,268.503601   C462.513702,272.756104 462.299011,276.004883 462.048645,279.628601  z\",id:\"svg_1219\"})),_path1218||(_path1218=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M417.932220,256.996979   C419.014862,257.255219 420.358856,257.196106 421.130768,257.831696   C423.374084,259.678802 423.811188,257.932800 425.071014,256.220337   C426.106842,256.011536 426.552338,256.009735 426.997864,256.007935   C427.110901,257.103058 427.223969,258.198212 427.383209,259.740570   C428.979553,258.693848 430.169617,257.913513 431.160492,257.263794   C432.970978,257.889099 434.603149,258.452820 436.620056,259.263733   C437.004791,259.510895 436.999878,259.990814 436.999878,259.990814   C436.422089,260.475311 435.844299,260.959808 435.081299,261.665955   C430.828308,262.121155 426.745422,262.649811 422.700256,262.442505   C421.092743,262.360107 419.568817,260.646851 417.968811,258.995178   C417.931244,257.875183 417.931732,257.436066 417.932220,256.996979  z\",id:\"svg_1220\"})),_path1219||(_path1219=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M461.275452,240.251099   C461.384460,239.863205 461.604523,239.703888 461.861664,239.286774   C468.041107,241.519348 468.706146,242.832062 465.241394,245.948212   C463.967834,244.140900 462.703583,242.346741 461.275452,240.251099  z\",id:\"svg_1221\"})),_path1220||(_path1220=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M433.001831,251.998474   C433.783112,252.233444 434.714813,252.281830 435.301331,252.756668   C435.953217,253.284409 436.338531,254.178436 436.709015,254.973938   C436.760132,255.083664 435.815002,255.850525 435.743805,255.793945   C435.078949,255.265411 434.460022,254.659637 433.920807,254.000183   C433.618164,253.630005 433.490417,253.116806 433.140808,252.335846   C432.997803,252.003662 433.000000,252.000000 433.001831,251.998474  z\",id:\"svg_1222\"})),_path1221||(_path1221=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M454.991699,259.992371   C454.570282,260.915955 454.148895,261.839539 453.727509,262.763123   C453.190186,262.321106 452.652863,261.879059 452.115540,261.437042   C452.829803,260.961029 453.544098,260.485046 454.629181,260.004517   C455.000000,260.000000 454.991699,259.992371 454.991699,259.992371  z\",id:\"svg_1223\"})),_path1222||(_path1222=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M437.332428,259.941467   C436.999878,259.990814 437.004791,259.510895 437.007477,259.271301   C437.271973,258.473785 437.533783,257.915833 437.795563,257.357880   C438.150818,257.601318 438.837067,258.011108 438.811035,258.062897   C438.489319,258.702942 438.063782,259.290833 437.332428,259.941467  z\",id:\"svg_1224\"})),_path1223||(_path1223=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M455.004211,260.004242   C455.161255,259.136047 455.314056,258.263611 455.466888,257.391144   C455.838776,257.520050 456.210663,257.648956 456.582520,257.777832   C456.276520,258.480743 455.970490,259.183655 455.328064,259.939453   C454.991699,259.992371 455.000000,260.000000 455.004211,260.004242  z\",id:\"svg_1225\"})),_path1224||(_path1224=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M461.001221,260.001221   C461.275543,259.080841 461.549866,258.160431 461.824188,257.240051   C462.204712,257.415100 462.585236,257.590118 462.965759,257.765167   C462.536987,258.479340 462.108185,259.193542 461.339722,259.953857   C461.000000,260.000000 461.001221,260.001221 461.001221,260.001221  z\",id:\"svg_1226\"})),_path1225||(_path1225=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M460.999390,259.999390   C460.497131,260.720612 459.995453,261.442444 459.493774,262.164276   C459.203613,261.909973 458.913422,261.655701 458.623260,261.401398   C459.204834,260.950531 459.786407,260.499695 460.684601,260.025024   C461.001221,260.001221 461.000000,260.000000 460.999390,259.999390  z\",id:\"svg_1227\"})),_path1226||(_path1226=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M468.003296,270.002502   C468.776733,269.668274 469.550201,269.334076 470.662445,269.005188   C471.001251,269.010529 471.000366,268.999878 470.994934,268.999329   C470.932220,269.741455 470.874939,270.484131 470.809235,271.335876   C469.909302,270.824860 469.251312,270.451233 468.296631,270.038818   C468.000000,270.000000 468.003296,270.002502 468.003296,270.002502  z\",id:\"svg_1228\"})),_path1227||(_path1227=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M426.998657,255.673126   C426.552338,256.009735 426.106842,256.011536 425.326538,256.012421   C424.994537,255.561768 424.997345,255.112015 425.007690,254.324600   C425.456116,253.988113 425.896973,253.989273 426.668915,253.994995   C426.999817,254.445801 426.999634,254.892044 426.998657,255.673126  z\",id:\"svg_1229\"})),_path1228||(_path1228=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M442.372894,254.678925   C442.551971,254.816940 442.580658,255.059814 442.609375,255.302673   C442.480408,255.129715 442.351440,254.956757 442.372894,254.678925  z\",id:\"svg_1230\"})),_path1229||(_path1229=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M472.654541,273.700684   C472.639526,273.975372 472.493591,274.125916 472.347656,274.276459   C472.406311,274.043182 472.464966,273.809875 472.654541,273.700684  z\",id:\"svg_1231\"})),_path1230||(_path1230=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M440.453735,255.544937   C440.415405,255.480484 440.492065,255.609390 440.453735,255.544937  z\",id:\"svg_1232\"})),_path1231||(_path1231=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M467.998718,269.998169   C467.907562,270.034210 467.817657,270.072083 467.865540,270.056213   C468.003296,270.002502 468.000000,270.000000 467.998718,269.998169  z\",id:\"svg_1233\"})),_path1232||(_path1232=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M527.945801,239.953796   C527.083313,239.490265 526.220764,239.026733 525.176147,237.975632   C524.993958,236.915558 524.993835,236.443054 524.993713,235.970566   C524.993713,235.970566 525.001770,235.480942 525.011841,235.236221   C526.455078,235.972992 527.888123,236.954483 529.663574,237.971649   C529.736511,238.502182 529.467163,238.997040 528.829956,239.741150   C528.289978,239.978195 528.117859,239.965988 527.945801,239.953796  z\",id:\"svg_1234\"})),_path1233||(_path1233=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M527.980469,256.980713   C528.119690,256.205872 528.053467,255.291382 528.457642,254.696609   C528.840454,254.133286 529.716675,253.905228 530.375977,253.529739   C530.670959,253.839096 530.966003,254.148468 531.260986,254.457825   C530.423035,255.302673 529.585083,256.147522 528.373535,256.996002   C528.000000,256.999634 527.980469,256.980713 527.980469,256.980713  z\",id:\"svg_1235\"})),_path1234||(_path1234=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M528.009766,257.009033   C527.260315,258.007202 526.501038,258.996002 525.370850,259.992401   C525.747009,259.000214 526.494019,258.000427 527.610718,256.990662   C527.980469,256.980713 528.000000,256.999634 528.009766,257.009033  z\",id:\"svg_1236\"})),_path1235||(_path1235=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M528.287720,244.849701   C527.986328,243.939621 527.980957,242.884247 528.224487,241.419327   C528.646545,241.006516 528.819641,241.003250 528.992676,241.000000   C528.856323,242.234787 528.720032,243.469589 528.287720,244.849701  z\",id:\"svg_1237\"})),_path1236||(_path1236=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M524.998413,261.706726   C524.025940,261.600311 523.059143,261.152313 522.041504,260.357147   C522.743042,260.006012 523.495422,260.002014 524.623901,259.998993   C525.001404,260.455048 525.002747,260.910065 524.998413,261.706726  z\",id:\"svg_1238\"})),_path1237||(_path1237=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M532.518738,245.418884   C532.574158,244.958054 532.803284,244.677551 533.032471,244.397049   C533.209839,244.581604 533.387268,244.766159 533.564636,244.950714   C533.273926,245.166885 532.983215,245.383057 532.518738,245.418884  z\",id:\"svg_1239\"})),_path1238||(_path1238=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M528.990845,240.753052   C528.819641,241.003250 528.646545,241.006516 528.213623,241.023590   C527.839539,240.743988 527.725281,240.450546 527.778442,240.055450   C528.117859,239.965988 528.289978,239.978195 528.720459,240.001343   C528.978760,240.012314 528.989075,240.506119 528.990845,240.753052  z\",id:\"svg_1240\"})),_path1239||(_path1239=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M532.439941,251.539032   C532.396790,251.471741 532.483093,251.606323 532.439941,251.539032  z\",id:\"svg_1241\"})),_path1240||(_path1240=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M466.926453,291.252319   C467.692902,290.994446 468.855133,290.793854 469.251770,291.253662   C475.077820,298.007507 480.438843,293.154510 485.932251,290.351868   C488.916473,288.596222 491.867401,287.181061 494.999054,286.011475   C490.727448,290.163727 486.712769,294.813049 481.699371,297.767883   C476.708954,300.709229 470.901337,297.665070 466.926453,291.252319  z\",id:\"svg_1242\"})),_path1241||(_path1241=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M505.971100,281.984253   C508.864227,281.817871 511.757385,281.651459 514.812500,282.052246   C512.641968,284.698578 510.036316,288.703278 508.039124,288.419861   C504.787384,287.958496 502.609314,289.368500 499.977966,289.762756   C499.980621,289.345001 499.987000,289.177979 500.298615,288.969482   C500.920776,288.507782 501.237640,288.087555 501.554504,287.667328   C501.013977,287.451904 500.473450,287.236481 499.932892,287.021088   C499.932892,287.021088 499.519897,286.934570 499.315491,286.882507   C500.392426,285.525146 501.673767,284.219818 503.406372,282.507629   C504.562103,282.061920 505.266602,282.023102 505.971100,281.984253  M506.402191,284.475403   C506.402191,284.475403 506.522461,284.401611 506.402191,284.475403  z\",id:\"svg_1243\"})),_path1242||(_path1242=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M483.998779,280.998779   C484.768738,281.585968 485.713623,282.795807 486.274292,282.638275   C487.695648,282.238861 488.944672,281.226166 490.800568,281.126160   C489.296936,282.862335 487.793304,284.598511 485.806824,286.637573   C484.893829,286.942505 484.463684,286.944580 484.033569,286.946655   C483.792877,284.992889 483.552185,283.039154 483.655762,281.042694   C484.000000,281.000000 483.998779,280.998779 483.998779,280.998779  z\",id:\"svg_1244\"})),_path1243||(_path1243=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M506.142242,281.677551   C505.266602,282.023102 504.562103,282.061920 503.511383,282.167419   C501.454865,281.738861 499.744568,281.243652 498.034271,280.748444   C498.217072,280.212555 498.399841,279.676666 498.582611,279.140808   C499.866547,279.625366 501.150513,280.109924 502.195984,280.504486   C503.680756,279.595673 505.015289,278.778778 506.722046,277.989868   C506.833954,279.135559 506.573669,280.253204 506.142242,281.677551  z\",id:\"svg_1245\"})),_path1244||(_path1244=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M484.000610,281.000610   C485.220673,279.338440 486.440125,277.675690 487.659576,276.012909   C488.105835,276.424316 488.552094,276.835724 488.998322,277.247162   C487.560455,278.473297 486.122559,279.699432 484.341736,280.962158   C483.998779,280.998779 484.000000,281.000000 484.000610,281.000610  z\",id:\"svg_1246\"})),_path1245||(_path1245=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M490.867523,265.360352   C491.456543,265.049469 491.911957,265.030457 492.709839,264.992432   C492.480835,266.201508 491.909393,267.429596 491.337952,268.657684   C490.946960,268.501038 490.555969,268.344360 490.165009,268.187683   C490.354645,267.342560 490.544281,266.497406 490.867523,265.360352  z\",id:\"svg_1247\"})),_path1246||(_path1246=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M500.174255,270.694214   C500.685516,269.978363 501.244904,269.570404 501.804291,269.162415   C501.946045,269.544891 502.087799,269.927368 502.229523,270.309845   C501.560486,270.540619 500.891418,270.771362 500.174255,270.694214  z\",id:\"svg_1248\"})),_path1247||(_path1247=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7F5749\",opacity:1,stroke:\"none\",d:\" M483.929291,287.170135   C484.463684,286.944580 484.893829,286.942505 485.646240,286.926697   C485.709198,287.451447 485.449890,287.989960 485.073242,288.806763   C484.419800,288.895386 483.883759,288.705627 483.210022,288.260498   C483.387299,287.880157 483.638184,287.676300 483.929291,287.170135  z\",id:\"svg_1249\"})),_path1248||(_path1248=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M496.881348,267.020996   C497.482880,266.827850 497.911652,266.843842 498.660156,266.811279   C498.222809,266.918518 497.465698,267.074341 496.881348,267.020996  z\",id:\"svg_1250\"})),_path1249||(_path1249=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M494.155273,264.959106   C494.092773,264.524628 494.363831,264.112488 494.634918,263.700317   C494.774109,263.942047 494.913330,264.183807 495.104675,264.687653   C494.934174,264.960327 494.711517,264.970886 494.155273,264.959106  z\",id:\"svg_1251\"})),_path1250||(_path1250=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M506.378387,241.002441   C506.795166,240.027237 507.593048,239.052521 508.718079,238.042999   C509.339874,238.094513 509.583313,238.257339 509.882690,238.689575   C508.913086,239.589294 507.836273,240.296127 506.378387,241.002441  z\",id:\"svg_1252\"})),_path1251||(_path1251=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M508.998779,234.998779   C509.541260,234.370667 510.084961,233.743790 510.628662,233.116913   C510.928406,233.405731 511.228088,233.694534 511.527802,233.983337   C510.915619,234.320663 510.303467,234.657990 509.346863,234.998871   C509.002441,235.002441 509.000000,235.000000 508.998779,234.998779  z\",id:\"svg_1253\"})),_path1252||(_path1252=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M518.056213,240.941742   C518.632751,241.082047 519.178955,241.259369 519.899536,241.672180   C520.073853,241.907639 520.004700,241.983078 519.677979,241.989029   C518.891357,241.682526 518.431519,241.370071 517.971619,241.057632   C517.971619,241.057632 518.025879,240.978790 518.056213,240.941742  z\",id:\"svg_1254\"})),_path1253||(_path1253=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M504.071320,227.265015   C504.302673,227.176834 504.591858,227.339813 504.942078,227.752991   C504.711823,227.840866 504.420471,227.678528 504.071320,227.265015  z\",id:\"svg_1255\"})),_path1254||(_path1254=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M517.534668,228.553635   C517.477234,228.588379 517.592102,228.518890 517.534668,228.553635  z\",id:\"svg_1256\"})),_path1255||(_path1255=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M468.001221,234.999023   C467.881531,234.858551 467.760651,234.719070 467.639740,234.579590   C467.723877,234.629013 467.808014,234.678436 467.945129,234.865204   C467.998108,235.002579 468.000000,235.000000 468.001221,234.999023  z\",id:\"svg_1257\"})),_path1256||(_path1256=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M517.656250,241.184677   C518.431519,241.370071 518.891357,241.682526 519.640198,242.023529   C519.635742,242.824646 519.342346,243.597229 519.022095,244.681854   C517.929504,244.990662 516.863953,244.987442 515.398682,244.992706   C515.779663,243.771378 516.560303,242.541550 517.656250,241.184677  z\",id:\"svg_1258\"})),_path1257||(_path1257=/*#__PURE__*/React.createElement(\"path\",{fill:\"#774226\",opacity:1,stroke:\"none\",d:\" M524.687378,236.005539   C524.993835,236.443054 524.993958,236.915558 524.978210,237.743744   C524.768616,237.413147 524.574890,236.726822 524.687378,236.005539  z\",id:\"svg_1259\"})),_path1258||(_path1258=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M541.005127,234.996155   C541.496399,233.151047 541.982483,231.309769 542.468567,229.468475   C544.053345,231.626312 544.872375,233.611893 541.380005,234.947174   C541.007324,234.989288 541.000000,235.000000 541.005127,234.996155  z\",id:\"svg_1260\"})),_path1259||(_path1259=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M588.674866,247.965271   C588.572266,248.567429 588.155823,249.230774 587.421997,249.930664   C587.523438,249.320282 587.942261,248.673355 588.674866,247.965271  z\",id:\"svg_1261\"})),_path1260||(_path1260=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M467.023926,723.987793   C467.019379,723.241394 467.014801,722.495056 467.360229,721.335266   C468.474670,718.613770 469.239166,716.305664 470.003662,713.997559   C470.447815,713.998230 470.891968,713.998901 471.669281,713.998535   C472.325531,714.098572 472.587006,714.285645 472.894531,715.166260   C473.338531,717.518250 473.674866,719.262756 474.011200,721.007324   C472.933655,722.003357 471.856079,722.999390 470.016510,723.997437   C468.510986,723.995544 467.767456,723.991638 467.023926,723.987793  z\",id:\"svg_1262\"})),_path1261||(_path1261=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M474.384644,721.005249   C473.674866,719.262756 473.338531,717.518250 473.002319,715.385620   C473.444550,715.000122 473.886688,715.002625 474.660248,715.008667   C475.658630,716.765015 476.325562,718.517822 476.996216,720.635254   C476.252716,721.001038 475.505402,721.002136 474.384644,721.005249  z\",id:\"svg_1263\"})),_path1262||(_path1262=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M470.000702,713.660522   C469.239166,716.305664 468.474670,718.613770 467.359863,720.962036   C465.932892,718.679810 464.856201,716.357483 463.608948,713.667114   C464.986816,712.906616 466.646576,711.990540 468.660156,711.037842   C469.341919,711.775330 469.669830,712.549377 470.000702,713.660522  z\",id:\"svg_1264\"})),_path1263||(_path1263=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M467.997955,708.598633   C466.189484,707.655273 464.370972,706.317810 461.756866,704.395264   C464.308533,703.224426 465.334137,702.753784 466.682983,702.146973   C467.333435,704.075317 467.660675,706.140015 467.997955,708.598633  z\",id:\"svg_1265\"})),_path1264||(_path1264=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M309.886902,364.567322   C308.554535,363.996857 307.020325,363.285400 306.122467,362.094269   C303.168274,358.175140 300.483521,358.654999 297.775330,362.232727   C297.213562,362.974854 296.771118,363.807312 295.818390,365.321991   C295.434326,363.678955 295.209778,362.718384 294.972015,361.389282   C295.939880,360.268585 296.920990,359.516418 297.969666,358.453552   C300.313324,357.404083 302.441559,355.089752 305.056976,357.758118   C305.351288,358.058380 307.227295,356.808380 308.685486,356.130676   C309.326233,358.724945 309.651367,361.465820 309.886902,364.567322  z\",id:\"svg_1266\"})),_path1265||(_path1265=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M288.327606,320.039154   C288.805786,319.376221 289.609375,318.716125 290.745911,318.038239   C291.053833,318.461365 291.028717,318.902222 290.741547,319.678284   C290.304474,320.022034 290.129517,320.030640 289.954590,320.039215   C289.520721,320.040131 289.086884,320.041046 288.327606,320.039154  z\",id:\"svg_1267\"})),_path1266||(_path1266=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M292.070312,322.343353   C292.503113,322.404083 292.927338,322.723663 293.351532,323.043274   C293.184235,323.230988 293.016937,323.418701 292.849640,323.606384   C292.587006,323.271667 292.324371,322.936951 292.070312,322.343353  z\",id:\"svg_1268\"})),_path1267||(_path1267=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M290.056366,320.211853   C290.129517,320.030640 290.304474,320.022034 290.742218,320.009705   C290.722687,320.132141 290.440430,320.258331 290.056366,320.211853  z\",id:\"svg_1269\"})),_path1268||(_path1268=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M275.450806,343.531799   C275.418030,343.476501 275.483551,343.587067 275.450806,343.531799  z\",id:\"svg_1270\"})),_path1269||(_path1269=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M326.756409,287.012238   C327.005432,287.762238 327.002350,288.507996 326.999634,289.626892   C325.933319,290.002014 324.866669,290.003998 323.399994,290.002991   C322.798248,289.724243 322.596497,289.448456 322.164368,289.049194   C322.070648,288.627930 322.272980,288.384796 322.758820,288.097351   C323.846375,287.841522 324.716095,287.684570 325.792908,287.264404   C326.168121,287.003479 326.336212,287.005737 326.756409,287.012238  z\",id:\"svg_1271\"})),_path1270||(_path1270=/*#__PURE__*/React.createElement(\"path\",{fill:\"#895A3E\",opacity:1,stroke:\"none\",d:\" M327.902710,286.836700   C327.985229,287.006897 327.499634,287.005554 327.256958,287.006775   C327.282928,286.894196 327.551544,286.780334 327.902710,286.836700  z\",id:\"svg_1272\"})),_path1271||(_path1271=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M228.756561,396.727112   C228.427139,397.162445 227.882599,397.330658 226.837662,397.740265   C225.891968,397.986053 225.446655,397.990448 225.001358,397.994812   C225.001358,397.994812 225.000000,398.000000 225.002625,397.999390   C226.183975,397.485870 227.362701,396.972931 228.756561,396.727112  z\",id:\"svg_1273\"})),_path1272||(_path1272=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M222.553253,371.578979   C222.476181,371.631409 222.448380,371.424866 222.448380,371.424866   C222.448380,371.424866 222.630310,371.526520 222.553253,371.578979  z\",id:\"svg_1274\"})),_path1273||(_path1273=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M219.722229,362.971130   C220.031097,363.131104 220.031647,363.311462 220.015747,363.762268   C219.271500,363.964417 218.543701,363.896179 217.815887,363.827942   C217.812042,363.653900 217.808182,363.479889 217.804337,363.305878   C218.340851,363.201111 218.877380,363.096344 219.722229,362.971130  z\",id:\"svg_1275\"})),_path1274||(_path1274=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M628.628601,305.983337   C629.004211,306.731262 629.006042,307.465179 628.965698,308.561829   C627.478638,309.789246 626.033752,310.653961 623.606750,312.106384   C624.709290,309.651947 625.364990,308.192261 626.016724,306.372620   C626.760132,305.998199 627.507446,305.983765 628.628601,305.983337  z\",id:\"svg_1276\"})),_path1275||(_path1275=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M632.992676,318.930634   C631.988281,317.864075 630.983887,316.797516 629.984375,315.366486   C635.992554,311.478210 638.618469,316.166687 642.027771,319.791290   C640.360596,321.808258 638.838135,323.650208 637.461609,325.315613   C635.398926,325.018341 633.428345,324.734344 631.224976,324.713226   C631.095398,323.677795 631.198669,322.379456 631.940613,321.165222   C633.619995,321.891083 634.660645,322.532837 635.780273,323.223267   C636.460693,321.378876 636.977356,319.978333 637.596558,318.299957   C636.659180,318.176941 635.883545,318.075165 635.054565,317.671997   C634.330322,317.583954 633.659485,317.797272 632.985474,318.240662   C632.982422,318.470673 632.992676,318.930634 632.992676,318.930634  z\",id:\"svg_1277\"})),_path1276||(_path1276=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M645.425903,347.723267   C646.691162,348.880768 647.762878,349.768707 648.893066,350.705078   C646.645081,353.687775 644.194153,354.775513 641.217529,352.745514   C640.543884,352.286072 640.050903,350.155426 640.289795,349.993103   C641.810242,348.959595 643.558899,348.261963 645.425903,347.723267  z\",id:\"svg_1278\"})),_path1277||(_path1277=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M635.465942,361.026978   C634.893066,359.451935 634.672852,357.926971 634.724060,356.214172   C636.657104,357.778931 638.318787,359.531464 639.991455,361.641388   C638.607849,361.691559 637.213318,361.384308 635.465942,361.026978  z\",id:\"svg_1279\"})),_path1278||(_path1278=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M637.183533,311.780853   C636.840820,310.602631 636.840820,309.485443 636.840820,308.368256   C637.484741,308.478180 638.128723,308.588104 638.772644,308.698029   C638.357178,309.745972 637.941711,310.793945 637.183533,311.780853  z\",id:\"svg_1280\"})),_path1279||(_path1279=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M642.819214,309.894531   C643.878906,310.030670 644.721130,310.404877 645.563416,310.779053   C645.247070,311.256439 644.930725,311.733856 644.614380,312.211243   C643.943481,311.518372 643.272583,310.825470 642.819214,309.894531  z\",id:\"svg_1281\"})),_path1280||(_path1280=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M648.621399,315.112793   C647.763733,314.968781 647.100220,314.596344 646.436646,314.223907   C646.684509,313.879486 646.932312,313.535095 647.180176,313.190704   C647.725281,313.755249 648.270386,314.319794 648.621399,315.112793  z\",id:\"svg_1282\"})),_path1281||(_path1281=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M649.981750,366.981201   C650.106079,366.527832 650.247192,366.090363 650.388306,365.652924   C650.410217,366.024109 650.432007,366.395325 650.244690,366.895721   C650.035522,367.024933 649.998535,366.997162 649.981750,366.981201  z\",id:\"svg_1283\"})),_path1282||(_path1282=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M652.317627,382.961517   C651.994202,382.245209 651.988342,381.491669 651.989807,380.361023   C652.794617,380.385437 653.592163,380.786987 654.389648,381.188538   C653.804871,381.767120 653.220032,382.345673 652.317627,382.961517  z\",id:\"svg_1284\"})),_path1283||(_path1283=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M632.899902,319.198700   C632.992676,318.930634 632.982422,318.470673 633.338257,318.239380   C634.165344,317.996521 634.636658,317.984955 635.107910,317.973389   C635.883545,318.075165 636.659180,318.176941 637.596558,318.299957   C636.977356,319.978333 636.460693,321.378876 635.780273,323.223267   C634.660645,322.532837 633.619995,321.891083 632.280884,321.095734   C632.257446,320.450378 632.532349,319.958588 632.899902,319.198700  z\",id:\"svg_1285\"})),_path1284||(_path1284=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M224.999969,398.346588   C225.446655,397.990448 225.891968,397.986053 226.671387,397.979492   C226.931137,399.191010 226.856796,400.404694 226.782440,401.618378   C226.395065,401.630371 226.007690,401.642365 225.620300,401.654358   C225.413071,400.669037 225.205841,399.683685 224.999969,398.346588  z\",id:\"svg_1286\"})),_path1285||(_path1285=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M262.002991,388.997253   C261.478516,388.746735 260.939148,388.518707 260.442657,388.219543   C260.394928,388.190735 260.613647,387.719727 260.708649,387.454010   C261.117157,387.773193 261.525696,388.092377 261.964355,388.708771   C261.994476,389.005981 262.000000,389.000000 262.002991,388.997253  z\",id:\"svg_1287\"})),_path1286||(_path1286=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M409.016449,284.942078   C408.156677,283.470581 407.296936,281.999054 406.481140,280.602814   C404.968719,281.957794 403.837341,282.971375 402.327911,283.627380   C401.288422,282.503906 400.626984,281.737976 399.965576,280.972015   C399.541656,280.974915 399.117767,280.977783 398.334381,280.656372   C397.331848,279.829987 396.688782,279.327911 396.045715,278.825836   C395.924347,278.561676 395.746307,278.343872 395.299805,277.708313   C393.646210,275.183868 392.204498,273.123474 391.147247,270.999512   C392.764099,270.096405 393.996429,269.256927 395.228790,268.417419   C396.192047,268.340637 397.155273,268.263855 398.568665,268.535278   C399.616669,269.868927 400.214508,270.854340 401.268768,271.888306   C403.864685,271.997681 406.004181,272.058563 408.100281,272.476440   C408.037506,273.555176 408.018127,274.276978 407.659698,275.041809   C407.006439,275.788513 406.692261,276.492218 406.378052,277.195892   C406.745697,277.330536 407.113312,277.465179 407.480957,277.599792   C407.654388,276.733612 407.827789,275.867401 408.387268,275.006470   C409.464996,275.331665 410.427124,275.463074 410.803558,276.002899   C412.907990,279.020477 414.617401,278.998260 416.271606,275.626923   C416.597473,274.962799 417.400940,274.532990 417.990417,273.996582   C417.996704,273.998077 418.001892,274.008667 418.149353,274.336975   C418.932373,276.492798 419.567963,278.320312 420.500732,281.002289   C414.315796,278.013580 411.429840,279.586212 410.667664,284.956116   C409.897339,284.937531 409.456909,284.939819 409.016449,284.942078  z\",id:\"svg_1288\"})),_path1287||(_path1287=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M426.931396,270.391327   C434.612457,273.799500 443.520508,274.584991 449.804504,280.973175   C454.491180,285.737640 459.094116,290.584473 463.397766,295.718079   C462.273682,296.060699 461.486237,296.079865 460.389099,296.027954   C458.388702,294.973358 456.698029,293.989868 454.996490,292.741638   C454.973633,292.300720 454.961578,292.124512 454.789703,291.713043   C454.092621,291.318115 453.555359,291.158478 452.962646,290.655457   C450.502777,287.500610 448.315186,283.868225 443.735413,287.965454   C442.930206,287.929474 442.471100,287.908417 442.006012,287.504578   C441.983215,286.101074 441.966339,285.080414 441.935669,283.733887   C441.294434,282.967224 440.666962,282.526428 440.006775,282.061584   C439.974091,282.037537 439.927948,281.970703 440.066864,281.681030   C440.639465,276.351898 437.067627,277.025360 433.719421,276.838837   C432.662598,276.126648 431.857880,275.595947 430.740265,274.920654   C429.342194,274.527954 428.257019,274.279846 427.139343,273.668182   C427.048340,272.333496 426.989868,271.362427 426.931396,270.391327  z\",id:\"svg_1289\"})),_path1288||(_path1288=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M426.574188,270.320648   C426.989868,271.362427 427.048340,272.333496 427.052887,273.982422   C426.351349,275.124207 425.703766,275.588196 424.776123,276.032074   C424.309692,276.001099 424.123291,275.990234 423.922028,275.657043   C422.943756,270.417358 419.724152,275.546997 418.001892,274.008667   C418.001892,274.008667 417.996704,273.998077 417.929321,273.653076   C414.958374,270.166107 411.639587,270.418610 408.143677,272.119446   C406.004181,272.058563 403.864685,271.997681 401.324097,271.503174   C400.955872,270.019501 400.988708,268.969391 401.021545,267.919312   C406.389526,267.977020 411.757538,268.034760 417.557434,268.499084   C419.772461,269.201416 421.555603,269.497101 423.338715,269.792816   C424.298126,269.945221 425.257538,270.097595 426.574188,270.320648  z\",id:\"svg_1290\"})),_path1289||(_path1289=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M386.983276,276.016327   C383.680511,272.793274 381.393311,274.624725 379.236633,277.661499   C375.544098,275.792999 372.531006,276.289551 369.813171,279.854248   C368.993347,280.929474 366.470123,280.705902 363.974884,281.018250   C362.036133,280.600464 360.849640,280.241730 359.663177,279.882996   C360.869019,279.291534 362.074860,278.700073 363.837799,278.339355   C364.967133,277.824127 365.539398,277.078186 366.111633,276.332214   C368.471039,275.578796 370.830414,274.825409 373.770142,274.235901   C375.924774,273.652924 377.499146,272.906097 379.073486,272.159271   C379.073486,272.159271 379.406006,271.950439 380.062500,271.968445   C383.536194,271.971344 386.353394,271.956238 389.026245,272.235168   C388.615112,273.320282 388.348297,274.111298 387.958893,275.141815   C387.551971,275.592957 387.267609,275.804626 386.983276,276.016327  z\",id:\"svg_1291\"})),_path1290||(_path1290=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M499.993347,289.010986   C499.987000,289.177979 499.980621,289.345001 499.975067,290.149536   C499.309052,293.517883 498.642181,296.248810 497.667542,298.846100   C494.587921,299.822083 491.788849,300.869324 489.053131,302.061768   C487.009277,302.952667 485.047119,304.031006 483.050476,304.654816   C483.036743,303.542358 483.021149,302.800964 483.005554,302.059570   C486.425323,299.470459 489.952026,297.008209 493.227325,294.247620   C495.412201,292.406128 497.238953,290.139648 499.596466,288.254425   C499.975739,288.633942 499.984528,288.822449 499.993347,289.010986  z\",id:\"svg_1292\"})),_path1291||(_path1291=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M482.679474,302.109863   C483.021149,302.800964 483.036743,303.542358 482.732361,304.801392   C480.963623,305.856659 479.514862,306.394257 478.035034,306.965729   C478.003998,306.999603 477.946777,307.071503 477.566589,307.047791   C475.126740,307.692902 473.067047,308.361755 470.968445,308.664246   C468.956726,306.540619 466.983887,304.783417 465.015381,302.694153   C465.000397,301.920288 464.981079,301.478516 464.970032,301.028717   C464.978271,301.020721 464.994324,301.005493 465.398376,300.992798   C468.426727,301.508179 471.051025,302.036255 473.675293,302.564301   C474.316254,302.509399 474.957214,302.454529 475.769043,302.858276   C476.737732,303.877869 477.786560,305.068298 478.281921,304.870789   C479.362610,304.439911 480.161713,303.302856 481.075867,302.454315   C481.501709,302.356262 481.927582,302.258209 482.679474,302.109863  z\",id:\"svg_1293\"})),_path1292||(_path1292=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M389.170593,271.941132   C386.353394,271.956238 383.536194,271.971344 380.249390,271.908295   C384.641876,270.624329 389.503998,269.418549 394.797455,268.315063   C393.996429,269.256927 392.764099,270.096405 390.938354,271.083710   C389.953552,271.468048 389.562073,271.704590 389.170593,271.941132  z\",id:\"svg_1294\"})),_path1293||(_path1293=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M359.305054,279.884216   C360.849640,280.241730 362.036133,280.600464 363.582123,281.048157   C360.870789,283.509796 357.972870,286.469269 353.194794,284.059753   C354.885315,282.571808 356.916138,281.228638 359.305054,279.884216  z\",id:\"svg_1295\"})),_path1294||(_path1294=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M473.485077,302.259521   C471.051025,302.036255 468.426727,301.508179 465.414948,300.672913   C465.279755,299.600433 465.532043,298.835205 465.784363,298.069977   C468.287842,299.364899 470.791351,300.659821 473.485077,302.259521  z\",id:\"svg_1296\"})),_path1295||(_path1295=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M465.776306,297.750641   C465.532043,298.835205 465.279755,299.600433 465.010864,300.685577   C464.994324,301.005493 464.978271,301.020721 464.641541,300.964752   C463.102783,299.305511 461.900757,297.702271 460.698761,296.098999   C461.486237,296.079865 462.273682,296.060699 463.455261,296.049896   C464.489014,296.515930 465.128632,296.973633 465.776306,297.750641  z\",id:\"svg_1297\"})),_path1296||(_path1296=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M480.726196,302.395691   C480.161713,303.302856 479.362610,304.439911 478.281921,304.870789   C477.786560,305.068298 476.737732,303.877869 476.064392,302.995514   C477.584778,302.561768 478.980621,302.449402 480.726196,302.395691  z\",id:\"svg_1298\"})),_path1297||(_path1297=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M378.681793,272.111603   C377.499146,272.906097 375.924774,273.652924 374.160339,274.167023   C375.410187,273.310852 376.850159,272.687408 378.681793,272.111603  z\",id:\"svg_1299\"})),_path1298||(_path1298=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M423.186096,269.446838   C421.555603,269.497101 419.772461,269.201416 417.947998,268.581421   C419.615601,268.538422 421.324554,268.819641 423.186096,269.446838  z\",id:\"svg_1300\"})),_path1299||(_path1299=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M401.021362,267.655457   C400.988708,268.969391 400.955872,270.019501 400.867676,271.454681   C400.214508,270.854340 399.616669,269.868927 398.930298,268.598083   C399.568268,268.005676 400.294739,267.698639 401.021362,267.655457  z\",id:\"svg_1301\"})),_path1300||(_path1300=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M365.810608,276.334534   C365.539398,277.078186 364.967133,277.824127 364.211121,278.352936   C364.521393,277.536133 365.015472,276.936493 365.810608,276.334534  z\",id:\"svg_1302\"})),_path1301||(_path1301=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M500.298615,288.969482   C499.984528,288.822449 499.975739,288.633942 499.938782,288.164093   C499.910583,287.882721 499.951752,287.452606 499.942322,287.236847   C500.473450,287.236481 501.013977,287.451904 501.554504,287.667328   C501.237640,288.087555 500.920776,288.507782 500.298615,288.969482  z\",id:\"svg_1303\"})),_path1302||(_path1302=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M417.584442,256.998260   C417.931732,257.436066 417.931244,257.875183 417.901215,258.641937   C417.157318,258.980103 416.442963,258.990570 415.369812,258.995026   C415.752869,258.325867 416.494781,257.662689 417.584442,256.998260  z\",id:\"svg_1304\"})),_path1303||(_path1303=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M405.048340,260.265503   C405.583832,260.120453 406.141479,260.281067 406.893219,260.665619   C406.415039,260.783417 405.742737,260.677338 405.048340,260.265503  z\",id:\"svg_1305\"})),_path1304||(_path1304=/*#__PURE__*/React.createElement(\"path\",{fill:\"#76442B\",opacity:1,stroke:\"none\",d:\" M432.597107,264.272827   C432.149261,264.136017 431.860901,263.829681 431.572510,263.523315   C431.694458,263.427155 431.906799,263.232819 431.924835,263.249451   C432.216736,263.518250 432.483856,263.813812 432.597107,264.272827  z\",id:\"svg_1306\"})),_path1305||(_path1305=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M351.047211,306.991913   C351.350983,306.904816 351.597473,306.734711 352.174194,306.230255   C352.716675,304.989288 352.871613,303.999664 353.026520,303.010010   C356.402435,301.998047 359.778320,300.986115 363.788849,300.401428   C364.601685,301.107574 364.779907,301.386444 364.828247,301.642731   C364.698334,301.620178 364.495331,301.467560 364.262390,301.377686   C363.903900,301.391022 363.778351,301.494293 363.652802,301.597565   C363.921509,301.769165 364.190216,301.940735 364.259277,302.415466   C357.701202,307.370789 350.708252,311.351685 346.685181,318.927551   C346.090454,319.656158 345.828308,320.283722 345.255127,320.925537   C344.638977,321.625610 344.333893,322.311462 343.907043,323.326752   C342.588257,325.505432 341.391205,327.354645 340.134979,328.850616   C340.044708,328.023529 340.013580,327.549713 340.221497,326.896362   C340.634705,326.162170 340.808807,325.607483 340.990356,324.661560   C340.636444,320.773712 340.237305,317.345642 344.751587,315.907166   C345.409882,315.697418 345.593292,313.997467 346.000061,312.993164   C346.003662,312.999268 345.997345,313.011627 346.264526,312.818237   C348.036896,310.747223 349.542053,308.869568 351.047211,306.991913  z\",id:\"svg_1307\"})),_path1306||(_path1306=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M364.958160,301.665283   C364.779907,301.386444 364.601685,301.107574 364.190857,300.389435   C367.720734,294.240784 373.575104,293.391754 379.727966,292.906921   C382.269470,292.706665 384.746857,291.692841 387.852844,291.298859   C392.964325,291.695465 397.476440,291.842255 401.988525,291.989014   C403.086517,291.974396 404.184509,291.959778 406.024170,291.944641   C407.819794,292.264069 408.873688,292.584076 410.047760,293.142700   C410.451538,293.583740 410.735138,293.786163 411.227600,294.255951   C412.637085,295.036194 413.837769,295.549011 414.716797,296.216522   C406.692444,295.807617 398.996185,295.120911 391.285126,294.716309   C384.097382,294.339203 377.085114,295.176086 370.644592,298.803284   C368.797668,299.843506 366.856232,300.715912 364.958160,301.665283  z\",id:\"svg_1308\"})),_path1307||(_path1307=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M342.062225,309.015106   C343.074554,309.355835 344.086914,309.696564 345.488983,310.430298   C345.918274,311.552765 345.957825,312.282196 345.997375,313.011627   C345.997345,313.011627 346.003662,312.999268 345.601501,312.973022   C342.264648,314.329865 339.329926,315.712921 336.524933,317.034821   C334.816193,316.411438 332.923859,315.721069 331.015930,315.015442   C331.000275,315.000153 330.969269,314.969299 330.912170,314.624268   C329.862640,313.861664 328.870239,313.444153 327.946259,312.657013   C329.352295,310.865021 330.689911,309.442627 332.014679,308.010437   C332.001831,308.000580 331.977570,307.979156 332.027222,308.326965   C332.660522,309.714691 333.244171,310.754578 333.527161,311.258789   C335.636871,310.013458 337.307068,309.027557 338.977264,308.041687   C338.977264,308.041656 338.998657,308.534210 339.002197,309.119080   C339.345703,310.348328 339.685669,310.992676 340.025635,311.637054   C340.704498,310.763062 341.383362,309.889099 342.062225,309.015106  z\",id:\"svg_1309\"})),_path1308||(_path1308=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M331.046326,304.099579   C333.053040,302.062714 335.059784,300.025818 337.390961,297.878510   C341.556610,299.421783 343.270294,301.589172 338.791321,305.123718   C336.855286,305.015350 335.610016,304.868225 334.364777,304.721100   C334.557556,305.064117 334.750336,305.407166 334.943115,305.750183   C333.954590,306.493164 332.966064,307.236145 331.977570,307.979126   C331.977570,307.979156 332.001831,308.000580 331.885010,307.690308   C331.527557,306.286530 331.286926,305.193054 331.046326,304.099579  z\",id:\"svg_1310\"})),_path1309||(_path1309=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M386.988190,276.422546   C387.267609,275.804626 387.551971,275.592957 388.313171,275.181335   C389.881073,275.974121 390.972137,276.966827 392.063202,277.959503   C392.063202,277.959503 392.017090,278.438873 391.726593,278.700745   C391.181335,279.095520 390.926575,279.228424 390.671783,279.361298   C391.110229,279.602386 391.548706,279.843475 391.987183,280.084564   C391.793488,281.363129 391.599762,282.641724 391.406036,283.920288   C390.813263,284.015015 390.220490,284.109741 389.627686,284.204437   C388.749481,281.745880 387.871307,279.287323 386.988190,276.422546  z\",id:\"svg_1311\"})),_path1310||(_path1310=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M401.839783,291.672974   C397.476440,291.842255 392.964325,291.695465 388.198059,291.264191   C389.228973,289.793243 389.760895,288.051270 392.514709,289.754517   C394.966064,291.270721 398.586548,290.896698 401.839783,291.672974  z\",id:\"svg_1312\"})),_path1311||(_path1311=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M332.027222,308.326965   C332.966064,307.236145 333.954590,306.493164 334.943115,305.750183   C334.750336,305.407166 334.557556,305.064117 334.364777,304.721100   C335.610016,304.868225 336.855286,305.015350 338.438995,305.230957   C338.844543,305.981415 338.911621,306.663361 338.977966,307.693512   C337.307068,309.027557 335.636871,310.013458 333.527161,311.258789   C333.244171,310.754578 332.660522,309.714691 332.027222,308.326965  z\",id:\"svg_1313\"})),_path1312||(_path1312=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M392.445312,277.972534   C390.972137,276.966827 389.881073,275.974121 388.435760,274.941895   C388.348297,274.111298 388.615112,273.320282 389.026245,272.235168   C389.562073,271.704590 389.953552,271.468048 390.553894,271.147308   C392.204498,273.123474 393.646210,275.183868 395.113342,277.605774   C394.368286,277.973358 393.597870,277.979462 392.445312,277.972534  z\",id:\"svg_1314\"})),_path1313||(_path1313=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M408.762146,285.166504   C409.456909,284.939819 409.897339,284.937531 410.722778,285.306732   C412.068207,287.116577 413.028595,288.554932 413.663025,290.042969   C412.902313,290.157532 412.467590,290.222473 411.953125,289.903198   C410.578552,289.008881 409.283691,288.498810 407.993774,287.993744   C407.998779,287.998749 408.010376,288.009888 408.010376,288.009888   C408.176208,287.136871 408.342041,286.263885 408.762146,285.166504  z\",id:\"svg_1315\"})),_path1314||(_path1314=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M409.927612,292.904083   C408.873688,292.584076 407.819794,292.264069 406.435211,291.918823   C406.517395,290.611572 406.930237,289.329590 407.676727,288.028748   C408.010376,288.009888 407.998779,287.998749 407.984314,288.360657   C408.934052,290.109924 409.898285,291.497314 410.628723,292.887207   C410.394958,292.889709 409.927612,292.904083 409.927612,292.904083  z\",id:\"svg_1316\"})),_path1315||(_path1315=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M346.264526,312.818237   C345.957825,312.282196 345.918274,311.552765 345.811707,310.464905   C347.270752,309.073792 348.796814,308.041107 350.685059,307.000183   C349.542053,308.869568 348.036896,310.747223 346.264526,312.818237  z\",id:\"svg_1317\"})),_path1316||(_path1316=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M341.681946,308.999634   C341.383362,309.889099 340.704498,310.763062 340.025635,311.637054   C339.685669,310.992676 339.345703,310.348328 339.015930,309.365173   C339.784607,309.012360 340.543121,308.998291 341.681946,308.999634  z\",id:\"svg_1318\"})),_path1317||(_path1317=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M399.969940,281.323242   C400.626984,281.737976 401.288422,282.503906 401.964783,283.626648   C401.979706,283.983459 401.999207,283.996765 401.759064,283.988251   C401.518921,283.979736 401.051147,284.048553 401.051147,284.048553   C400.692200,283.257202 400.333252,282.465851 399.969940,281.323242  z\",id:\"svg_1319\"})),_path1318||(_path1318=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M396.053650,279.173645   C396.688782,279.327911 397.331848,279.829987 398.016510,280.663818   C397.392609,280.504211 396.727112,280.012848 396.053650,279.173645  z\",id:\"svg_1320\"})),_path1319||(_path1319=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M352.744049,303.203796   C352.871613,303.999664 352.716675,304.989288 352.276215,306.026520   C352.147644,305.181915 352.304596,304.289734 352.744049,303.203796  z\",id:\"svg_1321\"})),_path1320||(_path1320=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M391.993927,279.793335   C391.548706,279.843475 391.110229,279.602386 390.671783,279.361298   C390.926575,279.228424 391.181335,279.095520 391.711884,278.941101   C391.992004,279.113770 391.996338,279.307922 391.993927,279.793335  z\",id:\"svg_1322\"})),_path1321||(_path1321=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M380.701050,279.334473   C380.976715,279.348877 381.128815,279.497894 381.280914,279.646912   C381.046448,279.587616 380.811981,279.528351 380.701050,279.334473  z\",id:\"svg_1323\"})),_path1322||(_path1322=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M394.450073,283.424438   C394.524780,283.375397 394.551422,283.571655 394.551422,283.571655   C394.551422,283.571655 394.375366,283.473480 394.450073,283.424438  z\",id:\"svg_1324\"})),_path1323||(_path1323=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M401.133881,284.213776   C401.051147,284.048553 401.518921,283.979736 401.755310,283.980286   C401.733337,284.113556 401.474976,284.246277 401.133881,284.213776  z\",id:\"svg_1325\"})),_path1324||(_path1324=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M394.467773,280.448517   C394.526489,280.412323 394.409027,280.484711 394.467773,280.448517  z\",id:\"svg_1326\"})),_path1325||(_path1325=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M344.506042,402.907806   C345.160614,397.593170 340.984100,395.590057 337.665283,393.076965   C330.059418,387.317596 321.418518,382.185455 317.280975,373.412201   C314.304779,367.101410 312.260956,359.464691 312.716248,352.613159   C313.566315,339.821686 317.178833,327.354279 323.131042,315.784271   C323.507965,315.051544 324.495300,314.632843 325.832306,314.013794   C326.642212,313.945648 326.818481,313.931732 327.242310,314.126953   C326.819641,318.844727 322.702240,321.675110 322.344666,326.907806   C322.152313,329.722626 321.442535,333.768463 319.646210,337.050842   C318.917725,339.378998 318.398621,341.621613 318.212769,343.891449   C317.837372,348.477356 317.355011,353.083313 317.439026,357.671448   C317.577789,365.250153 321.648590,371.245728 326.041718,377.387848   C328.379761,380.494629 330.715271,383.236816 333.107117,386.342102   C337.539551,390.556091 342.051056,394.266815 346.238617,398.312836   C348.571869,400.567230 347.906097,402.434937 344.506042,402.907806  z\",id:\"svg_1327\"})),_path1326||(_path1326=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D38E5A\",opacity:1,stroke:\"none\",d:\" M344.240540,403.003906   C347.906097,402.434937 348.571869,400.567230 346.238617,398.312836   C342.051056,394.266815 337.539551,390.556091 333.435486,386.305237   C335.188782,384.488098 338.350311,384.169128 336.996185,380.520477   C336.853821,378.241608 336.598267,376.332672 336.615143,374.426117   C336.619415,373.939789 337.487183,373.461090 338.137268,373.214905   C341.505219,375.094238 342.945435,378.285339 344.651184,380.841187   C343.377197,380.593994 342.417816,380.468536 341.458466,380.343079   C341.117523,380.764862 340.776581,381.186646 340.435638,381.608429   C343.459290,385.890930 346.493835,390.165863 349.496979,394.462708   C350.058655,395.266357 350.494690,396.157806 350.740479,397.168915   C350.013550,399.868286 349.534851,402.407501 349.056152,404.946686   C348.827087,405.236298 348.598022,405.525879 347.783691,405.735901   C345.922302,405.311584 344.646210,404.966797 343.370117,404.622009   C343.571777,404.114655 343.773407,403.607330 344.240540,403.003906  z\",id:\"svg_1328\"})),_path1327||(_path1327=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M343.105713,404.789825   C344.646210,404.966797 345.922302,405.311584 347.530701,405.856689   C345.999481,408.823639 344.132019,411.576630 340.166199,407.998352   C340.839142,406.865601 341.840210,405.911621 343.105713,404.789825  z\",id:\"svg_1329\"})),_path1328||(_path1328=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M326.994751,313.917816   C326.818481,313.931732 326.642212,313.945648 326.200928,313.952087   C327.406982,310.697083 328.878021,307.449554 330.697693,304.150787   C331.286926,305.193054 331.527557,306.286530 331.897858,307.700134   C330.689911,309.442627 329.352295,310.865021 327.752747,312.751923   C327.256561,313.401459 327.091187,313.635254 326.994751,313.917816  z\",id:\"svg_1330\"})),_path1329||(_path1329=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M419.388489,254.468552   C418.936432,254.352036 418.659271,254.067490 418.403778,253.764648   C418.397003,253.756622 418.625397,253.550110 418.744141,253.436157   C419.018188,253.723434 419.292236,254.010742 419.388489,254.468552  z\",id:\"svg_1331\"})),_path1330||(_path1330=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M415.000610,251.999695   C415.432190,252.121231 415.863129,252.243088 416.294098,252.364929   C415.944427,252.380356 415.594727,252.395782 415.122498,252.205902   C414.999908,252.000610 415.000000,252.000000 415.000610,251.999695  z\",id:\"svg_1332\"})),_path1331||(_path1331=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M436.041473,242.329468   C435.994232,241.263489 435.996765,240.508804 436.372925,239.377289   C437.492554,238.997086 438.238556,238.993729 438.984589,238.990387   C437.935120,240.139786 439.762756,243.569595 436.041473,242.329468  z\",id:\"svg_1333\"})),_path1332||(_path1332=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M439.113007,238.707962   C438.238556,238.993729 437.492554,238.997086 436.373291,239.000214   C436.821533,237.788345 437.643036,236.576691 438.717407,235.194885   C439.060669,236.158340 439.151031,237.291931 439.113007,238.707962  z\",id:\"svg_1334\"})),_path1333||(_path1333=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M432.337036,238.952087   C432.000305,238.253845 431.999359,237.508286 432.007660,236.390503   C432.235565,236.980453 432.454224,237.942627 432.337036,238.952087  z\",id:\"svg_1335\"})),_path1334||(_path1334=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M431.991516,235.652374   C431.206451,235.917267 430.430328,235.851898 428.650543,235.701981   C430.115448,234.814133 430.742920,234.433823 431.685211,234.026764   C432.000153,234.440689 432.000305,234.881393 431.991516,235.652374  z\",id:\"svg_1336\"})),_path1335||(_path1335=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M431.891418,224.823914   C431.983429,224.987793 431.484283,224.996490 431.234619,225.003876   C431.256439,224.894196 431.527954,224.777115 431.891418,224.823914  z\",id:\"svg_1337\"})),_path1336||(_path1336=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M451.994415,227.993805   C450.936127,228.543106 449.883911,229.099136 448.831696,229.655151   C448.644257,229.088654 448.456787,228.522171 448.269348,227.955673   C449.282227,227.951706 450.295135,227.947739 451.660828,227.978973   C452.013611,228.014175 452.000519,228.000549 451.994415,227.993805  z\",id:\"svg_1338\"})),_path1337||(_path1337=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M446.027100,237.973511   C446.591309,238.409790 447.121094,238.879471 447.650848,239.349152   C447.319580,239.656036 446.988342,239.962921 446.657104,240.269806   C446.427734,239.736771 446.198395,239.203735 445.946228,238.372070   C445.923462,238.073441 445.992645,238.006943 446.027100,237.973511  z\",id:\"svg_1339\"})),_path1338||(_path1338=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M447.094238,231.313202   C447.402344,231.692062 447.445343,232.072433 447.488373,232.452820   C447.221985,232.449478 446.955566,232.446136 446.689148,232.442795   C446.735809,232.066772 446.782471,231.690735 447.094238,231.313202  z\",id:\"svg_1340\"})),_path1339||(_path1339=/*#__PURE__*/React.createElement(\"path\",{fill:\"#88563C\",opacity:1,stroke:\"none\",d:\" M278.141083,355.213928   C278.470184,354.863617 278.940369,354.727264 279.410583,354.590881   C279.469391,354.874451 279.528229,355.158020 279.587036,355.441589   C279.152069,355.436981 278.717133,355.432404 278.141083,355.213928  z\",id:\"svg_1341\"})),_path1340||(_path1340=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M280.232056,375.015076   C280.401215,374.902618 280.571594,374.957306 280.741943,375.011993   C280.572388,375.068756 280.402802,375.125488 280.232056,375.015076  z\",id:\"svg_1342\"})),_path1341||(_path1341=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4C3928\",opacity:1,stroke:\"none\",d:\" M477.019165,768.336426   C479.119812,766.034546 481.218292,764.060608 484.006958,762.006531   C487.130066,760.285828 489.563019,758.645386 491.995972,757.004883   C490.968994,760.239014 489.942017,763.473145 488.915039,766.707275   C488.342438,766.200623 487.769836,765.693970 487.197235,765.187317   C484.048553,766.784546 480.899902,768.381714 477.388855,769.977112   C477.023285,769.538330 477.020142,769.101379 477.019165,768.336426  z\",id:\"svg_1343\"})),_path1342||(_path1342=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M491.858276,756.682800   C489.563019,758.645386 487.130066,760.285828 484.339417,761.956787   C483.531860,761.348816 483.082001,760.710388 482.311951,760.021606   C483.533997,756.225342 485.689819,753.204285 490.609375,752.995239   C491.233704,754.115356 491.477142,755.238037 491.858276,756.682800  z\",id:\"svg_1344\"})),_path1343||(_path1343=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2E231C\",opacity:1,stroke:\"none\",d:\" M478.969055,776.671997   C477.426239,776.791077 475.856140,776.577332 474.286011,776.363525   C474.952484,775.268616 475.618927,774.173706 476.640259,773.039429   C477.644012,774.113098 478.292908,775.226135 478.969055,776.671997  z\",id:\"svg_1345\"})),_path1344||(_path1344=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M495.400879,769.476929   C495.962769,770.030396 496.228333,770.717529 496.493958,771.404663   C495.922424,771.469788 495.350922,771.534851 494.779388,771.599976   C494.887787,770.936890 494.996155,770.273743 495.400879,769.476929  z\",id:\"svg_1346\"})),_path1345||(_path1345=/*#__PURE__*/React.createElement(\"path\",{fill:\"#443225\",opacity:1,stroke:\"none\",d:\" M501.998779,796.998779   C501.696716,797.508484 501.395905,798.019470 501.095123,798.530457   C500.885681,798.348816 500.676208,798.167175 500.466736,797.985596   C500.789001,797.680481 501.111298,797.375366 501.718018,797.036377   C502.002441,797.002441 502.000000,797.000000 501.998779,796.998779  z\",id:\"svg_1347\"})),_path1346||(_path1346=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M467.020752,724.358337   C467.767456,723.991638 468.510986,723.995544 469.626648,723.999695   C469.838776,725.209290 469.678772,726.418579 469.518768,727.627869   C469.134216,727.699036 468.749664,727.770203 468.365112,727.841309   C467.915924,726.803894 467.466766,725.766418 467.020752,724.358337  z\",id:\"svg_1348\"})),_path1347||(_path1347=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M561.311401,743.136597   C562.736572,742.314270 564.475586,741.655945 566.602417,740.998779   C568.529053,743.078674 570.067810,745.157410 572.494568,748.435486   C567.223572,748.546509 565.149292,744.098816 561.311401,743.136597  z\",id:\"svg_1349\"})),_path1348||(_path1348=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M568.354065,739.992554   C568.761963,739.333618 569.524414,738.672180 570.639771,738.005371   C570.231323,738.663330 569.469971,739.326660 568.354065,739.992554  z\",id:\"svg_1350\"})),_path1349||(_path1349=/*#__PURE__*/React.createElement(\"path\",{fill:\"#392B1F\",opacity:1,stroke:\"none\",d:\" M480.667542,759.967651   C478.911011,760.650208 476.818115,761.293030 474.372742,761.973633   C474.763580,760.482605 475.506836,758.953918 476.387848,757.141968   C477.915741,758.221497 479.123444,759.074768 480.667542,759.967651  z\",id:\"svg_1351\"})),_path1350||(_path1350=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M293.341675,380.958130   C293.274261,379.898865 293.573059,378.795868 293.856750,377.348328   C294.849609,377.498169 295.857574,377.992554 296.865540,378.486938   C295.812988,379.296082 294.760437,380.105255 293.341675,380.958130  z\",id:\"svg_1352\"})),_path1351||(_path1351=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M290.651428,377.014832   C290.234955,378.000671 289.488251,378.981689 288.370361,379.967224   C288.773163,378.984497 289.547150,377.997253 290.651428,377.014832  z\",id:\"svg_1353\"})),_path1352||(_path1352=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M300.519897,378.375610   C301.330139,377.969452 302.004913,377.863708 302.679657,377.757996   C302.612549,378.345947 302.545441,378.933899 302.478302,379.521851   C301.780334,379.239899 301.082367,378.957947 300.519897,378.375610  z\",id:\"svg_1354\"})),_path1353||(_path1353=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M292.994202,375.816040   C292.558807,376.068512 292.113403,376.042297 291.333405,376.011169   C291.660614,375.849945 292.322418,375.693634 292.994202,375.816040  z\",id:\"svg_1355\"})),_path1354||(_path1354=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M304.981628,387.239319   C305.097443,387.412781 305.040710,387.587952 304.984009,387.763123   C304.925720,387.589081 304.867432,387.415070 304.981628,387.239319  z\",id:\"svg_1356\"})),_path1355||(_path1355=/*#__PURE__*/React.createElement(\"path\",{fill:\"#7D482D\",opacity:1,stroke:\"none\",d:\" M302.550903,389.466614   C302.585541,389.523743 302.516235,389.409485 302.550903,389.466614  z\",id:\"svg_1357\"})),_path1356||(_path1356=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M298.569885,381.585815   C298.484802,381.646271 298.449524,381.415466 298.449524,381.415466   C298.449524,381.415466 298.654968,381.525391 298.569885,381.585815  z\",id:\"svg_1358\"})),_path1357||(_path1357=/*#__PURE__*/React.createElement(\"path\",{fill:\"#723F24\",opacity:1,stroke:\"none\",d:\" M292.205994,381.936646   C292.161407,381.766815 292.345978,381.477692 292.769165,381.082520   C292.816864,381.256714 292.626007,381.537018 292.205994,381.936646  z\",id:\"svg_1359\"})),_path1358||(_path1358=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M328.806183,393.833557   C328.219971,394.094940 327.488312,394.073761 326.390503,394.035339   C326.903168,393.862396 327.781921,393.706696 328.806183,393.833557  z\",id:\"svg_1360\"})),_path1359||(_path1359=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M309.821014,477.019989   C306.295135,475.574890 306.358307,473.313568 309.511230,470.015472   C307.722809,470.500946 307.154663,470.655182 306.291443,470.903046   C305.996399,470.996704 305.969879,470.970154 305.969879,470.970154   C305.293793,468.896576 304.617706,466.822998 303.968079,464.377625   C303.994568,464.005859 304.028076,463.971924 304.396912,463.971069   C305.455292,463.506958 306.144867,463.043671 306.834473,462.580383   C305.890472,462.054413 304.946442,461.528442 304.001221,461.001221   C304.000000,461.000000 303.997559,460.997559 303.997559,460.997559   C304.802277,459.458740 305.607025,457.919922 306.669861,456.182922   C307.607361,455.840332 308.286774,455.695984 308.982574,455.275879   C308.998993,455.000092 309.015869,454.978638 309.015869,454.978638   C310.313995,454.212097 311.612152,453.445557 312.955139,452.339508   C313.000000,452.000000 313.002289,451.996643 313.002289,451.996643   C315.072418,450.995697 317.142517,449.994720 319.610840,448.992889   C320.009003,448.992004 320.029572,449.004181 320.014099,449.388184   C320.008789,450.787262 320.019012,451.802399 320.157349,453.124634   C320.626984,455.596405 320.968567,457.761078 321.310974,459.930939   C323.423676,459.773834 325.666779,459.607025 328.068726,459.428406   C328.257324,458.597107 328.534607,457.374878 328.811890,456.152618   C329.010132,456.124268 329.208344,456.095947 329.754486,456.363129   C331.438324,457.599060 332.774170,458.539459 334.158356,459.513855   C338.896790,456.191711 339.360046,454.150085 335.990906,450.979248   C334.156891,449.791382 332.322845,448.603546 330.488770,447.415741   C330.847656,446.901703 331.206512,446.387665 331.565369,445.873627   C334.964661,445.022552 343.159576,451.520996 340.372070,440.324341   C344.719635,436.789185 347.151764,438.438202 348.273590,442.415436   C350.459656,443.469330 352.567169,436.622314 354.049133,443.242981   C354.198700,444.531342 354.804169,445.913757 354.399963,446.341034   C351.417786,449.493408 354.444489,449.426575 356.220428,449.729095   C357.080933,449.875671 358.068542,449.276337 358.998596,449.014679   C358.916229,449.368378 358.833862,449.722076 358.751495,450.075806   C360.470032,450.725952 362.188568,451.376068 363.929077,452.357788   C363.954620,453.132446 363.958191,453.575592 363.957886,454.228149   C363.954041,454.437622 363.934662,454.856171 363.606628,454.870636   C362.840576,454.909821 362.402588,454.934540 361.646667,455.008728   C360.875824,455.700684 360.422852,456.343201 359.640472,456.990265   C358.871735,456.998047 358.432465,457.001251 357.848877,456.687531   C356.915833,455.635376 356.127075,454.900146 355.338287,454.164917   C354.929810,454.613068 354.130493,455.412384 354.170898,455.457306   C354.900116,456.269073 355.687073,457.047974 356.560577,457.701813   C356.920563,457.971222 357.513184,457.929871 358.048584,458.367676   C360.790649,460.397278 361.252655,462.462372 359.046448,464.648682   C358.300507,463.882629 357.651306,463.425537 356.951111,462.623962   C355.928314,461.849792 354.956573,461.420135 353.974731,460.622131   C352.677399,458.468689 351.390228,456.683594 350.103027,454.898499   C349.941528,455.292847 349.780060,455.687164 349.618561,456.081512   C347.375214,455.940186 345.131897,455.798859 342.760101,455.649475   C341.745575,456.709778 340.481567,458.030853 338.753265,459.837158   C341.375580,462.025360 343.781128,464.032654 345.733673,465.661926   C348.904022,463.867401 351.449554,462.426514 353.872559,461.292175   C354.508484,462.399597 355.266907,463.200500 355.983582,464.370483   C354.350494,465.829742 352.768677,466.934204 351.164337,468.004944   C350.112640,468.706848 349.028442,469.360046 347.772369,470.131531   C347.349976,470.392792 347.174194,470.606934 346.806702,471.007141   C346.330688,471.448273 346.106598,471.752686 345.463013,472.046997   C343.363464,472.025787 341.683380,472.014740 340.001648,472.001831   C340.000000,472.000000 339.995850,471.996338 339.992035,471.623138   C339.997437,470.503601 340.006653,469.757263 340.229919,468.888123   C340.420776,468.395813 340.397614,468.026306 340.374451,467.656830   C340.243561,468.098541 340.112671,468.540283 339.654968,469.032440   C338.303802,470.031097 337.279388,470.979279 336.408691,471.785187   C337.502197,473.339539 338.361542,474.561096 338.712555,475.060028   C336.067627,477.250061 333.982452,478.976624 331.897308,480.703217   C332.174255,481.099457 332.451233,481.495697 332.728180,481.891937   C334.026886,481.418793 335.325562,480.945648 335.375000,480.927643   C336.864410,483.075409 337.872223,484.528687 339.224304,486.031738   C340.691345,487.074066 341.814117,488.066559 343.097473,489.201019   C338.813934,493.046387 335.496185,489.558685 331.986328,488.661102   C331.490875,487.771423 331.034088,487.194946 330.577332,486.618469   C330.329071,486.910553 330.080811,487.202637 329.832550,487.494720   C330.546021,488.005096 331.259521,488.515442 331.980164,489.388611   C332.867554,490.967651 333.747772,492.183929 334.630341,493.403412   C331.925171,496.199738 331.925171,496.199738 334.000397,498.238770   C334.009430,498.458374 334.031403,498.897400 333.667175,498.977325   C332.869476,500.372803 332.435974,501.688324 331.814362,503.302979   C329.420288,503.105133 327.214325,502.608154 325.008392,502.111145   C325.833527,500.293640 326.658691,498.476166 327.796722,495.969543   C326.240997,496.570770 325.185120,496.978851 323.200897,497.745697   C322.766388,495.376007 322.456635,492.943512 321.805908,490.605896   C321.618866,489.933807 320.448273,489.535461 319.353973,488.659760   C317.334381,486.510040 315.689423,484.712219 314.044464,482.914368   C314.044464,482.914368 313.964691,482.527588 314.283875,482.253937   C315.842865,480.418030 317.082672,478.855774 318.539551,477.019989   C314.851471,477.019989 312.336243,477.019989 309.821014,477.019989  M309.907288,459.432983   C309.498871,459.137421 309.090454,458.841827 308.682037,458.546234   C308.590027,458.812134 308.387299,459.293365 308.422638,459.311523   C308.933258,459.574097 309.475861,459.774506 309.987915,460.692413   C310.388855,461.543243 310.789764,462.394073 311.190704,463.244904   C311.731995,462.729980 312.273285,462.215057 312.814606,461.700134   C311.873138,461.137024 310.931641,460.573914 309.907288,459.432983  M359.289825,452.427155   C358.999817,452.703552 358.709839,452.979950 358.419830,453.256317   C358.534485,453.374969 358.741852,453.603607 358.750336,453.596436   C359.054932,453.339539 359.341003,453.060669 359.289825,452.427155  z\",id:\"svg_1361\"})),_path1360||(_path1360=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M354.037506,442.894775   C352.567169,436.622314 350.459656,443.469330 348.273590,442.415436   C347.151764,438.438202 344.719635,436.789185 340.336182,439.948395   C340.025909,438.687958 339.671783,437.215790 340.186127,436.171265   C340.762909,434.999969 342.125122,434.215485 344.263672,432.123047   C344.715240,433.714691 345.166779,435.306335 345.618347,436.897980   C348.117004,432.589722 348.117004,432.589722 342.332428,429.652344   C341.176788,428.561737 340.440826,427.831024 339.704865,427.100311   C339.141998,427.732666 338.579102,428.365021 338.016205,428.997345   C337.570068,428.998077 337.123901,428.998840 336.192261,428.715973   C334.800873,427.955292 333.894928,427.478271 332.989014,427.001221   C332.448547,426.847137 331.908112,426.693054 331.328033,425.991486   C333.191406,423.948669 335.094391,422.453278 336.997375,420.957916   C337.458099,421.499023 337.918823,422.040131 338.379517,422.581207   C338.920746,421.317047 339.461975,420.052887 340.320618,418.442596   C341.425385,418.741455 342.212708,419.386475 343.164612,420.268127   C343.865997,420.678894 344.402832,420.852997 344.939636,421.027100   C347.889526,421.836823 350.839417,422.646606 354.007507,423.516266   C354.007507,423.248413 354.007507,422.466156 354.280762,421.330383   C354.731323,420.965607 354.908630,420.954407 355.421387,420.993896   C357.173553,421.693909 358.590240,422.343231 360.035614,423.345825   C360.704834,424.486389 361.345337,425.273743 362.034882,426.415161   C365.066742,432.430206 366.134369,432.844177 372.999695,431.372498   C372.996765,434.516113 372.991394,437.288513 372.671387,439.904297   C370.534729,439.010925 368.703003,438.297119 366.893738,437.530365   C365.320068,436.863464 363.722107,436.227448 362.227905,435.408112   C361.029144,434.750702 359.969818,433.838989 358.848633,433.040100   C358.235321,434.363007 357.622040,435.685913 356.660431,437.000946   C355.701294,437.351990 355.090424,437.710938 354.479553,438.069885   C355.317352,438.382263 356.155121,438.694672 356.986816,439.406616   C356.986328,440.871582 356.991943,441.937012 356.998779,443.001221   C357.000000,443.000000 357.001312,442.997833 356.630188,442.991821   C355.518524,442.955475 354.778015,442.925140 354.037506,442.894775  M366.484192,435.586426   C366.484192,435.586426 366.418732,435.475006 366.484192,435.586426  M346.590118,423.517639   C346.590118,423.517639 346.476227,423.585388 346.590118,423.517639  z\",id:\"svg_1362\"})),_path1361||(_path1361=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M335.649292,451.018768   C339.360046,454.150085 338.896790,456.191711 334.158356,459.513855   C332.774170,458.539459 331.438324,457.599060 330.053040,456.330566   C331.771667,454.354401 333.539703,452.706329 335.649292,451.018768  z\",id:\"svg_1363\"})),_path1362||(_path1362=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M328.528076,456.071350   C328.534607,457.374878 328.257324,458.597107 328.068726,459.428406   C325.666779,459.607025 323.423676,459.773834 321.310974,459.930939   C320.968567,457.761078 320.626984,455.596405 320.526550,453.160889   C321.508148,452.942780 322.248566,452.995514 323.032532,453.357971   C324.077698,453.138885 325.079376,452.610077 326.081055,452.081268   C330.763397,451.191956 326.082031,455.484711 328.528076,456.071350  z\",id:\"svg_1364\"})),_path1363||(_path1363=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M320.001404,448.981628   C320.459412,446.996765 314.749146,445.699707 319.671570,443.495453   C320.645599,444.472992 321.316437,445.224701 321.987244,445.976440   C323.067169,447.787445 324.147095,449.598480 324.851440,451.597046   C323.994476,451.518616 323.513092,451.252625 322.771179,450.808533   C321.683594,450.088318 320.856598,449.546234 320.029572,449.004181   C320.029572,449.004181 320.009003,448.992004 320.001404,448.981628  z\",id:\"svg_1365\"})),_path1364||(_path1364=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M337.142395,420.656281   C335.094391,422.453278 333.191406,423.948669 331.154297,425.763855   C331.180023,424.916046 330.940247,423.418549 331.578217,422.645538   C333.178802,420.706146 335.176544,419.094513 337.848846,416.560852   C337.563263,418.490753 337.425354,419.422699 337.142395,420.656281  z\",id:\"svg_1366\"})),_path1365||(_path1365=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M343.000031,420.031494   C342.212708,419.386475 341.425385,418.741455 340.325562,418.068726   C340.455078,416.717590 340.897095,415.394165 341.668335,414.034119   C341.997559,413.997559 342.000000,414.000000 342.007935,414.372375   C343.010132,415.496094 344.004456,416.247437 344.998779,416.998779   C344.998779,416.998779 345.000000,417.000000 344.965698,417.315674   C344.287598,418.431366 343.643799,419.231445 343.000031,420.031494  z\",id:\"svg_1367\"})),_path1366||(_path1366=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M322.130463,445.659485   C321.316437,445.224701 320.645599,444.472992 319.954651,443.367615   C320.741302,442.695648 321.548065,442.377319 322.678925,442.027832   C322.759918,443.111969 322.516815,444.227264 322.130463,445.659485  z\",id:\"svg_1368\"})),_path1367||(_path1367=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M332.860229,427.313293   C333.894928,427.478271 334.800873,427.955292 335.857666,428.716797   C336.007111,429.167877 336.005646,429.334564 336.002106,429.750610   C336.000000,430.000000 336.001221,429.998779 336.001221,429.998779   C334.763855,429.410797 331.591705,431.488312 332.860229,427.313293  z\",id:\"svg_1369\"})),_path1368||(_path1368=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M323.031738,450.986664   C323.513092,451.252625 323.994476,451.518616 324.729858,451.889862   C325.166840,452.004822 325.349762,452.014465 325.806885,452.052704   C325.079376,452.610077 324.077698,453.138885 323.038330,453.013794   C323.011017,451.902161 323.021362,451.444427 323.031738,450.986664  z\",id:\"svg_1370\"})),_path1369||(_path1369=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M338.359192,429.030762   C338.579102,428.365021 339.141998,427.732666 339.704865,427.100311   C340.440826,427.831024 341.176788,428.561737 341.953949,429.645599   C340.897491,429.687225 339.799866,429.375732 338.359192,429.030762  z\",id:\"svg_1371\"})),_path1370||(_path1370=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M335.999390,430.000610   C336.514740,430.243469 337.042999,430.465454 337.528015,430.758850   C337.577209,430.788635 337.366302,431.248383 337.276093,431.508575   C336.873352,431.198761 336.470642,430.888977 336.034546,430.288971   C336.001221,429.998779 336.000000,430.000000 335.999390,430.000610  z\",id:\"svg_1372\"})),_path1371||(_path1371=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M312.998047,452.001923   C312.567963,451.880127 312.139771,451.756409 311.711609,451.632690   C312.059479,451.618744 312.407379,451.604797 312.878784,451.793762   C313.002289,451.996643 313.000000,452.000000 312.998047,452.001923  z\",id:\"svg_1373\"})),_path1372||(_path1372=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M308.988129,455.008484   C308.862549,454.868134 308.747833,454.719360 308.633118,454.570587   C308.719391,454.617981 308.805664,454.665405 308.953918,454.845703   C309.015869,454.978638 308.998993,455.000092 308.988129,455.008484  z\",id:\"svg_1374\"})),_path1373||(_path1373=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M355.085907,420.943237   C354.908630,420.954407 354.731323,420.965607 354.288391,420.994843   C353.807404,418.995117 353.591980,416.977386 353.332733,414.548828   C352.357849,414.046692 350.935242,413.313904 348.946808,412.289703   C350.514252,411.365601 351.633911,410.705536 352.639984,410.112396   C352.530426,407.928650 352.427551,405.877533 352.305817,403.451019   C351.444458,403.924561 350.566437,404.407196 349.372314,404.918274   C349.534851,402.407501 350.013550,399.868286 350.940247,397.442566   C353.728821,399.528381 356.530029,403.498627 358.320557,403.085785   C363.047760,401.995819 364.628998,406.317169 368.214600,407.313965   C370.938934,408.419556 373.451477,409.236572 376.326477,410.073303   C377.414276,410.122955 378.139557,410.152863 378.951752,410.450653   C379.692719,410.835724 380.346771,410.952911 381.379639,411.036682   C382.936310,410.687958 384.114166,410.372650 385.521240,410.040192   C385.750488,410.023041 386.214996,410.019135 386.163879,410.415405   C386.067444,411.875793 386.022156,412.939880 385.709045,414.010925   C385.262756,414.024841 385.084290,414.031799 384.533813,414.053467   C383.443237,415.381714 382.724640,416.695221 382.003021,418.004364   C382.000000,418.000000 382.009705,418.006042 381.631897,417.986115   C380.086456,417.043091 378.918823,416.119995 378.746979,415.984131   C375.279755,415.984131 372.823700,415.984131 370.146881,415.984131   C371.777679,418.419647 373.082977,421.057465 376.987671,419.201813   C377.701416,418.862640 378.981079,419.714233 379.996857,420.281616   C379.973083,420.722870 379.951965,420.898590 379.640869,421.072327   C378.897369,421.384583 378.443848,421.698822 377.995117,422.006531   C377.999878,422.000000 378.014801,421.999908 377.759766,421.901978   C377.001526,422.219604 376.498322,422.635193 375.997986,423.276398   C376.000854,423.502014 376.016083,423.952972 375.681244,423.965393   C374.591797,424.310089 373.837158,424.642426 372.749268,424.998413   C369.613586,425.584320 365.882690,425.335419 367.099701,428.545288   C369.861237,429.224426 371.430603,429.610413 373.000092,430.247559   C372.999207,430.666260 372.998230,430.833740 372.997284,431.001221   C366.134369,432.844177 365.066742,432.430206 362.299103,426.239929   C363.303467,425.100800 364.092651,424.491058 365.084106,424.137756   C365.847717,423.562836 366.409119,422.731506 366.975647,421.586639   C366.993622,420.855164 367.006500,420.437256 367.323242,420.005005   C367.954498,419.587585 368.281891,419.184570 368.609253,418.781555   C368.344147,418.670258 367.878632,418.420502 367.845001,418.469177   C367.516266,418.944946 367.259644,419.470459 366.583313,419.994080   C365.119293,420.007507 364.054443,420.008667 363.028870,419.695435   C364.230560,418.098114 365.393005,416.815186 366.555450,415.532257   C366.425964,415.318054 366.296478,415.103851 366.166992,414.889648   C362.473297,416.907501 358.779602,418.925354 355.085907,420.943237  M358.229004,414.579163   C358.148865,414.434235 358.088654,414.272186 357.982910,414.149292   C357.879120,414.028717 357.729004,413.947998 357.599213,413.849792   C357.053009,414.894318 356.506775,415.938843 355.960541,416.983368   C356.408875,417.208221 356.857208,417.433075 357.305542,417.657928   C357.707489,416.809570 358.109406,415.961243 358.229004,414.579163  M365.407501,427.480560   C365.407501,427.480560 365.522644,427.410309 365.407501,427.480560  z\",id:\"svg_1375\"})),_path1374||(_path1374=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M343.164612,420.268127   C343.643799,419.231445 344.287598,418.431366 344.966309,417.316284   C348.255829,417.854614 346.978424,419.149445 345.139832,420.753296   C344.402832,420.852997 343.865997,420.678894 343.164612,420.268127  z\",id:\"svg_1376\"})),_path1375||(_path1375=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M344.990967,416.627838   C344.004456,416.247437 343.010132,415.496094 342.009155,414.373596   C342.996033,414.753937 343.989594,415.505402 344.990967,416.627838  z\",id:\"svg_1377\"})),_path1376||(_path1376=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M325.017487,502.326813   C327.214325,502.608154 329.420288,503.105133 332.183533,503.289185   C336.819214,505.600830 340.897614,508.225433 345.024780,511.203857   C347.048279,515.700562 349.023010,519.843445 350.668304,523.957092   C349.247253,523.319214 348.155609,522.710571 346.705933,522.043823   C344.899841,520.652527 343.451752,519.319336 342.003662,517.986145   C339.675354,515.874695 337.832916,513.174622 333.716278,515.277893   C332.680023,515.807373 329.956512,513.034485 327.998474,511.417053   C327.157471,509.164642 326.326416,507.274323 325.225098,505.167786   C324.954865,504.951538 324.983521,504.466797 325.004913,503.972748   C325.023804,503.310486 325.021301,503.142303 325.018829,502.974152   C325.018829,502.974152 325.026581,502.542480 325.017487,502.326813  z\",id:\"svg_1378\"})),_path1377||(_path1377=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M313.765198,483.127014   C315.689423,484.712219 317.334381,486.510040 318.982727,488.653198   C318.517395,489.133057 317.831848,489.114471 317.612518,489.425110   C314.427277,493.935394 310.748901,494.835052 306.875122,491.442322   C303.871735,489.206482 313.271271,488.233032 306.376099,486.007385   C306.000000,486.000000 306.002869,486.003815 306.099976,485.726440   C305.462006,484.629822 304.726868,483.810608 303.991760,482.991394   C303.991760,482.991394 303.999023,482.999023 304.003235,483.003448   C304.775146,479.437012 306.055389,481.667023 307.584137,482.512024   C309.341797,483.483459 311.005157,487.019714 313.765198,483.127014  z\",id:\"svg_1379\"})),_path1378||(_path1378=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M305.998199,485.998016   C305.765350,486.522217 305.534332,487.048370 305.303314,487.574554   C304.889191,487.255219 304.475067,486.935913 304.023224,486.315613   C303.985535,486.014648 304.001038,485.998932 304.339020,485.993042   C305.118958,485.992737 305.560913,485.998260 306.002869,486.003815   C306.002869,486.003815 306.000000,486.000000 305.998199,485.998016  z\",id:\"svg_1380\"})),_path1379||(_path1379=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M308.299377,497.084686   C308.267151,496.525116 308.398895,496.127869 308.530640,495.730621   C308.641174,495.837708 308.861755,495.970093 308.843903,496.047729   C308.750305,496.455139 308.596344,496.848663 308.299377,497.084686  z\",id:\"svg_1381\"})),_path1380||(_path1380=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M324.837646,503.057617   C325.021301,503.142303 325.023804,503.310486 325.005371,503.729950   C324.800446,503.809265 324.604187,503.647369 324.445953,503.454254   C324.422943,503.426208 324.581787,503.249146 324.837646,503.057617  z\",id:\"svg_1382\"})),_path1381||(_path1381=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M309.887970,477.357727   C312.336243,477.019989 314.851471,477.019989 318.539551,477.019989   C317.082672,478.855774 315.842865,480.418030 314.250763,482.059265   C312.583984,480.657288 311.269440,479.176392 309.887970,477.357727  z\",id:\"svg_1383\"})),_path1382||(_path1382=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M303.977966,464.023132   C302.872650,463.922394 301.783905,463.804382 299.130280,463.516754   C301.339386,462.184723 302.317383,461.595032 303.646484,461.001434   C303.997559,460.997559 304.000000,461.000000 304.002869,461.372742   C304.013184,462.487640 304.020660,463.229767 304.028076,463.971924   C304.028076,463.971924 303.994568,464.005859 303.977966,464.023132  z\",id:\"svg_1384\"})),_path1383||(_path1383=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M306.007629,471.011505   C305.577881,471.146759 305.136902,471.267212 304.695923,471.387665   C304.963806,471.261902 305.231720,471.136169 305.734741,470.990295   C305.969879,470.970154 305.996399,470.996704 306.007629,471.011505  z\",id:\"svg_1385\"})),_path1384||(_path1384=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M306.099976,485.726440   C305.560913,485.998260 305.118958,485.992737 304.345825,485.986176   C303.999695,485.236908 303.984741,484.488678 303.980774,483.365906   C304.726868,483.810608 305.462006,484.629822 306.099976,485.726440  z\",id:\"svg_1386\"})),_path1385||(_path1385=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M588.900085,284.946320   C589.378479,285.589661 589.856873,286.233002 590.807739,287.219482   C595.060547,289.289520 591.769958,291.819611 591.884521,294.181152   C591.478333,294.604431 591.193237,294.795715 590.649170,294.872528   C589.603027,294.829559 588.815735,294.901062 587.761230,294.800781   C586.867981,294.257263 585.846313,293.434021 585.676636,293.582733   C583.712891,295.304108 581.878052,297.172455 580.004517,299.001099   C580.000000,299.000366 580.002319,299.009033 579.829590,299.099243   C579.773010,299.482330 579.889221,299.775208 580.010620,300.270386   C580.015808,300.472656 580.021179,300.877350 579.997437,301.161316   C579.965454,301.635040 579.957214,301.824799 579.634644,302.013763   C578.901428,302.014618 578.482483,302.016296 577.885986,301.823059   C576.807678,302.090424 575.906860,302.552734 574.790039,303.278656   C573.596008,303.233551 572.636963,302.822296 571.636108,302.635071   C568.435608,302.036377 565.219604,301.520752 561.637268,300.929688   C556.180725,299.927063 551.096436,298.967804 546.008972,297.673401   C546.004944,296.891449 546.004150,296.444580 546.251221,296.000183   C546.499023,296.002625 546.994751,295.996094 547.183105,296.244446   C548.090027,296.471191 548.808594,296.449554 549.527222,296.427917   C549.324524,295.896820 549.121887,295.365723 548.925354,294.653168   C548.931519,294.471680 548.952087,294.109070 548.970154,293.817444   C548.987366,293.331055 548.986511,293.136292 549.125854,292.646912   C549.503845,291.532806 549.741516,290.713287 550.033569,289.568146   C551.141357,288.628876 552.971619,287.322906 553.133179,287.504150   C556.199951,290.945282 557.031311,287.197723 558.968567,286.221222   C556.734436,284.276642 554.858643,282.644012 552.991455,281.005676   C553.000000,281.000000 552.986511,281.016937 553.028137,280.672546   C553.586792,279.615234 554.103821,278.902313 554.197998,278.772430   C557.029602,280.661224 559.525513,282.326111 562.010254,283.992584   C561.999084,283.994202 562.007202,283.977722 562.013672,284.347412   C562.290833,287.905396 564.070007,286.946747 565.709839,285.964569   C565.824951,285.895630 565.254272,284.681610 564.996582,283.629272   C562.991638,280.846649 560.992676,278.434784 558.993652,276.022919   C559.036987,275.372833 559.080322,274.722717 559.090088,274.575897   C565.231812,275.943359 571.357056,277.307129 577.956482,279.118408   C579.297791,279.754486 580.164856,279.943146 581.031982,280.131775   C581.031982,280.131775 581.049438,280.458191 581.143372,280.964630   C583.146545,283.216675 585.055847,284.962250 586.986328,286.727234   C587.717346,286.046936 588.308716,285.496613 588.900085,284.946320  M582.260437,291.427155   C582.818359,291.577972 583.376282,291.728821 583.934204,291.879669   C583.929321,291.537018 583.924438,291.194397 584.041870,290.162506   C585.670105,285.043335 579.739441,287.052643 579.071777,284.098694   C578.698792,284.374847 578.325806,284.651001 577.952881,284.927185   C579.301758,286.924408 580.650696,288.921631 582.260437,291.427155  M553.710205,293.223450   C553.981140,293.926483 554.252075,294.629517 554.523010,295.332550   C555.014038,294.290131 555.505066,293.247711 555.996094,292.205322   C555.388306,292.437347 554.780457,292.669342 553.710205,293.223450  M588.294617,290.425507   C588.007751,290.698914 587.720825,290.972321 587.433960,291.245728   C587.547791,291.363800 587.753662,291.591187 587.762085,291.584106   C588.064209,291.329681 588.348022,291.053467 588.294617,290.425507  M560.592834,289.472168   C560.821167,289.529724 561.049438,289.587280 561.277771,289.644806   C561.130432,289.501495 560.983032,289.358185 560.592834,289.472168  M576.615479,283.507141   C576.615479,283.507141 576.480103,283.586945 576.615479,283.507141  z\",id:\"svg_1387\"})),_path1386||(_path1386=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M546.003296,295.997742   C546.004150,296.444580 546.004944,296.891449 545.748291,297.793518   C544.301697,299.106537 543.112610,299.964325 541.607483,300.874268   C540.865479,300.908569 540.439575,300.890747 539.965820,300.511078   C537.488464,295.558258 533.890686,300.088654 531.006714,298.673828   C531.002014,297.545715 531.002014,296.752350 531.002014,295.601990   C529.360962,297.455688 528.035461,298.952972 527.309326,299.773163   C524.950500,298.587860 523.082092,297.648987 521.213745,296.710144   C521.182739,297.206390 521.151794,297.702637 521.120789,298.198883   C520.080566,298.468506 519.040283,298.738129 518.128906,298.708679   C517.103699,296.940674 515.949585,295.471771 515.419617,294.797272   C511.665497,296.886749 508.860931,298.447723 505.706543,300.034119   C504.243561,300.374237 503.130402,300.688934 501.769104,300.829956   C500.339081,300.097382 499.157227,299.538544 497.975342,298.979706   C498.642181,296.248810 499.309052,293.517883 499.978821,290.400208   C502.609314,289.368500 504.787384,287.958496 508.039124,288.419861   C510.036316,288.703278 512.641968,284.698578 515.037537,282.307831   C515.591064,282.262573 516.081482,282.528870 517.169495,282.930878   C519.587891,282.651154 521.408691,282.235748 524.308533,281.574188   C523.710815,283.381165 523.178284,284.991180 522.487122,287.080719   C524.670410,288.740875 527.149170,290.625702 528.645081,291.763153   C530.168945,289.046661 531.318115,286.998077 532.615662,284.685089   C537.565247,288.867523 541.784241,292.432617 546.003296,295.997742  z\",id:\"svg_1388\"})),_path1387||(_path1387=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M546.251160,296.000183   C541.784241,292.432617 537.565247,288.867523 532.615662,284.685089   C531.318115,286.998077 530.168945,289.046661 528.645081,291.763153   C527.149170,290.625702 524.670410,288.740875 522.487122,287.080719   C523.178284,284.991180 523.710815,283.381165 524.308533,281.574188   C521.408691,282.235748 519.587891,282.651154 517.439087,283.007935   C516.835510,281.874817 516.559875,280.800293 516.333862,279.919373   C518.237610,279.512573 520.033691,279.128784 521.912964,278.373352   C521.996277,278.001678 522.032715,277.954742 522.032715,277.954712   C524.768372,277.832550 527.504089,277.710388 530.603333,277.571991   C530.389526,276.826935 530.190857,276.134460 529.879944,275.051178   C534.727478,274.605377 539.508179,274.165710 544.847290,274.146179   C547.932678,276.716492 550.459595,278.866730 552.986511,281.016937   C552.986511,281.016937 553.000000,281.000000 552.984253,281.369629   C550.997681,283.759369 549.026855,285.779510 546.735229,288.128387   C547.339966,288.457489 548.659546,289.175629 549.979187,289.893799   C549.741516,290.713287 549.503845,291.532806 548.947632,292.752777   C548.560486,293.272186 548.404358,293.445953 548.438477,293.500427   C548.578125,293.723114 548.775757,293.909393 548.952087,294.109070   C548.952087,294.109070 548.931519,294.471680 548.634155,294.709045   C547.889465,295.296326 547.442139,295.646210 546.994751,295.996094   C546.994751,295.996094 546.499023,296.002625 546.251160,296.000183  M526.498657,280.421722   C526.808838,280.132141 527.119080,279.842560 527.429260,279.552979   C527.315613,279.443909 527.115479,279.229401 527.101013,279.241333   C526.789734,279.496429 526.499268,279.776794 526.498657,280.421722  M545.248535,292.175293   C545.414001,292.120270 545.579468,292.065216 545.744934,292.010132   C545.578430,291.956207 545.411987,291.902283 545.248535,292.175293  z\",id:\"svg_1389\"})),_path1388||(_path1388=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M553.028137,280.672546   C550.459595,278.866730 547.932678,276.716492 545.190125,274.304474   C547.389893,273.698883 549.805237,273.355072 552.659302,273.351837   C554.072510,274.130798 555.046936,274.569214 556.021423,275.007599   C556.021423,275.007599 555.996399,275.003204 556.130127,275.309937   C558.183044,278.408112 560.102234,281.199554 562.021423,283.990967   C559.525513,282.326111 557.029602,280.661224 554.197998,278.772430   C554.103821,278.902313 553.586792,279.615234 553.028137,280.672546  z\",id:\"svg_1390\"})),_path1389||(_path1389=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M562.010254,283.992584   C560.102234,281.199554 558.183044,278.408112 556.124634,275.298370   C556.788940,275.246521 557.592529,275.512970 558.694946,275.901184   C560.992676,278.434784 562.991638,280.846649 564.621948,283.628662   C563.504578,283.991760 562.755859,283.984741 562.007202,283.977722   C562.007202,283.977722 561.999084,283.994202 562.010254,283.992584  z\",id:\"svg_1391\"})),_path1390||(_path1390=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M588.945923,284.580627   C588.308716,285.496613 587.717346,286.046936 586.986328,286.727234   C585.055847,284.962250 583.146545,283.216675 581.129272,281.127502   C583.407104,281.197662 585.792908,281.611420 588.587708,282.014252   C588.994995,282.740540 588.993408,283.477722 588.945923,284.580627  z\",id:\"svg_1392\"})),_path1391||(_path1391=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M555.985840,274.646729   C555.046936,274.569214 554.072510,274.130798 553.026611,273.349335   C553.953552,273.432800 554.951843,273.859344 555.985840,274.646729  z\",id:\"svg_1393\"})),_path1392||(_path1392=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M580.870178,279.819580   C580.164856,279.943146 579.297791,279.754486 578.235535,279.295959   C578.929749,279.186462 579.819031,279.346924 580.870178,279.819580  z\",id:\"svg_1394\"})),_path1393||(_path1393=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M521.975952,278.023407   C521.510742,277.898987 521.065735,277.752869 520.620789,277.606720   C521.003418,277.581268 521.386047,277.555786 521.900696,277.742554   C522.032715,277.954742 521.996277,278.001678 521.975952,278.023407  z\",id:\"svg_1395\"})),_path1394||(_path1394=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M615.055542,321.068542   C615.049255,321.486633 615.042969,321.904755 614.887695,322.967285   C613.448059,326.197845 612.157410,328.783966 611.122253,330.857971   C608.610657,332.013824 606.330139,333.063293 603.990601,333.748779   C602.610779,331.275726 601.290039,329.166626 599.999756,326.762146   C599.991333,325.607727 599.952515,324.748718 600.086914,323.603271   C602.307983,321.483887 604.355774,319.650970 605.437988,318.682343   C604.820129,315.828827 604.406433,313.917908 603.996338,312.003357   C604.000000,311.999725 604.009338,311.993164 604.398193,312.012695   C605.818970,312.007538 606.850891,311.982819 607.882751,311.958099   C612.803772,310.990082 614.138733,311.972839 614.901245,317.872162   C614.878052,319.380798 614.966797,320.224670 615.055542,321.068542  z\",id:\"svg_1396\"})),_path1395||(_path1395=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M604.049683,334.112793   C606.330139,333.063293 608.610657,332.013824 611.122253,330.857971   C612.157410,328.783966 613.448059,326.197845 614.881226,323.280823   C619.393005,323.238922 619.395203,323.241364 617.310791,325.818054   C616.809937,325.670410 616.719055,325.617371 616.628174,325.564331   C616.759521,325.712036 616.890869,325.859741 617.022217,326.007446   C617.868469,327.038605 618.714722,328.069763 619.743713,329.323578   C619.154297,330.025970 618.466492,330.845673 617.541077,331.948517   C621.582153,331.656769 621.216370,333.741547 620.064758,336.562256   C619.971558,337.721283 619.916931,338.523071 619.812744,339.726288   C619.763245,340.127716 619.588989,340.110809 619.161499,339.946106   C617.516174,338.833099 616.298279,337.884796 615.080444,336.936462   C615.081055,337.558594 615.081665,338.180725 615.082336,338.802826   C612.363098,339.464142 609.643921,340.125458 606.944946,340.419617   C605.993286,338.072571 605.021484,336.092682 604.049683,334.112793  z\",id:\"svg_1397\"})),_path1396||(_path1396=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M608.033081,305.990906   C611.520691,306.894257 608.931458,308.398010 607.852356,309.721680   C606.206604,310.494232 605.107971,311.243683 604.009338,311.993164   C604.009338,311.993164 604.000000,311.999725 603.631470,312.015076   C602.513794,312.512543 601.760986,312.989136 601.016296,313.477844   C598.712280,314.989746 596.411316,316.506287 593.832214,317.996094   C593.370483,317.955994 593.185669,317.940857 592.885254,317.675446   C592.510681,316.935486 592.251709,316.445770 591.997070,315.608429   C592.382324,310.166931 596.035278,317.913330 596.707458,313.255829   C594.910095,308.640076 591.082214,311.820404 587.729004,312.009949   C587.504578,312.013519 587.055725,312.004486 587.104736,311.656677   C587.699280,310.745880 588.300842,310.226715 588.780945,309.612610   C591.533325,306.091797 594.256897,302.548462 597.243896,299.008270   C597.666687,299.002106 597.835754,299.000458 598.002441,298.999390   C598.000000,299.000000 598.000000,298.995697 597.998352,299.338196   C598.336792,300.465240 598.676880,301.249817 598.962891,302.364136   C598.261292,303.728333 597.613831,304.762726 596.723633,306.184998   C599.453613,306.484100 601.710571,306.731354 604.322754,306.968597   C605.796326,306.635986 606.914673,306.313446 608.033081,305.990906  z\",id:\"svg_1398\"})),_path1397||(_path1397=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M603.967529,306.978638   C601.710571,306.731354 599.453613,306.484100 596.723633,306.184998   C597.613831,304.762726 598.261292,303.728333 598.982910,302.062805   C598.704712,300.619720 598.352356,299.807709 598.000000,298.995697   C598.000000,298.995697 598.000000,299.000000 597.987183,298.653839   C598.667419,297.225403 599.360535,296.143097 600.053589,295.060822   C600.053589,295.060822 600.513245,295.012482 600.873413,295.236389   C601.528381,295.679871 601.823120,295.899445 602.117859,296.119049   C603.049927,297.857941 603.982056,299.596802 604.727356,301.783844   C604.273010,302.431244 604.089600,302.690063 603.661743,303.049713   C603.225464,304.078796 603.117615,305.066742 603.116333,306.258667   C603.413269,306.718262 603.661438,306.890228 603.967529,306.978638  z\",id:\"svg_1399\"})),_path1398||(_path1398=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M592.005615,293.949158   C591.769958,291.819611 595.060547,289.289520 591.130615,287.266479   C593.250427,285.757416 595.955627,287.246246 596.771484,290.718567   C596.545593,292.353546 596.761230,293.670166 597.144470,296.010956   C595.245483,295.249054 593.625549,294.599091 592.005615,293.949158  z\",id:\"svg_1400\"})),_path1399||(_path1399=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M591.884521,294.181152   C593.625549,294.599091 595.245483,295.249054 597.144470,296.010956   C596.761230,293.670166 596.545593,292.353546 596.629883,290.989563   C597.874878,292.117035 598.820007,293.291870 599.909424,294.763794   C599.360535,296.143097 598.667419,297.225403 597.989624,298.653229   C597.835754,299.000458 597.666687,299.002106 596.872314,298.997528   C594.495972,298.325745 592.744812,297.660187 590.978149,296.660278   C590.944397,295.879578 590.926270,295.433258 590.908203,294.987000   C591.193237,294.795715 591.478333,294.604431 591.884521,294.181152  z\",id:\"svg_1401\"})),_path1400||(_path1400=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M603.990234,303.008545   C604.089600,302.690063 604.273010,302.431244 604.756348,302.125793   C606.039307,301.796021 607.106506,301.572449 608.562744,301.267365   C608.373352,302.684509 608.200562,303.976929 608.030457,305.630127   C606.914673,306.313446 605.796326,306.635986 604.322754,306.968597   C603.661438,306.890228 603.413269,306.718262 603.151489,305.935425   C603.383423,304.608307 603.686829,303.808441 603.990234,303.008545  z\",id:\"svg_1402\"})),_path1401||(_path1401=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M604.398193,312.012695   C605.107971,311.243683 606.206604,310.494232 607.566467,309.885803   C607.853088,310.456055 607.878540,310.885284 607.893433,311.636322   C606.850891,311.982819 605.818970,312.007538 604.398193,312.012695  z\",id:\"svg_1403\"})),_path1402||(_path1402=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M615.387939,320.992615   C614.966797,320.224670 614.878052,319.380798 614.904053,318.254395   C617.227295,318.483093 617.872314,319.366730 615.387939,320.992615  z\",id:\"svg_1404\"})),_path1403||(_path1403=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M602.350891,295.942932   C601.823120,295.899445 601.528381,295.679871 601.103516,295.215515   C601.500671,294.797394 602.027893,294.624054 602.555115,294.450714   C602.564758,294.889404 602.574341,295.328125 602.350891,295.942932  z\",id:\"svg_1405\"})),_path1404||(_path1404=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M623.971680,335.017456   C623.824585,334.876862 623.725281,334.691620 623.625977,334.506378   C623.734802,334.539703 623.843628,334.573029 624.029663,334.741058   C624.106873,334.875732 624.019348,334.972839 623.971680,335.017456  z\",id:\"svg_1406\"})),_path1405||(_path1405=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M619.178955,341.996521   C622.832214,341.541779 621.320312,344.427582 621.654907,345.989044   C621.950134,347.367096 621.835632,348.832947 621.902100,350.260010   C622.336670,350.406097 622.771240,350.552185 623.205811,350.698273   C621.452026,352.559998 619.698242,354.421692 618.805176,355.369751   C619.768250,357.559937 620.388550,358.970673 621.023315,360.753265   C618.481689,366.546295 614.470520,369.412628 609.271790,368.552429   C610.809937,371.247864 612.001282,373.335571 613.863403,376.598755   C611.393555,375.585938 609.565063,374.836151 607.368530,374.044556   C607.000427,374.002777 606.963806,373.972443 606.975220,373.631958   C606.663940,372.504242 606.341370,371.717072 606.001038,370.727020   C605.983337,370.524170 605.955933,370.117889 606.225464,369.917999   C606.007812,368.471069 605.520508,367.224060 605.027222,365.758728   C605.021179,365.540436 605.007324,365.103882 605.346191,365.071381   C606.109924,364.253693 606.534668,363.468506 606.991943,362.420868   C607.337341,361.762329 607.650269,361.366241 608.139648,360.895172   C608.384521,360.713684 608.532166,360.539581 608.508362,360.511688   C608.352417,360.328796 608.159485,360.177521 607.976685,359.763824   C607.973572,359.343628 607.972351,359.175537 607.976807,358.641235   C608.210022,357.274200 608.437500,356.273407 608.719788,355.031555   C610.289612,356.004120 611.415405,356.701569 612.541199,357.398987   C612.771423,357.137054 613.001709,356.875153 613.231995,356.613220   C611.608765,354.609283 609.985474,352.605347 607.955627,350.099426   C609.952637,348.400940 611.997070,346.662048 614.317627,344.799011   C614.897461,343.564087 615.201355,342.453339 615.569336,341.108215   C616.478149,341.331848 617.828552,341.664185 619.178955,341.996521  M612.249695,364.812897   C612.371887,364.981018 612.494080,365.149109 612.616211,365.317230   C612.590759,365.082458 612.565308,364.847687 612.249695,364.812897  z\",id:\"svg_1407\"})),_path1406||(_path1406=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M603.318970,378.060730   C602.980347,377.271942 603.023254,376.438690 603.312378,375.311554   C603.558655,375.017639 603.975586,375.008545 604.296143,374.983704   C605.399109,374.630035 606.181458,374.301239 606.963806,373.972443   C606.963806,373.972443 607.000427,374.002777 607.018433,374.019348   C605.924561,375.362732 604.812561,376.689514 603.318970,378.060730  z\",id:\"svg_1408\"})),_path1407||(_path1407=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M618.877197,368.236145   C619.917786,368.380310 620.846619,368.779541 621.775513,369.178802   C621.383606,369.755859 620.991760,370.332886 620.244263,370.969055   C619.514343,370.182526 619.139954,369.336853 618.877197,368.236145  z\",id:\"svg_1409\"})),_path1408||(_path1408=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M615.199585,372.518616   C615.244141,371.791168 615.552429,371.085052 615.860718,370.378967   C616.220276,371.165131 616.579834,371.951263 616.939331,372.737427   C616.447327,372.671600 615.955322,372.605774 615.199585,372.518616  z\",id:\"svg_1410\"})),_path1409||(_path1409=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M607.984619,389.015503   C607.111145,388.849609 606.250977,388.670227 605.390808,388.490845   C605.522949,388.122314 605.655151,387.753815 605.787354,387.385284   C606.492859,387.692688 607.198364,388.000092 607.963867,388.640991   C608.023804,388.974518 607.997986,389.002014 607.984619,389.015503  z\",id:\"svg_1411\"})),_path1410||(_path1410=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M619.174194,341.668274   C617.828552,341.664185 616.478149,341.331848 615.569336,341.108215   C615.201355,342.453339 614.897461,343.564087 614.242554,344.473877   C612.092285,344.355164 610.293030,344.437408 608.493835,344.519653   C608.284546,345.101013 608.075256,345.682373 607.865967,346.263702   C607.134399,345.202667 606.402893,344.141632 605.666870,342.807617   C606.083191,341.951996 606.503967,341.369385 606.924744,340.786743   C609.643921,340.125458 612.363098,339.464142 615.082336,338.802826   C615.081665,338.180725 615.081055,337.558594 615.080444,336.936462   C616.298279,337.884796 617.516174,338.833099 619.078247,339.918915   C619.338196,340.484283 619.253845,340.912170 619.174194,341.668274  z\",id:\"svg_1412\"})),_path1411||(_path1411=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M646.003174,398.003540   C646.554443,397.393127 647.102539,396.779205 647.650635,396.165283   C647.949036,396.455902 648.247498,396.746552 648.545898,397.037231   C647.926453,397.359009 647.307007,397.680786 646.340332,397.997742   C645.993103,397.992920 646.000000,398.000000 646.003174,398.003540  z\",id:\"svg_1413\"})),_path1412||(_path1412=/*#__PURE__*/React.createElement(\"path\",{fill:\"#845138\",opacity:1,stroke:\"none\",d:\" M657.464233,398.447937   C657.521362,398.411652 657.407043,398.484192 657.464233,398.447937  z\",id:\"svg_1414\"})),_path1413||(_path1413=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M553.968262,436.970612   C556.562866,436.970612 559.157471,436.970612 562.592896,436.970612   C562.056030,437.986420 561.071960,439.415741 560.526428,440.996399   C559.921997,442.747345 559.718506,444.636627 559.340393,446.465668   C560.792603,446.433228 562.244751,446.389984 563.697144,446.371613   C564.946594,446.355804 566.196533,446.368317 567.492981,446.368317   C566.960388,445.059174 566.482910,443.885651 566.002747,442.356049   C566.000000,442.000000 566.012207,441.987793 566.012207,441.987793   C569.803833,441.789551 571.293030,444.639587 572.698425,447.655548   C572.105347,448.372437 571.782837,448.676117 571.460327,448.979797   C571.668091,449.162079 571.875916,449.344360 572.083679,449.526642   C572.390076,449.018982 572.696472,448.511322 573.002869,448.003662   C574.809021,449.313629 576.615234,450.623566 578.710693,451.966766   C579.000000,452.000031 579.019531,452.019989 579.019531,452.019989   C577.271912,454.013153 575.524231,456.006287 573.387329,457.998932   C572.998108,457.998413 572.965759,457.966858 572.965759,457.966858   C573.844299,455.805634 574.722900,453.644409 575.601440,451.483154   C575.193726,451.303894 574.786072,451.124603 574.378357,450.945312   C573.482422,452.135071 572.586548,453.324829 571.747314,454.439331   C570.320557,452.872803 569.032410,451.458496 567.330688,449.739288   C566.615295,449.113190 566.313477,448.791992 566.011597,448.470795   C565.831543,448.680115 565.651550,448.889435 565.471558,449.098785   C565.980347,449.399811 566.489075,449.700836 566.997864,450.001862   C566.997498,451.071259 566.997131,452.140686 566.605835,453.618591   C565.169189,453.993500 564.123535,453.959930 563.059326,453.562012   C562.025085,452.467529 561.009216,451.737396 559.951660,450.709900   C559.493408,450.084839 559.076843,449.757202 558.660339,449.429565   C558.574158,449.699127 558.364075,450.171539 558.421326,450.206512   C558.922913,450.513062 559.472168,450.741455 560.012634,451.361359   C560.989807,452.509460 561.961731,453.289215 562.968567,454.427979   C563.651672,455.470428 564.299744,456.153839 564.947815,456.837280   C565.627869,455.891937 566.307861,454.946564 566.987915,454.001221   C569.753845,454.224487 570.044861,455.675659 568.605103,457.640869   C567.473389,459.185577 566.065430,460.527802 564.480042,462.294403   C564.877258,463.588165 569.670349,465.330658 564.649231,467.542999   C563.142944,465.897705 561.684875,464.305054 560.205017,462.688538   C561.034546,461.343109 561.871948,459.985016 562.709290,458.626953   C560.682556,457.974731 558.588196,457.477417 556.646301,456.630737   C554.277222,455.597778 552.036133,454.271179 549.379517,452.713348   C548.943848,451.102081 548.571350,449.768402 548.883118,448.620544   C549.151672,447.631744 550.200134,446.854767 551.269836,445.993164   C552.898193,446.484833 554.160583,446.967529 556.018250,447.677795   C554.558594,443.951141 557.253174,440.036316 553.978638,436.984528   C553.987000,436.989258 553.968262,436.970612 553.968262,436.970612  z\",id:\"svg_1415\"})),_path1414||(_path1414=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M628.101929,474.645172   C626.862915,475.326965 625.783630,475.682800 624.359375,475.667847   C628.253479,469.182739 622.444214,467.262482 619.358521,463.770660   C616.859741,466.704315 614.561584,469.402344 612.369995,471.975311   C613.325073,473.215729 614.066589,474.178802 615.084900,475.501343   C613.420227,476.120636 612.216309,476.568512 611.006226,477.008392   C611.000000,477.000427 610.984558,476.987488 610.992798,476.623291   C609.998230,475.170258 608.995422,474.081451 607.996948,472.997070   C608.001221,473.001495 608.007385,473.010284 608.002747,472.653534   C607.332214,471.534180 606.666260,470.771576 606.000305,470.008972   C604.027954,469.425659 602.055603,468.842346 599.665344,468.135437   C599.747009,468.032532 600.472900,467.117737 601.382385,465.971619   C601.355469,465.916321 601.266968,465.348572 600.942505,465.128021   C597.531311,462.809387 600.204956,460.701965 601.453430,458.930267   C601.747253,458.513306 604.229309,459.630920 605.699036,460.061981   C605.839905,460.103302 605.923950,460.308960 606.061584,460.394592   C607.789795,461.469818 610.359924,463.835663 611.096741,463.360840   C613.240662,461.979126 614.482422,459.613312 612.371521,456.682953   C611.966125,456.120117 613.890991,453.878601 614.740845,452.411499   C616.127930,453.366974 617.925720,454.056915 618.770325,455.363129   C619.428833,456.381592 618.902100,458.166412 618.902100,459.017609   C620.788818,459.238037 622.625793,459.452698 624.752563,459.856445   C625.980408,462.288483 626.918579,464.531433 627.982544,467.044769   C628.159485,469.649872 628.210571,471.984528 628.101929,474.645172  z\",id:\"svg_1416\"})),_path1415||(_path1415=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M607.992615,472.992645   C608.995422,474.081451 609.998230,475.170258 610.833740,476.678650   C610.781799,477.070923 610.897095,477.043671 611.012451,477.016357   C612.216309,476.568512 613.420227,476.120636 615.084900,475.501343   C614.066589,474.178802 613.325073,473.215729 612.369995,471.975311   C614.561584,469.402344 616.859741,466.704315 619.358521,463.770660   C622.444214,467.262482 628.253479,469.182739 624.010864,475.683960   C624.625916,477.783508 625.244446,479.496185 626.038940,481.695892   C625.816833,481.831360 624.906372,482.386749 623.408081,482.796600   C622.220581,483.778503 621.620972,484.905914 621.021362,486.033325   C621.021362,486.033356 621.010986,485.993469 620.655701,485.986084   C618.673340,485.143341 617.046265,484.307953 615.536255,483.532684   C613.715393,485.297485 611.964050,486.994904 610.240784,488.665131   C608.214966,487.827087 606.312012,487.039825 604.409058,486.252563   C603.896484,485.731842 603.383911,485.211151 602.871338,484.690430   C604.301758,484.012543 605.732178,483.334656 607.162476,482.656738   C606.791321,482.052338 606.420227,481.447998 606.049072,480.843658   C605.787537,480.102905 605.526062,479.362122 605.147766,478.003510   C605.022156,476.925262 605.013367,476.464874 605.376709,475.995972   C606.496765,474.989197 607.244690,473.990906 607.992615,472.992645  z\",id:\"svg_1417\"})),_path1416||(_path1416=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M605.709900,480.941162   C606.420227,481.447998 606.791321,482.052338 607.162476,482.656738   C605.732178,483.334656 604.301758,484.012543 602.871338,484.690430   C603.383911,485.211151 603.896484,485.731842 604.409058,486.252563   C606.312012,487.039825 608.214966,487.827087 610.240784,488.665131   C611.964050,486.994904 613.715393,485.297485 615.536255,483.532684   C617.046265,484.307953 618.673340,485.143341 620.670654,486.001038   C618.577942,489.010284 616.069885,491.961853 613.679382,495.005768   C612.961365,495.920135 612.570862,497.091766 612.018738,498.570618   C612.007080,498.995636 611.942688,499.076080 611.942688,499.076080   C611.243958,499.697174 610.578064,500.361267 609.837463,500.927582   C609.057983,501.523529 608.207092,502.025940 607.108521,502.128479   C606.551392,501.785370 606.273254,501.883026 605.995056,501.980713   C606.000671,502.743652 606.006226,503.506592 606.013184,504.651611   C605.544006,505.007568 605.073608,504.981445 604.247864,504.956207   C602.697388,505.449005 601.502258,505.940948 600.307068,506.432892   C599.910461,506.197845 599.513794,505.962769 599.117188,505.727722   C600.007507,504.261536 600.897827,502.795319 601.642151,501.569489   C599.614075,500.198029 597.504517,498.771484 595.394958,497.344940   C595.643494,496.912811 595.891968,496.480652 596.140442,496.048492   C597.213013,496.299316 598.285583,496.550110 599.301025,496.787567   C601.437073,491.331726 598.271240,484.213379 605.709900,480.941162  M602.623718,487.528320   C602.623718,487.528320 602.488831,487.617371 602.623718,487.528320  z\",id:\"svg_1418\"})),_path1417||(_path1417=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M540.986267,500.934387   C540.404175,502.670227 539.822144,504.406067 538.810303,507.423401   C542.183105,505.421051 544.641052,503.961823 547.681702,502.156708   C547.052979,503.940521 546.580017,505.282532 546.325073,506.005920   C547.718323,508.351898 548.873291,510.296631 549.669739,512.629822   C548.174316,512.514954 547.037476,512.011658 545.891785,511.504517   C544.552856,512.952698 543.194580,514.421753 541.526489,515.935547   C540.797424,516.018188 540.378296,516.056152 539.636230,516.111694   C538.340454,517.175903 537.367493,518.222595 536.394531,519.269348   C536.263550,518.873108 536.132629,518.476868 536.001709,518.080627   C533.668823,518.721497 531.335999,519.362305 529.001587,520.001587   C529.000000,520.000000 528.996704,519.996582 529.011475,519.622192   C529.017517,518.498474 529.008789,517.749268 529.334167,516.998291   C530.136353,516.284973 530.604431,515.573486 531.053833,514.644531   C531.035217,514.427002 531.000000,513.991882 531.000732,513.635864   C530.329956,512.529175 529.658508,511.778473 528.991882,511.015717   C528.996704,511.003693 528.972595,511.013153 528.932800,510.663147   C527.922791,509.866028 526.952576,509.418915 525.867859,508.757019   C525.548889,508.277527 525.290039,508.086426 524.986694,507.585266   C524.977173,506.187073 524.957947,505.172516 525.171326,504.099762   C525.403992,504.041565 525.879089,503.975647 526.245361,503.980591   C527.402039,503.332825 528.192444,502.680115 529.230957,501.840820   C533.353516,497.541687 534.226929,503.373627 536.763062,503.892548   C538.168030,502.908417 539.577148,501.921417 540.986267,500.934387  z\",id:\"svg_1419\"})),_path1418||(_path1418=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M550.903870,445.984131   C550.200134,446.854767 549.151672,447.631744 548.883118,448.620544   C548.571350,449.768402 548.943848,451.102081 549.025024,452.683105   C548.753174,453.832489 548.475647,454.653931 547.784973,455.616638   C546.216248,454.799805 545.060791,453.841736 543.950806,452.489807   C544.029907,449.546875 543.878784,446.976837 544.165100,444.456451   C544.341064,442.907684 545.186096,441.434967 545.908936,440.225372   C546.995178,440.386658 548.513550,440.522552 548.714417,440.071686   C550.291992,436.529846 551.484497,432.816925 553.052307,429.270172   C555.280579,424.229309 558.368469,419.998871 563.825806,417.817139   C565.168396,417.280396 565.940674,415.317078 567.254150,413.949219   C568.033203,414.073425 568.533142,414.258057 569.083984,414.729492   C569.385376,415.291779 569.635864,415.567169 569.922119,415.890747   C569.957947,415.938934 570.031494,416.033905 570.031494,416.033905   C569.528931,419.306824 568.379028,422.059631 564.317566,422.888733   C563.343201,423.137817 562.402283,423.004028 562.109314,423.377899   C561.384033,424.303680 561.229553,425.970490 560.360229,426.439178   C556.388916,428.580292 554.876892,432.158752 553.967041,436.589539   C553.968262,436.970612 553.987000,436.989258 553.607117,437.034180   C552.452759,440.047424 551.678345,443.015808 550.903870,445.984131  z\",id:\"svg_1420\"})),_path1419||(_path1419=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M582.000000,479.000000   C581.228577,477.346863 580.457214,475.693726 579.496704,473.635468   C580.302124,473.451752 581.278381,473.229065 582.677002,473.154846   C583.192810,473.352753 583.286133,473.402252 583.379517,473.451782   C583.257080,473.298187 583.134644,473.144623 583.012207,472.991058   C581.362732,471.038055 580.062439,468.454376 577.972290,467.297424   C575.554565,465.959167 575.339661,465.474030 577.573425,464.005829   C578.897583,463.135437 580.121643,462.112640 581.672852,460.946228   C584.418884,464.059387 587.167786,467.175751 589.959167,470.644989   C590.001709,470.997864 589.988281,471.017090 589.988281,471.017090   C588.894531,471.080139 587.800842,471.143158 585.910156,471.252136   C588.115723,473.615417 589.825195,475.447052 591.583496,477.331024   C589.013550,480.358063 586.333923,483.514313 583.310547,486.413696   C583.016052,484.776764 583.065430,483.396698 583.297424,482.038757   C583.480103,482.060852 583.851135,482.061218 584.099609,481.982361   C584.243103,481.508545 584.138062,481.113586 583.975159,480.424042   C583.278137,479.752960 582.639099,479.376465 582.000000,479.000000  z\",id:\"svg_1421\"})),_path1420||(_path1420=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E8A164\",opacity:1,stroke:\"none\",d:\" M545.960083,480.631287   C546.300415,481.809601 546.640747,482.987946 546.923523,484.719940   C546.557556,485.159790 546.249146,485.045959 545.770752,484.622131   C544.599792,483.871918 543.637695,483.252258 542.590576,483.025330   C539.537048,482.363586 536.449646,481.858734 532.237488,481.082703   C531.203064,480.999329 529.017029,480.823151 526.647827,480.632202   C526.120361,481.379761 525.351990,482.468903 524.583557,483.558044   C523.843018,483.684448 523.102478,483.810883 522.361938,483.937317   C527.597595,477.887909 522.114685,475.518616 519.144043,471.193176   C522.247009,472.513947 524.121582,473.311859 525.981934,474.303406   C525.967712,474.497040 525.959351,474.888000 526.076416,475.157654   C526.804504,475.286957 527.415527,475.146545 528.011353,475.004211   C527.996216,475.002289 528.014526,475.027191 528.333984,474.991608   C529.740295,474.302490 530.827087,473.648956 532.191711,472.997986   C532.654724,473.005432 532.839905,473.010376 532.996460,473.329407   C533.126343,476.039062 534.188171,476.816803 537.377441,476.894592   C537.373779,476.913208 537.341248,476.876373 537.431213,477.258972   C539.502502,480.985626 542.821533,480.553619 545.960083,480.631287  M530.263794,477.633820   C530.511414,477.958527 530.759033,478.283234 531.006531,478.607910   C531.215637,478.408173 531.424744,478.208435 531.633911,478.008728   C531.315491,477.756256 530.997009,477.503754 530.263794,477.633820  z\",id:\"svg_1422\"})),_path1421||(_path1421=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M525.879089,503.975647   C525.879089,503.975647 525.403992,504.041565 524.925476,504.102386   C524.446960,504.163208 523.954102,504.150879 523.965820,503.768677   C524.651733,501.627350 525.325928,499.868195 526.398315,498.080353   C528.959839,497.905731 531.169006,497.966431 533.261169,497.501038   C533.987549,497.339447 534.423889,495.874390 534.996338,495.002319   C535.000000,495.000000 535.006836,494.993805 535.335083,495.000275   C536.100830,495.016205 536.538452,495.025665 536.984741,495.019836   C536.993530,495.004486 536.965393,495.006348 537.170959,495.275879   C538.254395,495.731323 539.132202,495.917236 539.988586,496.305573   C539.967102,496.507965 539.949341,496.914612 540.023560,497.130066   C540.409058,497.217072 540.720337,497.088684 541.034058,496.754303   C541.036621,496.548309 541.007263,496.137329 541.348633,496.060364   C542.795166,495.657318 543.900269,495.331299 545.002686,495.002869   C545.000000,495.000488 544.996765,494.997192 544.996826,494.997192   C543.705322,496.748108 542.413818,498.499023 541.054321,500.592163   C539.577148,501.921417 538.168030,502.908417 536.763062,503.892548   C534.226929,503.373627 533.353516,497.541687 528.873962,501.835327   C527.472351,502.669464 526.675720,503.322571 525.879089,503.975647  z\",id:\"svg_1423\"})),_path1422||(_path1422=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M543.905334,452.883667   C545.060791,453.841736 546.216248,454.799805 547.652710,455.918579   C548.115112,457.115448 548.296570,458.151642 548.359131,459.692505   C548.467834,461.506714 548.695312,462.816254 548.922791,464.125763   C548.960632,464.550446 548.998535,464.975159 549.053589,466.152527   C549.050049,469.269684 549.029297,471.634155 548.655884,474.058960   C547.918518,475.122711 547.533630,476.126129 547.148804,477.129578   C547.148804,477.129578 547.110840,477.160492 546.845459,476.980011   C546.370117,476.168518 546.160156,475.537537 545.896240,474.643433   C545.646606,473.927826 545.451050,473.475311 545.552063,472.993683   C546.429260,472.567413 547.009827,472.170288 548.257874,471.316528   C546.705322,471.143982 545.975220,471.062836 545.142212,470.574554   C544.956543,469.047241 545.295349,467.600677 544.722107,466.860260   C541.211609,462.325775 544.112427,457.530304 543.905334,452.883667  z\",id:\"svg_1424\"})),_path1423||(_path1423=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M545.940796,484.932129   C546.249146,485.045959 546.557556,485.159790 546.972656,485.088837   C549.139648,485.947113 551.199829,486.990173 553.630005,488.016602   C554.000000,488.000000 553.995117,487.994476 553.995117,487.994476   C553.836426,489.199982 553.677734,490.405518 553.472839,491.961945   C550.985474,491.014038 548.543701,485.684692 546.610840,492.414490   C545.833008,492.888428 545.419861,492.949066 544.969849,492.668396   C542.781006,488.494995 540.334839,491.078491 537.973022,491.633545   C540.634705,489.150269 543.287781,487.041199 545.940796,484.932129  z\",id:\"svg_1425\"})),_path1424||(_path1424=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M556.955139,527.039673   C556.527344,527.006470 556.099548,526.973328 555.334717,526.523438   C554.874207,524.889160 554.750671,523.671570 554.609253,522.277283   C553.156189,522.570618 552.073608,522.789185 550.992981,522.674194   C550.999756,521.896851 551.004639,521.452881 551.408691,520.999023   C555.685669,521.067627 555.243530,518.942444 554.066772,515.018982   C552.626343,517.371948 551.808289,518.708252 550.617188,520.033447   C549.497314,520.022766 548.750610,520.023132 548.028503,519.690552   C548.698669,518.248474 549.344238,517.139282 550.264648,515.833496   C550.675781,514.760315 550.812134,513.883850 550.948486,513.007324   C551.511230,511.289886 552.073975,509.572418 552.822327,507.288574   C553.290161,508.493256 553.640564,509.395538 554.020874,510.971008   C554.702942,512.432617 555.355103,513.221130 556.052917,514.413879   C556.384033,518.891968 556.669617,522.965820 556.955139,527.039673  z\",id:\"svg_1426\"})),_path1425||(_path1425=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M583.114746,482.016663   C583.065430,483.396698 583.016052,484.776764 582.990723,486.570099   C582.945618,488.216248 582.876587,489.449066 582.723877,492.176422   C584.410156,490.474487 585.210999,489.666260 586.375061,488.501282   C587.466003,488.194305 588.193726,488.243988 588.921448,488.293701   C590.129211,491.877167 586.728943,492.240845 584.960876,493.304382   C584.159546,493.786407 581.763794,492.808624 580.944153,491.800049   C579.601257,490.147583 578.954468,487.929443 578.324158,485.412109   C579.105286,483.929962 579.576294,482.985626 580.047302,482.041260   C580.047302,482.041260 579.995911,482.009338 580.352478,482.052368   C581.154480,482.079102 581.599976,482.062775 582.312866,482.043274   C582.758484,482.032288 582.936584,482.024475 583.114746,482.016663  z\",id:\"svg_1427\"})),_path1426||(_path1426=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M580.015015,510.830078   C579.179626,510.477173 578.344299,510.124237 576.944824,509.931030   C574.898193,511.085236 573.415588,512.079712 571.932861,513.074219   C572.502563,511.975555 573.072327,510.876923 573.896118,509.288239   C572.520142,508.621521 571.168884,507.966827 569.465942,506.906219   C569.114197,506.500305 569.027527,506.026794 569.027527,506.026794   C569.027527,506.026794 569.005249,506.000000 569.265747,506.022583   C569.526245,506.045197 570.017700,506.026978 570.261108,506.024414   C570.504517,506.021851 570.991211,506.010986 571.045593,506.152985   C571.190979,506.343018 571.281982,506.391083 571.372986,506.439117   C571.251892,506.289917 571.130859,506.140686 571.013916,505.750183   C571.018005,505.508942 571.036316,505.026733 571.361450,505.010895   C572.120300,504.987793 572.554016,504.980499 572.987793,504.973236   C574.072327,505.891235 575.156860,506.809204 576.241394,507.727173   C576.568115,507.010834 576.894836,506.294464 577.445557,505.293152   C578.110229,505.014191 578.550842,505.020172 578.991516,505.026123   C578.991516,505.026123 579.002441,504.998108 579.040527,505.338867   C580.049561,506.467804 581.020569,507.256012 581.991516,508.044220   C582.403809,508.359558 582.816040,508.674927 583.593384,509.338562   C584.636475,510.125946 585.314575,510.565063 585.992676,511.004211   C584.633423,511.319946 583.274231,511.635651 581.428101,511.706116   C580.632446,511.250641 580.323730,511.040375 580.015015,510.830078  z\",id:\"svg_1428\"})),_path1427||(_path1427=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M571.575378,513.006470   C573.415588,512.079712 574.898193,511.085236 576.695984,510.038269   C577.587952,511.476196 578.164734,512.966492 578.982056,514.741821   C578.391296,515.663208 577.560059,516.299561 576.319458,516.607727   C574.904541,516.451904 573.899109,516.624268 572.893616,516.796631   C572.190063,516.816589 571.486572,516.836487 570.345947,516.518982   C568.940063,515.788513 567.971252,515.395447 567.001221,515.001221   C567.000000,515.000000 566.997559,514.997559 566.997559,514.997559   C566.840271,511.105194 569.045532,512.055786 571.575378,513.006470  z\",id:\"svg_1429\"})),_path1428||(_path1428=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M549.008545,473.998657   C549.029297,471.634155 549.050049,469.269684 549.129639,466.463135   C550.464111,465.805939 551.739746,465.590790 553.377930,465.314514   C550.637268,469.797821 552.779785,472.791107 555.952820,476.098511   C554.532837,475.582611 553.112793,475.066711 552.580566,474.873352   C551.307983,475.769073 550.478333,476.352997 549.517395,476.446014   C549.260254,475.302948 549.134399,474.650787 549.008545,473.998657  z\",id:\"svg_1430\"})),_path1429||(_path1429=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M545.950195,474.906555   C546.160156,475.537537 546.370117,476.168518 546.854492,477.002747   C546.795227,478.156708 546.461548,479.107422 546.043945,480.344727   C542.821533,480.553619 539.502502,480.985626 537.851807,477.168457   C538.468445,476.687653 538.754456,476.679901 539.408325,476.782043   C541.834229,476.230133 543.892151,475.568329 545.950195,474.906555  z\",id:\"svg_1431\"})),_path1430||(_path1430=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M556.007324,514.009644   C555.355103,513.221130 554.702942,512.432617 554.025391,511.321472   C557.327454,511.749420 560.654846,512.500061 563.994995,513.621338   C564.007690,513.991882 563.944580,514.056396 563.583374,514.051453   C560.818054,513.872498 558.399841,516.458618 556.007324,514.009644  z\",id:\"svg_1432\"})),_path1431||(_path1431=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M550.721558,513.008667   C550.812134,513.883850 550.675781,514.760315 550.024414,515.548462   C546.951721,515.603699 544.393982,515.747253 541.836304,515.890808   C543.194580,514.421753 544.552856,512.952698 545.891785,511.504517   C547.037476,512.011658 548.174316,512.514954 549.676086,513.017212   C550.040955,513.016113 550.494690,513.009949 550.721558,513.008667  z\",id:\"svg_1433\"})),_path1432||(_path1432=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M578.990234,451.990173   C580.080139,450.250580 580.983948,448.321503 582.408203,446.922119   C582.795837,446.541229 584.751221,447.755798 585.762329,448.618683   C585.537659,448.999268 585.054016,449.000427 584.706482,449.026276   C583.576477,450.035980 582.794006,451.019836 582.006470,452.002197   C582.001465,452.000732 582.003967,452.011871 582.003967,452.011871   C581.257568,452.012238 580.511169,452.012634 579.392151,452.016479   C579.019531,452.019989 579.000000,452.000031 578.990234,451.990173  z\",id:\"svg_1434\"})),_path1433||(_path1433=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M585.054016,449.000427   C585.054016,449.000427 585.537659,448.999268 585.779663,448.994110   C588.134399,453.487701 584.679016,454.562775 581.368774,455.977356   C580.998840,456.000183 580.970520,455.976746 580.970520,455.976746   C581.299561,454.884644 581.628662,453.792542 581.980835,452.356140   C582.003967,452.011871 582.001465,452.000732 582.377441,451.996521   C583.520325,450.995056 584.287170,449.997742 585.054016,449.000427  z\",id:\"svg_1435\"})),_path1434||(_path1434=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M559.991577,474.924133   C558.882874,473.658691 557.915222,472.633820 556.947571,471.608948   C557.174194,471.172424 557.400818,470.735901 557.627441,470.299377   C559.690308,471.426605 561.753113,472.553833 565.183960,474.428558   C562.597351,474.805511 561.364990,474.985107 559.991577,474.924133  z\",id:\"svg_1436\"})),_path1435||(_path1435=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M581.537842,437.027374   C579.087524,437.045563 575.688171,437.879486 576.369263,432.144379   C578.637512,434.133606 580.094910,435.411774 581.537842,437.027374  z\",id:\"svg_1437\"})),_path1436||(_path1436=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M607.996948,472.997070   C607.244690,473.990906 606.496765,474.989197 605.374390,475.993744   C605.000000,476.000000 604.994934,475.995117 604.979797,475.653503   C603.979553,474.544281 602.994507,473.776672 602.005920,473.005615   C602.002441,473.002197 602.000000,473.000000 602.000000,473.000000   C602.773682,472.333069 603.547302,471.666138 604.834839,471.256866   C606.234924,472.013123 607.121155,472.511688 608.007385,473.010284   C608.007385,473.010284 608.001221,473.001495 607.996948,472.997070  z\",id:\"svg_1438\"})),_path1437||(_path1437=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M570.017700,506.026978   C570.017700,506.026978 569.526245,506.045197 569.280640,506.035553   C568.897522,503.402557 569.005981,500.947235 572.834656,500.777191   C572.893982,501.968262 572.950256,503.097748 572.997131,504.600220   C572.554016,504.980499 572.120300,504.987793 571.130493,505.106995   C570.286499,505.417725 570.100891,505.687073 570.017700,506.026978  z\",id:\"svg_1439\"})),_path1438||(_path1438=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M605.002319,476.002228   C605.013367,476.464874 605.022156,476.925262 605.022827,477.732544   C599.802856,477.073853 599.571167,476.765808 601.646729,473.066071   C602.000000,473.000000 602.002441,473.002197 602.009949,473.377441   C603.009949,474.500183 604.002441,475.247650 604.994934,475.995117   C604.994934,475.995117 605.000000,476.000000 605.002319,476.002228  z\",id:\"svg_1440\"})),_path1439||(_path1439=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M589.049072,487.968079   C588.193726,488.243988 587.466003,488.194305 586.372803,488.142944   C587.531006,486.400818 589.054626,484.660370 590.578308,482.919891   C590.901062,483.177216 591.223755,483.434540 591.546509,483.691864   C590.756592,485.008728 589.966675,486.325592 589.049072,487.968079  z\",id:\"svg_1441\"})),_path1440||(_path1440=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M566.995117,469.995422   C567.740417,471.729950 568.485718,473.464447 569.198730,475.123779   C565.758972,473.988129 565.382019,473.341949 566.676392,470.040802   C567.000000,470.000000 566.995117,469.995422 566.995117,469.995422  z\",id:\"svg_1442\"})),_path1441||(_path1441=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M610.817505,452.901398   C609.936096,453.160217 609.153442,453.105743 608.370850,453.051270   C608.914734,452.297150 609.458679,451.542999 610.002625,450.788879   C610.307251,451.388611 610.611816,451.988342 610.817505,452.901398  z\",id:\"svg_1443\"})),_path1442||(_path1442=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M591.983276,467.016418   C591.059753,466.438019 590.136230,465.859589 589.212708,465.281189   C589.490784,464.936798 589.768860,464.592407 590.046997,464.248047   C590.694641,464.913666 591.342285,465.579285 591.994751,466.622803   C591.999634,467.000671 591.983276,467.016418 591.983276,467.016418  z\",id:\"svg_1444\"})),_path1443||(_path1443=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M549.232788,464.067871   C548.695312,462.816254 548.467834,461.506714 548.523071,459.973663   C549.051514,461.170074 549.297119,462.590057 549.232788,464.067871  z\",id:\"svg_1445\"})),_path1444||(_path1444=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M578.996460,504.668274   C578.550842,505.020172 578.110229,505.014191 577.339111,505.011871   C577.047119,504.071259 577.085510,503.127014 577.123901,502.182739   C577.749756,502.891968 578.375549,503.601196 578.996460,504.668274  z\",id:\"svg_1446\"})),_path1445||(_path1445=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M592.387817,481.022858   C593.064941,480.351044 593.791931,480.007812 594.518921,479.664551   C594.606812,480.111664 594.694702,480.558746 594.782593,481.005859   C594.000977,481.121063 593.219299,481.236237 592.387817,481.022858  z\",id:\"svg_1447\"})),_path1446||(_path1446=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M592.004028,470.002991   C591.994385,469.256104 591.984741,468.509216 591.979126,467.389374   C591.983276,467.016418 591.999634,467.000671 592.007690,466.992401   C592.889709,467.528992 593.763672,468.073853 594.637634,468.618683   C593.989807,469.080414 593.341919,469.542175 592.347046,470.001953   C592.000000,470.000000 592.004028,470.002991 592.004028,470.002991  z\",id:\"svg_1448\"})),_path1447||(_path1447=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M548.655945,474.058960   C549.134399,474.650787 549.260254,475.302948 549.312988,476.185059   C548.723450,476.605988 548.207031,476.796906 547.419739,477.058716   C547.533630,476.126129 547.918518,475.122711 548.655945,474.058960  z\",id:\"svg_1449\"})),_path1448||(_path1448=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M598.460571,471.521606   C598.422607,472.369141 598.150146,472.979156 597.877625,473.589172   C597.375732,473.082092 596.873901,472.574982 596.372009,472.067871   C596.990051,471.806610 597.608032,471.545319 598.460571,471.521606  z\",id:\"svg_1450\"})),_path1449||(_path1449=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M581.986328,507.666656   C581.020569,507.256012 580.049561,506.467804 579.026367,505.343933   C579.976440,505.768555 580.978821,506.528839 581.986328,507.666656  z\",id:\"svg_1451\"})),_path1450||(_path1450=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M579.834900,498.168762   C580.510864,498.650482 580.877869,499.100159 581.244812,499.549866   C580.484192,499.613556 579.723572,499.677246 578.963013,499.740936   C579.150635,499.206238 579.338257,498.671509 579.834900,498.168762  z\",id:\"svg_1452\"})),_path1451||(_path1451=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M579.701904,482.028717   C579.576294,482.985626 579.105286,483.929962 578.345947,485.036011   C578.490540,484.137177 578.923523,483.076691 579.701904,482.028717  z\",id:\"svg_1453\"})),_path1452||(_path1452=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M564.039429,513.959717   C564.851562,514.204773 565.632080,514.481934 566.705078,514.878296   C566.997559,514.997559 567.000000,515.000000 566.863037,515.300293   C566.075806,515.935425 565.425537,516.270203 564.775269,516.604980   C564.498352,515.755432 564.221497,514.905945 563.944580,514.056396   C563.944580,514.056396 564.007690,513.991882 564.039429,513.959717  z\",id:\"svg_1454\"})),_path1453||(_path1453=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M564.428345,509.023224   C565.105225,508.681885 565.774048,508.649872 566.442871,508.617889   C566.436646,508.899933 566.430359,509.181946 566.424072,509.463989   C565.756104,509.420166 565.088257,509.376373 564.428345,509.023224  z\",id:\"svg_1455\"})),_path1454||(_path1454=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M599.482910,431.628845   C600.059082,431.913391 600.413513,432.417908 600.767944,432.922424   C600.405823,433.117828 600.043762,433.313202 599.681702,433.508606   C599.541504,432.955353 599.401306,432.402069 599.482910,431.628845  z\",id:\"svg_1456\"})),_path1455||(_path1455=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M586.006714,504.992645   C585.380676,504.437775 584.754700,503.882935 584.128662,503.328125   C584.416504,503.031586 584.704285,502.735046 584.992065,502.438477   C585.324036,503.063202 585.656067,503.687927 585.994019,504.656311   C586.000000,505.000000 586.006714,504.992645 586.006714,504.992645  z\",id:\"svg_1457\"})),_path1456||(_path1456=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M565.993896,442.006104   C565.373535,441.463257 564.759277,440.914307 564.145081,440.365387   C564.428162,440.060944 564.711182,439.756470 564.994202,439.451996   C565.330383,440.067169 565.666565,440.682343 566.007507,441.642639   C566.012207,441.987793 566.000000,442.000000 565.993896,442.006104  z\",id:\"svg_1458\"})),_path1457||(_path1457=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M545.006653,493.009705   C545.419861,492.949066 545.833008,492.888428 546.553772,492.769226   C546.466003,493.468414 546.070618,494.226196 545.335999,494.990601   C544.996765,494.997192 545.000000,495.000488 545.007812,494.669556   C545.013672,493.894409 545.011719,493.450165 545.005493,493.002960   C545.001160,493.000000 545.006653,493.009735 545.006653,493.009705  z\",id:\"svg_1459\"})),_path1458||(_path1458=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M585.996277,505.003693   C586.898193,505.252197 587.803833,505.497009 588.709473,505.741852   C588.539062,506.126984 588.368713,506.512115 588.198364,506.897247   C587.501770,506.484955 586.805115,506.072632 586.057617,505.326477   C586.006714,504.992645 586.000000,505.000000 585.996277,505.003693  z\",id:\"svg_1460\"})),_path1459||(_path1459=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M567.002441,470.002441   C567.549561,469.382385 568.094177,468.759827 568.638794,468.137268   C568.938049,468.430939 569.237305,468.724579 569.536621,469.018250   C568.920471,469.341736 568.304321,469.665222 567.341675,469.992065   C566.995117,469.995422 567.000000,470.000000 567.002441,470.002441  z\",id:\"svg_1461\"})),_path1460||(_path1460=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M608.002747,472.653534   C607.121155,472.511688 606.234924,472.013123 605.192749,471.254883   C605.351196,470.894196 605.603638,470.708801 605.897217,470.223999   C606.666260,470.771576 607.332214,471.534180 608.002747,472.653534  z\",id:\"svg_1462\"})),_path1461||(_path1461=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M576.013000,420.986694   C576.880432,421.138672 577.736694,421.302185 578.592957,421.465698   C578.463257,421.833099 578.333618,422.200500 578.203918,422.567932   C577.495300,422.273987 576.786682,421.980072 576.029175,421.353760   C575.980225,421.021423 576.001831,420.998230 576.013000,420.986694  z\",id:\"svg_1463\"})),_path1462||(_path1462=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M557.505615,460.307190   C557.447021,459.543396 557.599182,459.001526 557.751343,458.459656   C558.104736,458.662292 558.458069,458.864960 558.811401,459.067627   C558.446350,459.554810 558.081360,460.041992 557.505615,460.307190  z\",id:\"svg_1464\"})),_path1463||(_path1463=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M608.539001,446.736389   C609.393616,446.892578 610.054565,447.212341 610.715454,447.532135   C610.564148,447.820892 610.412781,448.109680 610.261414,448.398468   C609.622681,447.898956 608.984009,447.399475 608.539001,446.736389  z\",id:\"svg_1465\"})),_path1464||(_path1464=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M582.045410,482.046448   C581.599976,482.062775 581.154480,482.079102 580.375488,482.073853   C580.460266,481.068329 580.878601,480.084412 581.559814,479.306641   C581.896851,480.357330 581.971130,481.201874 582.045410,482.046448  z\",id:\"svg_1466\"})),_path1465||(_path1465=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M594.841919,474.093842   C594.559387,474.618408 594.204407,474.869568 593.849487,475.120728   C593.697021,474.722656 593.544495,474.324615 593.391968,473.926575   C593.851135,473.891205 594.310242,473.855835 594.841919,474.093842  z\",id:\"svg_1467\"})),_path1466||(_path1466=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M573.013855,458.014587   C572.780762,458.545563 572.551880,459.072754 572.251831,459.555786   C572.222046,459.603699 571.758362,459.382172 571.496094,459.285706   C571.793701,458.872284 572.091309,458.458862 572.677368,458.006165   C572.965759,457.966858 572.998108,457.998413 573.013855,458.014587  z\",id:\"svg_1468\"})),_path1467||(_path1467=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M585.945435,510.664612   C585.314575,510.565063 584.636475,510.125946 583.863708,509.370483   C584.478760,509.477783 585.188538,509.901428 585.945435,510.664612  z\",id:\"svg_1469\"})),_path1468||(_path1468=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M581.391785,444.469604   C580.926025,444.412048 580.642090,444.179169 580.358093,443.946320   C580.544617,443.767151 580.731201,443.588013 580.917725,443.408875   C581.136353,443.704010 581.354919,443.999115 581.391785,444.469604  z\",id:\"svg_1470\"})),_path1469||(_path1469=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M574.369995,499.941742   C574.727600,499.651123 575.087769,499.613495 575.447876,499.575897   C575.447571,499.831787 575.447266,500.087708 575.446960,500.343567   C575.088806,500.293976 574.730591,500.244354 574.369995,499.941742  z\",id:\"svg_1471\"})),_path1470||(_path1470=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M588.069214,443.282593   C587.726501,443.784668 587.189575,444.126160 586.652649,444.467621   C586.535400,444.246857 586.418091,444.026093 586.300842,443.805298   C586.825562,443.577515 587.350220,443.349731 588.069214,443.282593  z\",id:\"svg_1472\"})),_path1471||(_path1471=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M554.001526,488.002319   C554.694275,487.684631 555.385498,487.364685 556.076660,487.044708   C556.134949,487.280975 556.193237,487.517212 556.251526,487.753448   C555.704773,487.846161 555.158081,487.938904 554.303223,488.013062   C553.995117,487.994476 554.000000,488.000000 554.001526,488.002319  z\",id:\"svg_1473\"})),_path1472||(_path1472=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M591.997803,469.997833   C591.438354,470.496887 590.881042,470.998108 590.156006,471.258179   C589.988281,471.017090 590.001709,470.997864 590.009338,470.987915   C590.509155,470.725739 591.001343,470.473541 591.748779,470.112152   C592.004028,470.002991 592.000000,470.000000 591.997803,469.997833  z\",id:\"svg_1474\"})),_path1473||(_path1473=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M561.721191,443.344299   C561.997986,443.359650 562.149353,443.507019 562.300720,443.654419   C562.065735,443.595062 561.830811,443.535706 561.721191,443.344299  z\",id:\"svg_1475\"})),_path1474||(_path1474=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M580.005371,511.109161   C580.323730,511.040375 580.632446,511.250641 581.115601,511.684937   C580.858582,511.735382 580.427124,511.561798 580.005371,511.109161  z\",id:\"svg_1476\"})),_path1475||(_path1475=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M600.387451,480.711365   C600.562439,480.849060 600.588806,481.089233 600.615173,481.329407   C600.489685,481.157532 600.364258,480.985657 600.387451,480.711365  z\",id:\"svg_1477\"})),_path1476||(_path1476=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M576.447510,446.542145   C576.410156,446.480225 576.484802,446.604065 576.447510,446.542145  z\",id:\"svg_1478\"})),_path1477||(_path1477=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M606.440063,449.548767   C606.397095,449.482849 606.482971,449.614685 606.440063,449.548767  z\",id:\"svg_1479\"})),_path1478||(_path1478=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M581.010742,456.014130   C580.911621,456.051910 580.800598,456.075745 580.830078,456.038147   C580.970520,455.976746 580.998840,456.000183 581.010742,456.014130  z\",id:\"svg_1480\"})),_path1479||(_path1479=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M578.537964,447.560089   C578.472473,447.601044 578.603516,447.519135 578.537964,447.560089  z\",id:\"svg_1481\"})),_path1480||(_path1480=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M608.544189,439.563538   C608.480347,439.603943 608.608032,439.523163 608.544189,439.563538  z\",id:\"svg_1482\"})),_path1481||(_path1481=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M574.580566,437.442322   C574.637878,437.522644 574.416504,437.551788 574.416504,437.551788   C574.416504,437.551788 574.523254,437.362030 574.580566,437.442322  z\",id:\"svg_1483\"})),_path1482||(_path1482=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M568.831055,506.113159   C569.027527,506.026794 569.114197,506.500305 569.171997,506.734406   C569.031311,506.712189 568.832947,506.455841 568.831055,506.113159  z\",id:\"svg_1484\"})),_path1483||(_path1483=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1B18\",opacity:1,stroke:\"none\",d:\" M591.184509,390.237488   C590.902344,390.675446 590.620117,391.113403 590.269958,391.804321   C590.201965,392.057281 589.795959,392.110596 589.214233,392.114807   C588.168091,392.837006 587.703735,393.554993 587.239380,394.272980   C587.239380,394.272980 587.143005,394.023895 586.787842,394.059235   C585.154114,394.368866 583.876465,394.647705 582.596680,394.916687   C577.390503,396.011017 576.605225,397.645660 578.535156,403.380615   C578.411865,403.699341 578.191345,403.921600 577.260864,403.960449   C575.570129,404.564362 574.492065,405.255188 573.090881,405.920349   C571.133606,406.570099 569.499451,407.245514 567.628784,407.949738   C567.392212,407.978546 567.024597,408.281921 566.685913,408.261658   C565.327698,408.861023 564.308105,409.480652 562.818542,410.108765   C559.553589,410.107971 556.758545,410.098663 553.684692,409.877411   C550.565613,408.798126 547.671509,406.835724 544.574707,410.019287   C540.719299,410.050964 537.322876,410.141022 533.686523,409.969299   C530.667664,408.491425 527.902832,406.316345 525.106812,406.275574   C520.486389,406.208160 517.907410,404.132202 515.789856,400.536438   C513.926880,397.373047 511.445953,395.179688 506.995422,396.181763   C504.388672,392.738342 502.154480,389.379272 500.198944,385.801636   C499.979828,384.429291 499.482056,383.275482 498.835571,381.809235   C498.043915,380.048309 497.400970,378.599792 496.640442,376.853180   C495.929016,376.344543 495.335205,376.134003 494.747681,375.580627   C494.265991,374.817047 493.777985,374.396301 493.186005,373.844971   C492.893463,373.583160 492.745575,373.415924 492.751617,372.833252   C492.911163,371.932465 492.957397,371.411133 493.165833,370.837311   C493.219543,370.566650 493.111023,370.348480 492.977020,369.724121   C492.883759,368.240540 492.816040,367.163177 492.999634,365.962036   C493.478912,365.550110 493.706909,365.261902 494.311279,364.975830   C496.927216,362.668213 499.247589,360.429077 501.361389,358.009521   C502.072968,357.194946 502.259918,355.922089 502.686707,354.858704   C501.404388,354.444305 500.145996,353.911896 498.833618,353.645782   C497.242310,353.323120 495.605377,353.225403 493.708435,352.785645   C493.282410,351.304718 493.136139,350.068542 493.414734,348.878540   C501.325745,350.626068 508.811859,352.327423 516.297974,354.028778   C516.166565,354.166443 516.035156,354.304108 515.903748,354.441772   C517.926392,354.329041 519.949097,354.216309 521.968628,354.467407   C520.122986,357.453827 518.849731,361.079865 516.330261,362.509216   C509.019806,366.656555 508.455902,373.351074 508.149200,380.378357   C508.126923,380.889252 508.813904,381.431122 509.385132,382.211792   C512.240295,384.476654 514.958435,386.227783 517.319336,382.239044   C518.278442,380.618622 518.777649,378.726013 519.638794,376.625397   C519.831238,376.053284 519.870911,375.812988 520.183960,375.522980   C520.831299,374.974548 521.205261,374.475830 521.829956,373.721924   C526.051147,370.641327 530.021667,367.815887 534.397217,365.010559   C540.893188,364.297699 546.984131,363.564758 553.269897,363.105713   C554.633667,363.936188 555.802795,364.492767 556.764465,365.328003   C556.111816,366.365814 555.666504,367.124939 555.221191,367.884033   C556.811707,368.259644 558.402161,368.635254 559.999023,369.361725   C560.655823,370.489471 561.306274,371.266357 562.104126,372.197388   C562.178589,371.890991 562.105591,371.430420 562.023682,370.728699   C562.014709,370.487549 561.991821,370.005493 562.157715,369.736115   C562.680298,369.244385 563.036865,369.022034 563.739929,368.789307   C567.126099,372.671478 570.720093,376.260834 573.058655,380.536865   C575.703125,385.372192 576.229980,386.058472 582.096130,383.913971   C584.971191,381.570984 585.090698,379.571136 581.631409,377.806030   C581.450378,377.242828 581.509399,376.931244 581.799622,376.172302   C581.909241,371.401825 584.403687,366.182678 577.684692,364.353821   C577.678589,364.352203 577.912170,363.469818 578.440186,362.999115   C582.740601,362.622070 587.123108,362.912628 587.375122,357.019287   C590.045410,357.095245 592.383972,352.300385 594.540649,357.243134   C594.982056,355.743317 595.369202,354.428070 595.756287,353.112793   C596.163757,353.063080 596.571228,353.013336 596.978699,352.963623   C597.318298,353.977783 597.657959,354.991974 597.998535,356.395752   C597.763916,360.516632 599.714111,365.404999 593.061157,365.721893   C592.455750,365.750763 591.929443,367.441345 591.366394,368.360229   C592.253906,368.582733 593.209839,368.666504 594.012024,369.062103   C595.069214,369.583496 596.005615,370.349792 596.708496,371.267609   C596.280396,373.348083 596.137756,375.171783 595.776794,377.106445   C595.285583,377.419983 595.102173,377.684570 595.005371,378.005585   C595.002441,378.000000 595.015930,378.013031 594.679199,378.010925   C591.852661,381.528137 589.362854,385.047455 586.398376,389.237579   C588.482910,389.673065 589.833740,389.955292 591.184509,390.237488  M570.766602,388.304443   C569.250671,387.102783 567.734741,385.901123 566.645081,385.037384   C564.856140,388.105103 563.614502,390.234222 562.206848,392.648071   C566.117920,393.243744 569.355652,393.485321 570.766602,388.304443  M510.823456,357.803406   C509.812439,357.131714 508.268219,355.658630 507.877197,355.918762   C505.394684,357.570587 503.879761,359.777191 506.487732,363.934753   C508.204102,361.831268 509.555115,360.175568 510.823456,357.803406  M565.309570,378.208130   C566.191223,379.667816 567.072937,381.127533 567.979492,382.628357   C570.276062,379.978973 569.541931,376.902405 566.370178,375.677551   C566.207214,375.614563 565.534851,376.870605 565.309570,378.208130  M497.188751,352.600037   C497.233276,352.236969 497.277771,351.873871 497.322296,351.510803   C497.061646,351.503265 496.800995,351.495758 496.540344,351.488251   C496.585999,351.852264 496.631653,352.216309 497.188751,352.600037  M564.526489,381.625763   C564.471924,381.839508 564.417297,382.053253 564.362732,382.267059   C564.497009,382.129761 564.631287,381.992493 564.526489,381.625763  z\",id:\"svg_1485\"})),_path1484||(_path1484=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F2DECA\",opacity:1,stroke:\"none\",d:\" M567.024597,408.281921   C567.024597,408.281921 567.392212,407.978546 567.953003,407.971436   C569.631531,408.195801 570.749207,408.427307 571.872314,409.027344   C571.888000,409.885345 571.898438,410.374817 571.908813,410.864258   C571.134705,411.965820 570.360657,413.067383 569.742798,414.544861   C569.899048,414.920746 569.967468,414.880890 569.763794,414.707428   C569.384460,414.503540 569.208801,414.473083 569.033081,414.442657   C568.533142,414.258057 568.033203,414.073425 566.878906,413.912109   C554.066833,418.399963 547.392700,427.188141 545.730713,439.928101   C545.186096,441.434967 544.341064,442.907684 544.165100,444.456451   C543.878784,446.976837 544.029907,449.546875 543.950806,452.489807   C544.112427,457.530304 541.211609,462.325775 544.722107,466.860260   C545.295349,467.600677 544.956543,469.047241 545.102783,470.914062   C545.196045,472.114746 545.225708,472.568756 545.255371,473.022797   C545.451050,473.475311 545.646606,473.927826 545.896179,474.643433   C543.892151,475.568329 541.834229,476.230133 539.401733,476.478149   C538.460022,475.373566 537.892944,474.682831 537.274536,473.632446   C537.351379,471.854858 537.479492,470.436920 537.934082,469.032288   C538.500854,468.348907 538.741211,467.652222 538.994507,466.570190   C539.148804,465.167358 539.290100,464.149841 539.799316,462.989685   C540.452332,458.104431 540.864014,453.363739 540.934937,448.617920   C540.953125,447.401825 539.895020,446.169647 539.260986,444.621521   C539.118896,443.864044 539.047119,443.429962 539.043701,442.559845   C538.567444,439.091675 538.022949,436.059540 537.875671,433.028076   C539.679077,433.392975 541.085327,433.757172 541.915466,433.972168   C544.281555,430.332550 546.462524,426.546326 549.072876,423.083771   C551.677368,419.628998 554.711914,416.498505 557.557922,413.225861   C554.932434,412.811981 552.886292,413.577057 550.773743,414.037384   C549.248779,414.369659 547.443726,414.815735 546.093933,414.317078   C539.223450,411.779022 534.541199,413.144562 530.449463,419.021057   C529.000549,417.621216 527.856201,416.364349 527.066406,414.969543   C528.731567,412.084961 530.928406,410.591522 533.926453,410.231079   C537.322876,410.141022 540.719299,410.050964 544.855164,410.288391   C548.384216,410.440338 551.173889,410.264832 553.963501,410.089355   C556.758545,410.098663 559.553589,410.107971 563.157837,410.120819   C564.986206,409.510193 566.005371,408.896057 567.024597,408.281921  z\",id:\"svg_1486\"})),_path1485||(_path1485=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M578.854858,403.315369   C576.605225,397.645660 577.390503,396.011017 582.596680,394.916687   C583.876465,394.647705 585.154114,394.368866 586.855957,394.174103   C584.577576,397.252472 581.876038,400.251312 578.854858,403.315369  z\",id:\"svg_1487\"})),_path1486||(_path1486=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M572.246704,410.768921   C571.898438,410.374817 571.888000,409.885345 572.094360,408.919952   C572.678772,407.611359 573.046387,406.778717 573.414001,405.946045   C574.492065,405.255188 575.570129,404.564362 577.030884,404.028442   C575.803894,406.346802 574.194214,408.510193 572.246704,410.768921  z\",id:\"svg_1488\"})),_path1487||(_path1487=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M587.572876,394.246460   C587.703735,393.554993 588.168091,392.837006 589.009644,392.123779   C588.893372,392.825684 588.399841,393.522827 587.572876,394.246460  z\",id:\"svg_1489\"})),_path1488||(_path1488=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M571.054382,415.649841   C571.030457,415.920288 570.831604,415.952026 570.332153,416.008850   C570.031494,416.033905 569.957947,415.938934 569.939819,415.651123   C569.921631,415.363312 569.967468,414.880890 569.967468,414.880890   C569.967468,414.880890 569.899048,414.920746 569.874512,414.888885   C570.193176,415.041718 570.536316,415.226410 571.054382,415.649841  z\",id:\"svg_1490\"})),_path1489||(_path1489=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M595.995117,376.995453   C596.137756,375.171783 596.280396,373.348083 596.760071,371.591248   C597.722290,371.446838 598.846008,371.303070 598.885315,371.012604   C599.046631,369.819977 598.338623,367.976410 598.918457,367.460693   C602.588623,364.196625 601.216980,360.626068 600.005615,356.623596   C600.338135,354.864960 600.663940,353.469360 601.005249,351.621521   C602.116821,347.056213 598.676697,342.825165 601.707520,338.829224   C602.434021,340.279480 602.796570,341.653473 603.071716,343.351837   C603.133545,344.552002 603.282776,345.427765 603.536621,346.661774   C603.561829,353.365784 603.482544,359.711548 603.376953,366.417236   C603.437073,367.489777 603.523560,368.202362 603.405090,369.172333   C602.611511,370.964935 602.022766,372.500122 601.434082,374.035339   C599.928040,376.731049 598.421997,379.426758 596.509644,381.865173   C595.740845,380.409576 595.378418,379.211304 595.015930,378.013031   C595.015930,378.013031 595.002441,378.000000 595.221741,377.892212   C595.711914,377.581970 595.896606,377.318970 595.995117,376.995453  z\",id:\"svg_1491\"})),_path1490||(_path1490=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M594.679199,378.010925   C595.378418,379.211304 595.740845,380.409576 596.197754,381.985352   C594.964722,384.380157 593.637268,386.397491 591.931519,388.834503   C591.404968,389.545807 591.256775,389.837463 591.108582,390.129120   C591.108582,390.129120 591.164734,390.169525 591.174622,390.203491   C589.833740,389.955292 588.482910,389.673065 586.398376,389.237579   C589.362854,385.047455 591.852661,381.528137 594.679199,378.010925  z\",id:\"svg_1492\"})),_path1491||(_path1491=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M601.695435,374.037659   C602.022766,372.500122 602.611511,370.964935 603.724976,369.265900   C604.818542,369.440674 605.387207,369.779297 605.955933,370.117889   C605.955933,370.117889 605.983337,370.524170 605.732788,370.928741   C604.979980,372.558380 604.477783,373.783447 603.975586,375.008545   C603.975586,375.008545 603.558655,375.017639 603.352112,375.029175   C602.749329,374.707123 602.353149,374.373535 601.695435,374.037659  z\",id:\"svg_1493\"})),_path1492||(_path1492=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1B18\",opacity:1,stroke:\"none\",d:\" M591.367615,390.049377   C591.256775,389.837463 591.404968,389.545807 591.770996,389.131104   C591.868103,389.328613 591.747375,389.649109 591.367615,390.049377  z\",id:\"svg_1494\"})),_path1493||(_path1493=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M606.713257,506.993256   C608.157898,509.316742 609.282837,511.483490 612.300415,508.780914   C612.697327,508.425446 614.012634,509.095459 614.960876,509.634888   C615.019165,509.979187 614.964050,510.040619 614.743591,510.091187   C614.523132,510.141785 614.132629,510.161072 613.890747,510.203644   C613.337830,510.394867 613.120422,510.630005 612.762146,511.070160   C612.308472,511.459595 612.089111,511.730469 611.869812,512.001343   C611.435791,512.013062 611.001770,512.024841 609.907104,511.986389   C608.171936,511.531860 607.097412,511.127533 606.022888,510.723206   C606.149109,509.495789 606.275330,508.268372 606.713257,506.993256  z\",id:\"svg_1495\"})),_path1494||(_path1494=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M605.998291,511.121826   C607.097412,511.127533 608.171936,511.531860 609.581726,512.000549   C610.176575,513.240845 610.436218,514.416748 610.695801,515.592590   C610.234436,515.865356 609.773010,516.138062 609.311646,516.410828   C608.198975,514.780701 607.086304,513.150574 605.998291,511.121826  z\",id:\"svg_1496\"})),_path1495||(_path1495=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M614.132629,510.161072   C614.132629,510.161072 614.523132,510.141785 614.715942,510.121887   C614.951111,510.819916 614.993408,511.537842 615.071289,512.615479   C614.221741,512.672058 613.336487,512.368835 612.160522,512.033447   C612.089111,511.730469 612.308472,511.459595 612.986206,510.994598   C613.728577,510.646149 613.957947,510.433014 614.132629,510.161072  z\",id:\"svg_1497\"})),_path1496||(_path1496=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M606.081055,505.220917   C606.420898,505.225708 606.870300,505.452759 607.162109,505.831238   C606.671936,505.895386 606.400635,505.715576 606.081055,505.220917  z\",id:\"svg_1498\"})),_path1497||(_path1497=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M560.996582,554.582458   C560.034607,554.764526 559.055237,554.661438 558.127686,554.384766   C556.410706,553.872681 554.723938,553.259033 553.024597,552.687683   C552.890442,553.067871 552.756226,553.448120 552.622009,553.828308   C550.711731,552.069031 548.801453,550.309692 547.296631,548.923767   C544.515076,550.748596 542.485229,552.080322 540.492615,553.387573   C539.962280,550.307434 539.483337,547.525696 538.995361,544.049377   C538.987549,542.940247 538.988892,542.525757 538.990234,542.111206   C539.741638,541.078186 540.492981,540.045105 541.622192,539.006042   C542.000000,539.000000 541.997559,538.997559 541.997559,538.997559   C543.084961,540.589539 544.172363,542.181458 545.515686,544.148193   C544.849304,544.973694 543.870850,546.185669 542.892456,547.397644   C543.134094,547.645264 543.375732,547.892883 543.617371,548.140564   C546.552124,545.233398 549.486877,542.326294 552.708008,539.232056   C554.155151,540.724976 555.315796,542.405029 556.745422,544.474426   C556.608765,544.867920 555.568237,547.396545 555.727783,547.474670   C557.987488,548.581421 560.409973,549.355652 562.963684,550.271545   C562.576782,551.050293 561.789673,552.634644 560.996582,554.582458  z\",id:\"svg_1499\"})),_path1498||(_path1498=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M561.005066,563.679810   C560.248962,564.025330 559.499268,564.022827 558.374756,564.008972   C558.239075,562.874695 558.478149,561.751770 559.079407,560.204224   C559.711914,559.579651 559.898865,559.319824 560.002441,559.000000   C560.174133,558.995789 560.345764,558.991516 560.774902,558.970093   C561.025391,560.412598 561.018433,561.872253 561.005066,563.679810  z\",id:\"svg_1500\"})),_path1499||(_path1499=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M566.991272,555.003662   C566.983582,555.753296 566.986938,556.502197 566.991333,557.625488   C566.000610,557.260132 565.008972,556.520264 564.383789,555.392944   C565.499512,555.010498 566.248779,555.015503 566.997986,555.020508   C566.997986,555.020508 567.002319,555.002930 566.991272,555.003662  z\",id:\"svg_1501\"})),_path1500||(_path1500=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M566.948853,554.677490   C566.248779,555.015503 565.499512,555.010498 564.375854,555.020996   C564.446045,552.649292 565.399231,552.362061 566.948853,554.677490  z\",id:\"svg_1502\"})),_path1501||(_path1501=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M575.892212,552.800903   C575.383728,552.912109 574.693726,552.767578 573.981873,552.314453   C574.543579,552.185669 575.127136,552.365356 575.892212,552.800903  z\",id:\"svg_1503\"})),_path1502||(_path1502=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M552.320862,529.799561   C551.755737,530.830078 551.356506,531.611206 550.978638,532.693848   C546.764160,533.207825 542.528381,533.420349 538.114624,532.985107   C536.986267,531.313416 535.640930,529.243713 535.147278,529.430054   C530.971619,531.006470 528.939331,527.397461 525.958862,525.699646   C524.211060,525.193604 522.519775,525.032104 520.211853,524.811768   C520.150757,524.722961 519.541809,523.837341 518.948730,522.582275   C517.983521,520.467773 517.002441,518.722778 516.187012,516.882324   C516.202271,516.527832 516.051758,516.268616 515.697021,516.022217   C515.492798,516.034912 515.083618,516.040955 515.071655,515.770630   C515.064941,515.320129 515.070190,515.139832 515.283936,514.958740   C515.492371,514.957886 515.908447,514.983887 516.312500,514.989868   C520.787537,515.316650 524.858582,515.637390 528.948853,516.218445   C528.978760,516.652527 528.989380,516.826233 528.661072,517.038330   C526.397034,518.546692 526.704712,519.500854 528.996704,519.996582   C528.996704,519.996582 529.000000,520.000000 529.002563,520.370422   C529.504272,521.437927 530.028259,522.746704 530.498413,522.727600   C532.703674,522.638123 534.979065,522.441589 537.056519,521.757935   C538.219727,521.375183 539.045959,519.968811 540.392212,519.019043   C541.496643,519.014832 542.232910,519.015137 542.984009,519.008301   C542.998779,519.001221 542.984802,519.030762 542.979980,519.395325   C543.502747,522.285461 536.735168,523.855225 542.152100,527.293274   C543.192322,527.377502 544.106323,527.173401 545.123535,526.764343   C545.414856,526.304810 545.658630,526.126099 546.284546,525.983032   C547.079468,525.302246 547.547791,524.661743 548.009277,524.013184   C548.002441,524.005188 548.015015,524.011780 548.383911,524.016113   C549.489624,523.997070 550.226379,523.973694 551.230164,524.129639   C552.369873,525.250793 553.242554,526.192688 554.115112,527.134583   C553.572388,527.939819 553.029602,528.745056 552.320862,529.799561  M532.079956,526.616394   C532.379700,526.949707 532.679382,527.283081 532.979187,527.616394   C533.277649,527.131958 533.576111,526.647522 534.360291,525.818848   C534.260376,525.316101 534.160400,524.813416 534.060486,524.310669   C533.374451,524.882690 532.688477,525.454773 532.079956,526.616394  z\",id:\"svg_1504\"})),_path1503||(_path1503=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M527.952209,534.951050   C528.543701,537.118713 529.135193,539.286438 529.615906,542.022461   C528.343323,542.711243 527.181519,542.831726 525.783630,542.696777   C522.594421,541.197876 519.641357,539.954468 516.394836,538.587463   C516.561890,537.156860 516.802185,535.098694 517.385254,533.026367   C519.512634,533.101440 521.155518,536.341370 523.179016,533.168335   C523.471558,532.709656 525.023499,533.054199 526.024963,533.343506   C526.688904,534.090332 527.320557,534.520691 527.952209,534.951050  z\",id:\"svg_1505\"})),_path1504||(_path1504=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M526.019775,542.952148   C527.181519,542.831726 528.343323,542.711243 529.743408,542.335571   C531.139954,541.211914 532.298157,540.343445 533.456970,539.475830   C535.058350,540.334351 536.659119,541.192017 538.625061,542.080444   C538.988892,542.525757 538.987549,542.940247 538.993164,543.666260   C534.202637,544.397583 535.995422,547.491333 536.906311,550.979858   C533.108887,548.277771 529.806335,545.375305 525.418396,548.987183   C525.008728,549.015747 524.887085,548.900085 524.887085,548.900085   C525.248535,547.817383 525.610046,546.734680 525.988281,544.974121   C526.009949,543.848267 526.014893,543.400208 526.019775,542.952148  z\",id:\"svg_1506\"})),_path1505||(_path1505=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M526.015259,526.044189   C528.939331,527.397461 530.971619,531.006470 535.147278,529.430054   C535.640930,529.243713 536.986267,531.313416 537.965332,532.694092   C537.217590,533.291199 536.441223,533.531555 535.003113,533.914307   C533.815552,534.108459 533.289734,534.160278 532.763977,534.212097   C531.944702,533.768494 531.125488,533.324890 529.830933,532.725037   C529.212097,532.415710 529.104370,532.240601 528.837036,531.759155   C527.760315,531.274353 526.878967,531.073669 526.004639,530.469727   C526.012939,528.725708 526.014099,527.384949 526.015259,526.044189  z\",id:\"svg_1507\"})),_path1506||(_path1506=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M529.032410,532.043335   C529.104370,532.240601 529.212097,532.415710 529.483765,532.645020   C529.273132,533.427551 528.934387,534.133972 528.273926,534.895752   C527.320557,534.520691 526.688904,534.090332 526.022888,533.099060   C525.988525,532.538086 525.982788,532.049805 526.363892,532.043823   C527.507446,532.039734 528.269958,532.041565 529.032410,532.043335  z\",id:\"svg_1508\"})),_path1507||(_path1507=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M542.001221,539.001221   C541.868042,535.808105 543.157104,535.732300 545.837280,537.821045   C544.536621,538.306091 543.609192,538.651917 542.339661,538.997681   C541.997559,538.997559 542.000000,539.000000 542.001221,539.001221  z\",id:\"svg_1509\"})),_path1508||(_path1508=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M532.867554,534.478760   C533.289734,534.160278 533.815552,534.108459 534.737549,534.082581   C534.412964,534.320801 533.692078,534.533142 532.867554,534.478760  z\",id:\"svg_1510\"})),_path1509||(_path1509=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M563.583374,514.051453   C564.221497,514.905945 564.498352,515.755432 564.775269,516.604980   C565.425537,516.270203 566.075806,515.935425 566.864258,515.301514   C567.971252,515.395447 568.940063,515.788513 569.994263,516.504517   C569.518494,521.666138 567.216858,522.931396 561.239014,521.288879   C561.887207,523.101746 562.442017,524.653442 563.004761,526.566589   C561.098938,527.547363 559.556763,530.952209 557.041748,527.376282   C556.669617,522.965820 556.384033,518.891968 556.052917,514.413879   C558.399841,516.458618 560.818054,513.872498 563.583374,514.051453  z\",id:\"svg_1511\"})),_path1510||(_path1510=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M572.932556,517.134766   C573.899109,516.624268 574.904541,516.451904 575.963623,516.611694   C575.339905,517.725769 574.662720,518.507812 573.985535,519.289856   C573.647522,518.684204 573.309509,518.078552 572.932556,517.134766  z\",id:\"svg_1512\"})),_path1511||(_path1511=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M580.050110,548.947815   C580.588379,549.172241 581.096680,549.421204 581.551758,549.744934   C581.605347,549.783081 581.366699,550.232056 581.263550,550.490601   C580.842590,550.211853 580.421631,549.933167 579.955933,549.370850   C579.911133,549.087341 580.004211,548.994751 580.050110,548.947815  z\",id:\"svg_1513\"})),_path1512||(_path1512=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M554.344971,527.066956   C553.242554,526.192688 552.369873,525.250793 551.241882,523.894653   C550.986572,523.480408 550.991028,523.007690 550.991028,523.007690   C552.073608,522.789185 553.156189,522.570618 554.609253,522.277283   C554.750671,523.671570 554.874207,524.889160 555.015442,526.483215   C555.033142,526.859680 554.574829,526.999329 554.344971,527.066956  z\",id:\"svg_1514\"})),_path1513||(_path1513=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M578.591064,556.300171   C578.429932,556.172119 578.406128,555.948914 578.382324,555.725647   C578.497681,555.885437 578.613037,556.045166 578.591064,556.300171  z\",id:\"svg_1515\"})),_path1514||(_path1514=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M621.314453,485.896423   C621.620972,484.905914 622.220581,483.778503 623.084961,482.881744   C622.769104,483.994781 622.188416,484.877136 621.314453,485.896423  z\",id:\"svg_1516\"})),_path1515||(_path1515=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M612.041260,498.957092   C612.800659,499.003082 613.525879,499.087616 614.251038,499.172180   C614.228027,499.381317 614.204956,499.590485 614.181946,499.799622   C613.540527,499.725494 612.899170,499.651398 612.100220,499.326660   C611.942688,499.076080 612.007080,498.995636 612.041260,498.957092  z\",id:\"svg_1517\"})),_path1516||(_path1516=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M606.238525,501.994873   C606.273254,501.883026 606.551392,501.785370 606.898865,501.869110   C606.968140,502.050537 606.482056,502.009003 606.238525,501.994873  z\",id:\"svg_1518\"})),_path1517||(_path1517=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5C4A3C\",opacity:1,stroke:\"none\",d:\" M555.078857,735.285522   C554.934631,734.523865 554.953918,734.087402 554.984863,733.322998   C555.829285,732.996460 556.767517,732.748474 557.474426,733.047424   C559.348145,733.839844 561.121887,734.868652 562.935364,735.803345   C561.813965,737.028687 560.918518,738.745117 559.527710,739.384949   C555.753174,741.121521 556.495422,737.112732 555.078857,735.285522  z\",id:\"svg_1519\"})),_path1518||(_path1518=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M525.783691,542.696777   C526.014893,543.400208 526.009949,543.848267 526.007446,544.631470   C524.319275,545.679688 522.628540,546.392822 520.607788,547.245178   C519.877319,546.676880 518.694641,545.756714 517.177246,544.576172   C516.751526,546.029175 516.474304,546.975281 515.977783,548.669922   C513.715332,546.427795 511.863190,544.592407 510.361633,542.386108   C511.654022,541.783264 512.595886,541.551208 513.537781,541.319153   C513.298340,540.840698 513.058899,540.362244 512.819519,539.883789   C511.885315,540.595764 510.951080,541.307739 510.016876,542.019714   C508.133209,541.466919 506.249573,540.914062 504.675079,540.452026   C504.675079,541.675232 504.675079,543.291016 504.066040,544.726318   C501.295349,542.697266 499.133698,540.848633 496.612549,538.995300   C494.502838,536.989807 492.752655,534.988953 491.000671,532.663208   C490.999695,531.905212 491.000458,531.472107 491.004700,530.670776   C491.148163,529.384399 491.288116,528.466431 491.371124,527.921814   C494.410400,528.661377 497.312347,529.026733 499.938049,530.080505   C504.737091,532.006531 511.343781,528.572388 513.968811,534.918213   C515.298401,534.106018 516.170471,533.573303 517.042603,533.040527   C516.802185,535.098694 516.561890,537.156860 516.394836,538.587463   C519.641357,539.954468 522.594421,541.197876 525.783691,542.696777  z\",id:\"svg_1520\"})),_path1519||(_path1519=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M491.048096,544.924744   C490.395325,546.309692 489.929901,548.742859 489.057434,548.898804   C485.210724,549.586304 481.243469,549.578186 477.326080,549.897522   C473.457764,550.212830 469.596802,550.618835 465.366150,550.992554   C464.999695,551.000000 465.006714,551.004150 465.006714,551.004150   C464.937775,550.229431 464.868835,549.454651 464.908569,549.901123   C462.256042,549.666321 459.979553,548.859009 458.150757,549.446167   C455.460968,550.309631 453.090668,552.168457 450.291504,553.801453   C449.998779,553.999695 449.995117,553.995605 449.973022,553.634766   C449.314789,552.561401 448.746887,551.769714 448.029846,551.150879   C445.688965,549.130493 443.293701,547.173096 441.220886,544.996704   C443.346619,543.924500 445.170837,543.047058 447.023590,542.481079   C447.515045,543.604431 447.977997,544.416321 448.846985,545.940186   C448.940674,544.375183 448.977661,543.757263 449.378693,543.091858   C452.929962,543.679443 456.266388,545.228088 459.269806,544.737610   C463.888092,543.983398 468.047821,543.186707 472.935913,544.338501   C477.628601,545.444336 482.885742,544.154663 488.120819,544.189026   C489.251678,544.631775 490.156525,544.803101 491.039612,544.969421   C491.017822,544.964355 491.048065,544.924744 491.048096,544.924744  z\",id:\"svg_1521\"})),_path1520||(_path1520=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M487.894836,543.917664   C482.885742,544.154663 477.628601,545.444336 472.935913,544.338501   C468.047821,543.186707 463.888092,543.983398 459.269806,544.737610   C456.266388,545.228088 452.929962,543.679443 449.374268,542.693481   C450.542053,540.465881 451.771301,537.569092 453.697998,536.989136   C455.773285,536.364502 458.502838,537.907471 460.940948,538.528442   C460.998047,538.542969 460.983704,538.838135 460.717712,539.037354   C460.110748,539.382568 459.788818,539.692810 459.466919,540.003052   C459.680267,540.183655 459.893616,540.364319 460.106995,540.544922   C460.403778,540.029114 460.700562,539.513367 461.385925,538.993286   C463.386963,538.186462 464.999390,537.383850 467.004333,536.385925   C468.609619,537.772339 470.639862,539.525818 472.808228,541.398621   C475.024536,538.977234 477.090118,536.720520 479.830231,533.726929   C480.267792,535.791382 480.600830,537.362549 480.647217,538.975708   C480.069763,539.436890 479.778931,539.856018 479.488068,540.275208   C479.748810,540.374329 480.203949,540.605042 480.239868,540.552002   C480.556488,540.084290 480.798492,539.566040 481.417145,539.028748   C483.510498,538.001831 485.249359,537.008911 486.956787,536.358582   C486.034485,538.232422 485.143555,539.763611 484.252625,541.294861   C484.621338,541.576050 484.990051,541.857239 485.358765,542.138489   C486.849213,540.445557 488.339661,538.752625 490.220093,536.616760   C488.789368,536.336304 487.902710,536.162537 487.024109,535.605957   C488.355591,534.478149 489.679016,533.733154 491.002441,532.988159   C492.752655,534.988953 494.502838,536.989807 496.632996,539.388550   C497.006531,540.832336 497.000153,541.878052 496.993774,542.923828   C495.247101,543.574280 493.500427,544.224731 491.400879,544.899963   C491.048065,544.924744 491.017822,544.964355 490.981628,544.640137   C489.928589,544.183228 488.911713,544.050476 487.894836,543.917664  z\",id:\"svg_1522\"})),_path1521||(_path1521=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M526.719543,562.891724   C526.827026,563.613770 526.670349,564.132080 526.285645,564.806641   C523.313843,564.280334 520.238708,570.721985 517.449036,564.510986   C517.187134,565.721130 516.925293,566.931274 516.674072,568.092346   C515.732239,567.709839 514.885864,567.366150 513.704712,566.886414   C513.220947,568.689941 512.827820,570.155701 511.965210,573.371643   C510.483582,570.849426 509.665863,569.457458 508.855316,568.077698   C507.308136,568.887085 506.219971,569.456360 505.174377,570.003357   C504.780334,569.507446 504.364288,569.176941 504.421478,569.027893   C506.377258,563.928406 509.809509,562.369812 514.672852,562.496216   C517.012024,562.557068 519.415955,560.127319 522.668274,558.344177   C523.744629,559.578796 525.100037,561.133423 526.719543,562.891724  z\",id:\"svg_1523\"})),_path1522||(_path1522=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M507.268188,555.328491   C506.212982,555.164368 504.889740,554.952087 504.819794,554.531494   C504.561340,552.977051 504.717010,551.353821 504.717010,548.971008   C509.387878,551.205811 514.003540,553.414185 518.998901,555.804260   C517.610229,557.367920 516.462830,558.659973 515.481140,559.765381   C512.629944,558.113403 510.102692,556.649048 507.268188,555.328491  z\",id:\"svg_1524\"})),_path1523||(_path1523=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M496.957336,543.260986   C497.000153,541.878052 497.006531,540.832336 496.992493,539.393311   C499.133698,540.848633 501.295349,542.697266 503.719482,544.759033   C503.559875,545.937988 503.137726,546.903809 502.715576,547.869690   C501.417877,547.196472 500.120148,546.523315 498.695496,545.784241   C497.539886,546.484558 496.008606,547.412537 494.477295,548.340515   C494.263153,548.084534 494.048981,547.828491 493.834839,547.572449   C494.863525,546.247681 495.892242,544.922852 496.957336,543.260986  z\",id:\"svg_1525\"})),_path1524||(_path1524=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M456.997620,576.584656   C456.039642,577.837402 455.089417,578.697876 453.056885,580.538391   C453.474854,577.974426 453.708435,576.541626 453.861877,575.600464   C452.495789,573.320740 451.192993,571.146667 449.890198,568.972534   C450.245361,568.708313 450.600525,568.444153 450.955719,568.179932   C452.768463,569.706177 454.581207,571.232422 456.698792,572.908447   C457.004242,574.102905 457.004852,575.147583 456.997620,576.584656  z\",id:\"svg_1526\"})),_path1525||(_path1525=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M488.952454,557.997559   C487.341095,557.564819 485.729706,557.132080 484.036041,556.328491   C487.054077,555.308777 490.154449,554.660034 493.627869,554.006042   C494.000916,554.000854 494.015991,554.016846 494.015991,554.016846   C492.929840,555.334229 491.843658,556.651611 490.382996,557.968933   C490.008545,557.968872 490.003693,558.000549 489.921143,557.821045   C489.543213,557.760254 489.247833,557.878906 488.952454,557.997559  z\",id:\"svg_1527\"})),_path1526||(_path1526=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M497.183716,565.835815   C499.823212,564.603821 502.462708,563.371765 505.102203,562.139771   C505.363251,562.449280 505.624298,562.758728 505.885315,563.068237   C503.534943,565.276733 501.184570,567.485168 498.444244,570.059998   C497.835266,568.814758 497.376495,567.876587 496.944458,566.492004   C496.971252,566.045593 497.183716,565.835815 497.183716,565.835815  z\",id:\"svg_1528\"})),_path1527||(_path1527=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M492.435913,564.800476   C491.886658,564.221741 491.680939,563.749146 491.246582,563.141418   C492.298401,561.374146 493.578857,559.742065 494.820892,558.158936   C495.858154,561.336487 496.478668,563.237305 497.141449,565.486938   C497.183716,565.835815 496.971252,566.045593 496.873718,566.163208   C495.443970,565.822754 494.111694,565.364685 492.435913,564.800476  z\",id:\"svg_1529\"})),_path1528||(_path1528=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M513.079285,575.919678   C513.992981,576.357605 514.906677,576.795532 515.820374,577.233459   C515.544434,577.733032 515.268494,578.232544 514.992493,578.732056   C514.317078,578.096985 513.641663,577.461853 512.979614,576.417603   C512.992920,576.008484 513.079285,575.919678 513.079285,575.919678  z\",id:\"svg_1530\"})),_path1529||(_path1529=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M522.661133,571.722778   C523.506470,571.835876 524.066528,572.104248 524.626587,572.372681   C523.715210,572.822205 522.803772,573.271729 521.892334,573.721191   C522.053528,573.106812 522.214722,572.492432 522.661133,571.722778  z\",id:\"svg_1531\"})),_path1530||(_path1530=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M493.993713,553.993225   C494.653442,553.100952 495.320343,552.216309 495.987213,551.331665   C496.355042,551.733032 496.722839,552.134460 497.090637,552.535889   C496.300873,553.043518 495.511139,553.551147 494.368713,554.037842   C494.015991,554.016846 494.000916,554.000854 493.993713,553.993225  z\",id:\"svg_1532\"})),_path1531||(_path1531=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M507.967529,577.031433   C506.783539,576.858398 505.599518,576.685303 504.415527,576.512268   C504.517670,576.088989 504.619812,575.665771 504.721954,575.242493   C505.710999,575.617188 506.700012,575.991821 507.844330,576.682678   C507.999634,576.998840 507.967529,577.031433 507.967529,577.031433  z\",id:\"svg_1533\"})),_path1532||(_path1532=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M509.995117,575.995117   C509.702393,577.147644 509.409637,578.300110 509.116913,579.452637   C508.734863,578.877502 508.352814,578.302368 507.969177,577.379333   C507.967529,577.031433 507.999634,576.998840 508.014038,576.980225   C508.515808,576.709351 509.003204,576.457092 509.745300,576.102417   C510.000000,576.000000 509.995117,575.995117 509.995117,575.995117  z\",id:\"svg_1534\"})),_path1533||(_path1533=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M512.950562,576.053711   C512.180908,576.073303 511.453491,576.047729 510.360596,576.008667   C509.995117,575.995117 510.000000,576.000000 510.002136,576.002441   C510.981262,575.760132 511.958191,575.515320 513.007202,575.595093   C513.079285,575.919678 512.992920,576.008484 512.950562,576.053711  z\",id:\"svg_1535\"})),_path1534||(_path1534=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M529.080811,570.308350   C529.840637,570.225830 530.624634,570.474304 531.698914,570.840332   C531.027771,570.851685 530.066345,570.745544 529.080811,570.308350  z\",id:\"svg_1536\"})),_path1535||(_path1535=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M527.915161,568.123352   C528.389282,568.356323 528.717773,568.842834 529.035400,569.634460   C528.303467,569.865845 527.582520,569.792236 526.861511,569.718628   C527.164185,569.271423 527.466858,568.824219 527.915161,568.123352  z\",id:\"svg_1537\"})),_path1536||(_path1536=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M502.065308,577.326050   C502.376343,577.706055 502.419067,578.086670 502.461761,578.467285   C502.191071,578.465271 501.920410,578.463257 501.649719,578.461304   C501.698822,578.083130 501.747894,577.704895 502.065308,577.326050  z\",id:\"svg_1538\"})),_path1537||(_path1537=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M464.995972,550.996216   C464.953064,551.750061 464.913910,552.507690 464.874756,553.265259   C464.653931,553.240967 464.433105,553.216614 464.212280,553.192322   C464.310730,552.575562 464.409180,551.958862 464.757202,551.173096   C465.006714,551.004150 464.999695,551.000000 464.995972,550.996216  z\",id:\"svg_1539\"})),_path1538||(_path1538=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M483.001221,583.001587   C483.357391,582.749329 483.712402,582.495361 484.067383,582.241455   C484.154175,582.369568 484.240967,582.497620 484.327789,582.625732   C484.047699,582.748230 483.767609,582.870789 483.241943,582.994263   C482.996338,582.995117 483.000000,583.000000 483.001221,583.001587  z\",id:\"svg_1540\"})),_path1539||(_path1539=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M492.565796,549.450195   C492.617035,549.526001 492.412445,549.550171 492.412445,549.550171   C492.412445,549.550171 492.514526,549.374451 492.565796,549.450195  z\",id:\"svg_1541\"})),_path1540||(_path1540=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M525.066406,549.076660   C524.941589,549.335205 524.759094,549.532715 524.576599,549.730286   C524.553101,549.514709 524.529602,549.299194 524.696594,548.991821   C524.887085,548.900085 525.008728,549.015747 525.066406,549.076660  z\",id:\"svg_1542\"})),_path1541||(_path1541=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M519.532959,568.548706   C519.476746,568.582947 519.589233,568.514465 519.532959,568.548706  z\",id:\"svg_1543\"})),_path1542||(_path1542=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M559.783936,559.106079   C559.898865,559.319824 559.711914,559.579651 559.221985,559.883667   C559.105835,559.668091 559.293457,559.409607 559.783936,559.106079  z\",id:\"svg_1544\"})),_path1543||(_path1543=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M436.963379,579.980469   C434.906067,579.003418 432.848785,578.026306 430.415588,577.044678   C429.579742,575.530090 431.860992,572.514221 427.432495,572.633606   C426.036285,571.855408 425.015656,571.421509 423.995026,570.987610   C423.995026,570.987610 423.999146,571.002441 423.996613,570.610291   C426.137848,567.416443 428.281586,564.614685 430.534912,561.669800   C429.498535,561.200500 428.408936,560.707092 427.790680,560.427124   C429.687317,558.178284 431.459503,556.076904 433.583313,553.985596   C435.285034,554.327820 436.635162,554.660095 437.985291,554.992310   C436.292999,559.820129 438.756287,562.279419 443.696991,564.369385   C442.737549,562.371155 442.152374,561.152344 441.428955,559.645630   C443.897552,559.645630 446.126831,559.645630 448.363647,559.645630   C447.903717,561.085938 447.432587,562.561157 446.555420,564.446655   C445.433716,565.572021 444.718079,566.287231 443.626770,566.988464   C442.578705,567.626709 441.906281,568.278931 441.233887,568.931213   C441.733551,569.217041 442.233185,569.502930 442.732849,569.788818   C443.154449,568.858398 443.576050,567.927979 444.375488,567.010925   C445.508698,566.973145 446.264038,566.921997 447.019409,566.870850   C446.206757,569.825073 445.394073,572.779358 444.291077,575.867188   C444.000702,576.000793 444.007324,576.006714 443.957336,575.660217   C442.979828,574.237976 442.052338,573.162292 440.372192,571.213562   C440.175842,573.745667 440.088531,574.871582 440.000000,575.999146   C439.998779,576.000793 439.993896,576.007324 439.636841,576.014648   C435.771332,575.646667 437.398315,573.682129 438.194519,571.960327   C438.224213,571.918457 438.101379,571.938171 437.603607,571.980896   C434.671753,573.365784 431.595886,574.569946 436.231750,577.372681   C436.795197,577.713318 436.734711,579.086060 436.963379,579.980469  M429.391357,569.617981   C429.398834,568.897888 429.406311,568.177856 429.413818,567.457764   C428.854706,567.630249 428.295593,567.802734 427.736511,567.975281   C428.087128,568.570251 428.437744,569.165222 429.391357,569.617981  z\",id:\"svg_1545\"})),_path1544||(_path1544=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M438.349518,554.978394   C436.635162,554.660095 435.285034,554.327820 433.492126,553.678833   C432.375183,553.277039 431.293213,552.884644 431.089691,553.154541   C428.951294,555.990784 428.385529,554.227966 427.914368,551.861511   C427.973389,551.385498 427.987152,551.193970 428.378784,550.991821   C430.250946,549.100586 431.745178,547.219910 433.534058,545.287354   C436.192200,545.220886 438.555786,545.206177 440.919342,545.191528   C443.293701,547.173096 445.688965,549.130493 448.029846,551.150879   C448.746887,551.769714 449.314789,552.561401 449.968781,553.630859   C448.450531,554.810181 446.914429,555.632568 446.389526,555.913635   C443.242065,555.524414 440.977905,555.244507 438.349518,554.978394  z\",id:\"svg_1546\"})),_path1545||(_path1545=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M446.863281,581.728027   C445.601257,581.767334 444.192078,581.478699 442.352203,580.694641   C441.278931,578.801941 440.636414,577.404602 439.993896,576.007324   C439.993896,576.007324 439.998779,576.000793 440.400452,576.005981   C441.870514,576.009644 442.938904,576.008179 444.007324,576.006714   C444.007324,576.006714 444.000702,576.000793 443.997101,575.997070   C444.901062,577.795532 445.808624,579.597778 446.863281,581.728027  z\",id:\"svg_1547\"})),_path1546||(_path1546=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M447.120178,566.640320   C446.264038,566.921997 445.508698,566.973145 444.376648,567.012146   C444.000000,567.000000 444.002441,567.002441 444.002441,567.002441   C444.718079,566.287231 445.433716,565.572021 446.502747,564.797852   C446.977753,565.295837 447.099335,565.852844 447.120178,566.640320  z\",id:\"svg_1548\"})),_path1547||(_path1547=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M453.423279,559.084351   C453.951752,559.448669 454.227936,559.832214 454.504120,560.215759   C453.977753,560.070190 453.446747,559.938293 452.930176,559.763794   C452.853699,559.738037 452.780273,559.482605 452.822449,559.382874   C452.873505,559.262207 453.049164,559.194275 453.423279,559.084351  z\",id:\"svg_1549\"})),_path1548||(_path1548=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M489.222015,557.996948   C489.247833,557.878906 489.543213,557.760254 489.934631,557.818665   C489.850983,557.995911 489.671295,557.996155 489.222015,557.996948  z\",id:\"svg_1550\"})),_path1549||(_path1549=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M402.001434,548.980164   C401.268524,548.934875 400.535614,548.889587 399.400208,548.477539   C397.657135,546.412170 396.316559,544.713501 394.975983,543.014893   C395.209839,542.768372 395.443695,542.521790 395.677551,542.275208   C396.960907,542.950500 398.244263,543.625793 399.635529,544.357788   C398.580719,538.671326 395.914032,536.139282 391.016663,535.672974   C389.937378,534.122803 385.766876,532.980774 385.006989,532.554749   C382.725311,531.275269 379.066223,537.074341 377.929077,530.770081   C377.618408,529.598877 377.280273,528.782776 377.005981,527.658691   C377.549500,527.101807 378.029236,526.852905 378.508972,526.604004   C379.294891,529.055664 380.824219,529.072266 382.546906,527.683105   C384.399017,526.189636 386.119080,524.532349 387.896759,522.946472   C387.549713,522.573303 387.202637,522.200134 386.855560,521.826965   C381.783234,521.826965 376.710938,521.826965 370.543243,521.826965   C370.409821,521.757324 369.088287,521.067688 367.766724,520.378052   C367.843750,521.253723 367.920776,522.129395 367.732422,523.224304   C367.310333,524.348389 367.153625,525.253296 366.622681,526.134155   C365.500153,526.064209 364.751831,526.018311 363.865967,525.658569   C362.484802,523.229065 361.241180,521.113281 360.344849,518.994629   C361.476166,518.482422 362.260223,517.973145 363.044250,517.463867   C362.680847,517.078613 362.317413,516.693420 361.953979,516.308167   C361.303467,517.206238 360.652924,518.104309 359.652863,518.970459   C358.294617,518.358826 357.285919,517.779175 356.423523,517.283630   C357.857086,515.966370 358.927155,514.983154 359.982727,513.973389   C359.968262,513.946777 359.973053,513.886414 360.297272,513.936890   C361.439545,514.269226 362.257629,514.550964 363.475952,514.848022   C366.707031,515.055847 370.887451,514.147400 372.113098,515.649719   C375.643402,519.976807 378.515564,517.957764 381.846771,516.165710   C382.640594,515.738647 383.540161,515.508179 384.644745,515.091675   C384.512238,516.522156 384.427490,517.436890 384.390198,517.839478   C386.345825,518.180847 388.298492,519.160950 389.665314,518.630798   C392.767151,517.427551 396.733490,521.658691 399.463318,517.092773   C400.217468,518.482361 400.613373,519.797424 400.706726,521.274292   C397.271515,524.449890 393.740509,525.352295 388.548126,522.341064   C389.326019,526.280579 389.849579,528.932007 390.499573,532.223938   C394.139557,527.441040 397.943329,526.715576 403.389832,531.937012   C404.972504,531.845825 407.807983,527.064392 407.653564,533.040405   C407.089417,533.949707 406.435944,535.334778 406.757874,535.620361   C407.952454,536.679993 409.468292,537.377502 410.863464,538.210999   C411.056641,537.872070 411.249817,537.533142 411.443024,537.194214   C410.291321,535.792358 409.139618,534.390442 408.362213,532.976746   C412.329681,533.602600 415.922852,534.240234 419.173981,534.817200   C420.600830,533.732239 422.338196,532.411255 424.450500,531.060730   C425.644867,532.186951 427.240570,533.406616 427.151703,534.487671   C426.726898,539.652710 430.328369,540.748718 433.992371,542.218262   C434.003387,542.660400 434.008881,542.837280 433.974915,543.026001   C433.935516,543.037903 433.854706,543.022400 433.544098,543.059082   C432.809052,543.731140 432.384613,544.366516 431.707184,545.110107   C430.971466,545.478882 430.488770,545.739441 429.780823,545.735107   C427.701935,544.367493 425.848267,543.264709 423.984039,541.813232   C423.689850,540.783264 423.406281,540.101990 423.122681,539.420654   C422.079163,540.271729 421.035645,541.122742 419.669220,542.042664   C418.884979,542.774048 418.423645,543.436523 417.743896,544.336609   C415.919006,543.853394 414.312531,543.132629 412.147675,542.161316   C410.693817,543.936768 409.070496,545.919189 407.747894,547.534302   C405.425842,546.413879 403.747498,545.604004 401.610077,544.572693   C401.799652,546.707703 401.900543,547.843933 402.001434,548.980164  M399.667969,534.818298   C400.195892,535.111145 400.723816,535.403992 401.251770,535.696838   C401.292267,534.984436 401.332764,534.272095 401.373260,533.559692   C400.881500,533.785156 400.389740,534.010681 399.667969,534.818298  M402.495789,537.667175   C402.495789,537.667175 402.620270,537.433044 402.620270,537.433044   C402.620270,537.433044 402.359131,537.473938 402.495789,537.667175  z\",id:\"svg_1551\"})),_path1550||(_path1550=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M376.942169,527.966736   C377.280273,528.782776 377.618408,529.598877 377.619476,530.919067   C377.136993,532.855957 376.317322,534.941467 376.962982,535.608398   C379.748962,538.486389 382.964264,540.948853 385.894562,543.452454   C385.887390,543.512146 385.981293,542.729187 386.433472,541.966858   C387.509369,541.978699 388.226990,541.969910 388.967560,541.983521   C388.990509,542.005981 389.034180,542.053101 389.014343,542.418213   C389.006409,543.515442 389.018372,544.247559 388.778168,545.092834   C387.188751,545.452271 388.641327,549.743042 385.462311,547.319275   C385.372833,547.930481 385.283356,548.541687 385.193970,549.152954   C383.953766,550.061157 382.713531,550.969360 381.051208,552.186646   C383.206390,553.693909 384.450623,554.564026 386.293243,555.852722   C383.885498,557.737122 381.808838,559.362366 379.366089,560.993774   C379.000000,561.000000 378.996338,560.995544 379.047363,560.638184   C381.708008,557.153687 380.687927,554.614075 377.963013,552.337524   C376.556000,553.268005 375.266205,554.120972 373.976440,554.973938   C373.976440,554.973938 373.485016,554.988525 373.242920,554.994263   C373.000854,555.000000 373.000000,555.007324 373.018005,554.692627   C374.060699,551.380005 371.805145,551.374268 369.737701,551.007996   C369.521118,551.016602 369.087555,551.018677 369.069702,550.630737   C368.869904,546.367126 366.667511,544.815796 362.973511,544.779663   C362.962891,544.591064 362.942474,544.213867 363.205414,544.051208   C365.925629,540.135010 368.907837,543.422546 371.760315,543.406067   C372.069916,542.067383 372.355713,540.831726 372.778595,539.003235   C369.562592,539.003235 366.779724,539.003235 363.988098,538.618225   C365.129364,537.583496 366.210785,536.676819 367.446198,536.347229   C369.091553,535.908203 370.856781,535.918152 372.813110,535.709290   C369.374725,534.274475 366.607880,533.119873 364.061340,531.695068   C365.188019,531.288940 366.094360,531.153015 367.182281,531.289551   C368.235596,531.313599 369.777954,531.200623 369.860321,530.792847   C370.176666,529.226013 370.025146,527.564697 370.416779,525.957520   C373.341705,525.462158 376.275970,524.247986 375.750000,528.913147   C374.460449,529.531189 373.499115,530.070374 372.537781,530.609619   C372.935608,531.049805 373.333435,531.490051 373.731232,531.930237   C374.541779,530.927063 375.352356,529.923889 376.323914,528.788330   C376.693848,528.463623 376.846252,528.233948 376.942169,527.966736  M379.721771,542.449341   C379.612579,543.030823 379.503387,543.612305 379.394196,544.193787   C379.800964,544.197754 380.207703,544.201721 380.614471,544.205627   C380.517181,543.623718 380.419922,543.041748 379.721771,542.449341  M374.240479,542.818909   C374.362793,542.987549 374.485077,543.156250 374.607361,543.324890   C374.582001,543.089233 374.556610,542.853577 374.240479,542.818909  z\",id:\"svg_1552\"})),_path1551||(_path1551=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M402.049744,549.327393   C401.900543,547.843933 401.799652,546.707703 401.610077,544.572693   C403.747498,545.604004 405.425842,546.413879 407.747894,547.534302   C409.070496,545.919189 410.693817,543.936768 412.147675,542.161316   C414.312531,543.132629 415.919006,543.853394 418.079590,544.320435   C419.086487,543.369080 419.539307,542.671448 419.992126,541.973755   C421.035645,541.122742 422.079163,540.271729 423.122681,539.420654   C423.406281,540.101990 423.689850,540.783264 423.744598,542.073853   C423.001495,544.303467 422.487244,545.923889 421.972992,547.544373   C422.537811,547.731873 423.102600,547.919434 423.667389,548.106934   C424.309814,547.091309 424.952209,546.075745 425.592041,545.063599   C426.899841,546.148438 427.655151,549.871643 430.006104,546.000000   C430.488770,545.739441 430.971466,545.478882 432.018890,545.151733   C432.781769,545.152771 432.979950,545.220398 433.194275,545.301208   C433.210449,545.314453 433.239410,545.339233 433.239441,545.339233   C431.745178,547.219910 430.250946,549.100586 428.216980,550.681030   C425.932739,550.205627 424.188171,550.030457 422.443634,549.855286   C422.379120,550.208374 422.314636,550.561462 422.250153,550.914551   C420.336243,549.401978 418.422333,547.889404 416.457031,546.336182   C413.807373,547.846680 410.321625,548.725464 412.849915,553.007446   C412.395233,553.449341 412.182922,553.751038 411.721588,553.859619   C410.198608,551.980347 409.005310,550.386597 407.178680,553.245667   C406.318939,554.591309 405.063934,555.684387 403.679565,556.860535   C402.640320,555.902527 401.909576,554.976013 401.178833,554.049438   C406.557098,553.656860 402.703339,551.324402 402.049744,549.327393  z\",id:\"svg_1553\"})),_path1552||(_path1552=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M385.558044,549.094299   C385.283356,548.541687 385.372833,547.930481 385.462311,547.319275   C388.641327,549.743042 387.188751,545.452271 389.115662,545.053833   C391.736908,543.420776 391.278564,542.526489 389.034180,542.053101   C389.034180,542.053101 388.990509,542.005981 388.981689,541.612061   C388.973236,540.472961 388.973602,539.727905 388.984985,538.991394   C388.996033,539.000000 388.984222,538.976807 389.328979,538.929199   C390.114105,537.928406 390.554504,536.975159 390.995148,536.015259   C390.995422,536.008545 391.003662,536.000000 391.003662,536.000000   C395.914032,536.139282 398.580719,538.671326 399.635529,544.357788   C398.244263,543.625793 396.960907,542.950500 395.677551,542.275208   C395.443695,542.521790 395.209839,542.768372 394.975983,543.014893   C396.316559,544.713501 397.657135,546.412170 399.033630,548.457520   C395.996185,551.333740 392.484467,549.405273 389.193848,549.719910   C388.134796,549.821228 387.014496,549.281921 385.558044,549.094299  z\",id:\"svg_1554\"})),_path1553||(_path1553=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M400.998779,564.003296   C401.313263,564.789795 401.627747,565.576355 401.970520,566.681396   C400.560089,567.796814 399.121368,568.593628 397.393524,569.550598   C395.950226,568.509277 394.107117,567.179504 392.135315,565.756897   C393.096161,564.418701 394.053589,563.085266 395.004211,561.377258   C394.997375,561.002686 394.986084,561.013916 395.355652,560.996765   C397.483032,561.987549 399.240906,562.995422 400.998779,564.003296  z\",id:\"svg_1555\"})),_path1554||(_path1554=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M395.003784,560.996460   C392.101959,560.608215 389.193787,560.226196 385.061340,559.683411   C387.492584,557.788696 389.436035,556.274231 391.689758,554.879883   C392.000000,555.000000 392.001221,555.000000 392.021210,555.343628   C393.029999,556.460632 394.018799,557.234009 395.004395,558.004272   C395.001221,558.001221 395.001221,558.000061 395.015839,558.376587   C395.015656,559.506714 395.000885,560.260315 394.986084,561.013916   C394.986084,561.013916 394.997375,561.002686 395.003784,560.996460  z\",id:\"svg_1556\"})),_path1555||(_path1555=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M395.355652,560.996765   C395.000885,560.260315 395.015656,559.506714 395.376526,558.364502   C396.792328,557.006897 397.862091,556.037903 398.931885,555.068909   C399.457611,554.726074 399.983337,554.383301 400.843933,554.044922   C401.909576,554.976013 402.640320,555.902527 403.683044,557.132874   C403.991425,557.617432 403.987823,557.798157 403.984253,557.978821   C402.216675,558.243591 400.449097,558.508301 398.467133,558.805176   C399.412415,560.478516 400.208496,561.887695 401.001678,563.650085   C399.240906,562.995422 397.483032,561.987549 395.355652,560.996765  z\",id:\"svg_1557\"})),_path1556||(_path1556=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M402.991577,567.371582   C404.372223,566.028687 405.735535,565.054504 407.593048,563.727234   C407.144440,566.983521 406.819702,569.340759 406.228638,571.922668   C404.966309,570.678345 403.970276,569.209290 402.991577,567.371582  z\",id:\"svg_1558\"})),_path1557||(_path1557=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M398.616943,554.903320   C397.862091,556.037903 396.792328,557.006897 395.361877,557.987976   C395.001221,558.000061 395.001221,558.001221 394.995880,557.625854   C393.994110,556.500366 392.997681,555.750183 392.001221,555.000000   C392.001221,555.000000 392.000000,555.000000 391.999390,555.000000   C392.130676,552.589294 392.505188,550.804504 395.294098,553.276123   C396.097504,553.988098 397.288635,554.262634 398.616943,554.903320  z\",id:\"svg_1559\"})),_path1558||(_path1558=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M379.002197,561.002441   C378.437439,564.488342 377.121185,566.766724 373.045959,564.329590   C373.000244,563.978149 372.999176,564.003784 373.326904,563.953369   C375.435211,562.933777 377.215790,561.964661 378.996338,560.995544   C378.996338,560.995544 379.000000,561.000000 379.002197,561.002441  z\",id:\"svg_1560\"})),_path1559||(_path1559=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M384.530029,561.536682   C384.474976,562.036377 384.229675,562.341309 383.984375,562.646240   C383.790497,562.443665 383.596649,562.241089 383.402771,562.038513   C383.715149,561.806335 384.027496,561.574158 384.530029,561.536682  z\",id:\"svg_1561\"})),_path1560||(_path1560=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M411.970612,554.052673   C412.182922,553.751038 412.395233,553.449341 413.088318,552.876831   C415.061249,553.795593 416.932373,554.726929 417.959412,556.233643   C419.625671,558.678284 420.271057,558.713684 422.045471,556.187012   C423.320099,554.371887 425.881683,553.460510 427.869141,552.145996   C428.385529,554.227966 428.951294,555.990784 431.089691,553.154541   C431.293213,552.884644 432.375183,553.277039 433.140533,553.668762   C431.459503,556.076904 429.687317,558.178284 427.790680,560.427124   C428.408936,560.707092 429.498535,561.200500 430.534912,561.669800   C428.281586,564.614685 426.137848,567.416443 424.003723,570.606995   C417.574707,574.298096 415.360443,567.974365 411.488922,565.539490   C413.434906,563.513184 415.405884,561.460938 417.376862,559.408630   C417.025940,559.042847 416.675018,558.677063 416.324066,558.311218   C414.784119,559.200928 413.244141,560.090637 411.361450,560.633240   C410.205994,558.035767 416.483704,556.868164 411.970612,554.052673  z\",id:\"svg_1562\"})),_path1561||(_path1561=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M411.721588,553.859619   C416.483704,556.868164 410.205994,558.035767 410.994385,560.643066   C408.892242,559.999634 406.814423,558.999329 404.360413,557.988892   C403.987823,557.798157 403.991425,557.617432 403.991516,557.164307   C405.063934,555.684387 406.318939,554.591309 407.178680,553.245667   C409.005310,550.386597 410.198608,551.980347 411.721588,553.859619  z\",id:\"svg_1563\"})),_path1562||(_path1562=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M424.137451,571.231079   C425.015656,571.421509 426.036285,571.855408 427.083374,572.625244   C426.166504,572.465698 425.223175,571.970154 424.137451,571.231079  z\",id:\"svg_1564\"})),_path1563||(_path1563=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M429.710510,577.044373   C429.567017,577.390198 429.108185,577.744141 428.343414,578.137085   C428.490051,577.801514 428.942627,577.427002 429.710510,577.044373  z\",id:\"svg_1565\"})),_path1564||(_path1564=/*#__PURE__*/React.createElement(\"path\",{fill:\"#9C5721\",opacity:1,stroke:\"none\",d:\" M403.554688,560.458923   C403.589203,560.514526 403.520172,560.403320 403.554688,560.458923  z\",id:\"svg_1566\"})),_path1565||(_path1565=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M439.636841,576.014648   C440.636414,577.404602 441.278931,578.801941 442.028839,580.519531   C442.136200,580.839905 441.993652,580.968018 441.585999,580.955444   C440.089539,580.625366 439.000702,580.307800 437.911896,579.990234   C437.911896,579.990234 437.437988,579.996521 437.200684,579.988525   C436.734711,579.086060 436.795197,577.713318 436.231750,577.372681   C431.595886,574.569946 434.671753,573.365784 437.615692,572.000610   C438.002716,571.997375 438.041962,572.021973 438.041962,572.021973   C437.398315,573.682129 435.771332,575.646667 439.636841,576.014648  z\",id:\"svg_1567\"})),_path1566||(_path1566=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M437.975586,580.339355   C439.000702,580.307800 440.089539,580.625366 441.506531,581.008911   C440.569550,580.946167 439.304413,580.817383 437.975586,580.339355  z\",id:\"svg_1568\"})),_path1567||(_path1567=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M341.993286,518.364380   C343.451752,519.319336 344.899841,520.652527 346.718933,522.344238   C348.402618,523.814697 349.715271,524.926636 351.019165,526.474060   C350.977264,528.958130 350.944122,531.006653 350.541473,533.046143   C349.186432,533.033325 348.200836,533.029480 346.834045,532.998047   C345.944702,532.973816 345.436584,532.977234 344.928467,532.980591   C344.928467,532.980652 344.472717,532.981018 344.239960,532.615112   C343.999176,531.503235 343.991150,530.757263 343.983124,530.011230   C343.354614,528.690186 343.046387,526.964233 342.016998,526.150024   C340.715454,525.120605 338.826691,524.833557 336.659607,524.028870   C338.661865,522.040527 340.322418,520.391602 341.993286,518.364380  z\",id:\"svg_1569\"})),_path1568||(_path1568=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M342.000000,533.000000   C341.298462,534.802307 340.596954,536.604614 339.781616,538.699402   C337.068420,537.523193 334.744263,536.515625 332.183960,535.235474   C332.722504,534.291565 333.497162,533.620178 334.846069,533.212891   C337.613556,533.317932 339.806763,533.158936 342.000000,533.000000  z\",id:\"svg_1570\"})),_path1569||(_path1569=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M333.995117,519.995117   C333.177307,521.883423 332.359497,523.771667 331.457733,525.853760   C329.464996,524.076294 327.783142,522.576111 325.989075,520.975830   C328.710938,520.640198 331.023499,520.355103 333.668030,520.034973   C334.000000,520.000000 333.995117,519.995117 333.995117,519.995117  z\",id:\"svg_1571\"})),_path1570||(_path1570=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M335.802155,531.954407   C336.849854,530.469910 337.897552,528.985474 339.377777,526.888184   C340.142914,527.610779 341.024658,528.443481 341.581055,529.648315   C339.437836,530.665100 337.619995,531.309753 335.802155,531.954407  z\",id:\"svg_1572\"})),_path1571||(_path1571=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M335.626770,532.081055   C337.619995,531.309753 339.437836,530.665100 341.631531,530.007812   C342.007355,529.995117 342.000244,530.000000 341.999207,530.374512   C341.998779,531.499390 341.999390,532.249695 342.000000,533.000000   C339.806763,533.158936 337.613556,533.317932 335.200745,533.202637   C335.078644,532.649475 335.235352,532.409180 335.626770,532.081055  z\",id:\"svg_1573\"})),_path1572||(_path1572=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M319.896942,511.218109   C320.588318,511.125824 321.139984,511.335114 321.827026,511.817322   C321.109161,513.086548 320.255920,514.082886 319.402679,515.079224   C319.024353,514.836060 318.646057,514.592957 318.267731,514.349792   C318.764221,513.406433 319.260742,512.463074 319.896942,511.218109  z\",id:\"svg_1574\"})),_path1573||(_path1573=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M334.001587,520.002441   C335.063446,518.857788 336.123688,517.710754 337.183960,516.563660   C337.545959,516.974182 337.907959,517.384705 338.269958,517.795227   C337.080048,518.529053 335.890137,519.262878 334.347656,519.995911   C333.995117,519.995117 334.000000,520.000000 334.001587,520.002441  z\",id:\"svg_1575\"})),_path1574||(_path1574=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M342.335876,533.000488   C341.999390,532.249695 341.998779,531.499390 341.999634,530.373718   C342.442108,530.001526 342.883087,530.004700 343.653625,530.009521   C343.991150,530.757263 343.999176,531.503235 344.012207,532.622559   C343.568726,532.997559 343.120209,532.999268 342.335876,533.000488  z\",id:\"svg_1576\"})),_path1575||(_path1575=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M323.745941,517.955994   C324.265808,518.093750 324.582825,518.436646 324.899841,518.779541   C324.594727,519.057007 324.289642,519.334473 323.984558,519.611938   C323.837402,519.128357 323.690247,518.644714 323.745941,517.955994  z\",id:\"svg_1577\"})),_path1576||(_path1576=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M317.268188,509.978943   C317.792358,509.789520 318.698120,509.609863 319.763519,509.702698   C319.165375,509.979736 318.407532,509.984192 317.268188,509.978943  z\",id:\"svg_1578\"})),_path1577||(_path1577=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M313.950500,515.948914   C314.081573,515.505615 314.246399,515.093323 314.411224,514.681030   C314.427673,515.046753 314.444122,515.412537 314.258942,515.906738   C314.057312,516.035278 313.984222,515.979919 313.950500,515.948914  z\",id:\"svg_1579\"})),_path1578||(_path1578=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M351.344360,545.041138   C351.007629,544.252075 351.022491,543.497437 351.017853,542.372314   C350.998352,542.001709 350.986725,542.013672 351.343872,541.988342   C353.806213,540.409180 353.361725,539.466614 350.992828,538.992554   C350.998230,538.998352 351.008667,539.009766 351.006897,538.658142   C351.201843,537.705872 351.353027,536.604126 351.602325,536.581482   C354.382568,536.328735 357.178009,536.242615 359.979736,536.337402   C359.990112,536.563171 360.039093,537.012512 360.032898,537.353699   C360.349213,538.481079 360.671692,539.267334 360.987976,540.283386   C360.981781,540.513245 360.976990,540.973145 360.950806,541.295532   C360.602722,542.414124 360.280853,543.210388 359.657410,544.044312   C359.160278,544.135315 358.964783,544.188538 358.769257,544.241760   C357.641663,545.197937 356.514099,546.154114 354.923370,547.503113   C354.399139,547.108765 353.047546,546.092163 351.344360,545.041138  z\",id:\"svg_1580\"})),_path1579||(_path1579=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M358.845154,544.583435   C358.964783,544.188538 359.160278,544.135315 360.032410,544.058044   C361.453491,544.093994 362.197968,544.153931 362.942474,544.213867   C362.942474,544.213867 362.962891,544.591064 363.101929,545.093994   C365.189819,547.404114 367.138672,549.211426 369.087555,551.018677   C369.087555,551.018677 369.521118,551.016602 369.740234,551.377075   C370.972900,552.827515 371.986450,553.917419 373.000000,555.007324   C373.000000,555.007324 373.000854,555.000000 372.997192,555.000000   C371.028961,557.166077 369.594513,557.354187 367.606903,554.610962   C365.076202,551.118164 361.848358,548.130493 358.845154,544.583435  z\",id:\"svg_1581\"})),_path1580||(_path1580=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M379.047394,560.638184   C377.215790,561.964661 375.435211,562.933777 373.315369,563.954224   C372.984314,563.253723 372.992554,562.501892 373.010986,561.374268   C373.021210,560.998474 372.996185,561.000732 373.327087,560.966492   C374.321045,560.365112 374.984131,559.797913 375.647217,559.230713   C375.100494,558.781555 374.553772,558.332458 374.007080,557.883301   C373.998596,557.156372 373.990143,556.429382 373.979065,555.338196   C375.266205,554.120972 376.556000,553.268005 377.963013,552.337524   C380.687927,554.614075 381.708008,557.153687 379.047394,560.638184  z\",id:\"svg_1582\"})),_path1581||(_path1581=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M343.394775,552.006470   C343.664856,550.904480 344.335785,549.805176 345.003052,548.353271   C344.999390,548.000732 345.011017,547.984436 345.011017,547.984436   C346.769989,547.001038 348.528961,546.017639 350.644897,545.015930   C351.383240,546.541199 351.764618,548.084656 352.222931,549.939453   C349.508698,550.606018 346.652161,551.307556 343.394775,552.006470  z\",id:\"svg_1583\"})),_path1582||(_path1582=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M373.879089,558.194214   C374.553772,558.332458 375.100494,558.781555 375.647217,559.230713   C374.984131,559.797913 374.321045,560.365112 373.327148,560.977600   C373.247955,560.183655 373.499542,559.344421 373.879089,558.194214  z\",id:\"svg_1584\"})),_path1583||(_path1583=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M347.215271,533.025696   C348.200836,533.029480 349.186432,533.033325 350.438049,533.369141   C350.914337,535.464355 347.113495,537.457825 351.008667,539.009766   C351.008667,539.009766 350.998230,538.998352 350.997314,539.371094   C350.993195,540.500427 350.989960,541.257019 350.986755,542.013672   C350.986725,542.013672 350.998352,542.001709 351.005005,541.995117   C349.244843,540.181213 347.478058,538.373962 346.134399,536.080444   C346.776764,534.738037 346.996033,533.881897 347.215271,533.025696  z\",id:\"svg_1585\"})),_path1584||(_path1584=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M346.834045,532.998047   C346.996033,533.881897 346.776764,534.738037 346.269989,535.769165   C345.659302,535.167297 345.336121,534.390442 344.970703,533.297119   C345.436584,532.977234 345.944702,532.973816 346.834045,532.998047  z\",id:\"svg_1586\"})),_path1585||(_path1585=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M344.992126,548.008057   C344.221832,547.963623 343.458771,547.911926 342.695679,547.860229   C342.720459,547.630981 342.745209,547.401794 342.769989,547.172546   C343.411957,547.267456 344.053925,547.362427 344.853455,547.720886   C345.011017,547.984436 344.999390,548.000732 344.992126,548.008057  z\",id:\"svg_1587\"})),_path1586||(_path1586=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M367.127991,562.360962   C366.855255,562.638611 366.448639,562.753845 366.034027,562.811096   C365.960602,562.821289 365.853790,562.590027 365.762390,562.470337   C366.172058,562.373108 366.581696,562.275940 367.127991,562.360962  z\",id:\"svg_1588\"})),_path1587||(_path1587=/*#__PURE__*/React.createElement(\"path\",{fill:\"#8C573A\",opacity:1,stroke:\"none\",d:\" M471.013245,278.013855   C470.707794,278.537018 470.387543,279.045074 470.067322,279.553131   C469.856659,279.367218 469.645996,279.181305 469.435364,278.995392   C469.756287,278.678986 470.077179,278.362579 470.683105,278.007629   C470.968140,277.969055 470.998474,277.998718 471.013245,278.013855  z\",id:\"svg_1589\"})),_path1588||(_path1588=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M475.001831,291.233093   C475.117126,291.406799 475.060852,291.581543 475.004578,291.756317   C474.946472,291.582275 474.888367,291.408203 475.001831,291.233093  z\",id:\"svg_1590\"})),_path1589||(_path1589=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M506.462341,284.438507   C506.522461,284.401611 506.402191,284.475403 506.462341,284.438507  z\",id:\"svg_1591\"})),_path1590||(_path1590=/*#__PURE__*/React.createElement(\"path\",{fill:\"#85553A\",opacity:1,stroke:\"none\",d:\" M635.054565,317.672028   C634.636658,317.984955 634.165344,317.996521 633.341309,318.009338   C633.659485,317.797272 634.330322,317.583954 635.054565,317.672028  z\",id:\"svg_1592\"})),_path1591||(_path1591=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M413.989014,289.993286   C413.028595,288.554932 412.068207,287.116577 411.052673,285.327606   C411.429840,279.586212 414.315796,278.013580 420.500732,281.002289   C419.567963,278.320312 418.932373,276.492798 418.149353,274.336975   C419.724152,275.546997 422.943756,270.417358 423.607758,275.655212   C422.887848,275.964050 422.467407,275.952484 421.976440,275.804199   C421.806854,275.625427 421.707733,275.583405 421.608612,275.541351   C421.720978,275.708710 421.833344,275.876068 422.002014,276.379456   C423.057617,276.494385 424.056885,276.273285 425.056152,276.052185   C425.703766,275.588196 426.351349,275.124207 427.085388,274.346008   C428.257019,274.279846 429.342194,274.527954 430.716156,275.276672   C429.734161,277.065063 428.463379,278.352783 427.067963,279.766815   C427.732605,280.633087 428.682861,281.871643 430.104462,283.724518   C427.852753,284.776123 425.825226,286.608795 424.113953,286.350067   C419.638367,285.673401 418.885315,288.607635 417.897858,291.702423   C419.288116,290.773712 420.678375,289.845001 422.068634,288.916321   C422.245728,289.158783 422.422791,289.401276 422.599884,289.643768   C422.054688,290.771210 421.509491,291.898651 420.656769,293.162384   C418.843262,294.289642 417.337280,295.280579 415.619995,296.268555   C415.408722,296.265564 415.038452,296.061859 415.038452,296.061859   C413.837769,295.549011 412.637085,295.036194 411.562164,294.206665   C412.454956,292.591095 413.221985,291.292206 413.989014,289.993286  z\",id:\"svg_1593\"})),_path1592||(_path1592=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D38E5A\",opacity:1,stroke:\"none\",d:\" M408.100281,272.476410   C411.639587,270.418610 414.958374,270.166107 417.923035,273.651611   C417.400940,274.532990 416.597473,274.962799 416.271606,275.626923   C414.617401,278.998260 412.907990,279.020477 410.803558,276.002899   C410.427124,275.463074 409.464996,275.331665 408.386658,275.005859   C408.000000,275.000000 407.998779,274.998779 407.998779,274.998779   C408.018127,274.276978 408.037506,273.555176 408.100281,272.476410  z\",id:\"svg_1594\"})),_path1593||(_path1593=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D38E5A\",opacity:1,stroke:\"none\",d:\" M408.000610,275.000610   C407.827789,275.867401 407.654388,276.733612 407.480957,277.599792   C407.113312,277.465179 406.745697,277.330536 406.378052,277.195892   C406.692261,276.492218 407.006439,275.788513 407.659698,275.041809   C407.998779,274.998779 408.000000,275.000000 408.000610,275.000610  z\",id:\"svg_1595\"})),_path1594||(_path1594=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M497.667542,298.846100   C499.157227,299.538544 500.339081,300.097382 501.729126,301.125854   C501.003479,301.861115 500.069672,302.126801 498.292145,302.632538   C501.322083,305.869568 504.159180,308.900574 507.002747,312.189392   C507.014191,312.619019 507.019196,312.790833 506.818909,313.165192   C505.510223,313.793762 504.072845,313.919403 503.367645,314.703522   C501.449829,316.835999 499.865265,319.265167 498.104187,321.542450   C496.522980,323.587189 494.491760,325.387695 493.345245,327.644562   C490.431915,333.379364 487.902954,339.309418 485.086914,345.451904   C490.007904,347.009155 485.421661,349.274841 484.660034,350.549347   C487.336304,357.744781 487.089813,364.381287 486.656158,371.049866   C485.858765,372.549286 485.394073,373.997559 484.882904,375.590820   C482.938324,373.996246 481.039978,372.439606 478.532043,370.383057   C478.532043,372.398987 478.532043,373.432739 478.532043,375.367218   C471.992584,375.367218 465.714630,375.367218 459.129669,375.367218   C459.778320,374.021667 460.317566,372.903046 461.169434,371.135925   C459.545807,370.981293 458.256195,370.501160 457.223328,370.829285   C454.482544,371.699921 451.852600,372.919617 449.126190,373.610199   C449.293701,370.974182 449.536591,368.730408 449.728363,366.482269   C450.048584,362.727875 454.344330,360.280518 453.426758,355.860779   C453.809601,354.131805 453.913269,352.577057 454.269897,350.806122   C455.347595,349.059021 456.172363,347.528076 457.377380,345.997131   C458.772888,345.464203 459.788116,344.931305 460.803345,344.398376   C460.270142,343.846008 459.736938,343.293640 459.203735,342.741272   C458.470093,343.828461 457.736420,344.915649 456.709808,345.863403   C455.313690,345.049530 454.210541,344.375061 453.087158,343.367126   C453.057220,342.365906 453.047485,341.698090 453.382751,341.006104   C454.169830,340.195038 455.063721,339.335938 454.952057,338.637543   C454.766541,337.477234 453.177887,336.066315 453.499725,335.377380   C455.489319,331.118927 452.123169,329.325317 450.010986,326.685486   C450.008881,326.448639 449.995758,325.975159 450.134735,325.639221   C451.993805,321.077026 450.031342,319.333679 446.004150,318.989746   C445.998779,319.000732 446.021271,318.991730 446.013855,318.638916   C445.337219,317.524231 444.667999,316.762329 443.999390,316.000244   C444.000000,316.000000 443.999512,316.001221 443.958618,315.673523   C442.945282,314.227051 441.972839,313.108276 440.997742,311.985535   C440.995117,311.981537 440.991425,311.968018 440.973053,311.676453   C440.636108,310.929657 440.317505,310.474457 439.990936,309.764801   C439.976349,309.340759 439.969757,309.171143 440.264160,308.872681   C441.370056,307.840637 442.174896,306.937469 442.988342,305.649963   C442.993469,304.497803 442.990021,303.730011 442.993042,302.707825   C443.009888,302.284027 443.020264,302.114685 443.380981,301.909424   C444.968750,301.224152 446.499329,300.833038 447.361755,299.853607   C448.240509,298.855621 448.461945,297.278870 448.973267,295.593750   C447.344055,292.814728 445.712769,290.397552 444.081512,287.980347   C448.315186,283.868225 450.502777,287.500610 452.805420,290.842743   C453.452209,291.565033 454.200867,291.756683 454.949493,291.948303   C454.961578,292.124512 454.973633,292.300720 455.037445,293.120209   C455.392212,295.509399 455.695190,297.255310 455.681396,299.043335   C454.386322,299.969727 453.407990,300.854065 451.933228,302.187164   C453.534790,302.587769 454.292053,302.777191 455.023132,302.980743   C454.996948,302.994904 455.035248,302.948914 455.016388,303.323669   C454.293243,305.242157 453.588959,306.785889 452.899292,308.297638   C454.733185,309.625305 456.369293,310.809784 458.034393,312.337006   C458.644684,313.329651 459.226013,313.979553 459.807373,314.629456   C460.202972,313.751068 460.598602,312.872681 461.368805,311.999817   C463.076691,311.045013 464.409973,310.084717 465.952789,308.973511   C467.002899,309.893738 468.056366,310.816956 469.494843,312.077576   C470.075470,310.907867 470.541412,309.969238 471.007324,309.030640   C473.067047,308.361755 475.126740,307.692902 477.697449,307.255707   C478.588745,307.461884 478.969055,307.436432 479.349335,307.410950   C478.921600,307.251221 478.493835,307.091522 478.066071,306.931824   C479.514862,306.394257 480.963623,305.856659 482.730469,305.172485   C485.047119,304.031006 487.009277,302.952667 489.053131,302.061768   C491.788849,300.869324 494.587921,299.822083 497.667542,298.846100  M463.930847,326.427216   C463.527466,326.124207 463.124115,325.821167 462.720764,325.518127   C462.631775,325.777679 462.425293,326.238556 462.471893,326.265778   C462.958649,326.549866 463.486023,326.764435 464.072906,327.693359   C464.765900,328.425690 465.458862,329.158051 466.151855,329.890381   C466.479065,329.394257 466.806274,328.898102 467.133484,328.401978   C466.088409,327.935455 465.043304,327.468964 463.930847,326.427216  M474.002502,324.002075   C474.002502,324.002075 474.003357,323.975983 474.004089,324.732239   C473.343048,326.126465 472.682037,327.520691 472.043091,328.868408   C473.521942,330.209808 474.868713,331.431366 476.742035,333.130554   C477.854431,331.372162 478.923431,329.682434 480.745911,327.966217   C481.488098,326.957245 482.230286,325.948273 482.972473,324.939301   C482.329132,324.696594 481.685822,324.453857 481.042480,324.211151   C480.697449,325.476593 480.352417,326.742035 479.254700,327.988922   C478.501892,327.991364 477.749054,327.993805 477.000000,328.000000   C477.000000,328.000000 477.003693,328.002716 477.291016,327.347565   C477.865814,325.537292 478.440643,323.727020 479.371063,321.417206   C481.310699,316.940491 476.373291,317.385956 475.563904,315.069702   C474.096069,316.656616 473.009552,317.831299 471.162048,318.993408   C469.290894,319.924774 467.419708,320.856140 465.548553,321.787476   C465.756805,322.176605 465.965057,322.565735 466.173340,322.954834   C468.790131,323.302460 471.406921,323.650085 474.002502,324.002075  M474.662933,345.373901   C472.756500,350.329285 478.714264,349.115509 479.242737,352.160828   C479.731567,352.129120 480.220428,352.097443 480.709259,352.065735   C481.123291,349.997070 481.537323,347.928406 481.951324,345.859741   C479.906921,345.594696 477.862854,345.327179 475.817535,345.069397   C475.659485,345.049500 475.492767,345.098206 474.662933,345.373901  M454.173401,313.819580   C453.190369,312.305695 452.207336,310.791809 451.224304,309.277924   C451.522858,309.757874 451.821411,310.237793 452.119965,310.717743   C450.478760,311.659790 448.837585,312.601837 446.978271,313.669098   C448.001892,314.890869 449.020569,316.106750 449.990753,317.264771   C451.277344,316.159943 452.436310,315.164642 454.173401,313.819580  M478.839478,365.276062   C476.769073,365.631287 474.698669,365.986481 472.409698,366.379181   C473.143250,367.639282 474.137329,369.346924 474.671631,370.264771   C476.390503,369.061584 477.893158,367.904449 479.511078,366.940887   C479.999634,366.649933 480.808044,366.896057 481.469940,366.896179   C480.819122,366.293488 480.168304,365.690796 478.839478,365.276062  M458.874695,321.301880   C459.028076,322.146179 459.181458,322.990448 459.334839,323.834747   C460.077545,323.368378 460.820251,322.902008 461.562988,322.435638   C460.894653,321.993225 460.226349,321.550812 458.874695,321.301880  M463.168030,317.612671   C463.847778,316.897369 464.527496,316.182068 465.207214,315.466766   C464.775726,315.195953 464.344238,314.925140 463.912750,314.654327   C463.458252,315.599335 463.003784,316.544312 463.168030,317.612671  M470.271057,332.181427   C469.750458,331.903259 469.229828,331.625061 468.709229,331.346893   C468.657440,332.039429 468.605682,332.731995 468.553894,333.424530   C469.045105,333.195404 469.536285,332.966278 470.271057,332.181427  M468.846741,326.716248   C469.410065,326.570923 469.973389,326.425598 470.536713,326.280304   C470.339020,325.913513 470.141296,325.546722 469.943604,325.179993   C469.429993,325.540558 468.916412,325.901123 468.846741,326.716248  M460.621124,328.703125   C459.944061,328.662659 459.266968,328.622192 458.589905,328.581726   C458.581451,328.867340 458.573029,329.152924 458.564575,329.438538   C459.251251,329.404327 459.937897,329.370117 460.621124,328.703125  M469.081299,341.120453   C469.303192,341.639252 469.525055,342.158020 469.746948,342.676819   C470.012329,342.553833 470.277710,342.430817 470.543091,342.307831   C470.245178,341.894653 469.947266,341.481445 469.081299,341.120453  M450.827576,305.994690   C450.729401,305.576141 450.631256,305.157623 450.533112,304.739075   C450.409760,304.832886 450.171753,304.942291 450.182037,305.017914   C450.239807,305.442413 450.357483,305.858795 450.827576,305.994690  M472.789154,343.803772   C472.602325,343.865601 472.415497,343.927429 472.228668,343.989258   C472.417511,344.049347 472.606354,344.109467 472.789154,343.803772  M448.202728,307.249329   C448.037567,307.369446 447.872437,307.489594 447.707275,307.609711   C447.938904,307.584259 448.170532,307.558777 448.202728,307.249329  M482.760834,369.220245   C482.633087,369.049194 482.505341,368.878143 482.377625,368.707092   C482.405945,368.947144 482.434265,369.187225 482.760834,369.220245  M466.519958,313.389099   C466.519958,313.389099 466.421478,313.559814 466.421478,313.559814   C466.421478,313.559814 466.614716,313.536316 466.519958,313.389099  z\",id:\"svg_1596\"})),_path1595||(_path1595=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M420.964294,293.026093   C421.509491,291.898651 422.054688,290.771210 422.599884,289.643768   C422.422791,289.401276 422.245728,289.158783 422.068634,288.916321   C420.678375,289.845001 419.288116,290.773712 417.897858,291.702423   C418.885315,288.607635 419.638367,285.673401 424.113953,286.350067   C425.825226,286.608795 427.852753,284.776123 430.104462,283.724518   C428.682861,281.871643 427.732605,280.633087 427.067963,279.766815   C428.463379,278.352783 429.734161,277.065063 431.029053,275.421265   C431.857880,275.595947 432.662598,276.126648 433.937866,277.101868   C435.333740,278.174988 436.259064,278.803558 437.184387,279.432129   C437.048187,279.759552 436.912018,280.086975 436.775818,280.414368   C435.615265,280.482269 434.454742,280.550171 433.294189,280.618042   C433.160919,281.159790 433.027618,281.701508 432.894348,282.243225   C434.215942,282.554871 435.539764,283.111359 436.858459,283.099426   C437.884918,283.090210 438.905029,282.373169 439.927948,281.970703   C439.927948,281.970703 439.974091,282.037537 440.030823,282.372650   C440.708221,283.158417 441.328857,283.609100 441.949493,284.059753   C441.966339,285.080414 441.983215,286.101074 441.737976,287.667328   C440.717102,289.165955 439.958344,290.118958 438.847687,291.047852   C437.483582,291.797119 436.471375,292.570557 435.427521,293.368164   C435.160583,292.545990 434.883514,291.692719 434.480133,290.450287   C433.539001,292.555298 432.765472,294.285522 431.722412,296.232941   C430.298981,297.557617 429.145020,298.665070 427.991089,299.772522   C425.928375,297.232544 420.744049,297.943909 420.964294,293.026093  z\",id:\"svg_1597\"})),_path1596||(_path1596=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M455.998169,299.001221   C455.695190,297.255310 455.392212,295.509399 455.048279,293.384918   C456.698029,293.989868 458.388702,294.973358 460.389099,296.027954   C461.900757,297.702271 463.102783,299.305511 464.633301,300.972748   C464.981079,301.478516 465.000397,301.920288 464.628540,302.691071   C461.177277,302.055084 458.127563,299.747650 455.035248,302.948914   C455.035248,302.948914 454.996948,302.994904 455.078186,302.643036   C455.438995,301.194519 455.718597,300.097870 455.998169,299.001221  z\",id:\"svg_1598\"})),_path1597||(_path1597=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M439.199585,291.072021   C439.958344,290.118958 440.717102,289.165955 441.743896,288.050171   C442.471100,287.908417 442.930206,287.929474 443.735413,287.965454   C445.712769,290.397552 447.344055,292.814728 448.619751,295.570068   C446.800201,295.336365 444.734802,293.843964 443.970612,294.343231   C439.271362,297.413239 439.651337,293.768005 439.199585,291.072021  z\",id:\"svg_1599\"})),_path1598||(_path1598=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M440.066864,281.681030   C438.905029,282.373169 437.884918,283.090210 436.858459,283.099426   C435.539764,283.111359 434.215942,282.554871 432.894348,282.243225   C433.027618,281.701508 433.160919,281.159790 433.294189,280.618042   C434.454742,280.550171 435.615265,280.482269 436.775818,280.414368   C436.912018,280.086975 437.048187,279.759552 437.184387,279.432129   C436.259064,278.803558 435.333740,278.174988 434.189941,277.283386   C437.067627,277.025360 440.639465,276.351898 440.066864,281.681030  z\",id:\"svg_1600\"})),_path1599||(_path1599=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M441.935669,283.733887   C441.328857,283.609100 440.708221,283.158417 440.063538,282.396729   C440.666962,282.526428 441.294434,282.967224 441.935669,283.733887  z\",id:\"svg_1601\"})),_path1600||(_path1600=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M454.789703,291.713043   C454.200867,291.756683 453.452209,291.565033 452.860840,291.186127   C453.555359,291.158478 454.092621,291.318115 454.789703,291.713043  z\",id:\"svg_1602\"})),_path1601||(_path1601=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M422.046936,275.940918   C422.467407,275.952484 422.887848,275.964050 423.622589,275.977478   C424.123291,275.990234 424.309692,276.001099 424.776123,276.032074   C424.056885,276.273285 423.057617,276.494385 422.028961,276.355438   C421.999573,275.995392 422.046936,275.940918 422.046936,275.940918  z\",id:\"svg_1603\"})),_path1602||(_path1602=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M455.016388,303.323669   C458.127563,299.747650 461.177277,302.055084 464.624207,303.023132   C466.983887,304.783417 468.956726,306.540619 470.968445,308.664246   C470.541412,309.969238 470.075470,310.907867 469.494843,312.077576   C468.056366,310.816956 467.002899,309.893738 465.952789,308.973511   C464.409973,310.084717 463.076691,311.045013 461.371887,312.002869   C461.000397,312.000397 461.005493,312.005524 461.020264,311.633057   C461.031982,310.515320 461.028931,309.770050 461.313843,308.983154   C461.904724,308.533600 462.207581,308.125702 462.510437,307.717804   C462.250366,307.622742 461.791443,307.403198 461.760956,307.451874   C461.458893,307.934296 461.227783,308.461121 460.604797,308.978638   C459.486786,309.989899 458.740479,310.997864 457.996826,312.003174   C457.999481,312.000519 458.005432,311.994263 458.005432,311.994263   C456.369293,310.809784 454.733185,309.625305 452.899292,308.297638   C453.588959,306.785889 454.293243,305.242157 455.016388,303.323669  z\",id:\"svg_1604\"})),_path1603||(_path1603=/*#__PURE__*/React.createElement(\"path\",{fill:\"#341D0D\",opacity:1,stroke:\"none\",d:\" M340.194122,329.203857   C341.391205,327.354645 342.588257,325.505432 344.273590,323.400146   C345.172302,324.759949 345.582764,326.375793 345.833313,328.315979   C344.399200,332.721375 342.734467,336.731598 341.976318,340.906433   C341.386383,344.155060 341.925720,347.608826 341.670074,351.127197   C341.249969,352.544708 341.122955,353.806427 340.997711,355.453766   C341.556366,357.688324 342.699646,359.580322 342.567719,361.378723   C342.022125,368.816803 346.043060,374.241638 350.213531,379.561615   C351.124939,380.724243 353.103088,381.050568 354.763702,381.845184   C355.037659,382.943726 354.954285,384.941315 355.910858,385.993835   C358.459442,388.798248 361.219208,391.549500 364.349335,393.642334   C366.809509,395.287201 369.875946,396.500183 372.800812,396.856445   C376.583984,397.317291 379.919586,401.611420 384.144928,398.340240   C390.264526,402.193329 397.351074,400.343201 403.652283,400.310699   C410.502808,400.275391 417.333160,396.326508 424.096863,394.450378   C423.233795,395.902740 422.619110,397.195862 421.620575,398.029022   C419.861359,399.496887 417.867798,400.683868 415.984741,401.996521   C415.997131,402.004578 415.993042,401.975677 415.655579,401.968872   C414.865417,402.635620 414.412689,403.309143 413.640930,403.878662   C411.886078,403.904877 410.450195,404.035126 408.763367,404.076294   C408.335663,404.004120 408.158936,404.021088 407.642029,403.992554   C406.859283,404.037598 406.416718,404.128113 405.658142,404.171875   C404.922485,404.181671 404.502869,404.238251 403.646881,404.222198   C401.751526,404.320587 400.292511,404.491608 398.506866,404.539917   C397.491913,404.397705 396.803650,404.378235 395.694763,404.302094   C394.147827,404.297974 393.021423,404.350494 391.587646,404.326477   C390.861938,404.280823 390.443665,404.311676 389.639893,404.242615   C388.469849,404.205963 387.685333,404.269196 386.509277,404.271545   C385.065948,404.207336 384.014160,404.203979 382.868042,403.905884   C381.736176,403.563690 380.698639,403.516205 379.334900,403.536804   C376.355377,402.746002 373.702057,401.887085 370.672180,401.002838   C367.801758,399.517914 365.307922,398.058289 362.585419,396.331116   C355.324097,391.348724 349.381866,385.750916 345.550446,377.931061   C343.739716,374.235382 340.647186,371.167755 338.104309,367.613342   C338.073181,367.411163 338.019135,367.005585 338.307190,366.841064   C338.081665,362.487213 337.568085,358.297821 337.378510,353.837585   C337.657776,350.357635 337.612976,347.148621 337.686279,343.559509   C337.774139,342.131653 337.743866,341.083801 337.921265,339.733582   C338.610291,337.599945 339.091614,335.768646 339.675293,333.540649   C339.900391,331.785858 340.023102,330.427795 340.129913,329.113342   C340.114014,329.156952 340.194122,329.203857 340.194122,329.203857  z\",id:\"svg_1605\"})),_path1604||(_path1604=/*#__PURE__*/React.createElement(\"path\",{fill:\"#352214\",opacity:1,stroke:\"none\",d:\" M345.993256,327.991669   C345.582764,326.375793 345.172302,324.759949 344.395325,323.070679   C344.333893,322.311462 344.638977,321.625610 345.589417,320.816040   C346.495728,320.070374 346.756714,319.448425 347.017731,318.826508   C350.708252,311.351685 357.701202,307.370789 364.322510,302.257538   C364.585327,301.796478 364.495331,301.467560 364.495331,301.467560   C364.495331,301.467560 364.698334,301.620178 364.828247,301.642700   C366.856232,300.715912 368.797668,299.843506 370.644592,298.803284   C377.085114,295.176086 384.097382,294.339203 391.285126,294.716309   C398.996185,295.120911 406.692444,295.807617 414.716797,296.216522   C415.038452,296.061859 415.408722,296.265564 415.737366,296.568787   C417.310913,297.567200 418.567078,298.243011 419.798462,298.961304   C422.739532,300.676971 425.668915,302.412689 428.739136,304.475159   C432.832245,308.631866 436.789215,312.453766 440.866028,316.602295   C443.607849,322.287537 446.229797,327.646118 448.643402,333.006531   C448.435059,333.008331 448.018250,333.012054 447.680237,333.002350   C446.562683,332.668701 445.783142,332.344788 444.968201,331.653625   C443.004822,323.265594 437.232269,317.817078 431.640533,312.000122   C429.968414,312.261963 428.674591,312.702606 427.392181,312.671600   C426.912170,312.660004 426.458740,311.549957 426.090271,310.568909   C425.972931,309.624573 425.921204,308.874359 425.519409,308.506470   C420.279785,303.708832 413.880554,301.508087 407.143219,299.536255   C396.578461,296.444244 386.391876,297.965240 376.282318,300.851776   C373.483521,301.650909 371.187653,304.211487 368.294617,305.877380   C364.308319,305.557281 362.212585,307.437408 361.106140,311.038330   C361.728729,312.238403 362.361053,313.103180 363.109894,314.268005   C363.474060,315.374786 363.721680,316.181580 363.625366,316.929810   C362.440918,315.951355 361.600403,315.031372 360.782562,314.136230   C358.798492,315.167572 357.029175,316.637390 355.056061,317.000824   C350.669189,317.808990 348.827362,320.660278 347.680359,324.487518   C347.312775,325.713928 346.566345,326.826843 345.993256,327.991669  z\",id:\"svg_1606\"})),_path1605||(_path1605=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D38E5A\",opacity:1,stroke:\"none\",d:\" M327.242310,314.126953   C327.091187,313.635254 327.256561,313.401459 327.684326,313.121521   C328.870239,313.444153 329.862640,313.861664 330.640259,314.647949   C330.316956,315.634796 330.208527,316.252899 330.100067,316.870972   C330.374481,316.906494 330.648895,316.941986 330.923309,316.977478   C330.959381,316.328552 330.995453,315.679626 331.031555,315.030701   C332.923859,315.721069 334.816193,316.411438 336.524933,317.034821   C339.329926,315.712921 342.264648,314.329865 345.597900,312.966919   C345.593292,313.997467 345.409882,315.697418 344.751587,315.907166   C340.237305,317.345642 340.636444,320.773712 340.694641,324.670990   C340.255127,325.739746 340.118774,326.407806 339.982452,327.075867   C340.013580,327.549713 340.044708,328.023529 340.134979,328.850616   C340.194122,329.203857 340.114014,329.156952 339.750732,329.085571   C338.428589,329.646484 337.129639,330.066956 336.577759,330.952850   C335.194550,333.173065 334.149597,335.604004 332.665375,337.997681   C331.820740,338.400574 331.216827,339.130859 330.748596,339.052307   C327.153015,338.449219 323.583801,337.688995 320.006378,336.977570   C321.442535,333.768463 322.152313,329.722626 322.344666,326.907806   C322.702240,321.675110 326.819641,318.844727 327.242310,314.126953  z\",id:\"svg_1607\"})),_path1606||(_path1606=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M340.221497,326.896362   C340.118774,326.407806 340.255127,325.739746 340.687195,325.062256   C340.808807,325.607483 340.634705,326.162170 340.221497,326.896362  z\",id:\"svg_1608\"})),_path1607||(_path1607=/*#__PURE__*/React.createElement(\"path\",{fill:\"#341D0D\",opacity:1,stroke:\"none\",d:\" M346.685181,318.927551   C346.756714,319.448425 346.495728,320.070374 345.900452,320.801788   C345.828308,320.283722 346.090454,319.656158 346.685181,318.927551  z\",id:\"svg_1609\"})),_path1608||(_path1608=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M364.262390,301.377686   C364.495331,301.467560 364.585327,301.796478 364.522125,301.954407   C364.190216,301.940735 363.921509,301.769165 363.652802,301.597565   C363.778351,301.494293 363.903900,301.391022 364.262390,301.377686  z\",id:\"svg_1610\"})),_path1609||(_path1609=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M413.663025,290.042969   C413.221985,291.292206 412.454956,292.591095 411.353333,293.939270   C410.735138,293.786163 410.451538,293.583740 410.047760,293.142700   C409.927612,292.904083 410.394958,292.889709 410.912903,292.755066   C411.631500,291.842743 411.832184,291.065063 412.032837,290.287415   C412.467590,290.222473 412.902313,290.157532 413.663025,290.042969  z\",id:\"svg_1611\"})),_path1610||(_path1610=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE955B\",opacity:1,stroke:\"none\",d:\" M411.953125,289.903198   C411.832184,291.065063 411.631500,291.842743 411.146667,292.752533   C409.898285,291.497314 408.934052,290.109924 407.979309,288.355652   C409.283691,288.498810 410.578552,289.008881 411.953125,289.903198  z\",id:\"svg_1612\"})),_path1611||(_path1611=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E8A164\",opacity:1,stroke:\"none\",d:\" M319.646210,337.050842   C323.583801,337.688995 327.153015,338.449219 330.748596,339.052307   C331.216827,339.130859 331.820740,338.400574 332.727112,338.351929   C335.023926,341.611206 333.347961,353.913422 330.688934,356.301819   C333.982605,359.832092 333.994354,359.883911 331.690186,361.882812   C330.599640,361.503235 329.801025,361.250397 328.986694,360.694946   C328.644043,359.920990 328.317139,359.449585 328.086304,358.734375   C328.149292,358.108307 328.116241,357.726074 328.083191,357.343872   C327.728027,357.887238 327.372864,358.430603 326.777191,359.167206   C327.356903,359.907928 328.177094,360.455414 328.995911,361.372742   C328.184265,363.322021 327.374023,364.901428 326.563782,366.480865   C326.735809,366.718475 326.907806,366.956116 327.079834,367.193726   C328.699219,366.121735 330.318634,365.049713 332.308197,363.987793   C334.458618,365.000488 336.238861,366.003052 338.019135,367.005615   C338.019135,367.005585 338.073181,367.411163 338.081970,368.044586   C338.046539,370.111633 338.002380,371.545227 337.958191,372.978851   C337.487183,373.461090 336.619415,373.939789 336.615143,374.426117   C336.598267,376.332672 336.853821,378.241608 336.697601,380.677612   C334.151855,383.978180 332.099030,382.205719 331.566956,380.232971   C330.665558,376.891144 328.704803,376.661652 326.039215,377.023224   C321.648590,371.245728 317.577789,365.250153 317.439026,357.671448   C317.355011,353.083313 317.837372,348.477356 318.212769,343.891449   C318.398621,341.621613 318.917725,339.378998 319.646210,337.050842  z\",id:\"svg_1613\"})),_path1612||(_path1612=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M326.041718,377.387848   C328.704803,376.661652 330.665558,376.891144 331.566956,380.232971   C332.099030,382.205719 334.151855,383.978180 336.685638,381.048401   C338.350311,384.169128 335.188782,384.488098 333.379211,385.942078   C330.715271,383.236816 328.379761,380.494629 326.041718,377.387848  z\",id:\"svg_1614\"})),_path1613||(_path1613=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AD703F\",opacity:1,stroke:\"none\",d:\" M371.048767,401.028168   C373.702057,401.887085 376.355377,402.746002 379.526978,403.868896   C380.708008,404.432281 381.370697,404.731689 382.057068,405.375183   C383.151123,407.165283 384.221588,408.611328 385.292023,410.057373   C384.114166,410.372650 382.936310,410.687958 381.369934,410.749939   C380.275879,410.391998 379.570374,410.287384 378.864868,410.182770   C378.139557,410.152863 377.414276,410.122955 376.299347,409.718140   C373.911499,406.396240 371.549438,404.690308 368.002838,407.025452   C364.628998,406.317169 363.047760,401.995819 358.320557,403.085785   C356.530029,403.498627 353.728821,399.528381 351.188477,397.282349   C350.494690,396.157806 350.058655,395.266357 349.496979,394.462708   C346.493835,390.165863 343.459290,385.890930 340.435638,381.608429   C340.776581,381.186646 341.117523,380.764862 341.458466,380.343079   C342.417816,380.468536 343.377197,380.593994 344.793549,381.163330   C346.491577,390.321777 353.073303,393.886810 360.252136,397.286560   C360.843567,398.196350 361.365234,398.795807 361.725220,399.480286   C364.425934,404.615723 368.103333,405.236420 371.048767,401.028168  z\",id:\"svg_1615\"})),_path1614||(_path1614=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M360.107513,397.015564   C353.073303,393.886810 346.491577,390.321777 345.108185,381.285034   C342.945435,378.285339 341.505219,375.094238 338.137299,373.214905   C338.002380,371.545227 338.046539,370.111633 338.113068,368.246765   C340.647186,371.167755 343.739716,374.235382 345.550446,377.931061   C349.381866,385.750916 355.324097,391.348724 362.131195,396.432068   C361.306244,396.872223 360.706879,396.943909 360.107513,397.015564  z\",id:\"svg_1616\"})),_path1615||(_path1615=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M354.049133,443.242981   C354.778015,442.925140 355.518524,442.955475 356.791321,443.246948   C357.940460,443.604980 358.557343,443.701874 359.174225,443.798767   C359.197998,443.569977 359.221802,443.341217 359.245605,443.112457   C358.496246,443.075775 357.746918,443.039093 356.997559,443.002441   C356.991943,441.937012 356.986328,440.871582 356.993927,439.399353   C357.007141,438.992584 357.020477,438.978973 357.391052,438.971130   C358.502899,438.980408 359.244171,438.997498 360.023010,439.366425   C361.852905,441.320099 363.645203,442.921936 365.437500,444.523743   C365.848450,443.990906 366.259369,443.458038 366.670319,442.925201   C364.451782,441.611664 362.233215,440.298096 359.962738,438.635529   C358.937744,437.854950 357.964722,437.423401 356.995544,436.995605   C356.999390,436.999390 357.008728,437.008820 357.008728,437.008820   C357.622040,435.685913 358.235321,434.363007 358.848633,433.040100   C359.969818,433.838989 361.029144,434.750702 362.227905,435.408112   C363.722107,436.227448 365.320068,436.863464 366.893738,437.530365   C368.703003,438.297119 370.534729,439.010925 372.687622,440.276001   C375.700714,443.469452 378.382874,446.134674 380.826660,448.988068   C380.694550,449.655243 380.800903,450.134247 380.907227,450.613251   C381.264374,450.027985 381.621490,449.442688 381.995941,448.581421   C382.290710,447.851776 382.568115,447.398071 383.033569,447.193756   C383.819763,446.958557 384.417847,446.473999 385.253296,445.991943   C385.490631,445.994446 385.965302,445.999847 386.027588,446.358765   C387.124054,447.139709 388.158203,447.561707 389.412567,447.997131   C389.632751,448.010559 390.070374,448.066711 390.046631,448.429138   C390.562164,449.458282 391.101440,450.125061 391.640717,450.791809   C392.088104,449.853790 392.535492,448.915802 392.991455,447.988892   C393.000000,448.000000 392.978088,447.983398 393.324677,447.971161   C395.117126,446.979431 396.562988,445.999939 398.005737,445.267181   C398.002625,445.513885 398.002441,446.007416 397.998871,446.341919   C397.676239,447.721497 397.357178,448.766571 397.038116,449.811646   C397.298218,450.004303 397.558350,450.196960 397.818481,450.389618   C399.202484,448.906433 400.586487,447.423248 402.331909,445.981171   C404.466217,446.679108 406.239136,447.335907 408.005859,447.996277   C407.999695,447.999908 408.007812,447.985687 407.976685,448.330994   C407.621277,449.775360 407.296967,450.874390 406.686951,452.006226   C406.111603,452.451294 405.821991,452.863556 405.532410,453.275818   C405.791595,453.369720 406.251862,453.584229 406.278961,453.539001   C406.567200,453.058258 406.786652,452.536255 407.378204,452.053436   C413.260193,453.325684 418.783966,454.495270 423.998169,450.998169   C424.000000,451.000000 424.003296,451.004395 424.008881,451.370544   C427.018890,454.538635 430.023315,457.340576 433.028198,460.390137   C433.028656,460.637756 433.063751,461.134888 433.056946,461.503296   C430.470184,464.971619 427.890198,468.071594 425.310211,471.171539   C425.723175,471.551697 426.136108,471.931885 426.549042,472.312042   C427.717834,471.349731 428.799438,470.242401 430.082947,469.470917   C431.115021,468.850586 432.391449,468.636719 432.773468,468.507751   C432.773468,470.633514 432.740509,472.025635 432.783478,473.415436   C432.820770,474.621124 432.944000,475.824219 433.018951,477.019958   C433.008636,477.011475 433.017761,477.028778 432.700806,476.884216   C431.168976,475.604401 429.954132,474.469116 428.744537,473.338776   C427.077911,475.704315 425.541504,477.885010 424.070007,480.414093   C425.156921,481.155823 426.178925,481.549133 427.405151,481.957733   C427.609344,481.973022 428.015625,482.024872 428.001587,482.384399   C427.671021,484.502167 427.354462,486.260406 427.242188,488.275879   C428.631134,487.681641 429.815826,486.830261 431.001709,485.988525   C431.002960,485.998230 430.979858,485.998505 431.309082,485.963165   C432.959167,484.872559 434.279999,483.817291 435.600830,482.762024   C436.035950,483.123535 436.471100,483.485046 436.906219,483.846558   C435.188965,486.050751 433.471680,488.254974 431.815887,490.380249   C434.388611,490.850128 436.526093,491.240509 438.515045,491.603760   C439.526855,491.100922 440.707916,490.513977 441.970001,490.237671   C445.328003,491.909119 445.356232,488.440338 446.809113,487.193390   C447.740692,486.393890 448.054260,484.874390 448.644867,483.677673   C447.625366,484.216919 446.652954,484.910156 445.569824,485.241577   C444.844116,485.463593 443.961273,485.172241 443.108704,484.679596   C443.034363,483.094727 443.000092,481.940887 442.994507,480.525635   C443.314270,479.849609 443.605316,479.435028 444.226929,478.987305   C445.625305,478.034393 446.693085,477.114685 447.204498,476.674194   C449.047180,477.564758 450.504303,478.269012 452.115173,479.271759   C454.511871,480.714325 456.754883,481.858398 459.001007,483.374573   C459.230499,484.500549 459.220123,485.633545 459.721680,485.946777   C462.928986,487.949615 464.706909,490.239166 462.182098,493.972321   C462.106079,494.084717 462.727295,494.668671 462.869507,495.341980   C461.143707,497.436340 459.571869,499.221436 457.637024,501.000000   C456.124146,500.491882 454.974243,499.990234 453.826508,499.489563   C453.040070,500.334747 452.240234,501.194366 451.627838,501.852509   C450.018524,500.748688 448.789185,499.905457 447.559845,499.062256   C446.376160,501.044464 445.192474,503.026642 443.636597,504.992371   C441.654907,503.720520 439.976715,502.542938 438.449890,501.194031   C435.004059,498.149597 431.411530,499.317139 429.749908,504.045959   C429.297729,504.129303 429.117859,504.167908 428.604736,504.111816   C427.179993,503.015808 426.088501,502.014557 424.941833,500.655945   C424.079041,498.034180 423.271393,495.769714 421.848785,491.780945   C420.664337,495.205566 419.834473,497.604980 418.637695,499.965302   C415.276276,499.235138 412.238739,498.678864 409.320862,497.747589   C408.681396,497.543488 408.468201,496.003937 408.293762,495.056580   C408.528839,495.033661 409.000000,495.000000 409.250885,494.996704   C409.669037,494.991089 409.836273,494.988770 410.252441,494.783630   C409.344788,494.046692 408.188293,493.512573 407.016479,492.987366   C407.001129,492.996277 407.022217,492.967010 407.038605,492.590607   C411.537079,487.418732 416.019165,482.623291 420.494263,477.835297   C420.356873,477.653229 420.260010,477.409424 420.157928,477.407196   C418.935516,477.380707 417.712341,477.390076 417.760468,477.390076   C416.619415,475.543213 415.852203,474.301361 414.868408,472.848572   C413.419647,472.762177 412.187439,472.886749 410.632385,473.011414   C409.878998,473.018372 409.448517,473.025238 409.161316,472.784607   C409.614624,472.199677 409.924622,471.862244 410.234619,471.524780   C410.027008,471.377167 409.654175,471.082672 409.635834,471.103302   C409.079071,471.729614 408.557220,472.386932 408.014526,473.020142   C407.999146,473.000854 408.038727,473.029785 407.700745,473.063416   C405.922333,474.055603 404.481842,475.014191 402.669159,475.980865   C401.182220,476.334259 400.067474,476.679535 398.581024,477.009552   C395.539825,476.670197 392.870392,476.346100 389.835693,476.013916   C384.222046,473.954315 385.115112,480.102478 382.260895,480.922638   C382.932434,482.887482 383.465607,484.447479 384.179657,486.269440   C384.757507,487.163116 385.154480,487.794861 385.789307,488.805084   C383.118805,488.096130 381.099335,487.559998 379.045776,486.658386   C378.266022,485.166656 377.520294,484.040436 376.559540,482.589447   C380.908722,481.460999 378.840332,479.615417 376.711700,477.952362   C377.619263,476.608856 378.443237,475.389069 379.963257,473.138855   C377.429810,473.587158 376.222076,473.800842 375.007019,474.007202   C374.999695,473.999817 374.984589,473.985199 374.988708,473.604797   C373.940369,471.147461 372.887939,469.070496 371.578644,466.486694   C368.963470,469.487457 367.348969,471.339996 366.458344,472.361938   C363.591522,471.304443 361.803314,470.644836 360.012939,469.638702   C359.658600,468.488312 359.306366,467.684418 358.980499,466.559845   C359.052338,465.812012 359.097778,465.384827 359.143250,464.957672   C361.252655,462.462372 360.790649,460.397278 358.048889,458.111145   C357.998077,457.345978 357.995636,457.175201 357.993164,457.004456   C358.432465,457.001251 358.871735,456.998047 359.709106,457.345825   C361.376831,458.147003 362.646454,458.597137 364.018463,459.226898   C364.409119,459.288055 364.697418,459.169556 365.002838,459.043488   C365.019958,459.035919 365.055634,459.022583 365.410645,459.013123   C367.346832,458.049561 368.928040,457.095398 371.075256,455.799744   C368.259186,454.317291 366.083130,453.171753 363.907104,452.026215   C362.188568,451.376068 360.470032,450.725952 358.751495,450.075806   C358.833862,449.722076 358.916229,449.368378 358.998596,449.014679   C358.068542,449.276337 357.080933,449.875671 356.220428,449.729095   C354.444489,449.426575 351.417786,449.493408 354.399963,446.341034   C354.804169,445.913757 354.198700,444.531342 354.049133,443.242981  M407.308380,467.000610   C406.688599,467.485718 406.068787,467.970795 405.449005,468.455872   C405.890869,468.856781 406.332703,469.257660 406.774567,469.658569   C407.182007,468.771637 407.589478,467.884705 408.495270,466.804962   C409.324463,466.868713 410.153656,466.932495 411.049622,467.715424   C412.339020,471.661591 413.309204,470.049774 414.573517,467.277435   C413.174957,467.161652 412.088409,467.071716 410.984375,466.248383   C410.366241,465.587585 409.748138,464.926788 409.130005,464.265991   C408.754364,465.178375 408.378723,466.090759 407.308380,467.000610  M384.796204,469.981079   C384.292938,469.031525 383.789673,468.082001 383.286438,467.132477   C382.225494,468.806183 381.164551,470.479889 380.103638,472.153595   C380.381104,472.384949 380.658569,472.616333 380.936035,472.847717   C382.079559,472.081970 383.223083,471.316223 384.796204,469.981079  M376.911835,452.256897   C376.912109,452.765015 376.912354,453.273163 376.912628,453.781281   C377.477295,453.632172 378.041931,453.483063 378.606628,453.333954   C378.248718,452.930267 377.890839,452.526581 376.911835,452.256897  M399.160522,468.498016   C399.562042,468.853088 399.963531,469.208130 400.365051,469.563202   C400.509094,469.003021 400.653168,468.442841 400.797211,467.882660   C400.293457,467.882965 399.789734,467.883301 399.160522,468.498016  M448.153046,490.020355   C448.251862,490.447937 448.350677,490.875549 448.449493,491.303131   C448.572998,491.207031 448.811279,491.095642 448.800873,491.017365   C448.743134,490.584045 448.624878,490.158752 448.153046,490.020355  M393.809509,453.755402   C393.983429,453.626953 394.157318,453.498535 394.331238,453.370087   C394.088959,453.397827 393.846710,453.425568 393.809509,453.755402  M453.193420,483.780701   C453.132874,483.599701 453.072296,483.418701 453.011749,483.237701   C452.953400,483.420563 452.895050,483.603424 453.193420,483.780701  M403.186768,465.218658   C403.006348,465.351532 402.825958,465.484406 402.645508,465.617279   C402.897644,465.588531 403.149750,465.559814 403.186768,465.218658  M402.610016,471.472900   C402.835693,471.530151 403.061340,471.587402 403.287048,471.644653   C403.141754,471.503235 402.996460,471.361816 402.610016,471.472900  M386.635376,471.521027   C386.635376,471.521027 386.452179,471.417786 386.452179,471.417786   C386.452179,471.417786 386.479767,471.628357 386.635376,471.521027  z\",id:\"svg_1617\"})),_path1616||(_path1616=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M344.976013,510.850006   C340.897614,508.225433 336.819214,505.600830 332.371643,502.990051   C332.435974,501.688324 332.869476,500.372803 333.931213,499.129028   C336.054596,499.093628 337.549713,498.986481 339.369904,498.894043   C340.128601,498.895905 340.562286,498.883057 341.045441,499.229919   C342.611359,500.968018 344.127777,502.346375 345.746613,503.817841   C346.890411,502.870026 347.952728,501.989746 349.738647,500.509827   C350.286041,502.449005 350.646942,503.727570 350.866028,505.054199   C350.814148,505.065643 350.904144,505.029022 351.373657,504.995483   C353.445526,504.353180 356.002472,508.141846 357.315033,504.113770   C359.416656,505.519287 361.211182,506.784943 363.130859,508.344574   C362.161682,510.387817 361.067383,512.137146 359.973053,513.886414   C359.973053,513.886414 359.968262,513.946777 359.663239,513.995972   C358.615814,513.991821 357.754181,514.161194 357.154877,513.840515   C355.741425,513.084167 354.452881,512.094421 353.113800,511.199036   C352.781525,511.574280 352.449249,511.949524 352.116974,512.324768   C347.867462,507.687988 347.847107,507.683807 344.976013,510.850006  z\",id:\"svg_1618\"})),_path1617||(_path1617=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M340.995941,498.870178   C340.562286,498.883057 340.128601,498.895905 339.322449,498.582855   C338.248474,497.296021 337.546997,496.335083 336.887665,495.431915   C335.667236,496.522125 334.829315,497.270660 333.991364,498.019165   C331.925171,496.199738 331.925171,496.199738 334.630341,493.403412   C333.747772,492.183929 332.867554,490.967651 331.993347,489.375916   C331.999359,489.000397 332.024994,488.974304 332.024994,488.974304   C335.496185,489.558685 338.813934,493.046387 343.097473,489.201019   C341.814117,488.066559 340.691345,487.074066 339.245056,485.655457   C341.234772,482.425171 343.547974,479.620911 345.861145,476.816681   C346.309998,477.254974 346.758850,477.693237 347.207703,478.131531   C346.199890,479.418091 345.192078,480.704651 343.857361,482.408569   C345.222839,482.607605 346.112976,482.737366 347.137024,483.187927   C347.906647,484.584045 348.542389,485.659363 349.367188,487.054474   C347.717529,487.212250 346.566162,487.322388 344.512085,487.518860   C348.064301,491.097015 351.018066,494.072357 353.973389,497.289276   C353.974976,497.530853 353.989410,498.013794 353.993256,498.008972   C353.997101,498.004150 353.996307,498.003815 353.621582,497.997925   C349.705139,497.376831 346.163422,496.761627 342.101959,496.056183   C341.929535,496.494812 341.462738,497.682495 340.995941,498.870178  M344.607239,491.477570   C344.828918,491.533203 345.050568,491.588806 345.272247,491.644440   C345.129974,491.507202 344.987671,491.369934 344.607239,491.477570  z\",id:\"svg_1619\"})),_path1618||(_path1618=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M347.003113,482.867096   C346.112976,482.737366 345.222839,482.607605 343.857361,482.408569   C345.192078,480.704651 346.199890,479.418091 347.207703,478.131531   C346.758850,477.693237 346.309998,477.254974 345.861145,476.816681   C343.547974,479.620911 341.234772,482.425171 338.900787,485.605652   C337.872223,484.528687 336.864410,483.075409 335.375000,480.927643   C335.325562,480.945648 334.026886,481.418793 332.728180,481.891937   C332.451233,481.495697 332.174255,481.099457 331.897308,480.703217   C333.982452,478.976624 336.067627,477.250061 338.712555,475.060028   C338.361542,474.561096 337.502197,473.339539 336.408691,471.785187   C337.279388,470.979279 338.303802,470.031097 339.663147,469.040558   C339.998138,468.998230 340.015869,469.010925 340.015869,469.010925   C340.006653,469.757263 339.997437,470.503601 339.847961,471.674072   C339.806244,472.066711 339.904755,472.035187 340.003296,472.003662   C341.683380,472.014740 343.363464,472.025787 345.751465,471.955597   C346.659119,471.539703 346.858856,471.205078 347.058594,470.870453   C347.174194,470.606934 347.349976,470.392792 348.150726,470.126831   C349.468842,471.018005 350.222168,472.010437 350.990845,473.000977   C351.006226,472.999084 351.004150,472.969543 350.697113,473.108582   C349.625244,474.146057 348.860443,475.044556 347.727661,476.375305   C349.246521,476.666840 350.123871,476.835236 350.996826,477.002563   C350.992462,477.001465 350.985474,477.012665 350.982819,477.384308   C350.982056,478.499207 350.983978,479.242493 350.992920,479.992859   C351.000000,480.000000 350.984283,479.985840 350.639008,479.988342   C349.196838,480.949585 348.099976,481.908356 347.003113,482.867096  z\",id:\"svg_1620\"})),_path1619||(_path1619=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M353.995087,460.985657   C351.449554,462.426514 348.904022,463.867401 345.733673,465.661926   C343.781128,464.032654 341.375580,462.025360 338.753265,459.837158   C340.481567,458.030853 341.745575,456.709778 342.760101,455.649475   C345.131897,455.798859 347.375214,455.940186 349.618561,456.081512   C349.780060,455.687164 349.941528,455.292847 350.103027,454.898499   C351.390228,456.683594 352.677399,458.468689 353.982178,460.627075   C353.999786,461.000366 353.995087,460.985657 353.995087,460.985657  z\",id:\"svg_1621\"})),_path1620||(_path1620=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M350.975494,473.002838   C350.222168,472.010437 349.468842,471.018005 348.337158,470.030273   C349.028442,469.360046 350.112640,468.706848 351.164337,468.004944   C352.768677,466.934204 354.350494,465.829742 356.201324,464.257019   C356.731506,463.566467 356.911957,463.297760 357.002136,462.968475   C357.651306,463.425537 358.300507,463.882629 359.046448,464.648682   C359.097778,465.384827 359.052338,465.812012 358.722687,466.749695   C357.626953,467.845306 356.815399,468.430389 355.953796,468.870972   C355.816895,468.674225 355.729980,468.622009 355.643097,468.569763   C355.767120,468.714447 355.891174,468.859161 356.015503,469.249939   C356.015808,469.496063 355.993652,469.987793 355.772247,470.082886   C355.271545,470.350800 355.049957,470.579498 354.563507,470.937653   C353.152466,471.675049 352.063965,472.338959 350.975494,473.002838  z\",id:\"svg_1622\"})),_path1621||(_path1621=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M363.929077,452.357788   C366.083130,453.171753 368.259186,454.317291 371.075256,455.799744   C368.928040,457.095398 367.346832,458.049561 365.396332,458.652405   C364.671936,456.873657 364.316864,455.446198 363.961792,454.018707   C363.958191,453.575592 363.954620,453.132446 363.929077,452.357788  z\",id:\"svg_1623\"})),_path1622||(_path1622=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M363.957916,454.228149   C364.316864,455.446198 364.671936,456.873657 365.041321,458.661865   C365.055634,459.022583 365.019958,459.035919 364.735596,459.028320   C364.272888,459.029572 364.094482,459.038422 363.916107,459.047241   C362.646454,458.597137 361.376831,458.147003 360.038544,457.341309   C360.422852,456.343201 360.875824,455.700684 361.691528,455.317505   C362.484314,455.890869 362.914337,456.204895 363.344391,456.518890   C363.541168,455.964661 363.737915,455.410400 363.934662,454.856171   C363.934662,454.856171 363.954041,454.437622 363.957916,454.228149  z\",id:\"svg_1624\"})),_path1623||(_path1623=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M334.000397,498.238770   C334.829315,497.270660 335.667236,496.522125 336.887665,495.431915   C337.546997,496.335083 338.248474,497.296021 338.997406,498.568115   C337.549713,498.986481 336.054596,499.093628 334.295410,499.049103   C334.031403,498.897400 334.009430,498.458374 334.000397,498.238770  z\",id:\"svg_1625\"})),_path1624||(_path1624=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M357.848877,456.687531   C357.995636,457.175201 357.998077,457.345978 358.000275,457.773315   C357.513184,457.929871 356.920563,457.971222 356.560577,457.701813   C355.687073,457.047974 354.900116,456.269073 354.170898,455.457306   C354.130493,455.412384 354.929810,454.613068 355.338287,454.164917   C356.127075,454.900146 356.915833,455.635376 357.848877,456.687531  z\",id:\"svg_1626\"})),_path1625||(_path1625=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M356.951111,462.623962   C356.911957,463.297760 356.731506,463.566467 356.243103,463.887970   C355.266907,463.200500 354.508484,462.399597 353.872559,461.292175   C353.995087,460.985657 353.999786,461.000366 353.992310,460.995422   C354.956573,461.420135 355.928314,461.849792 356.951111,462.623962  z\",id:\"svg_1627\"})),_path1626||(_path1626=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M322.771179,450.808533   C323.021362,451.444427 323.011017,451.902161 322.994843,452.704071   C322.248566,452.995514 321.508148,452.942780 320.398468,452.853790   C320.019012,451.802399 320.008789,450.787262 320.014099,449.388184   C320.856598,449.546234 321.683594,450.088318 322.771179,450.808533  z\",id:\"svg_1628\"})),_path1627||(_path1627=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M309.990173,460.010803   C310.931641,460.573914 311.873138,461.137024 312.814606,461.700134   C312.273285,462.215057 311.731995,462.729980 311.190704,463.244904   C310.789764,462.394073 310.388855,461.543243 309.993958,460.346191   C310.000000,460.000000 309.990173,460.010803 309.990173,460.010803  z\",id:\"svg_1629\"})),_path1628||(_path1628=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M304.396912,463.971069   C304.020660,463.229767 304.013184,462.487640 304.004089,461.373962   C304.946442,461.528442 305.890472,462.054413 306.834473,462.580383   C306.144867,463.043671 305.455292,463.506958 304.396912,463.971069  z\",id:\"svg_1630\"})),_path1629||(_path1629=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M331.986176,489.013123   C331.259521,488.515442 330.546021,488.005096 329.832550,487.494720   C330.080811,487.202637 330.329071,486.910553 330.577332,486.618469   C331.034088,487.194946 331.490875,487.771423 331.986328,488.661102   C332.024994,488.974304 331.999359,489.000397 331.986176,489.013123  z\",id:\"svg_1631\"})),_path1630||(_path1630=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M310.005371,459.994873   C309.475861,459.774506 308.933258,459.574097 308.422638,459.311523   C308.387299,459.293365 308.590027,458.812134 308.682037,458.546234   C309.090454,458.841827 309.498871,459.137421 309.948730,459.721893   C309.990173,460.010803 310.000000,460.000000 310.005371,459.994873  z\",id:\"svg_1632\"})),_path1631||(_path1631=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M359.459717,452.606018   C359.341003,453.060669 359.054932,453.339539 358.750336,453.596436   C358.741852,453.603607 358.534485,453.374969 358.419861,453.256348   C358.709839,452.979950 358.999817,452.703552 359.459717,452.606018  z\",id:\"svg_1633\"})),_path1632||(_path1632=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M363.606628,454.870636   C363.737915,455.410400 363.541168,455.964661 363.344391,456.518890   C362.914337,456.204895 362.484314,455.890869 362.009460,455.268066   C362.402588,454.934540 362.840576,454.909821 363.606628,454.870636  z\",id:\"svg_1634\"})),_path1633||(_path1633=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M339.989960,468.990112   C340.112671,468.540283 340.243561,468.098541 340.374451,467.656830   C340.397614,468.026306 340.420776,468.395813 340.229919,468.888123   C340.015869,469.010925 339.998138,468.998230 339.989960,468.990112  z\",id:\"svg_1635\"})),_path1634||(_path1634=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M346.806702,471.007141   C346.858856,471.205078 346.659119,471.539703 346.170959,471.965698   C346.106598,471.752686 346.330688,471.448273 346.806702,471.007141  z\",id:\"svg_1636\"})),_path1635||(_path1635=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M381.065063,448.799896   C378.382874,446.134674 375.700714,443.469452 373.002319,440.432556   C372.991394,437.288513 372.996765,434.516113 372.999695,431.372498   C372.998230,430.833740 372.999207,430.666260 373.255676,430.151489   C374.363434,429.865540 375.215698,429.926819 376.450531,429.983826   C377.888733,428.985535 378.944366,427.991577 379.999695,426.772156   C379.999390,426.546692 379.978699,426.096313 380.318237,426.078857   C381.110382,426.038147 381.562988,426.014862 382.007751,425.995758   C381.999939,425.999939 382.007782,425.981903 382.040771,426.346680   C383.291565,428.316772 384.509399,429.922028 386.114105,432.037262   C385.001465,433.057220 383.718781,434.233063 382.882812,434.999390   C383.950867,436.311096 384.991486,437.589142 386.016510,439.257324   C385.992218,440.423431 385.983490,441.199341 385.662292,442.007843   C384.781525,442.494232 384.213257,442.948059 383.645020,443.401855   C383.930573,443.653412 384.216156,443.904999 384.501709,444.156555   C385.009186,443.445831 385.516632,442.735107 386.269135,442.019531   C386.514160,442.014648 387.004791,442.006042 387.353943,442.010712   C388.168121,442.038208 388.633118,442.061035 389.072632,442.470032   C389.041901,443.893036 389.036682,444.929840 388.775391,446.065308   C387.668030,446.109314 386.816650,446.054565 385.965302,445.999847   C385.965302,445.999847 385.490631,445.994446 384.942444,446.002930   C383.878052,446.322418 383.361786,446.633423 382.845520,446.944397   C382.568115,447.398071 382.290710,447.851776 381.766205,448.589722   C381.519135,448.873993 381.065063,448.799896 381.065063,448.799896  M380.525452,431.372650   C380.525452,431.372650 380.428253,431.544525 380.428253,431.544525   C380.428253,431.544525 380.623688,431.519287 380.525452,431.372650  z\",id:\"svg_1637\"})),_path1636||(_path1636=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M355.421387,420.993896   C358.779602,418.925354 362.473297,416.907501 366.166992,414.889648   C366.296478,415.103851 366.425964,415.318054 366.555450,415.532257   C365.393005,416.815186 364.230560,418.098114 363.035828,419.688660   C363.003510,419.996307 363.015656,419.983551 362.674103,420.033295   C361.552246,421.058075 360.771942,422.033081 359.995422,423.004456   C359.999207,423.000793 360.006897,422.992554 360.006897,422.992554   C358.590240,422.343231 357.173553,421.693909 355.421387,420.993896  z\",id:\"svg_1638\"})),_path1637||(_path1637=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M364.881866,423.881317   C364.092651,424.491058 363.303467,425.100800 362.250061,425.885803   C361.345337,425.273743 360.704834,424.486389 360.035614,423.345825   C360.006897,422.992554 359.999207,423.000793 360.344421,422.990173   C361.464996,421.980865 362.240326,420.982208 363.015686,419.983582   C363.015656,419.983551 363.003510,419.996307 362.996552,420.003052   C364.054443,420.008667 365.119293,420.007507 366.592407,420.003479   C367.000641,420.000641 367.019379,420.019348 367.019379,420.019348   C367.006500,420.437256 366.993622,420.855164 366.720642,421.730774   C365.934296,422.752716 365.408081,423.317017 364.881866,423.881317  z\",id:\"svg_1639\"})),_path1638||(_path1638=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M357.000031,438.999817   C356.155121,438.694672 355.317352,438.382263 354.479553,438.069885   C355.090424,437.710938 355.701294,437.351990 356.660431,437.000946   C357.008728,437.008820 356.999390,436.999390 356.998138,437.327118   C357.004761,438.096222 357.012604,438.537598 357.020477,438.978973   C357.020477,438.978973 357.007141,438.992584 357.000031,438.999817  z\",id:\"svg_1640\"})),_path1639||(_path1639=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M366.451477,435.530701   C366.418732,435.475006 366.484192,435.586426 366.451477,435.530701  z\",id:\"svg_1641\"})),_path1640||(_path1640=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M346.533173,423.551514   C346.476227,423.585388 346.590118,423.517639 346.533173,423.551514  z\",id:\"svg_1642\"})),_path1641||(_path1641=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M379.978699,426.096313   C379.978699,426.096313 379.999390,426.546692 379.655609,426.728516   C378.205566,426.608521 377.099274,426.306702 375.996521,426.002441   C376.000000,426.000000 375.994781,426.007202 376.018738,425.665649   C376.033813,424.867065 376.024963,424.410004 376.016083,423.952972   C376.016083,423.952972 376.000854,423.502014 376.301819,423.248322   C377.073456,422.663055 377.544128,422.331482 378.014801,421.999939   C378.014801,421.999908 377.999878,422.000000 378.281738,421.978607   C379.019379,421.662933 379.475098,421.368652 379.930817,421.074341   C379.951965,420.898590 379.973083,420.722870 380.319946,420.235901   C381.100342,419.285156 381.555023,418.645599 382.009705,418.006042   C382.009705,418.006042 382.000000,418.000000 382.330383,417.880859   C383.770966,417.505066 384.881134,417.248444 385.995758,416.996033   C386.000214,417.000244 386.008881,417.009735 385.963165,417.392456   C386.945190,418.516815 387.972931,419.258423 388.999725,419.999512   C388.998779,419.999023 388.993896,419.993896 389.011383,420.387329   C389.921082,422.478424 390.813293,424.176147 391.823761,426.098846   C390.335114,427.050415 388.767395,428.052551 387.686646,428.743378   C385.438843,427.650360 383.723328,426.816132 382.007782,425.981903   C382.007782,425.981903 381.999939,425.999939 381.862091,425.744629   C381.142395,425.691620 380.560547,425.893951 379.978699,426.096313  z\",id:\"svg_1643\"})),_path1642||(_path1642=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AD703F\",opacity:1,stroke:\"none\",d:\" M385.976898,414.003967   C386.022156,412.939880 386.067444,411.875793 386.498444,410.379211   C390.929016,409.291779 394.973877,408.636871 399.010437,407.988770   C399.002136,407.995575 399.014221,407.982544 399.032654,408.303406   C399.695984,409.406891 400.340881,410.189514 400.990051,410.977966   C400.994263,410.983795 400.992615,410.992676 401.009766,411.360016   C400.105469,412.464172 399.183990,413.200989 398.202332,413.587097   C397.578827,412.610474 396.891510,411.370483 396.471771,411.455261   C392.945709,412.167297 389.468689,413.122192 385.976898,414.003967  z\",id:\"svg_1644\"})),_path1643||(_path1643=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M399.018738,407.981995   C394.973877,408.636871 390.929016,409.291779 386.549561,409.982910   C386.214996,410.019135 385.750488,410.023041 385.521240,410.040222   C384.221588,408.611328 383.151123,407.165283 382.262299,405.298035   C382.721252,404.731537 382.894073,404.506134 382.962341,404.200623   C384.014160,404.203979 385.065948,404.207336 386.537781,404.578827   C387.482422,405.605591 388.007050,406.264191 388.531677,406.922791   C389.029572,406.062683 389.527466,405.202606 390.025391,404.342529   C390.443665,404.311676 390.861938,404.280823 391.667603,404.640167   C393.250946,405.651550 394.446899,406.272705 395.642822,406.893890   C395.800323,406.048859 395.957825,405.203796 396.115356,404.358765   C396.803650,404.378235 397.491913,404.397705 398.561737,404.862793   C398.968414,406.199585 398.993591,407.090790 399.018738,407.981995  z\",id:\"svg_1645\"})),_path1644||(_path1644=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M385.709045,414.010925   C389.468689,413.122192 392.945709,412.167297 396.471771,411.455261   C396.891510,411.370483 397.578827,412.610474 397.822235,413.616333   C394.855621,414.672791 392.208923,415.349274 389.859772,415.949677   C390.497131,417.158813 391.246826,418.581055 391.998291,420.001648   C392.000000,420.000000 391.998749,420.001892 391.623169,420.010620   C390.496338,420.010834 389.745117,420.002350 388.993896,419.993896   C388.993896,419.993896 388.998779,419.999023 388.884369,419.689972   C387.849609,418.590515 386.929260,417.800110 386.008881,417.009735   C386.008881,417.009735 386.000214,417.000244 385.970215,416.677979   C385.595398,415.583374 385.250610,414.811066 384.905792,414.038757   C385.084290,414.031799 385.262756,414.024841 385.709045,414.010925  z\",id:\"svg_1646\"})),_path1645||(_path1645=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M381.631897,417.986115   C381.555023,418.645599 381.100342,419.285156 380.322571,419.970428   C378.981079,419.714233 377.701416,418.862640 376.987671,419.201813   C373.082977,421.057465 371.777679,418.419647 370.146881,415.984131   C372.823700,415.984131 375.279755,415.984131 378.746979,415.984131   C378.918823,416.119995 380.086456,417.043091 381.631897,417.986115  z\",id:\"svg_1647\"})),_path1646||(_path1646=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M376.067993,429.988129   C375.215698,429.926819 374.363434,429.865540 373.255554,429.900299   C371.430603,429.610413 369.861237,429.224426 367.099701,428.545288   C365.882690,425.335419 369.613586,425.584320 372.928955,425.277893   C374.292908,425.691528 375.143860,425.849365 375.994781,426.007202   C375.994781,426.007202 376.000000,426.000000 375.994843,426.401062   C376.015808,427.864105 376.041901,428.926117 376.067993,429.988129  z\",id:\"svg_1648\"})),_path1647||(_path1647=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M368.214600,407.313965   C371.549438,404.690308 373.911499,406.396240 375.936859,409.698425   C373.451477,409.236572 370.938934,408.419556 368.214600,407.313965  z\",id:\"svg_1649\"})),_path1648||(_path1648=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M384.533813,414.053467   C385.250610,414.811066 385.595398,415.583374 385.965759,416.673737   C384.881134,417.248444 383.770966,417.505066 382.333435,417.885193   C382.724640,416.695221 383.443237,415.381714 384.533813,414.053467  z\",id:\"svg_1650\"})),_path1649||(_path1649=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M358.370178,414.846008   C358.109406,415.961243 357.707489,416.809570 357.305542,417.657928   C356.857208,417.433075 356.408875,417.208221 355.960541,416.983368   C356.506775,415.938843 357.053009,414.894318 357.599213,413.849792   C357.729004,413.947998 357.879120,414.028717 357.982910,414.149292   C358.088654,414.272186 358.148865,414.434235 358.370178,414.846008  z\",id:\"svg_1651\"})),_path1650||(_path1650=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M376.018738,425.665649   C375.143860,425.849365 374.292908,425.691528 373.262268,425.254211   C373.837158,424.642426 374.591797,424.310089 375.681244,423.965393   C376.024963,424.410004 376.033813,424.867065 376.018738,425.665649  z\",id:\"svg_1652\"})),_path1651||(_path1651=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M378.951752,410.450653   C379.570374,410.287384 380.275879,410.391998 380.991119,410.783386   C380.346771,410.952911 379.692719,410.835724 378.951752,410.450653  z\",id:\"svg_1653\"})),_path1652||(_path1652=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M365.084106,424.137756   C365.408081,423.317017 365.934296,422.752716 366.715546,422.044312   C366.409119,422.731506 365.847717,423.562836 365.084106,424.137756  z\",id:\"svg_1654\"})),_path1653||(_path1653=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M366.991577,419.991241   C367.259644,419.470459 367.516266,418.944946 367.845001,418.469177   C367.878632,418.420502 368.344147,418.670258 368.609253,418.781555   C368.281891,419.184570 367.954498,419.587585 367.323242,420.005005   C367.019379,420.019348 367.000641,420.000641 366.991577,419.991241  z\",id:\"svg_1655\"})),_path1654||(_path1654=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M377.759766,421.901978   C377.544128,422.331482 377.073456,422.663055 376.298950,423.022705   C376.498322,422.635193 377.001526,422.219604 377.759766,421.901978  z\",id:\"svg_1656\"})),_path1655||(_path1655=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M379.640869,421.072327   C379.475098,421.368652 379.019379,421.662933 378.276978,421.985168   C378.443848,421.698822 378.897369,421.384583 379.640869,421.072327  z\",id:\"svg_1657\"})),_path1656||(_path1656=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M365.465088,427.445435   C365.522644,427.410309 365.407501,427.480560 365.465088,427.445435  z\",id:\"svg_1658\"})),_path1657||(_path1657=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M345.024780,511.203857   C347.847107,507.683807 347.867462,507.687988 352.116974,512.324768   C352.449249,511.949524 352.781525,511.574280 353.113800,511.199036   C354.452881,512.094421 355.741425,513.084167 357.154877,513.840515   C357.754181,514.161194 358.615814,513.991821 359.677704,514.022583   C358.927155,514.983154 357.857086,515.966370 356.423523,517.283630   C357.285919,517.779175 358.294617,518.358826 359.651672,518.969238   C360.000000,519.000000 359.997559,518.997559 359.997559,518.997559   C361.241180,521.113281 362.484802,523.229065 363.714417,525.903564   C363.174011,526.645752 362.647552,526.829102 361.832062,526.833984   C359.505371,524.354797 357.467773,522.054016 356.042938,520.445190   C353.705627,522.085693 352.351685,523.036011 350.997742,523.986328   C349.023010,519.843445 347.048279,515.700562 345.024780,511.203857  M354.222137,515.630859   C354.268372,515.272949 354.314636,514.915039 354.360870,514.557129   C354.105042,514.552551 353.849243,514.547913 353.593414,514.543274   C353.634491,514.902832 353.675537,515.262390 354.222137,515.630859  z\",id:\"svg_1659\"})),_path1658||(_path1658=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C88753\",opacity:1,stroke:\"none\",d:\" M350.668304,523.957092   C352.351685,523.036011 353.705627,522.085693 356.042938,520.445190   C357.467773,522.054016 359.505371,524.354797 361.634644,527.123169   C357.721680,530.095337 354.265320,528.821594 351.027924,526.038513   C349.715271,524.926636 348.402618,523.814697 347.076965,522.402344   C348.155609,522.710571 349.247253,523.319214 350.668304,523.957092  z\",id:\"svg_1660\"})),_path1659||(_path1659=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M590.993713,296.994659   C592.744812,297.660187 594.495972,298.325745 596.618652,299.002014   C594.256897,302.548462 591.533325,306.091797 588.780945,309.612610   C588.300842,310.226715 587.699280,310.745880 586.760071,311.624084   C584.895874,310.296600 583.425415,308.653900 582.271606,306.848694   C583.011780,305.365540 583.435303,304.044861 583.858826,302.724182   C583.440125,302.631470 583.021423,302.538757 582.602722,302.446045   C582.068420,303.625916 581.534058,304.805786 580.647522,305.986755   C579.521606,305.343475 578.747986,304.699066 577.987488,303.714722   C578.021606,302.922516 578.042542,302.470276 578.063477,302.018005   C578.482483,302.016296 578.901428,302.014618 579.831909,301.929413   C580.420898,301.727051 580.591187,301.546997 580.560059,301.499786   C580.410217,301.272644 580.206055,301.081360 580.021179,300.877350   C580.021179,300.877350 580.015808,300.472656 580.017578,300.005188   C580.013611,299.361450 580.007996,299.185242 580.002319,299.009033   C580.002319,299.009033 580.000000,299.000366 580.342346,299.007294   C583.123840,298.340668 585.562927,297.667114 588.001038,296.996765   C588.000000,297.000000 588.006897,296.998779 588.059265,297.334167   C589.573364,299.579834 590.524841,299.313049 590.997559,296.996735   C591.000000,296.999786 590.993713,296.994659 590.993713,296.994659  z\",id:\"svg_1661\"})),_path1660||(_path1660=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M581.954956,307.011200   C583.425415,308.653900 584.895874,310.296600 586.711060,311.971893   C587.055725,312.004486 587.504578,312.013519 587.792114,312.348267   C589.049011,313.791077 590.018372,314.899200 590.624146,316.008972   C589.518677,316.962006 588.776611,317.913361 587.734985,318.718170   C581.624512,314.695770 575.813782,310.819946 569.702881,306.836487   C568.979187,306.693939 568.555664,306.659088 567.962585,306.353394   C566.861755,305.739960 565.930420,305.397339 564.728149,304.912659   C563.980286,304.399475 563.503418,304.028381 562.999390,303.367981   C562.651428,302.376801 562.330505,301.674927 562.009583,300.973053   C565.219604,301.520752 568.435608,302.036377 571.636108,302.635071   C572.636963,302.822296 573.596008,303.233551 575.081543,303.406677   C576.384033,303.532257 577.179138,303.793427 577.974304,304.054626   C578.747986,304.699066 579.521606,305.343475 580.747864,306.207397   C581.388550,306.703583 581.640076,306.898346 581.954956,307.011200  z\",id:\"svg_1662\"})),_path1661||(_path1661=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M561.637268,300.929688   C562.330505,301.674927 562.651428,302.376801 562.664551,303.471313   C561.897339,303.937683 561.437744,304.011444 560.698364,303.943970   C559.062378,304.020660 559.363586,298.899231 556.560852,302.756348   C555.559814,302.787872 554.890747,302.771423 554.093506,302.437988   C552.529968,302.270294 551.094482,302.419525 549.422424,302.591187   C548.870789,302.650482 548.554932,302.660950 548.095703,302.287628   C545.943298,301.560883 543.933411,301.191498 541.923523,300.822144   C543.112610,299.964325 544.301697,299.106537 545.751465,298.128632   C551.096436,298.967804 556.180725,299.927063 561.637268,300.929688  z\",id:\"svg_1663\"})),_path1662||(_path1662=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M550.033569,289.568146   C548.659546,289.175629 547.339966,288.457489 546.735229,288.128387   C549.026855,285.779510 550.997681,283.759369 552.975708,281.375305   C554.858643,282.644012 556.734436,284.276642 558.968567,286.221222   C557.031311,287.197723 556.199951,290.945282 553.133179,287.504150   C552.971619,287.322906 551.141357,288.628876 550.033569,289.568146  z\",id:\"svg_1664\"})),_path1663||(_path1663=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M581.999573,290.918854   C580.650696,288.921631 579.301758,286.924408 577.952881,284.927185   C578.325806,284.651001 578.698792,284.374847 579.071777,284.098694   C579.739441,287.052643 585.670105,285.043335 583.662048,290.533508   C582.854675,290.909302 582.427124,290.914093 581.999573,290.918854  z\",id:\"svg_1665\"})),_path1664||(_path1664=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M588.002075,296.993530   C585.562927,297.667114 583.123840,298.340668 580.346802,299.007996   C581.878052,297.172455 583.712891,295.304108 585.676636,293.582733   C585.846313,293.434021 586.867981,294.257263 587.760193,295.138000   C588.018372,296.095856 588.010193,296.544708 588.002075,296.993530  z\",id:\"svg_1666\"})),_path1665||(_path1665=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M562.013672,284.347412   C562.755859,283.984741 563.504578,283.991760 564.627869,283.999451   C565.254272,284.681610 565.824951,285.895630 565.709839,285.964569   C564.070007,286.946747 562.290833,287.905396 562.013672,284.347412  z\",id:\"svg_1667\"})),_path1666||(_path1666=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M553.941406,293.062378   C554.780457,292.669342 555.388306,292.437347 555.996094,292.205322   C555.505066,293.247711 555.014038,294.290131 554.523010,295.332550   C554.252075,294.629517 553.981140,293.926483 553.941406,293.062378  z\",id:\"svg_1668\"})),_path1667||(_path1667=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M588.001038,296.996765   C588.010193,296.544708 588.018372,296.095856 588.027466,295.309814   C588.815735,294.901062 589.603027,294.829559 590.649231,294.872498   C590.926270,295.433258 590.944397,295.879578 590.978149,296.660278   C590.993713,296.994659 591.000000,296.999786 590.624390,296.974304   C589.501465,296.965454 588.754150,296.982117 588.006897,296.998779   C588.006897,296.998779 588.000000,297.000000 588.001038,296.996765  z\",id:\"svg_1669\"})),_path1668||(_path1668=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M577.987488,303.714722   C577.179138,303.793427 576.384033,303.532257 575.297424,303.143066   C575.906860,302.552734 576.807678,302.090424 577.885986,301.823059   C578.042542,302.470276 578.021606,302.922516 577.987488,303.714722  z\",id:\"svg_1670\"})),_path1669||(_path1669=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M547.183105,296.244446   C547.442139,295.646210 547.889465,295.296326 548.628052,294.890564   C549.121887,295.365723 549.324524,295.896820 549.527222,296.427917   C548.808594,296.449554 548.090027,296.471191 547.183105,296.244446  z\",id:\"svg_1671\"})),_path1670||(_path1670=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M588.464478,290.602875   C588.348022,291.053467 588.064209,291.329681 587.762085,291.584106   C587.753662,291.591187 587.547791,291.363800 587.433960,291.245728   C587.720825,290.972321 588.007751,290.698914 588.464478,290.602875  z\",id:\"svg_1672\"})),_path1671||(_path1671=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M582.130005,291.173004   C582.427124,290.914093 582.854675,290.909302 583.600891,290.878143   C583.924438,291.194397 583.929321,291.537018 583.934204,291.879669   C583.376282,291.728821 582.818359,291.577972 582.130005,291.173004  z\",id:\"svg_1673\"})),_path1672||(_path1672=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M560.714233,289.343506   C560.983032,289.358185 561.130432,289.501495 561.277771,289.644806   C561.049438,289.587280 560.821167,289.529724 560.714233,289.343506  z\",id:\"svg_1674\"})),_path1673||(_path1673=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M579.829590,299.099243   C580.007996,299.185242 580.013611,299.361450 580.012329,299.802917   C579.889221,299.775208 579.773010,299.482330 579.829590,299.099243  z\",id:\"svg_1675\"})),_path1674||(_path1674=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M548.970154,293.817444   C548.775757,293.909393 548.578125,293.723114 548.438477,293.500427   C548.404358,293.445953 548.560486,293.272186 548.807373,293.047363   C548.986511,293.136292 548.987366,293.331055 548.970154,293.817444  z\",id:\"svg_1676\"})),_path1675||(_path1675=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M579.997437,301.161316   C580.206055,301.081360 580.410217,301.272644 580.560059,301.499786   C580.591187,301.546997 580.420898,301.727051 580.146179,301.930237   C579.957214,301.824799 579.965454,301.635040 579.997437,301.161316  z\",id:\"svg_1677\"})),_path1676||(_path1676=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M576.547791,283.547058   C576.480103,283.586945 576.615479,283.507141 576.547791,283.547058  z\",id:\"svg_1678\"})),_path1677||(_path1677=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M507.024170,312.962646   C507.019196,312.790833 507.014191,312.619019 507.158722,311.857788   C507.872253,309.935944 508.271912,308.498901 509.038086,307.295135   C510.236298,305.412659 511.682495,303.688049 513.373352,301.919495   C515.148682,300.964172 516.574341,299.985931 518.000000,299.007721   C519.040283,298.738129 520.080566,298.468506 521.120789,298.198883   C521.151794,297.702637 521.182739,297.206390 521.213745,296.710144   C523.082092,297.648987 524.950500,298.587860 527.309326,299.773163   C528.035461,298.952972 529.360962,297.455688 531.002014,295.601990   C531.002014,296.752350 531.002014,297.545715 531.001709,298.985107   C531.028687,300.045380 531.056030,300.459656 530.774719,300.897888   C529.930359,301.121094 529.394714,301.320374 528.859070,301.519653   C529.270325,301.741547 529.681519,301.963470 530.060669,302.457764   C530.002319,303.094849 529.976074,303.459564 529.649353,303.940552   C528.566162,304.389160 527.783447,304.721497 526.636658,305.101166   C523.853882,306.118866 521.435181,307.089203 518.769836,307.764465   C516.473816,307.855530 514.231018,307.847504 512.426636,308.732941   C510.417664,309.718719 508.807770,311.517670 507.024170,312.962646  z\",id:\"svg_1679\"})),_path1678||(_path1678=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M513.023621,301.896545   C511.682495,303.688049 510.236298,305.412659 509.038086,307.295135   C508.271912,308.498901 507.872253,309.935944 507.152283,311.600006   C504.159180,308.900574 501.322083,305.869568 498.292145,302.632538   C500.069672,302.126801 501.003479,301.861115 501.977264,301.299561   C503.130402,300.688934 504.243561,300.374237 505.758698,300.394531   C507.334534,301.027008 508.496033,301.395599 509.685760,301.601135   C510.782654,301.790649 511.909790,301.805023 513.023621,301.896545  z\",id:\"svg_1680\"})),_path1679||(_path1679=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M513.373352,301.919495   C511.909790,301.805023 510.782654,301.790649 509.685760,301.601135   C508.496033,301.395599 507.334534,301.027008 506.108521,300.369110   C508.860931,298.447723 511.665497,296.886749 515.419617,294.797272   C515.949585,295.471771 517.103699,296.940674 518.128906,298.708618   C516.574341,299.985931 515.148682,300.964172 513.373352,301.919495  z\",id:\"svg_1681\"})),_path1680||(_path1680=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M531.083435,300.873901   C531.056030,300.459656 531.028687,300.045380 531.006348,299.319885   C533.890686,300.088654 537.488464,295.558258 539.932800,300.796326   C539.882690,301.818390 539.817810,302.193390 539.355774,302.589783   C537.638855,302.763916 536.319031,302.916718 534.649048,302.999207   C533.481689,303.258514 532.664490,303.588135 531.529175,303.938721   C530.790710,303.914520 530.370300,303.869385 529.949829,303.824280   C529.976074,303.459564 530.002319,303.094849 530.297852,302.410156   C530.739258,301.684723 530.911377,301.279327 531.083435,300.873901  z\",id:\"svg_1682\"})),_path1681||(_path1681=/*#__PURE__*/React.createElement(\"path\",{fill:\"#604234\",opacity:1,stroke:\"none\",d:\" M539.752930,302.568420   C539.817810,302.193390 539.882690,301.818390 539.980591,301.158142   C540.439575,300.890747 540.865479,300.908569 541.607483,300.874268   C543.933411,301.191498 545.943298,301.560883 547.630493,302.386536   C544.789551,302.751312 542.271240,302.659851 539.752930,302.568420  z\",id:\"svg_1683\"})),_path1682||(_path1682=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M526.351685,280.237000   C526.499268,279.776794 526.789734,279.496429 527.101013,279.241333   C527.115479,279.229401 527.315613,279.443909 527.429260,279.552979   C527.119080,279.842560 526.808838,280.132141 526.351685,280.237000  z\",id:\"svg_1684\"})),_path1683||(_path1683=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M545.247009,292.011841   C545.411987,291.902283 545.578430,291.956207 545.744934,292.010132   C545.579468,292.065216 545.414001,292.120270 545.247009,292.011841  z\",id:\"svg_1685\"})),_path1684||(_path1684=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M603.159119,343.027435   C602.796570,341.653473 602.434021,340.279480 601.686890,338.824524   C601.302368,338.743561 601.270508,338.719086 601.257446,338.386597   C600.583923,337.226624 599.923462,336.399109 599.237061,335.219360   C598.485718,332.907196 597.760193,330.947266 597.341431,328.952209   C598.421875,328.297272 599.195618,327.677399 599.969360,327.057526   C601.290039,329.166626 602.610779,331.275726 603.990601,333.748779   C605.021484,336.092682 605.993286,338.072571 606.944946,340.419586   C606.503967,341.369385 606.083191,341.951996 605.357544,342.773254   C604.421509,343.017090 603.790344,343.022247 603.159119,343.027435  z\",id:\"svg_1686\"})),_path1685||(_path1685=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M599.999756,326.762146   C599.195618,327.677399 598.421875,328.297272 597.062500,328.755157   C593.662781,325.350372 590.848694,322.107544 588.034607,318.864746   C588.776611,317.913361 589.518677,316.962006 590.630310,316.006317   C590.999939,316.002014 590.993652,316.012482 591.041382,316.329193   C591.726318,317.072510 592.363586,317.499115 593.000854,317.925690   C593.185669,317.940857 593.370483,317.955994 593.859985,318.329163   C595.434265,319.448975 596.703735,320.210754 597.987793,320.987579   C598.002441,321.002625 598.031677,321.032990 598.037354,321.383423   C598.666565,322.452454 599.290161,323.171082 599.913696,323.889679   C599.952515,324.748718 599.991333,325.607727 599.999756,326.762146  z\",id:\"svg_1687\"})),_path1686||(_path1686=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M597.973206,320.972534   C596.703735,320.210754 595.434265,319.448975 594.136963,318.354126   C596.411316,316.506287 598.712280,314.989746 601.016296,313.477844   C601.760986,312.989136 602.513794,312.512543 603.627808,312.018677   C604.406433,313.917908 604.820129,315.828827 605.437988,318.682343   C604.355774,319.650970 602.307983,321.483887 600.086914,323.603271   C599.290161,323.171082 598.666565,322.452454 598.386353,321.384094   C599.350464,320.676453 599.971191,320.318573 600.591919,319.960663   C600.278320,319.674042 599.964722,319.387421 599.651123,319.100769   C599.091797,319.724701 598.532532,320.348602 597.973206,320.972534  z\",id:\"svg_1688\"})),_path1687||(_path1687=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M617.010742,326.003357   C616.890869,325.859741 616.759521,325.712036 616.628174,325.564331   C616.719055,325.617371 616.809937,325.670410 616.954468,325.872772   C617.008057,326.022095 616.999207,325.999298 617.010742,326.003357  z\",id:\"svg_1689\"})),_path1688||(_path1688=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M590.993774,316.004669   C590.018372,314.899200 589.049011,313.791077 588.016602,312.344666   C591.082214,311.820404 594.910095,308.640076 596.707458,313.255829   C596.035278,317.913330 592.382324,310.166931 591.747559,315.627167   C591.327087,315.999878 591.160339,316.006195 590.993652,316.012482   C590.993652,316.012482 590.999939,316.002014 590.993774,316.004669  z\",id:\"svg_1690\"})),_path1689||(_path1689=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M597.998352,299.338196   C598.352356,299.807709 598.704712,300.619720 599.036987,301.733063   C598.676880,301.249817 598.336792,300.465240 597.998352,299.338196  z\",id:\"svg_1691\"})),_path1690||(_path1690=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M591.041382,316.329193   C591.160339,316.006195 591.327087,315.999878 591.743286,315.974792   C592.251709,316.445770 592.510681,316.935486 592.885254,317.675446   C592.363586,317.499115 591.726318,317.072510 591.041382,316.329193  z\",id:\"svg_1692\"})),_path1691||(_path1691=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M603.661804,303.049713   C603.686829,303.808441 603.383423,304.608307 603.044922,305.731415   C603.117615,305.066742 603.225464,304.078796 603.661804,303.049713  z\",id:\"svg_1693\"})),_path1692||(_path1692=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M603.071716,343.351837   C603.790344,343.022247 604.421509,343.017090 605.362061,343.046265   C606.402893,344.141632 607.134399,345.202667 607.865967,346.263702   C608.075256,345.682373 608.284546,345.101013 608.493835,344.519653   C610.293030,344.437408 612.092285,344.355164 613.966553,344.598022   C611.997070,346.662048 609.952637,348.400940 607.955627,350.099426   C609.985474,352.605347 611.608765,354.609283 613.231995,356.613220   C613.001709,356.875153 612.771423,357.137054 612.541199,357.398987   C611.415405,356.701569 610.289612,356.004120 608.719788,355.031555   C608.437500,356.273407 608.210022,357.274200 607.596130,358.561951   C606.721191,355.665771 606.386230,352.447052 605.662048,349.318451   C605.403442,348.201263 604.202759,347.302155 603.432007,346.303497   C603.282776,345.427765 603.133545,344.552002 603.071716,343.351837  z\",id:\"svg_1694\"})),_path1693||(_path1693=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M603.536621,346.661774   C604.202759,347.302155 605.403442,348.201263 605.662048,349.318451   C606.386230,352.447052 606.721191,355.665771 607.590454,358.928192   C607.972351,359.175537 607.973572,359.343628 607.973450,360.002319   C607.972046,360.492889 607.963196,360.970184 607.963196,360.970184   C607.650269,361.366241 607.337341,361.762329 606.662231,362.534851   C605.869080,363.642151 605.438232,364.373016 605.007324,365.103882   C605.007324,365.103882 605.021179,365.540436 604.619751,365.784882   C603.946655,366.038635 603.674927,366.047974 603.403198,366.057281   C603.482544,359.711548 603.561829,353.365784 603.536621,346.661774  z\",id:\"svg_1695\"})),_path1694||(_path1694=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M603.376892,366.417236   C603.674927,366.047974 603.946655,366.038635 604.625793,366.003174   C605.520508,367.224060 606.007812,368.471069 606.225464,369.917999   C605.387207,369.779297 604.818542,369.440674 603.929932,369.008484   C603.523560,368.202362 603.437073,367.489777 603.376892,366.417236  z\",id:\"svg_1696\"})),_path1695||(_path1695=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M604.296143,374.983704   C604.477783,373.783447 604.979980,372.558380 605.750488,371.131592   C606.341370,371.717072 606.663940,372.504242 606.975220,373.631958   C606.181458,374.301239 605.399109,374.630035 604.296143,374.983704  z\",id:\"svg_1697\"})),_path1696||(_path1696=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M605.346191,365.071381   C605.438232,364.373016 605.869080,363.642151 606.629761,362.797302   C606.534668,363.468506 606.109924,364.253693 605.346191,365.071381  z\",id:\"svg_1698\"})),_path1697||(_path1697=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M612.394775,364.712891   C612.565308,364.847687 612.590759,365.082458 612.616211,365.317200   C612.494080,365.149109 612.371887,364.981018 612.394775,364.712891  z\",id:\"svg_1699\"})),_path1698||(_path1698=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M608.139648,360.895172   C607.963196,360.970184 607.972046,360.492889 607.975342,360.254395   C608.159485,360.177521 608.352417,360.328796 608.508362,360.511688   C608.532166,360.539581 608.384521,360.713684 608.139648,360.895172  z\",id:\"svg_1700\"})),_path1699||(_path1699=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M551.269836,445.993164   C551.678345,443.015808 552.452759,440.047424 553.598755,437.029419   C557.253174,440.036316 554.558594,443.951141 556.018250,447.677795   C554.160583,446.967529 552.898193,446.484833 551.269836,445.993164  z\",id:\"svg_1701\"})),_path1700||(_path1700=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M563.077820,453.926331   C564.123535,453.959930 565.169189,453.993500 566.607422,454.019592   C567.000000,454.012085 567.000183,453.999573 566.994019,454.000397   C566.307861,454.946564 565.627869,455.891937 564.947815,456.837280   C564.299744,456.153839 563.651672,455.470428 563.004150,454.391815   C563.004700,453.996643 563.077820,453.926361 563.077820,453.926331  z\",id:\"svg_1702\"})),_path1701||(_path1701=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M562.969116,454.032806   C561.961731,453.289215 560.989807,452.509460 560.008972,451.364868   C560.000000,451.000000 559.993408,451.007263 559.993408,451.007263   C561.009216,451.737396 562.025085,452.467529 563.059326,453.562012   C563.077820,453.926361 563.004700,453.996643 562.969116,454.032806  z\",id:\"svg_1703\"})),_path1702||(_path1702=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M560.003662,450.996521   C559.472168,450.741455 558.922913,450.513062 558.421326,450.206512   C558.364075,450.171539 558.574158,449.699127 558.660339,449.429565   C559.076843,449.757202 559.493408,450.084839 559.951660,450.709900   C559.993408,451.007263 560.000000,451.000000 560.003662,450.996521  z\",id:\"svg_1704\"})),_path1703||(_path1703=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M566.998901,450.000916   C566.489075,449.700836 565.980347,449.399811 565.471558,449.098785   C565.651550,448.889435 565.831543,448.680115 566.011597,448.470795   C566.313477,448.791992 566.615295,449.113190 566.959595,449.716156   C567.002075,449.997925 567.000000,450.000000 566.998901,450.000916  z\",id:\"svg_1705\"})),_path1704||(_path1704=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M573.001465,448.001831   C572.696472,448.511322 572.390076,449.018982 572.083679,449.526642   C571.875916,449.344360 571.668091,449.162079 571.460327,448.979797   C571.782837,448.676117 572.105347,448.372437 572.711487,448.032532   C572.995117,447.996338 573.000000,448.000000 573.001465,448.001831  z\",id:\"svg_1706\"})),_path1705||(_path1705=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M611.006226,477.008423   C610.897095,477.043671 610.781799,477.070923 610.825500,477.042847   C610.984558,476.987488 611.000000,477.000427 611.006226,477.008423  z\",id:\"svg_1707\"})),_path1706||(_path1706=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M602.556274,487.572845   C602.488831,487.617371 602.623718,487.528320 602.556274,487.572845  z\",id:\"svg_1708\"})),_path1707||(_path1707=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M545.958008,526.023315   C545.658630,526.126099 545.414856,526.304810 544.748535,526.772095   C543.522217,526.991516 542.774048,526.998230 542.025940,527.004883   C536.735168,523.855225 543.502747,522.285461 543.120605,519.333740   C543.167114,518.943481 543.068176,518.979431 542.969238,519.015381   C542.232910,519.015137 541.496643,519.014832 540.386108,518.651367   C539.994324,517.556885 539.976685,516.825500 539.959106,516.094177   C540.378296,516.056152 540.797424,516.018188 541.526489,515.935547   C544.393982,515.747253 546.951721,515.603699 549.749573,515.745117   C549.344238,517.139282 548.698669,518.248474 548.027344,520.087952   C548.006104,521.882812 548.010559,522.947266 548.015015,524.011780   C548.015015,524.011780 548.002441,524.005188 547.683472,524.047607   C546.895691,524.734436 546.426819,525.378845 545.958008,526.023315  z\",id:\"svg_1709\"})),_path1708||(_path1708=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M523.954102,504.150879   C523.954102,504.150879 524.446960,504.163208 524.692810,504.160583   C524.957947,505.172516 524.977173,506.187073 524.618225,507.595917   C523.492493,508.990234 522.745056,509.990234 521.635559,510.942688   C516.737915,510.127014 512.202332,509.358887 506.832611,508.449493   C506.815948,508.400635 506.405273,507.197693 506.390015,506.035034   C512.061462,509.209229 517.368286,504.307129 522.688477,506.058075   C522.880371,506.121246 523.522034,504.817535 523.954102,504.150879  z\",id:\"svg_1710\"})),_path1709||(_path1709=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M539.636230,516.111694   C539.976685,516.825500 539.994324,517.556885 540.017944,518.655884   C539.045959,519.968811 538.219727,521.375183 537.056519,521.757935   C534.979065,522.441589 532.703674,522.638123 530.498413,522.727600   C530.028259,522.746704 529.504272,521.437927 529.004150,520.372009   C531.335999,519.362305 533.668823,518.721497 536.001709,518.080627   C536.132629,518.476868 536.263550,518.873108 536.394531,519.269348   C537.367493,518.222595 538.340454,517.175903 539.636230,516.111694  z\",id:\"svg_1711\"})),_path1710||(_path1710=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M521.997559,510.990234   C522.745056,509.990234 523.492493,508.990234 524.608398,507.979553   C525.290039,508.086426 525.548889,508.277527 526.002625,509.054016   C527.158813,510.048248 528.065674,510.530701 528.972595,511.013153   C528.972595,511.013153 528.996704,511.003693 529.010132,511.335449   C529.682434,512.442139 530.341187,513.216980 531.000000,513.991882   C531.000000,513.991882 531.035217,514.427002 530.703369,514.683350   C529.903259,514.960632 529.434998,514.981506 528.654907,514.849121   C526.229553,513.797058 524.115967,512.898193 522.000854,511.747070   C521.998596,511.326630 521.998047,511.158417 521.997559,510.990234  z\",id:\"svg_1712\"})),_path1711||(_path1711=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M526.245361,503.980591   C526.675720,503.322571 527.472351,502.669464 528.625977,502.021881   C528.192444,502.680115 527.402039,503.332825 526.245361,503.980591  z\",id:\"svg_1713\"})),_path1712||(_path1712=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M529.011475,519.622192   C526.704712,519.500854 526.397034,518.546692 528.661072,517.038330   C529.008789,517.749268 529.017517,518.498474 529.011475,519.622192  z\",id:\"svg_1714\"})),_path1713||(_path1713=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M528.966675,515.002380   C529.434998,514.981506 529.903259,514.960632 530.722046,514.900879   C530.604431,515.573486 530.136353,516.284973 529.334167,516.998291   C528.989380,516.826233 528.978760,516.652527 528.964478,515.979980   C528.960876,515.481140 528.966675,515.002380 528.966675,515.002380  z\",id:\"svg_1715\"})),_path1714||(_path1714=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M528.932800,510.663147   C528.065674,510.530701 527.158813,510.048248 526.117126,509.268799   C526.952576,509.418915 527.922791,509.866028 528.932800,510.663147  z\",id:\"svg_1716\"})),_path1715||(_path1715=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M531.000732,513.635864   C530.341187,513.216980 529.682434,512.442139 529.005371,511.347473   C529.658508,511.778473 530.329956,512.529175 531.000732,513.635864  z\",id:\"svg_1717\"})),_path1716||(_path1716=/*#__PURE__*/React.createElement(\"path\",{fill:\"#543317\",opacity:1,stroke:\"none\",d:\" M545.908997,440.225372   C547.392700,427.188141 554.066833,418.399963 566.599854,413.972473   C565.940674,415.317078 565.168396,417.280396 563.825806,417.817139   C558.368469,419.998871 555.280579,424.229309 553.052307,429.270172   C551.484497,432.816925 550.291992,436.529846 548.714417,440.071686   C548.513550,440.522552 546.995178,440.386658 545.908997,440.225372  z\",id:\"svg_1718\"})),_path1717||(_path1717=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M569.763794,414.707428   C569.967468,414.880890 569.921631,415.363312 569.903931,415.602966   C569.635864,415.567169 569.385376,415.291779 569.083984,414.729492   C569.208801,414.473083 569.384460,414.503540 569.763794,414.707428  z\",id:\"svg_1719\"})),_path1718||(_path1718=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M582.312866,482.043243   C581.971130,481.201874 581.896851,480.357330 581.911316,479.256409   C582.639099,479.376465 583.278137,479.752960 583.930176,480.761108   C583.912415,481.615631 583.881775,481.838440 583.851135,482.061218   C583.851135,482.061218 583.480103,482.060852 583.297424,482.038757   C582.936584,482.024475 582.758484,482.032288 582.312866,482.043243  z\",id:\"svg_1720\"})),_path1719||(_path1719=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M583.006104,472.995544   C583.134644,473.144623 583.257080,473.298187 583.379517,473.451782   C583.286133,473.402252 583.192810,473.352753 583.044800,473.157532   C582.990234,473.011841 583.000000,473.000000 583.006104,472.995544  z\",id:\"svg_1721\"})),_path1720||(_path1720=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M584.099609,481.982361   C583.881775,481.838440 583.912415,481.615631 583.988098,481.055725   C584.138062,481.113586 584.243103,481.508545 584.099609,481.982361  z\",id:\"svg_1722\"})),_path1721||(_path1721=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M523.965820,503.768677   C523.522034,504.817535 522.880371,506.121246 522.688477,506.058075   C517.368286,504.307129 512.061462,509.209229 506.393005,506.037903   C506.000671,506.000549 506.007996,506.004913 505.829712,505.711609   C504.761566,505.275146 503.871735,505.131958 502.989319,504.993347   C502.996735,504.997925 503.010071,505.008850 502.951721,504.663910   C501.994873,504.009369 500.982697,503.865021 500.228363,503.345917   C499.394470,502.772003 498.796722,501.854889 498.452637,501.069275   C500.938324,500.512817 503.067505,499.974304 505.299225,499.409882   C504.977203,498.600067 504.482147,497.355103 503.987091,496.110138   C506.902069,499.233429 508.746246,498.586517 510.350983,494.944214   C512.046448,495.911804 513.389709,496.817169 514.906006,497.839111   C517.532532,495.276794 520.150696,492.722626 522.768860,490.168457   C522.403931,489.689301 522.039001,489.210144 521.674072,488.730988   C519.151489,491.040100 516.668518,494.858551 515.198425,491.462524   C513.813477,492.131317 511.900665,493.055084 509.631195,493.998108   C508.515198,493.342865 507.755768,492.668365 507.367950,492.000977   C508.503143,491.015289 509.266724,490.022552 510.365479,488.989380   C511.478119,487.976929 512.255554,487.004913 513.400269,486.026794   C514.502441,486.023560 515.237244,486.026367 516.023926,486.346680   C516.858398,487.253784 517.641052,487.843414 518.423645,488.433044   C518.642334,487.931915 518.860962,487.430817 519.079651,486.929718   C518.063477,486.609161 517.047363,486.288635 516.032898,485.567139   C515.971863,484.096710 515.909119,483.027222 516.240601,481.957092   C518.568115,480.974609 520.501343,479.992798 522.376099,479.040741   C520.130615,476.563324 518.641357,474.920258 516.649841,472.722992   C515.489929,479.917572 513.542358,473.675598 512.051697,473.425171   C510.231232,474.173523 509.028381,478.613617 506.999817,473.763397   C507.005402,473.523499 507.006775,473.043579 507.321594,472.992249   C507.985382,472.509186 508.334351,472.077484 508.683350,471.645752   C508.127655,471.402374 507.571930,471.158997 507.006592,470.557220   C507.151672,469.300720 507.306396,468.402649 507.555206,466.958527   C510.030090,469.093079 512.304749,472.309875 514.335144,467.149109   C514.521484,466.675323 517.359924,466.931061 518.826294,467.345398   C521.262024,468.033691 523.583801,469.125702 525.945923,470.451996   C525.957581,471.940796 525.976868,473.025269 525.996155,474.109741   C524.121582,473.311859 522.247009,472.513947 519.144043,471.193176   C522.114685,475.518616 527.597595,477.887909 522.361938,483.937317   C523.102478,483.810883 523.843018,483.684448 524.583557,483.558044   C525.351990,482.468903 526.120361,481.379761 526.647827,480.632202   C529.017029,480.823151 531.203064,480.999329 532.237488,481.082703   C536.449646,481.858734 539.537048,482.363586 542.590576,483.025330   C543.637695,483.252258 544.599792,483.871918 545.770752,484.622131   C543.287781,487.041199 540.634705,489.150269 537.735901,491.627380   C537.490173,491.995453 537.014893,491.992401 536.727356,491.801941   C534.500793,488.644196 532.669250,487.377747 530.897705,491.788666   C530.668518,492.359375 529.668274,492.620392 529.012268,493.012543   C528.999390,493.000214 528.971008,492.978394 528.977783,492.585846   C528.724304,491.124878 528.464111,490.056458 528.002747,488.162109   C524.850830,491.674164 522.461914,494.335999 520.438232,496.590912   C522.563232,497.170929 524.281616,497.639984 526.000061,498.109039   C525.325928,499.868195 524.651733,501.627350 523.965820,503.768677  M508.199707,502.799774   C508.339111,502.986786 508.478516,503.173798 508.617920,503.360779   C508.586426,503.097382 508.554932,502.833954 508.199707,502.799774  M531.168091,487.213593   C530.978394,487.355194 530.788635,487.496796 530.598938,487.638428   C530.862549,487.607117 531.126099,487.575775 531.168091,487.213593  z\",id:\"svg_1723\"})),_path1722||(_path1722=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M533.025085,473.015289   C532.839905,473.010376 532.654724,473.005432 532.160400,472.639954   C530.907593,471.792389 529.963867,471.305450 529.051758,470.653259   C529.083252,470.488068 529.078003,470.151733 529.102966,469.792206   C529.893616,467.982300 530.659302,466.531891 531.747131,464.955872   C532.754028,459.575378 533.438721,454.320587 534.477722,449.046753   C535.545105,449.019989 536.258240,449.012207 537.221313,449.217346   C537.122314,452.370728 536.873657,455.327454 536.401672,458.248138   C535.608826,463.155090 534.674011,468.039093 533.604370,472.943237   C533.409851,472.953735 533.025085,473.015289 533.025085,473.015289  z\",id:\"svg_1724\"})),_path1723||(_path1723=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M529.078003,470.151733   C529.078003,470.151733 529.083252,470.488068 529.030151,470.969055   C528.656189,472.642456 528.335388,473.834808 528.014526,475.027191   C528.014526,475.027191 527.996216,475.002289 527.666565,474.991394   C526.877747,474.949677 526.418518,474.918823 525.959351,474.888000   C525.959351,474.888000 525.967712,474.497040 525.981934,474.303406   C525.976868,473.025269 525.957581,471.940796 525.967773,470.429779   C525.997192,470.003235 526.039612,469.960144 526.418701,469.971527   C527.557922,470.039185 528.317932,470.095459 529.078003,470.151733  z\",id:\"svg_1725\"})),_path1724||(_path1724=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M532.996460,473.329407   C533.025085,473.015289 533.409851,472.953735 533.777039,473.205444   C535.068726,473.891022 535.993286,474.324860 536.991211,475.112488   C537.170166,475.936157 537.275635,476.406067 537.381165,476.875977   C534.188171,476.816803 533.126343,476.039062 532.996460,473.329407  z\",id:\"svg_1726\"})),_path1725||(_path1725=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M528.333984,474.991608   C528.335388,473.834808 528.656189,472.642456 528.998657,471.134277   C529.963867,471.305450 530.907593,471.792389 531.882568,472.637390   C530.827087,473.648956 529.740295,474.302490 528.333984,474.991608  z\",id:\"svg_1727\"})),_path1726||(_path1726=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B9B5B0\",opacity:1,stroke:\"none\",d:\" M537.377441,476.894592   C537.275635,476.406067 537.170166,475.936157 537.053833,474.900513   C537.043030,474.334808 537.325806,473.992065 537.325806,473.992065   C537.892944,474.682831 538.460022,475.373566 539.033813,476.368225   C538.754456,476.679901 538.468445,476.687653 537.761841,476.785889   C537.341248,476.876373 537.373779,476.913208 537.377441,476.894592  z\",id:\"svg_1728\"})),_path1727||(_path1727=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M530.471191,477.442535   C530.997009,477.503754 531.315491,477.756256 531.633911,478.008728   C531.424744,478.208435 531.215637,478.408173 531.006592,478.607910   C530.759033,478.283234 530.511414,477.958527 530.471191,477.442535  z\",id:\"svg_1729\"})),_path1728||(_path1728=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M526.076416,475.157654   C526.418518,474.918823 526.877747,474.949677 527.681763,474.993317   C527.415527,475.146545 526.804504,475.286957 526.076416,475.157654  z\",id:\"svg_1730\"})),_path1729||(_path1729=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M529.025146,493.024872   C529.668274,492.620392 530.668518,492.359375 530.897705,491.788666   C532.669250,487.377747 534.500793,488.644196 536.823120,492.057922   C537.129639,493.347961 537.052795,494.191559 536.976013,495.035156   C536.538452,495.025665 536.100830,495.016205 535.334717,494.742249   C534.901245,494.221039 534.796265,493.964355 534.691284,493.707672   C534.530518,493.841370 534.369690,493.975067 534.208923,494.108765   C534.470154,494.407410 534.731384,494.706024 534.992676,495.004639   C534.423889,495.874390 533.987549,497.339447 533.261169,497.501038   C531.169006,497.966431 528.959839,497.905731 526.398315,498.080353   C524.281616,497.639984 522.563232,497.170929 520.438232,496.590912   C522.461914,494.335999 524.850830,491.674164 528.002747,488.162109   C528.464111,490.056458 528.724304,491.124878 528.741943,492.696960   C528.466309,493.561066 528.433289,493.921570 528.400208,494.282043   C528.608521,493.862976 528.816833,493.443909 529.025146,493.024872  z\",id:\"svg_1731\"})),_path1730||(_path1730=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M536.984741,495.019836   C537.052795,494.191559 537.129639,493.347961 537.110718,492.248383   C537.014893,491.992401 537.490173,491.995453 537.727295,492.001587   C540.334839,491.078491 542.781006,488.494995 544.969849,492.668427   C545.006653,493.009735 545.001160,493.000000 544.634277,493.002930   C543.180664,494.049683 542.093933,495.093475 541.007202,496.137329   C541.007263,496.137329 541.036621,496.548309 540.763306,496.744812   C540.309753,496.932434 540.129578,496.923523 539.949341,496.914612   C539.949341,496.914612 539.967102,496.507965 539.796265,496.016663   C538.738708,495.352386 537.852051,495.179352 536.965393,495.006348   C536.965393,495.006348 536.993530,495.004486 536.984741,495.019836  z\",id:\"svg_1732\"})),_path1731||(_path1731=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M541.348633,496.060333   C542.093933,495.093475 543.180664,494.049683 544.638550,493.005920   C545.011719,493.450165 545.013672,493.894409 545.010498,494.671936   C543.900269,495.331299 542.795166,495.657318 541.348633,496.060333  z\",id:\"svg_1733\"})),_path1732||(_path1732=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M537.170959,495.275848   C537.852051,495.179352 538.738708,495.352386 539.817749,495.814270   C539.132202,495.917236 538.254395,495.731323 537.170959,495.275848  z\",id:\"svg_1734\"})),_path1733||(_path1733=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M540.023560,497.130066   C540.129578,496.923523 540.309753,496.932434 540.760742,496.950806   C540.720337,497.088684 540.409058,497.217072 540.023560,497.130066  z\",id:\"svg_1735\"})),_path1734||(_path1734=/*#__PURE__*/React.createElement(\"path\",{fill:\"#5D412B\",opacity:1,stroke:\"none\",d:\" M545.552002,472.993683   C545.225708,472.568756 545.196045,472.114746 545.205750,471.321198   C545.975220,471.062836 546.705322,471.143982 548.257874,471.316528   C547.009827,472.170288 546.429260,472.567413 545.552002,472.993683  z\",id:\"svg_1736\"})),_path1735||(_path1735=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M550.990234,520.044495   C551.808289,518.708252 552.626343,517.371948 554.066772,515.018982   C555.243530,518.942444 555.685669,521.067627 551.401367,520.757874   C550.994812,520.526611 550.990173,520.044495 550.990234,520.044495  z\",id:\"svg_1737\"})),_path1736||(_path1736=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M550.617126,520.033447   C550.990173,520.044495 550.994812,520.526611 551.002136,520.767822   C551.004639,521.452881 550.999756,521.896851 550.992981,522.674194   C550.991028,523.007690 550.986572,523.480408 550.974854,523.715393   C550.226379,523.973694 549.489624,523.997070 548.383911,524.016113   C548.010559,522.947266 548.006104,521.882812 548.002686,520.420898   C548.750610,520.023132 549.497314,520.022766 550.617126,520.033447  z\",id:\"svg_1738\"})),_path1737||(_path1737=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M570.261108,506.024414   C570.100891,505.687073 570.286499,505.417725 570.805420,505.122864   C571.036316,505.026733 571.018005,505.508942 571.009033,505.754608   C571.000000,506.000275 570.991211,506.010986 570.991211,506.010986   C570.991211,506.010986 570.504517,506.021851 570.261108,506.024414  z\",id:\"svg_1739\"})),_path1738||(_path1738=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M571.004883,505.995850   C571.130859,506.140686 571.251892,506.289917 571.372986,506.439117   C571.281982,506.391083 571.190979,506.343018 571.045593,506.152985   C570.991211,506.010986 571.000000,506.000275 571.004883,505.995850  z\",id:\"svg_1740\"})),_path1739||(_path1739=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M584.706482,449.026276   C584.287170,449.997742 583.520325,450.995056 582.382446,451.998016   C582.794006,451.019836 583.576477,450.035980 584.706482,449.026276  z\",id:\"svg_1741\"})),_path1740||(_path1740=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M604.979797,475.653503   C604.002441,475.247650 603.009949,474.500183 602.013428,473.380890   C602.994507,473.776672 603.979553,474.544281 604.979797,475.653503  z\",id:\"svg_1742\"})),_path1741||(_path1741=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6DABAB\",opacity:1,stroke:\"none\",d:\" M581.694336,383.946991   C576.229980,386.058472 575.703125,385.372192 573.058655,380.536865   C570.720093,376.260834 567.126099,372.671478 563.586853,368.474365   C561.397888,367.004211 559.708435,365.838562 558.000977,364.322388   C556.346985,363.591827 554.711060,363.211823 553.075134,362.831818   C546.984131,363.564758 540.893188,364.297699 534.199219,364.760925   C532.679199,364.203491 531.762085,363.915771 530.799561,363.613800   C531.708069,363.009369 532.566040,362.438599 532.898987,362.217102   C531.799561,360.702454 530.909729,359.476654 530.355835,358.082458   C535.356628,356.710815 539.986694,355.339600 544.698669,354.363647   C547.820801,353.717010 551.060242,353.636871 554.576355,353.358521   C556.151245,354.345215 557.319275,355.411285 558.657471,356.182098   C562.419983,358.349396 566.838501,359.766815 569.917786,362.638519   C574.349731,366.771637 577.827698,371.927551 581.712830,376.646973   C581.509399,376.931244 581.450378,377.242828 581.595947,378.233490   C581.668823,380.572449 581.681580,382.259735 581.694336,383.946991  z\",id:\"svg_1743\"})),_path1742||(_path1742=/*#__PURE__*/React.createElement(\"path\",{fill:\"#182827\",opacity:1,stroke:\"none\",d:\" M554.247192,353.303101   C551.060242,353.636871 547.820801,353.717010 544.698669,354.363647   C539.986694,355.339600 535.356628,356.710815 529.993042,358.056213   C521.351685,360.194366 516.598938,365.867798 512.431396,372.759094   C511.143005,375.955414 510.157074,378.957001 509.171143,381.958588   C508.813904,381.431122 508.126923,380.889252 508.149200,380.378357   C508.455902,373.351074 509.019806,366.656555 516.330261,362.509216   C518.849731,361.079865 520.122986,357.453827 522.240784,354.460602   C522.697327,354.091827 522.878601,354.093719 523.155640,354.294556   C523.437683,354.737610 523.679077,354.899933 524.222717,355.187256   C526.824768,354.992889 529.179626,354.591827 531.534424,354.190765   C531.482788,353.865417 531.431213,353.540039 531.379578,353.214691   C527.266479,351.487366 523.153320,349.760040 519.030640,347.636475   C518.217651,345.631897 517.414124,344.023590 516.648743,342.491516   C518.054382,337.482178 519.526428,332.236359 521.342651,327.025574   C522.863281,327.578796 524.091553,328.638275 525.208252,328.531433   C536.149475,327.484253 540.112427,329.539398 543.867554,338.462799   C545.000183,338.354126 546.102722,338.248352 547.205261,338.142609   C547.262634,338.572266 547.320007,339.001923 547.377380,339.431580   C545.086975,340.296631 542.796631,341.161713 540.267090,342.117096   C539.770142,344.004303 539.056458,346.714844 538.219666,349.892670   C541.745361,350.593109 544.935791,351.238556 548.131348,351.857330   C550.062805,352.231354 552.002258,352.563934 554.015747,353.011841   C554.093384,353.108551 554.247192,353.303101 554.247192,353.303101  M534.341614,344.169617   C534.341614,344.169617 534.412231,344.163422 535.169739,344.291687   C539.269531,342.904419 538.475403,339.426910 537.642517,336.809875   C536.532288,333.321564 533.827026,330.536896 529.902100,330.326050   C525.164978,330.071564 520.875610,334.434631 520.735229,339.002289   C520.528625,345.722626 522.357056,347.830750 529.636536,348.621552   C530.794067,347.938873 531.951599,347.256195 533.780273,346.184082   C533.946106,345.502319 534.111877,344.820557 534.341614,344.169617  M540.328064,338.359650   C540.580139,338.482513 540.832153,338.605377 541.084229,338.728241   C541.157166,338.484589 541.230103,338.240906 541.303040,337.997253   C540.956604,337.970337 540.610168,337.943420 540.328064,338.359650  z\",id:\"svg_1744\"})),_path1743||(_path1743=/*#__PURE__*/React.createElement(\"path\",{fill:\"#182827\",opacity:1,stroke:\"none\",d:\" M581.799622,376.172302   C577.827698,371.927551 574.349731,366.771637 569.917786,362.638519   C566.838501,359.766815 562.419983,358.349396 558.657471,356.182098   C557.319275,355.411285 556.151245,354.345215 554.576355,353.358521   C554.247192,353.303101 554.093384,353.108551 554.047363,352.655914   C554.946411,351.200714 555.891602,350.198151 556.695190,349.345734   C554.217957,346.492401 551.539246,343.639160 549.217590,340.520172   C548.796509,339.954529 549.534912,338.017273 550.280273,337.220276   C551.217346,336.218262 552.712585,335.738220 553.984375,335.274475   C554.131226,335.789093 554.260620,336.062225 554.389893,336.335358   C554.269592,335.883423 554.149231,335.431488 554.056152,334.638245   C555.060425,332.537323 556.037537,330.777679 557.384338,329.010925   C558.493042,329.010132 559.232117,329.016449 559.934082,329.545044   C559.867798,330.415192 559.838562,330.763031 559.782288,331.104004   C559.755310,331.097137 559.644104,331.113892 559.295776,331.146881   C558.433594,332.222168 557.919678,333.264465 557.318787,334.700745   C556.563477,337.177490 555.895081,339.260193 555.155884,341.015747   C554.987915,340.078247 554.890808,339.467834 554.793701,338.857422   C554.406799,339.124878 554.019897,339.392303 553.632996,339.659729   C554.197937,340.408691 554.762939,341.157623 555.657593,341.975525   C557.722595,344.269135 559.457886,346.493744 560.866577,348.831329   C560.026428,349.590698 559.512756,350.237091 558.999084,350.883514   C559.299500,351.084534 559.599854,351.285583 559.900269,351.486633   C560.359192,350.592041 560.818115,349.697449 561.670532,348.770935   C563.375244,348.819427 564.686401,348.899780 565.951904,349.297791   C565.392273,350.500214 564.878357,351.385040 564.364441,352.269836   C564.853943,352.047546 565.343445,351.825226 565.832947,351.602936   C567.222107,353.068604 568.611267,354.534302 569.764526,356.191711   C572.363647,358.588531 575.198730,360.793701 578.033813,362.998840   C577.912170,363.469818 577.678589,364.352203 577.684692,364.353821   C584.403687,366.182678 581.909241,371.401825 581.799622,376.172302  z\",id:\"svg_1745\"})),_path1744||(_path1744=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M526.711853,415.107483   C527.856201,416.364349 529.000549,417.621216 530.490845,419.390717   C533.050781,424.278015 535.264648,428.652679 537.478516,433.027374   C538.022949,436.059540 538.567444,439.091675 538.650635,442.549377   C537.403381,442.993896 536.617432,443.012817 535.507019,442.883118   C534.565918,441.211029 533.088379,439.408813 533.476379,438.210724   C535.550232,431.806396 532.019409,427.796448 527.894165,423.529541   C523.706299,414.733887 515.962585,410.689392 507.970581,406.528595   C506.994934,405.447449 506.123047,404.655975 505.288940,403.561829   C504.245514,401.502777 503.164368,399.746338 502.037842,397.684998   C501.729736,396.825348 501.466949,396.270599 501.197174,395.340149   C500.367401,392.061920 499.544586,389.159363 498.792847,386.191071   C498.863922,386.125336 499.006104,385.993896 499.234680,386.000000   C499.463226,386.006073 499.920288,386.020172 499.920288,386.020172   C502.154480,389.379272 504.388672,392.738342 507.007629,396.524475   C507.672363,397.866425 507.663605,399.117798 508.277008,399.644196   C514.363037,404.867249 520.552002,409.970398 526.711853,415.107483  z\",id:\"svg_1746\"})),_path1745||(_path1745=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6AA0A1\",opacity:1,stroke:\"none\",d:\" M512.733826,372.564392   C516.598938,365.867798 521.351685,360.194366 529.657227,358.224579   C530.909729,359.476654 531.799561,360.702454 532.898987,362.217102   C532.566040,362.438599 531.708069,363.009369 530.799561,363.613800   C531.762085,363.915771 532.679199,364.203491 533.794250,364.740845   C530.021667,367.815887 526.051147,370.641327 521.580688,373.769897   C520.690735,374.572937 520.300659,375.072845 519.910583,375.572754   C519.870911,375.812988 519.831238,376.053284 519.309387,376.651184   C516.892761,378.671875 514.958252,380.334930 512.053772,382.831909   C512.234131,378.473022 517.659485,375.623566 512.733826,372.564392  z\",id:\"svg_1747\"})),_path1746||(_path1746=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M519.040222,348.032715   C523.153320,349.760040 527.266479,351.487366 531.379578,353.214691   C531.431213,353.540039 531.482788,353.865417 531.534424,354.190765   C529.179626,354.591827 526.824768,354.992889 524.134766,354.979919   C523.623657,354.297974 523.377136,354.141205 523.059875,354.095612   C522.878601,354.093719 522.697327,354.091827 522.243896,354.096741   C519.949097,354.216309 517.926392,354.329041 515.903748,354.441772   C516.035156,354.304108 516.166565,354.166443 516.297974,354.028778   C508.811859,352.327423 501.325745,350.626068 493.270081,348.676971   C492.404419,348.281708 492.108246,348.134155 491.786255,347.596741   C492.095886,345.779022 492.431335,344.351196 493.041809,343.077606   C493.620117,343.801605 494.114380,344.896667 494.199310,344.865784   C498.533447,343.289978 501.232269,346.476227 504.577484,348.086151   C507.120239,349.309814 509.882751,348.943604 510.002014,344.986725   C510.002838,345.003052 509.970154,345.001282 510.333740,345.054077   C512.810486,347.986359 515.486938,349.259705 519.040222,348.032715  z\",id:\"svg_1748\"})),_path1747||(_path1747=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E0C7AA\",opacity:1,stroke:\"none\",d:\" M527.066406,414.969543   C520.552002,409.970398 514.363037,404.867249 508.277008,399.644196   C507.663605,399.117798 507.672363,397.866425 507.380188,396.608765   C511.445953,395.179688 513.926880,397.373047 515.789856,400.536438   C517.907410,404.132202 520.486389,406.208160 525.106812,406.275574   C527.902832,406.316345 530.667664,408.491425 533.686523,409.969330   C530.928406,410.591522 528.731567,412.084961 527.066406,414.969543  z\",id:\"svg_1749\"})),_path1748||(_path1748=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M498.721802,386.256805   C499.544586,389.159363 500.367401,392.061920 500.941284,395.545990   C501.155975,396.748322 501.619568,397.369110 502.083191,397.989899   C503.164368,399.746338 504.245514,401.502777 504.935608,403.460815   C503.053192,403.085999 501.561859,402.509613 500.056580,401.577454   C499.353577,400.480469 498.664581,399.739258 497.972839,398.621155   C498.179565,397.015167 498.389008,395.785980 498.598419,394.556824   C498.168182,394.761749 497.737946,394.966675 497.307709,395.171600   C494.840210,391.150757 492.372711,387.129883 489.941833,382.697083   C489.328827,379.518005 488.679169,376.750854 488.337585,373.843079   C489.293213,373.070007 489.940796,372.437622 490.705505,371.580688   C491.427887,371.975006 492.033081,372.593872 492.638306,373.212708   C492.745575,373.415924 492.893463,373.583160 493.071228,374.041321   C493.272552,374.935150 493.484680,375.502045 493.706787,376.395691   C493.788849,377.151947 493.860931,377.581421 493.967285,378.364258   C495.574982,381.230682 497.148376,383.743744 498.721802,386.256805  z\",id:\"svg_1750\"})),_path1749||(_path1749=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M578.440186,362.999115   C575.198730,360.793701 572.363647,358.588531 570.122314,356.150330   C572.803406,354.943604 574.890686,353.969971 577.053833,353.362579   C580.418701,354.832031 583.707703,355.935181 586.996704,357.038361   C587.123108,362.912628 582.740601,362.622070 578.440186,362.999115  z\",id:\"svg_1751\"})),_path1750||(_path1750=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M587.375122,357.019287   C583.707703,355.935181 580.418701,354.832031 577.305115,353.084534   C578.978088,352.299194 580.475586,352.158142 582.035156,352.350281   C584.446960,352.395569 586.862427,352.358398 589.132324,351.764709   C593.159973,350.711273 597.113403,348.665070 600.989746,352.073761   C600.663940,353.469360 600.338135,354.864960 599.745117,356.522888   C598.984436,356.525513 598.491028,356.265839 597.997559,356.006134   C597.657959,354.991974 597.318298,353.977783 596.978699,352.963623   C596.571228,353.013336 596.163757,353.063080 595.756287,353.112793   C595.369202,354.428070 594.982056,355.743317 594.540649,357.243134   C592.383972,352.300385 590.045410,357.095245 587.375122,357.019287  z\",id:\"svg_1752\"})),_path1751||(_path1751=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M493.988190,353.030396   C495.605377,353.225403 497.242310,353.323120 498.833618,353.645782   C500.145996,353.911896 501.404388,354.444305 502.686707,354.858704   C502.259918,355.922089 502.072968,357.194946 501.361389,358.009521   C499.247589,360.429077 496.927216,362.668213 494.122498,364.744263   C493.700958,360.683899 493.844574,356.857147 493.988190,353.030396  z\",id:\"svg_1753\"})),_path1752||(_path1752=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M597.998535,356.395752   C598.491028,356.265839 598.984436,356.525513 599.738464,356.885925   C601.216980,360.626068 602.588623,364.196625 598.918457,367.460693   C598.338623,367.976410 599.046631,369.819977 598.885315,371.012604   C598.846008,371.303070 597.722290,371.446838 597.045532,371.334412   C596.005615,370.349792 595.069214,369.583496 594.012024,369.062103   C593.209839,368.666504 592.253906,368.582733 591.366394,368.360229   C591.929443,367.441345 592.455750,365.750763 593.061157,365.721893   C599.714111,365.404999 597.763916,360.516632 597.998535,356.395752  z\",id:\"svg_1754\"})),_path1753||(_path1753=/*#__PURE__*/React.createElement(\"path\",{fill:\"#629B9A\",opacity:1,stroke:\"none\",d:\" M512.431396,372.759094   C517.659485,375.623566 512.234131,378.473022 512.053772,382.831909   C514.958252,380.334930 516.892761,378.671875 519.156616,376.983032   C518.777649,378.726013 518.278442,380.618622 517.319336,382.239044   C514.958435,386.227783 512.240295,384.476654 509.385162,382.211792   C510.157074,378.957001 511.143005,375.955414 512.431396,372.759094  z\",id:\"svg_1755\"})),_path1754||(_path1754=/*#__PURE__*/React.createElement(\"path\",{fill:\"#22201E\",opacity:1,stroke:\"none\",d:\" M570.627747,388.661072   C569.355652,393.485321 566.117920,393.243744 562.206848,392.648071   C563.614502,390.234222 564.856140,388.105103 566.645081,385.037384   C567.734741,385.901123 569.250671,387.102783 570.627747,388.661072  z\",id:\"svg_1756\"})),_path1755||(_path1755=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M510.864807,358.161621   C509.555115,360.175568 508.204102,361.831268 506.487732,363.934753   C503.879761,359.777191 505.394684,357.570587 507.877197,355.918762   C508.268219,355.658630 509.812439,357.131714 510.864807,358.161621  z\",id:\"svg_1757\"})),_path1756||(_path1756=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M493.708435,352.785645   C493.844574,356.857147 493.700958,360.683899 493.746124,364.742188   C493.706909,365.261902 493.478912,365.550110 492.799072,365.945129   C492.347229,366.051910 491.938873,366.039917 491.908203,365.722565   C491.290680,364.920807 490.703827,364.436432 489.985046,363.743103   C489.903107,362.688080 489.953156,361.842041 490.388672,360.917267   C490.906097,357.578339 491.038025,354.318085 491.165710,350.741577   C491.378326,349.612366 491.595215,348.799500 491.812103,347.986603   C492.108246,348.134155 492.404419,348.281708 492.845215,348.630798   C493.136139,350.068542 493.282410,351.304718 493.708435,352.785645  z\",id:\"svg_1758\"})),_path1757||(_path1757=/*#__PURE__*/React.createElement(\"path\",{fill:\"#182827\",opacity:1,stroke:\"none\",d:\" M558.018982,364.672913   C559.708435,365.838562 561.397888,367.004211 563.240417,368.484772   C563.036865,369.022034 562.680298,369.244385 561.900024,369.627258   C560.981812,369.528839 560.487244,369.269867 559.992676,369.010864   C558.402161,368.635254 556.811707,368.259644 555.221191,367.884033   C555.666504,367.124939 556.111816,366.365814 557.031006,365.246704   C557.676270,364.815491 557.847656,364.744202 558.018982,364.672913  z\",id:\"svg_1759\"})),_path1758||(_path1758=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E0C7AA\",opacity:1,stroke:\"none\",d:\" M553.684692,409.877380   C551.173889,410.264832 548.384216,410.440338 545.314148,410.346771   C547.671509,406.835724 550.565613,408.798126 553.684692,409.877380  z\",id:\"svg_1760\"})),_path1759||(_path1759=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222220\",opacity:1,stroke:\"none\",d:\" M565.204590,377.860352   C565.534851,376.870605 566.207214,375.614563 566.370178,375.677551   C569.541931,376.902405 570.276062,379.978973 567.979492,382.628357   C567.072937,381.127533 566.191223,379.667816 565.204590,377.860352  z\",id:\"svg_1761\"})),_path1760||(_path1760=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M498.792847,386.191071   C497.148376,383.743744 495.574982,381.230682 494.271851,378.340942   C495.280792,377.693298 496.019409,377.422302 496.757996,377.151306   C497.400970,378.599792 498.043915,380.048309 498.832947,382.192871   C498.988037,383.923950 498.997070,384.958923 499.006104,385.993896   C499.006104,385.993896 498.863922,386.125336 498.792847,386.191071  z\",id:\"svg_1762\"})),_path1761||(_path1761=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E0C7AA\",opacity:1,stroke:\"none\",d:\" M573.090881,405.920349   C573.046387,406.778717 572.678772,407.611359 572.089050,408.551422   C570.749207,408.427307 569.631531,408.195801 568.189575,407.942627   C569.499451,407.245514 571.133606,406.570099 573.090881,405.920349  z\",id:\"svg_1763\"})),_path1762||(_path1762=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6AA0A1\",opacity:1,stroke:\"none\",d:\" M558.000977,364.322388   C557.847656,364.744202 557.676270,364.815491 557.238403,364.968079   C555.802795,364.492767 554.633667,363.936188 553.269897,363.105713   C554.711060,363.211823 556.346985,363.591827 558.000977,364.322388  z\",id:\"svg_1764\"})),_path1763||(_path1763=/*#__PURE__*/React.createElement(\"path\",{fill:\"#182827\",opacity:1,stroke:\"none\",d:\" M582.096069,383.913971   C581.681580,382.259735 581.668823,380.572449 581.691528,378.457703   C585.090698,379.571136 584.971191,381.570984 582.096069,383.913971  z\",id:\"svg_1765\"})),_path1764||(_path1764=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M491.938873,366.039917   C491.938873,366.039917 492.347229,366.051910 492.547760,366.068848   C492.816040,367.163177 492.883759,368.240540 492.971436,369.913208   C492.991333,370.508514 493.003662,370.889771 493.003662,370.889771   C492.957397,371.411133 492.911163,371.932465 492.751617,372.833252   C492.033081,372.593872 491.427887,371.975006 490.728119,371.235962   C490.659210,370.436127 490.684875,369.756500 490.967712,368.956635   C491.462891,367.904205 491.700867,366.972076 491.938873,366.039917  z\",id:\"svg_1766\"})),_path1765||(_path1765=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M499.234680,386.000000   C498.997070,384.958923 498.988037,383.923950 498.981659,382.505310   C499.482056,383.275482 499.979828,384.429291 500.198944,385.801636   C499.920288,386.020172 499.463226,386.006073 499.234680,386.000000  z\",id:\"svg_1767\"})),_path1766||(_path1766=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E0C7AA\",opacity:1,stroke:\"none\",d:\" M566.685913,408.261658   C566.005371,408.896057 564.986206,409.510193 563.627686,410.112305   C564.308105,409.480652 565.327698,408.861023 566.685913,408.261658  z\",id:\"svg_1768\"})),_path1767||(_path1767=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222220\",opacity:1,stroke:\"none\",d:\" M559.999023,369.361755   C560.487244,369.269867 560.981812,369.528839 561.734131,369.896667   C561.991821,370.005493 562.014709,370.487549 562.005371,370.997253   C561.983032,371.685699 561.969910,371.864471 561.956726,372.043243   C561.306274,371.266357 560.655823,370.489471 559.999023,369.361755  z\",id:\"svg_1769\"})),_path1768||(_path1768=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M496.640442,376.853210   C496.019409,377.422302 495.280792,377.693298 494.237579,377.987610   C493.860931,377.581421 493.788849,377.151947 493.969055,376.363647   C494.394684,375.977661 494.568024,375.950562 494.741364,375.923462   C495.335205,376.134003 495.929016,376.344543 496.640442,376.853210  z\",id:\"svg_1770\"})),_path1769||(_path1769=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M496.933044,352.590179   C496.631653,352.216309 496.585999,351.852264 496.540344,351.488251   C496.800995,351.495758 497.061646,351.503265 497.322296,351.510803   C497.277771,351.873871 497.233276,352.236969 496.933044,352.590179  z\",id:\"svg_1771\"})),_path1770||(_path1770=/*#__PURE__*/React.createElement(\"path\",{fill:\"#629B9A\",opacity:1,stroke:\"none\",d:\" M520.183960,375.523010   C520.300659,375.072845 520.690735,374.572937 521.329956,374.025085   C521.205261,374.475830 520.831299,374.974548 520.183960,375.523010  z\",id:\"svg_1772\"})),_path1771||(_path1771=/*#__PURE__*/React.createElement(\"path\",{fill:\"#45331D\",opacity:1,stroke:\"none\",d:\" M494.747681,375.580627   C494.568024,375.950562 494.394684,375.977661 493.959045,376.036865   C493.484680,375.502045 493.272552,374.935150 493.175201,374.171906   C493.777985,374.396301 494.265991,374.817047 494.747681,375.580627  z\",id:\"svg_1773\"})),_path1772||(_path1772=/*#__PURE__*/React.createElement(\"path\",{fill:\"#182827\",opacity:1,stroke:\"none\",d:\" M562.104126,372.197388   C561.969910,371.864471 561.983032,371.685699 562.014404,371.238403   C562.105591,371.430420 562.178589,371.890991 562.104126,372.197388  z\",id:\"svg_1774\"})),_path1773||(_path1773=/*#__PURE__*/React.createElement(\"path\",{fill:\"#22201E\",opacity:1,stroke:\"none\",d:\" M564.645996,381.740479   C564.631287,381.992493 564.497009,382.129761 564.362671,382.267029   C564.417297,382.053253 564.471924,381.839508 564.645996,381.740479  z\",id:\"svg_1775\"})),_path1774||(_path1774=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3B2B1B\",opacity:1,stroke:\"none\",d:\" M493.165863,370.837311   C493.003662,370.889771 492.991333,370.508514 492.996948,370.319397   C493.111023,370.348480 493.219543,370.566650 493.165863,370.837311  z\",id:\"svg_1776\"})),_path1775||(_path1775=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M595.776794,377.106445   C595.896606,377.318970 595.711914,377.581970 595.224670,377.897766   C595.102173,377.684570 595.285583,377.419983 595.776794,377.106445  z\",id:\"svg_1777\"})),_path1776||(_path1776=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E0C7AA\",opacity:1,stroke:\"none\",d:\" M537.875732,433.028076   C535.264648,428.652679 533.050781,424.278015 530.795471,419.533630   C534.541199,413.144562 539.223450,411.779022 546.093933,414.317078   C547.443726,414.815735 549.248779,414.369659 550.773743,414.037384   C552.886292,413.577057 554.932434,412.811981 557.557922,413.225861   C554.711914,416.498505 551.677368,419.628998 549.072876,423.083771   C546.462524,426.546326 544.281555,430.332550 541.915466,433.972168   C541.085327,433.757172 539.679077,433.392975 537.875732,433.028076  z\",id:\"svg_1778\"})),_path1777||(_path1777=/*#__PURE__*/React.createElement(\"path\",{fill:\"#431E11\",opacity:1,stroke:\"none\",d:\" M535.831482,443.031738   C536.617432,443.012817 537.403381,442.993896 538.582397,442.985413   C539.047119,443.429962 539.118896,443.864044 539.195068,445.087585   C539.276733,451.628815 539.354004,457.380554 539.431396,463.132324   C539.290100,464.149841 539.148804,465.167358 538.741516,466.644165   C538.186218,467.741943 537.896912,468.380463 537.607666,469.018951   C537.479492,470.436920 537.351379,471.854858 537.274536,473.632446   C537.325806,473.992065 537.043030,474.334808 536.980408,474.546753   C535.993286,474.324860 535.068726,473.891022 533.971558,473.194977   C534.674011,468.039093 535.608826,463.155090 536.401672,458.248138   C536.873657,455.327454 537.122314,452.370728 537.169312,448.900269   C536.522034,446.590820 536.176758,444.811249 535.831482,443.031738  z\",id:\"svg_1779\"})),_path1778||(_path1778=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B9B5B0\",opacity:1,stroke:\"none\",d:\" M539.799316,462.989685   C539.354004,457.380554 539.276733,451.628815 539.265381,445.410950   C539.895020,446.169647 540.953125,447.401825 540.934937,448.617920   C540.864014,453.363739 540.452332,458.104431 539.799316,462.989685  z\",id:\"svg_1780\"})),_path1779||(_path1779=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B9B5B0\",opacity:1,stroke:\"none\",d:\" M537.934082,469.032288   C537.896912,468.380463 538.186218,467.741943 538.728516,467.029510   C538.741211,467.652222 538.500854,468.348907 537.934082,469.032288  z\",id:\"svg_1781\"})),_path1780||(_path1780=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M601.005249,351.621521   C597.113403,348.665070 593.159973,350.711273 589.132324,351.764709   C586.862427,352.358398 584.446960,352.395569 582.432922,352.337219   C583.570312,351.802826 584.362915,351.549744 585.174988,351.437561   C589.116516,350.892975 588.210693,347.358826 588.419250,345.163757   C588.534851,343.947906 586.014893,341.374725 584.740906,341.411743   C583.119995,341.458801 581.457764,343.421906 580.009033,344.769379   C579.183655,345.537018 578.748108,346.723846 577.514099,348.739319   C576.546204,341.319000 581.733887,333.481567 572.884949,330.295135   C572.368164,321.395752 581.415100,324.034790 584.490051,320.047943   C581.999084,317.913635 579.936096,315.758698 577.496582,314.188934   C575.806030,313.101074 573.596619,312.819672 571.448792,312.187683   C571.278564,312.197418 571.000000,312.000671 570.821411,311.734680   C570.429565,309.960510 570.216248,308.452301 570.002991,306.944122   C575.813782,310.819946 581.624512,314.695770 587.734985,318.718170   C590.848694,322.107544 593.662781,325.350372 596.755737,328.790222   C597.760193,330.947266 598.485718,332.907196 599.155823,335.617615   C599.823792,337.151764 600.547119,337.935425 601.270508,338.719086   C601.270508,338.719086 601.302368,338.743561 601.322998,338.748230   C598.676697,342.825165 602.116821,347.056213 601.005249,351.621521  z\",id:\"svg_1782\"})),_path1781||(_path1781=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M613.890747,510.203644   C613.957947,510.433014 613.728577,510.646149 613.220520,510.876038   C613.120422,510.630005 613.337830,510.394867 613.890747,510.203644  z\",id:\"svg_1783\"})),_path1782||(_path1782=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M517.385254,533.026367   C516.170471,533.573303 515.298401,534.106018 513.968811,534.918213   C511.343781,528.572388 504.737091,532.006531 499.938049,530.080505   C497.312347,529.026733 494.410400,528.661377 491.371124,527.921814   C491.288116,528.466431 491.148163,529.384399 490.641571,530.617310   C487.633362,528.903381 485.146179,526.022522 481.827972,529.633301   C479.955078,527.518738 478.353241,525.710266 476.603088,523.734253   C475.423157,524.774475 474.504395,525.584412 472.780579,527.104126   C473.174957,524.158630 473.436401,522.205811 473.731842,519.999390   C472.941193,519.999390 471.971588,519.999390 471.003174,519.624756   C471.004333,518.501465 471.004303,517.752869 471.354431,516.966797   C473.689667,516.052856 475.674713,515.176331 477.659790,514.299744   C477.811920,514.604980 477.964020,514.910217 478.116150,515.215454   C477.379761,516.425476 476.643372,517.635498 476.172821,518.408691   C477.923340,518.257507 479.466553,518.124146 480.963867,518.319580   C480.147522,519.587585 479.377045,520.526855 477.919128,522.304199   C480.613159,521.724060 482.309967,521.358704 484.011902,521.340698   C484.476990,522.329895 484.936920,522.971558 485.396820,523.613281   C485.936707,522.747681 486.476562,521.882141 487.397705,521.017822   C489.669281,521.610291 491.559570,522.201416 493.449860,522.792480   C493.496490,522.399109 493.543091,522.005676 493.589722,521.612244   C492.102905,519.463684 490.616089,517.315063 489.843872,516.199097   C493.195740,514.574890 495.913940,513.257812 498.632111,511.940674   C498.613495,512.222473 498.594879,512.504211 498.576263,512.786011   C500.703156,512.656494 502.830048,512.526978 504.956940,512.397461   C505.146454,511.950623 505.335999,511.503784 505.525513,511.056946   C508.138702,513.920227 510.551666,517.011353 513.445679,519.555176   C514.998047,520.919800 515.581909,524.368774 518.932800,522.951660   C519.541809,523.837341 520.150757,524.722961 520.211853,524.811768   C522.519775,525.032104 524.211060,525.193604 525.958862,525.699646   C526.014099,527.384949 526.012939,528.725708 525.997437,530.764526   C525.983032,531.658264 525.982910,531.854004 525.982788,532.049805   C525.982788,532.049805 525.988525,532.538086 525.990601,532.782593   C525.023499,533.054199 523.471558,532.709656 523.179016,533.168335   C521.155518,536.341370 519.512634,533.101440 517.385254,533.026367  M514.627258,531.518982   C514.627258,531.518982 514.447449,531.417480 514.447449,531.417480   C514.447449,531.417480 514.473999,531.620667 514.627258,531.518982  M498.481781,527.619263   C498.481781,527.619263 498.576202,527.455872 498.576202,527.455872   C498.576202,527.455872 498.390564,527.478210 498.481781,527.619263  z\",id:\"svg_1784\"})),_path1783||(_path1783=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M481.009766,517.990845   C479.466553,518.124146 477.923340,518.257507 476.172821,518.408691   C476.643372,517.635498 477.379761,516.425476 478.116150,515.215454   C477.964020,514.910217 477.811920,514.604980 477.659790,514.299744   C475.674713,515.176331 473.689667,516.052856 471.344421,516.957397   C470.984253,516.985413 470.960236,516.963379 470.924316,516.622009   C470.468170,515.883728 470.047943,515.486816 469.627747,515.089905   C467.378082,517.482605 465.222046,515.690918 463.027405,514.551392   C463.011383,513.112793 463.010590,512.065430 463.259766,510.849670   C463.701385,510.123810 463.893097,509.566223 464.367676,508.985229   C465.097229,508.654816 465.543884,508.347809 466.345154,508.040649   C472.814117,510.614288 477.040253,510.041443 480.875427,506.060089   C477.551392,505.709564 474.277069,505.364258 471.025818,504.634277   C472.365021,502.167297 473.681152,500.085022 474.998657,498.001373   C475.000000,498.000000 475.001770,497.997498 475.376282,498.033264   C476.502441,498.042389 477.254028,498.015808 478.033020,498.324463   C479.041260,498.781311 480.022064,498.902924 481.320953,498.985168   C482.427032,498.625305 483.215057,498.304779 484.031616,498.314026   C485.353668,499.358063 486.647247,500.072266 487.169006,500.360382   C488.147247,502.702057 488.970093,504.671783 489.792969,506.641479   C490.867126,506.099640 491.941315,505.557800 493.424744,505.022888   C496.892670,505.022858 499.951385,505.015839 503.010071,505.008850   C503.010071,505.008850 502.996735,504.997925 503.184265,505.274536   C504.250519,505.702423 505.129272,505.853668 506.007996,506.004913   C506.007996,506.004913 506.000671,506.000549 505.997650,505.997650   C506.405273,507.197693 506.815948,508.400635 506.832611,508.449493   C512.202332,509.358887 516.737915,510.127014 521.635498,510.942688   C521.998047,511.158417 521.998596,511.326630 521.947205,512.069153   C520.075989,512.426147 518.256775,512.208862 516.198853,511.962982   C516.119263,512.791260 516.013855,513.887573 515.908447,514.983887   C515.908447,514.983887 515.492371,514.957886 515.061768,515.039185   C514.781982,515.427368 514.932800,515.734131 515.083618,516.040955   C515.083618,516.040955 515.492798,516.034912 515.732178,516.263672   C515.971497,516.492432 516.021301,516.977722 516.021301,516.977722   C517.002441,518.722778 517.983521,520.467773 518.948730,522.582275   C515.581909,524.368774 514.998047,520.919800 513.445679,519.555176   C510.551666,517.011353 508.138702,513.920227 505.525513,511.056946   C505.335999,511.503784 505.146454,511.950623 504.956940,512.397461   C502.830048,512.526978 500.703156,512.656494 498.576263,512.786011   C498.594879,512.504211 498.613495,512.222473 498.632111,511.940674   C495.913940,513.257812 493.195740,514.574890 489.843872,516.199097   C490.616089,517.315063 492.102905,519.463684 493.589722,521.612244   C493.543091,522.005676 493.496490,522.399109 493.449860,522.792480   C491.559570,522.201416 489.669281,521.610291 487.389038,521.008789   C486.999146,520.998413 486.985352,520.980286 486.994995,520.636414   C487.522705,517.539246 486.038818,517.409790 484.001831,518.001465   C484.000000,518.000000 483.996338,517.995117 483.992126,517.623901   C483.591339,516.307007 483.194763,515.361328 482.798157,514.415710   C482.195587,515.613708 481.593018,516.811646 480.994690,518.005249   C480.998962,518.000854 481.009766,517.990906 481.009766,517.990845  M473.311188,512.000000   C473.232483,511.743713 473.153748,511.487396 473.075043,511.231110   C472.787415,511.522400 472.499786,511.813721 472.212189,512.105042   C472.467590,512.182739 472.723022,512.260437 473.311188,512.000000  z\",id:\"svg_1785\"})),_path1784||(_path1784=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M516.312500,514.989868   C516.013855,513.887573 516.119263,512.791260 516.198853,511.962982   C518.256775,512.208862 520.075989,512.426147 521.948853,512.321411   C524.115967,512.898193 526.229553,513.797058 528.654907,514.849121   C528.966675,515.002380 528.960876,515.481140 528.945190,515.719604   C524.858582,515.637390 520.787537,515.316650 516.312500,514.989868  z\",id:\"svg_1786\"})),_path1785||(_path1785=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M532.002441,526.026855   C532.688477,525.454773 533.374451,524.882690 534.060425,524.310669   C534.160400,524.813416 534.260376,525.316101 533.807556,525.955566   C532.837341,526.070496 532.419922,526.048645 532.002441,526.026855  z\",id:\"svg_1787\"})),_path1786||(_path1786=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M542.152100,527.293335   C542.774048,526.998230 543.522217,526.991516 544.645325,526.977051   C544.106323,527.173401 543.192322,527.377502 542.152100,527.293335  z\",id:\"svg_1788\"})),_path1787||(_path1787=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M532.041199,526.321655   C532.419922,526.048645 532.837341,526.070496 533.564697,526.127686   C533.576111,526.647522 533.277649,527.131958 532.979126,527.616394   C532.679382,527.283081 532.379700,526.949707 532.041199,526.321655  z\",id:\"svg_1789\"})),_path1788||(_path1788=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M546.284546,525.983032   C546.426819,525.378845 546.895691,524.734436 547.690308,524.055603   C547.547791,524.661743 547.079468,525.302246 546.284546,525.983032  z\",id:\"svg_1790\"})),_path1789||(_path1789=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M515.071655,515.770630   C514.932800,515.734131 514.781982,515.427368 514.853333,515.040039   C515.070190,515.139832 515.064941,515.320129 515.071655,515.770630  z\",id:\"svg_1791\"})),_path1790||(_path1790=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M516.187012,516.882324   C516.021301,516.977722 515.971497,516.492432 515.936401,516.250977   C516.051758,516.268616 516.202271,516.527832 516.187012,516.882324  z\",id:\"svg_1792\"})),_path1791||(_path1791=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M526.363892,532.043823   C525.982910,531.854004 525.983032,531.658264 525.990356,531.167725   C526.878967,531.073669 527.760315,531.274353 528.837036,531.759155   C528.269958,532.041565 527.507446,532.039734 526.363892,532.043823  z\",id:\"svg_1793\"})),_path1792||(_path1792=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M471.001984,519.999390   C471.971588,519.999390 472.941193,519.999390 473.731842,519.999390   C473.436401,522.205811 473.174957,524.158630 472.780579,527.104126   C474.504395,525.584412 475.423157,524.774475 476.603088,523.734253   C478.353241,525.710266 479.955078,527.518738 481.827972,529.633301   C485.146179,526.022522 487.633362,528.903381 490.638062,530.985596   C491.000458,531.472107 490.999695,531.905212 491.000671,532.663208   C489.679016,533.733154 488.355591,534.478149 487.016083,535.611572   C487.000000,536.000000 486.988190,536.015991 486.988190,536.015991   C485.249359,537.008911 483.510498,538.001831 481.384949,538.996460   C480.998230,538.998230 480.933838,538.933716 480.933838,538.933716   C480.600830,537.362549 480.267792,535.791382 479.830231,533.726929   C477.090118,536.720520 475.024536,538.977234 472.808228,541.398621   C470.639862,539.525818 468.609619,537.772339 467.004333,536.385925   C464.999390,537.383850 463.386963,538.186462 461.387268,538.994507   C461.000000,539.000000 461.002686,539.002441 461.002686,539.002441   C460.983704,538.838135 460.998047,538.542969 460.940948,538.528442   C458.502838,537.907471 455.773285,536.364502 453.697998,536.989136   C451.771301,537.569092 450.542053,540.465881 449.010193,542.740967   C448.977661,543.757263 448.940674,544.375183 448.846985,545.940186   C447.977997,544.416321 447.515045,543.604431 447.030365,542.088989   C446.792206,540.608887 446.653809,539.190247 446.347656,539.153076   C442.241028,538.654541 438.111053,538.348755 433.618958,537.997681   C432.291901,537.768372 431.332764,537.536499 430.632843,537.367310   C432.566864,535.285706 434.214691,533.380310 436.018890,531.636597   C436.718262,530.960754 437.771271,530.650818 438.663177,530.174194   C439.100830,531.108582 439.538483,532.042969 439.688934,533.011230   C439.101257,533.444702 438.800781,533.844238 438.500366,534.243774   C438.758362,534.339111 439.211517,534.560364 439.243866,534.510254   C439.545837,534.042297 439.775513,533.527771 440.374329,532.991821   C441.807587,531.959290 442.892639,530.961670 443.984924,529.980286   C443.992188,529.996521 443.962646,529.993774 444.326416,529.998169   C446.675751,531.496155 448.661316,532.989746 450.718353,534.537170   C451.968597,533.508301 453.217010,532.480896 453.925720,531.897705   C452.641937,530.280640 451.346008,528.648254 449.712524,526.966553   C448.582275,525.970093 447.789642,525.023010 447.022583,523.752563   C448.217529,523.000916 449.386902,522.572632 450.556274,522.144348   C450.713531,522.524597 450.870789,522.904785 451.028046,523.284973   C451.685364,522.190796 452.342682,521.096619 453.304993,520.153320   C454.721497,521.511169 455.833008,522.718140 457.261047,524.097168   C461.052826,525.178345 464.528076,526.087585 468.025604,527.252319   C468.354706,527.769897 468.661499,528.031982 468.968262,528.294006   C469.100189,528.011902 469.232117,527.729736 469.364044,527.447632   C468.908203,527.299438 468.452393,527.151306 468.063446,526.649170   C469.385010,525.498901 470.639709,524.702515 471.928925,523.884277   C471.591370,522.486572 471.293152,521.251831 470.997192,520.009155   C470.999451,520.001221 471.001984,519.999390 471.001984,519.999390  M456.387024,533.682068   C456.609253,533.981262 456.831482,534.280396 457.053680,534.579590   C457.243225,534.396179 457.432800,534.212830 457.622345,534.029419   C457.334198,533.794495 457.046021,533.559509 456.387024,533.682068  z\",id:\"svg_1794\"})),_path1793||(_path1793=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M510.008118,542.009827   C510.951080,541.307739 511.885315,540.595764 512.819519,539.883789   C513.058899,540.362244 513.298340,540.840698 513.537781,541.319153   C512.595886,541.551208 511.654022,541.783264 510.346436,541.998047   C509.980682,541.980835 509.999329,541.999939 510.008118,542.009827  z\",id:\"svg_1795\"})),_path1794||(_path1794=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E8A164\",opacity:1,stroke:\"none\",d:\" M433.986847,537.995117   C438.111053,538.348755 442.241028,538.654541 446.347656,539.153076   C446.653809,539.190247 446.792206,540.608887 447.001831,541.777466   C445.170837,543.047058 443.346619,543.924500 441.220886,544.996704   C438.555786,545.206177 436.192200,545.220886 433.534027,545.287354   C433.239410,545.339233 433.210449,545.314453 433.327515,545.028198   C433.581299,544.168823 433.718018,543.595642 433.854736,543.022400   C433.854706,543.022400 433.935516,543.037903 434.332123,543.000000   C437.416107,541.533264 437.416107,541.533264 434.002563,538.007935   C434.001495,538.001526 433.986847,537.995117 433.986847,537.995117  z\",id:\"svg_1796\"})),_path1795||(_path1795=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M488.120819,544.189026   C488.911713,544.050476 489.928589,544.183228 491.003418,544.645264   C490.156525,544.803101 489.251678,544.631775 488.120819,544.189026  z\",id:\"svg_1797\"})),_path1796||(_path1796=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M487.007996,535.994385   C487.902710,536.162537 488.789368,536.336304 490.220093,536.616760   C488.339661,538.752625 486.849213,540.445557 485.358765,542.138489   C484.990051,541.857239 484.621338,541.576050 484.252625,541.294861   C485.143555,539.763611 486.034485,538.232422 486.956787,536.358582   C486.988190,536.015991 487.000000,536.000000 487.007996,535.994385  z\",id:\"svg_1798\"})),_path1797||(_path1797=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M481.030426,539.030518   C480.798492,539.566040 480.556488,540.084290 480.239868,540.552002   C480.203949,540.605042 479.748810,540.374329 479.488068,540.275208   C479.778931,539.856018 480.069763,539.436890 480.647217,538.975708   C480.933838,538.933716 480.998230,538.998230 481.030426,539.030518  z\",id:\"svg_1799\"})),_path1798||(_path1798=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M460.998657,538.998779   C460.700562,539.513367 460.403778,540.029114 460.106995,540.544922   C459.893616,540.364319 459.680267,540.183655 459.466919,540.003052   C459.788818,539.692810 460.110748,539.382568 460.717682,539.037354   C461.002686,539.002441 461.000000,539.000000 460.998657,538.998779  z\",id:\"svg_1800\"})),_path1799||(_path1799=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M443.957336,575.660217   C442.938904,576.008179 441.870514,576.009644 440.401672,576.004395   C440.088531,574.871582 440.175842,573.745667 440.372192,571.213562   C442.052338,573.162292 442.979828,574.237976 443.957336,575.660217  z\",id:\"svg_1801\"})),_path1800||(_path1800=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M443.998840,566.998779   C443.576050,567.927979 443.154449,568.858398 442.732849,569.788818   C442.233185,569.502930 441.733551,569.217041 441.233887,568.931213   C441.906281,568.278931 442.578705,567.626709 443.626770,566.988464   C444.002441,567.002441 444.000000,567.000000 443.998840,566.998779  z\",id:\"svg_1802\"})),_path1801||(_path1801=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M429.089844,569.689087   C428.437744,569.165222 428.087128,568.570251 427.736511,567.975281   C428.295593,567.802734 428.854706,567.630249 429.413818,567.457764   C429.406311,568.177856 429.398834,568.897888 429.089844,569.689087  z\",id:\"svg_1803\"})),_path1802||(_path1802=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M437.990631,571.977661   C438.101379,571.938171 438.224213,571.918457 438.194519,571.960327   C438.041962,572.021973 438.002716,571.997375 437.990631,571.977661  z\",id:\"svg_1804\"})),_path1803||(_path1803=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M427.914368,551.861511   C425.881683,553.460510 423.320099,554.371887 422.045471,556.187012   C420.271057,558.713684 419.625671,558.678284 417.959412,556.233643   C416.932373,554.726929 415.061249,553.795593 413.330719,552.736572   C410.321625,548.725464 413.807373,547.846680 416.457031,546.336182   C418.422333,547.889404 420.336243,549.401978 422.250153,550.914551   C422.314636,550.561462 422.379120,550.208374 422.443634,549.855286   C424.188171,550.030457 425.932739,550.205627 427.839081,550.691589   C427.987152,551.193970 427.973389,551.385498 427.914368,551.861511  z\",id:\"svg_1805\"})),_path1804||(_path1804=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M453.000000,520.002441   C452.342682,521.096619 451.685364,522.190796 451.028046,523.284973   C450.870789,522.904785 450.713531,522.524597 450.556274,522.144348   C449.386902,522.572632 448.217529,523.000916 446.658447,523.728638   C445.182861,523.682190 444.097015,523.336304 442.999115,522.734375   C442.833313,522.200500 442.679535,521.922852 442.525757,521.645142   C442.328766,522.070679 442.131775,522.496155 441.547913,522.941711   C437.490814,522.367065 433.838776,521.541870 430.144623,521.251099   C427.227142,521.021484 423.605743,520.444214 421.470612,521.829834   C418.560516,523.718506 417.724670,521.941528 416.058075,520.393433   C414.634308,519.396240 413.336884,518.086670 412.048767,518.095764   C409.940125,518.110718 407.837524,518.983459 405.732391,519.494324   C405.696503,519.226440 405.660614,518.958618 405.624725,518.690735   C404.103699,519.815979 402.582672,520.941223 401.044708,521.828186   C401.027771,521.589905 401.009277,521.112427 401.009277,521.112427   C400.613373,519.797424 400.217468,518.482361 399.084290,517.077148   C396.231781,515.001587 394.116516,513.016235 391.968689,510.694672   C389.337738,505.001465 388.086823,512.205627 385.641663,510.874084   C383.612640,510.545898 381.876007,510.345947 380.151672,510.147400   C380.151672,511.032593 380.151672,511.795807 380.151672,511.506104   C377.935486,511.985870 376.148224,512.372803 374.360962,512.759705   C372.669952,512.600281 370.859009,512.727844 369.046356,512.760925   C368.434601,512.772156 367.694855,512.722046 367.224213,512.396057   C364.012177,510.171112 363.311340,512.074585 363.075684,514.832764   C362.257629,514.550964 361.439545,514.269226 360.297272,513.936890   C361.067383,512.137146 362.161682,510.387817 363.171112,507.982941   C364.087036,505.994324 365.087830,504.661316 366.282959,503.069458   C365.827881,502.411713 364.849731,500.998016 363.936768,499.678497   C365.064819,497.946167 366.027191,496.468231 367.296753,494.952759   C367.934418,494.478027 368.264862,494.040833 368.595306,493.603668   C368.314758,493.513092 367.817596,493.298126 367.787140,493.351166   C367.484009,493.878998 367.257904,494.451050 366.650330,495.004608   C364.889587,494.212158 363.488617,493.425690 362.203644,492.492615   C362.516571,492.173248 362.742767,492.057831 363.388550,492.008423   C365.354034,491.287476 366.929230,490.557861 368.695160,489.739929   C370.623108,491.598816 372.841248,493.737457 374.791351,496.013306   C374.018341,497.105530 373.513336,498.060577 373.003540,499.008026   C372.998749,499.000427 373.015320,499.003876 372.659607,499.006592   C371.535706,499.672882 370.767517,500.336456 369.824371,501.088989   C369.776917,501.453339 369.904388,501.728699 370.015503,502.002411   C369.999146,502.000793 370.008453,501.966919 370.029388,502.301636   C372.924286,502.905060 375.797058,503.192352 378.676178,503.382721   C378.808502,503.391449 378.998383,502.529663 379.455536,501.907501   C381.830353,501.490875 383.911072,501.240051 386.278137,501.095398   C389.385223,501.469299 392.205933,501.737030 394.983246,502.332397   C394.436951,503.553802 393.934052,504.447540 393.431183,505.341248   C393.823151,505.712463 394.215088,506.083679 394.607056,506.454895   C396.823975,504.421906 399.040894,502.388916 401.257812,500.355927   C400.956116,500.030090 400.654419,499.704285 400.352722,499.378448   C398.570068,500.261261 396.787415,501.144073 394.965149,501.651550   C393.711975,498.463440 393.951874,494.275116 389.045074,494.672546   C390.779999,492.571960 392.462494,490.805969 394.076263,489.112091   C396.648224,491.400452 398.566925,493.107635 400.099548,494.471283   C402.340424,493.897430 404.131439,493.438782 406.197937,492.986755   C406.656342,492.984589 406.839264,492.975800 407.022217,492.967010   C407.022217,492.967010 407.001129,492.996277 407.026001,493.299072   C407.386841,494.094360 407.722778,494.586914 408.058685,495.079468   C408.468201,496.003937 408.681396,497.543488 409.320862,497.747589   C412.238739,498.678864 415.276276,499.235138 418.635406,499.963135   C419.000000,500.000000 418.995819,499.996857 418.998962,500.348938   C419.650452,501.481262 420.298737,502.261475 420.740295,503.310028   C416.489868,502.913391 412.446228,502.248413 408.069946,501.528717   C408.413239,503.204041 408.702698,504.616577 408.843689,506.318726   C407.812378,507.299225 406.929596,507.990051 406.046783,508.680908   C406.215637,509.124756 406.384491,509.568604 406.553375,510.012451   C408.743500,509.776123 410.933624,509.539795 413.273468,509.287323   C413.186340,508.661255 413.075745,507.866943 413.267090,506.916809   C414.793335,506.578156 416.022614,506.221252 417.240723,506.256012   C418.801971,506.300537 420.354248,506.660126 421.957092,507.177155   C423.293732,506.841675 424.583679,506.212982 425.955139,505.544586   C426.305328,505.856659 427.260803,506.708130 428.937958,508.202698   C428.937958,506.121887 428.937958,505.164215 428.937958,504.206543   C429.117859,504.167908 429.297729,504.129303 430.140991,504.047241   C431.848785,503.981232 432.893219,503.958710 433.971039,503.970642   C434.004456,504.005066 434.070679,504.074524 434.085052,504.413177   C434.400024,505.831085 434.700653,506.910339 434.736328,508.209106   C435.557037,510.232513 436.642639,512.036377 437.432709,513.349182   C439.631744,512.426392 441.308167,511.722931 443.001617,511.389587   C444.594696,514.539185 446.443176,516.692139 450.373230,514.890625   C451.468597,515.978027 452.234924,516.989075 453.003357,518.333862   C453.003632,519.112488 453.001831,519.557495 453.000000,520.002441  M403.506287,505.174896   C403.135712,505.865051 402.765137,506.555206 402.394531,507.245361   C402.964508,507.396851 403.534485,507.548340 404.104462,507.699860   C404.131714,506.910583 404.158936,506.121277 403.506287,505.174896  M403.320404,511.347382   C403.045349,512.033813 402.770294,512.720215 402.495270,513.406616   C403.071960,513.477234 403.648651,513.547913 404.225342,513.618591   C404.122192,512.952698 404.019012,512.286743 403.320404,511.347382  M408.451447,512.684265   C408.943451,513.048340 409.435425,513.412354 409.927399,513.776428   C410.129608,513.422241 410.331818,513.068054 410.534027,512.713867   C409.988617,512.561829 409.443207,512.409790 408.451447,512.684265  M402.786285,497.789612   C403.357147,497.634216 403.928040,497.478821 404.498901,497.323425   C404.300354,496.953613 404.101807,496.583801 403.903259,496.214020   C403.379944,496.584656 402.856659,496.955292 402.786285,497.789612  M392.390015,507.466217   C392.390015,507.466217 392.503387,507.394684 392.390015,507.466217  M406.479675,515.606384   C406.479675,515.606384 406.394928,515.474304 406.479675,515.606384  z\",id:\"svg_1806\"})),_path1805||(_path1805=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M400.706726,521.274292   C401.009277,521.112427 401.027771,521.589905 401.272308,522.088257   C403.205353,523.496460 405.468964,523.993591 406.474060,525.393921   C409.430176,529.512695 411.674652,528.083923 414.401245,524.997681   C417.158813,525.646240 419.577087,526.344543 422.028992,527.370728   C422.733612,528.829163 423.404572,529.959656 424.075562,531.090210   C422.338196,532.411255 420.600830,533.732239 419.173981,534.817200   C415.922852,534.240234 412.329681,533.602600 408.368256,532.982483   C408.000000,533.000000 408.012024,533.011536 408.012024,533.011536   C407.807983,527.064392 404.972504,531.845825 403.389832,531.937012   C397.943329,526.715576 394.139557,527.441040 390.499573,532.223938   C389.849579,528.932007 389.326019,526.280579 388.548126,522.341064   C393.740509,525.352295 397.271515,524.449890 400.706726,521.274292  M402.537781,527.307129   C402.537781,527.307129 402.405548,527.587646 402.405548,527.587646   C402.405548,527.587646 402.700836,527.526855 402.537781,527.307129  z\",id:\"svg_1807\"})),_path1806||(_path1806=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M363.475952,514.848022   C363.311340,512.074585 364.012177,510.171112 367.224213,512.396057   C367.694855,512.722046 368.434601,512.772156 369.046356,512.760925   C370.859009,512.727844 372.669952,512.600281 374.360962,512.759705   C376.148224,512.372803 377.935486,511.985870 380.151672,511.506104   C380.151672,511.795807 380.151672,511.032593 380.151672,510.147400   C381.876007,510.345947 383.612640,510.545898 385.634766,511.207031   C386.347290,512.065491 386.892090,512.874695 387.182007,512.791870   C388.822205,512.323181 390.401306,511.640656 392.001221,511.030945   C394.116516,513.016235 396.231781,515.001587 398.726074,517.002563   C396.733490,521.658691 392.767151,517.427551 389.665314,518.630798   C388.298492,519.160950 386.345825,518.180847 384.390198,517.839478   C384.427490,517.436890 384.512238,516.522156 384.644745,515.091675   C383.540161,515.508179 382.640594,515.738647 381.846771,516.165710   C378.515564,517.957764 375.643402,519.976807 372.113098,515.649719   C370.887451,514.147400 366.707031,515.055847 363.475952,514.848022  z\",id:\"svg_1808\"})),_path1807||(_path1807=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M424.450500,531.060669   C423.404572,529.959656 422.733612,528.829163 422.365326,527.210022   C426.048981,526.156738 429.496979,525.544189 432.806915,525.180176   C437.530243,524.660767 439.071533,526.340942 441.339233,529.033752   C441.856903,529.648499 443.079529,529.669678 443.977661,529.964050   C442.892639,530.961670 441.807587,531.959290 440.362030,532.979248   C440.001526,533.001526 439.976135,532.977356 439.976135,532.977356   C439.538483,532.042969 439.100830,531.108582 438.663177,530.174194   C437.771271,530.650818 436.718262,530.960754 436.018890,531.636597   C434.214691,533.380310 432.566864,535.285706 430.632843,537.367310   C431.332764,537.536499 432.291901,537.768372 433.618958,537.997681   C433.986847,537.995117 434.001495,538.001526 433.998016,538.402222   C433.991974,539.852966 433.989410,540.902954 433.986847,541.953003   C430.328369,540.748718 426.726898,539.652710 427.151703,534.487671   C427.240570,533.406616 425.644867,532.186951 424.450500,531.060669  z\",id:\"svg_1809\"})),_path1808||(_path1808=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M351.019165,526.474060   C354.265320,528.821594 357.721680,530.095337 361.923706,527.301636   C362.647552,526.829102 363.174011,526.645752 363.851990,526.217407   C364.751831,526.018311 365.500153,526.064209 366.618713,526.533081   C366.992889,528.309631 366.996796,529.663391 367.000732,531.017090   C366.094360,531.153015 365.188019,531.288940 363.717010,531.750854   C362.091370,533.421753 361.030365,534.766724 359.969360,536.111633   C357.178009,536.242615 354.382568,536.328735 351.602325,536.581482   C351.353027,536.604126 351.201843,537.705872 351.006897,538.658142   C347.113495,537.457825 350.914337,535.464355 350.807526,533.378113   C350.944122,531.006653 350.977264,528.958130 351.019165,526.474060  M362.479187,529.604492   C362.479187,529.604492 362.393707,529.467712 362.479187,529.604492  M358.616516,531.520142   C358.616516,531.520142 358.476227,531.609009 358.616516,531.520142  z\",id:\"svg_1810\"})),_path1809||(_path1809=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M376.078156,528.834290   C376.275970,524.247986 373.341705,525.462158 370.288025,525.678467   C369.193054,524.588684 368.595428,523.796875 367.997803,523.005066   C367.920776,522.129395 367.843750,521.253723 367.766724,520.378052   C369.088287,521.067688 370.409821,521.757324 370.543243,521.826965   C376.710938,521.826965 381.783234,521.826965 386.855560,521.826965   C387.202637,522.200134 387.549713,522.573303 387.896759,522.946472   C386.119080,524.532349 384.399017,526.189636 382.546906,527.683105   C380.824219,529.072266 379.294891,529.055664 378.508972,526.604004   C378.029236,526.852905 377.549500,527.101807 377.005981,527.658691   C376.846252,528.233948 376.693848,528.463623 376.279358,528.789551   C376.073822,528.923279 376.078156,528.834290 376.078156,528.834290  z\",id:\"svg_1811\"})),_path1810||(_path1810=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M386.075165,541.946228   C385.981293,542.729187 385.887390,543.512146 385.894562,543.452454   C382.964264,540.948853 379.748962,538.486389 376.962982,535.608398   C376.317322,534.941467 377.136993,532.855957 377.592010,531.274231   C379.066223,537.074341 382.725311,531.275269 385.006989,532.554749   C385.766876,532.980774 389.937378,534.122803 391.016663,535.672974   C391.003662,536.000000 390.995422,536.008545 390.703918,536.146729   C389.936310,537.182190 389.460266,538.079468 388.984222,538.976807   C388.984222,538.976807 388.996033,539.000000 388.615967,538.980835   C387.515686,539.956543 386.795441,540.951416 386.075165,541.946228  z\",id:\"svg_1812\"})),_path1811||(_path1811=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M429.780823,545.735107   C427.655151,549.871643 426.899841,546.148438 425.592041,545.063599   C424.952209,546.075745 424.309814,547.091309 423.667389,548.106934   C423.102600,547.919434 422.537811,547.731873 421.972992,547.544373   C422.487244,545.923889 423.001495,544.303467 423.755188,542.422485   C425.848267,543.264709 427.701935,544.367493 429.780823,545.735107  z\",id:\"svg_1813\"})),_path1812||(_path1812=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M367.732422,523.224304   C368.595428,523.796875 369.193054,524.588684 369.919434,525.659546   C370.025146,527.564697 370.176666,529.226013 369.860321,530.792847   C369.777954,531.200623 368.235596,531.313599 367.182251,531.289551   C366.996796,529.663391 366.992889,528.309631 366.992920,526.557007   C367.153625,525.253296 367.310333,524.348389 367.732422,523.224304  z\",id:\"svg_1814\"})),_path1813||(_path1813=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M407.993958,532.994263   C409.139618,534.390442 410.291321,535.792358 411.443024,537.194214   C411.249817,537.533142 411.056641,537.872070 410.863464,538.210999   C409.468292,537.377502 407.952454,536.679993 406.757874,535.620361   C406.435944,535.334778 407.089417,533.949707 407.653564,533.040405   C408.012024,533.011536 408.000000,533.000000 407.993958,532.994263  z\",id:\"svg_1815\"})),_path1814||(_path1814=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M433.992371,542.218262   C433.989410,540.902954 433.991974,539.852966 433.999084,538.408691   C437.416107,541.533264 437.416107,541.533264 434.371521,542.988037   C434.008881,542.837280 434.003387,542.660400 433.992371,542.218262  z\",id:\"svg_1816\"})),_path1815||(_path1815=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M399.782959,534.527222   C400.389740,534.010681 400.881500,533.785156 401.373260,533.559692   C401.332764,534.272095 401.292267,534.984436 401.251770,535.696838   C400.723816,535.403992 400.195892,535.111145 399.782959,534.527222  z\",id:\"svg_1817\"})),_path1816||(_path1816=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M360.001221,519.001221   C360.652924,518.104309 361.303467,517.206238 361.953979,516.308167   C362.317413,516.693420 362.680847,517.078613 363.044250,517.463867   C362.260223,517.973145 361.476166,518.482422 360.344849,518.994629   C359.997559,518.997559 360.000000,519.000000 360.001221,519.001221  z\",id:\"svg_1818\"})),_path1817||(_path1817=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M419.669220,542.042664   C419.539307,542.671448 419.086487,543.369080 418.298004,544.082886   C418.423645,543.436523 418.884979,542.774048 419.669220,542.042664  z\",id:\"svg_1819\"})),_path1818||(_path1818=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M433.544128,543.059082   C433.718018,543.595642 433.581299,544.168823 433.311340,545.015015   C432.979950,545.220398 432.781769,545.152771 432.271912,545.043518   C432.384613,544.366516 432.809052,543.731140 433.544128,543.059082  z\",id:\"svg_1820\"})),_path1819||(_path1819=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M402.427460,537.570557   C402.359131,537.473938 402.620270,537.433044 402.620270,537.433044   C402.620270,537.433044 402.495789,537.667175 402.427460,537.570557  z\",id:\"svg_1821\"})),_path1820||(_path1820=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M363.205414,544.051208   C362.197968,544.153931 361.453491,544.093994 360.333984,544.020386   C360.280853,543.210388 360.602722,542.414124 361.307648,541.299072   C362.461609,540.319153 363.232483,539.658020 364.001709,538.998413   C364.000000,539.000000 363.996857,539.003235 363.996857,539.003235   C366.779724,539.003235 369.562592,539.003235 372.778595,539.003235   C372.355713,540.831726 372.069916,542.067383 371.760315,543.406067   C368.907837,543.422546 365.925629,540.135010 363.205414,544.051208  M367.820435,540.234436   C367.877869,540.406982 367.935303,540.579529 367.992706,540.752075   C368.048431,540.578552 368.104126,540.405090 367.820435,540.234436  z\",id:\"svg_1822\"})),_path1821||(_path1821=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M359.979736,536.337402   C361.030365,534.766724 362.091370,533.421753 363.496704,532.020996   C366.607880,533.119873 369.374725,534.274475 372.813110,535.709290   C370.856781,535.918152 369.091553,535.908203 367.446198,536.347229   C366.210785,536.676819 365.129364,537.583496 363.988098,538.618225   C363.996857,539.003235 364.000000,539.000000 363.744690,538.991333   C363.318237,538.973816 363.147095,538.965027 362.928955,538.615601   C361.934357,537.854187 360.986725,537.433350 360.039093,537.012512   C360.039093,537.012512 359.990112,536.563171 359.979736,536.337402  z\",id:\"svg_1823\"})),_path1822||(_path1822=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M369.069702,550.630737   C367.138672,549.211426 365.189819,547.404114 363.112549,545.282593   C366.667511,544.815796 368.869904,546.367126 369.069702,550.630737  z\",id:\"svg_1824\"})),_path1823||(_path1823=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M373.018005,554.692627   C371.986450,553.917419 370.972900,552.827515 369.956818,551.368530   C371.805145,551.374268 374.060699,551.380005 373.018005,554.692627  z\",id:\"svg_1825\"})),_path1824||(_path1824=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M386.433472,541.966858   C386.795441,540.951416 387.515686,539.956543 388.604919,538.972290   C388.973602,539.727905 388.973236,540.472961 388.958740,541.589600   C388.226990,541.969910 387.509369,541.978699 386.433472,541.966858  z\",id:\"svg_1826\"})),_path1825||(_path1825=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M376.118347,528.921997   C375.352356,529.923889 374.541779,530.927063 373.731232,531.930237   C373.333435,531.490051 372.935608,531.049805 372.537781,530.609619   C373.499115,530.070374 374.460449,529.531189 375.750000,528.913147   C376.078156,528.834290 376.073822,528.923279 376.118347,528.921997  z\",id:\"svg_1827\"})),_path1826||(_path1826=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M380.022217,542.454590   C380.419922,543.041748 380.517181,543.623718 380.614471,544.205627   C380.207703,544.201721 379.800964,544.197754 379.394165,544.193787   C379.503387,543.612305 379.612579,543.030823 380.022217,542.454590  z\",id:\"svg_1828\"})),_path1827||(_path1827=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M389.014343,542.418213   C391.278564,542.526489 391.736908,543.420776 389.367859,544.940674   C389.018372,544.247559 389.006409,543.515442 389.014343,542.418213  z\",id:\"svg_1829\"})),_path1828||(_path1828=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M374.385864,542.718384   C374.556610,542.853577 374.582001,543.089233 374.607361,543.324890   C374.485077,543.156250 374.362793,542.987549 374.385864,542.718384  z\",id:\"svg_1830\"})),_path1829||(_path1829=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M389.328979,538.929199   C389.460266,538.079468 389.936310,537.182190 390.703613,536.153442   C390.554504,536.975159 390.114105,537.928406 389.328979,538.929199  z\",id:\"svg_1831\"})),_path1830||(_path1830=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M392.021210,555.343628   C392.997681,555.750183 393.994110,556.500366 394.999084,557.628906   C394.018799,557.234009 393.029999,556.460632 392.021210,555.343628  z\",id:\"svg_1832\"})),_path1831||(_path1831=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A4602A\",opacity:1,stroke:\"none\",d:\" M360.032898,537.353699   C360.986725,537.433350 361.934357,537.854187 362.629852,538.653931   C361.916534,539.373047 361.455353,539.713257 360.994171,540.053528   C360.671692,539.267334 360.349213,538.481079 360.032898,537.353699  z\",id:\"svg_1833\"})),_path1832||(_path1832=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M360.987976,540.283386   C361.455353,539.713257 361.916534,539.373047 362.676819,538.994507   C363.147095,538.965027 363.318237,538.973816 363.746399,538.989746   C363.232483,539.658020 362.461609,540.319153 361.333862,540.976685   C360.976990,540.973145 360.981781,540.513245 360.987976,540.283386  z\",id:\"svg_1834\"})),_path1833||(_path1833=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M351.343872,541.988342   C350.989960,541.257019 350.993195,540.500427 350.991943,539.365234   C353.361725,539.466614 353.806213,540.409180 351.343872,541.988342  z\",id:\"svg_1835\"})),_path1834||(_path1834=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M428.602997,304.140320   C425.668915,302.412689 422.739532,300.676971 419.798462,298.961304   C418.567078,298.243011 417.310913,297.567200 415.948669,296.571777   C417.337280,295.280579 418.843262,294.289642 420.656769,293.162384   C420.744049,297.943909 425.928375,297.232544 427.991089,299.772522   C429.145020,298.665070 430.298981,297.557617 431.877014,296.542755   C434.866638,298.757660 437.432190,300.879944 440.007202,303.375916   C441.004364,304.511139 441.992065,305.272736 442.979736,306.034332   C442.174896,306.937469 441.370056,307.840637 439.915100,308.838074   C435.710999,307.335022 432.156982,305.737671 428.602997,304.140320  z\",id:\"svg_1836\"})),_path1835||(_path1835=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M421.972656,276.019409   C421.833344,275.876068 421.720978,275.708710 421.608612,275.541351   C421.707733,275.583405 421.806854,275.625427 421.976440,275.804199   C422.046936,275.940918 421.999573,275.995392 421.972656,276.019409  z\",id:\"svg_1837\"})),_path1836||(_path1836=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M488.029541,373.983734   C488.679169,376.750854 489.328827,379.518005 489.603149,382.697937   C488.014252,384.035461 486.800659,384.960175 485.563263,385.903015   C484.295258,385.013123 483.237701,384.270874 483.218140,384.257141   C478.543701,384.918243 474.778046,385.450806 470.897888,385.758728   C470.404358,385.554657 470.025269,385.575195 469.646210,385.595764   C470.091797,385.736237 470.537354,385.876740 470.963257,386.339294   C470.350830,387.167755 469.758057,387.674164 468.876038,387.973389   C466.780670,386.363159 465.711609,382.479919 462.625732,385.494934   C463.512421,387.208038 464.243011,388.619537 464.575958,390.022705   C463.117950,390.013092 462.057556,390.011810 461.004150,389.630554   C460.945282,385.297852 457.915833,384.204041 454.977356,382.729706   C454.727448,382.078278 454.490723,381.706940 454.253967,381.335571   C454.059570,381.480743 453.865204,381.625916 453.670837,381.771118   C454.117035,382.178467 454.563202,382.585846 455.009216,383.345337   C454.814972,385.540955 454.521606,386.748444 452.571960,384.679352   C452.010620,384.083588 450.209320,383.757996 449.714355,384.178040   C448.552246,385.164185 447.835815,386.675629 446.629608,388.133179   C444.559052,389.536194 442.797913,390.780487 441.020111,391.685974   C440.982483,390.895966 440.961548,390.444763 440.955170,389.613129   C440.973114,388.469604 440.976471,387.706512 441.318665,386.893799   C443.899902,383.134644 450.076874,381.188354 447.116547,374.936127   C447.671173,374.684479 448.424896,374.342468 449.178589,374.000488   C451.852600,372.919617 454.482544,371.699921 457.223328,370.829285   C458.256195,370.501160 459.545807,370.981293 461.169434,371.135925   C460.317566,372.903046 459.778320,374.021667 459.129669,375.367218   C465.714630,375.367218 471.992584,375.367218 478.532043,375.367218   C478.532043,373.432739 478.532043,372.398987 478.532043,370.383057   C481.039978,372.439606 482.938324,373.996246 484.882904,375.590820   C485.394073,373.997559 485.858765,372.549286 486.661743,371.389069   C487.343231,372.446014 487.686371,373.214874 488.029541,373.983734  z\",id:\"svg_1838\"})),_path1837||(_path1837=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M488.337585,373.843079   C487.686371,373.214874 487.343231,372.446014 486.994476,371.337952   C487.089813,364.381287 487.336304,357.744781 484.660034,350.549347   C485.421661,349.274841 490.007904,347.009155 485.086914,345.451904   C487.902954,339.309418 490.431915,333.379364 493.345245,327.644562   C494.491760,325.387695 496.522980,323.587189 498.104187,321.542450   C499.865265,319.265167 501.449829,316.835999 503.367645,314.703522   C504.072845,313.919403 505.510223,313.793762 506.818909,313.165192   C508.807770,311.517670 510.417664,309.718719 512.426636,308.732941   C514.231018,307.847504 516.473816,307.855530 518.630676,308.076630   C513.931335,312.480042 508.685760,315.844299 504.422180,320.175262   C498.264465,326.430359 491.826904,332.884979 492.766754,342.923370   C492.431335,344.351196 492.095886,345.779022 491.786255,347.596741   C491.595215,348.799500 491.378326,349.612366 490.780945,350.917114   C490.267975,354.604645 490.135590,357.800323 490.003174,360.995972   C489.953156,361.842041 489.903107,362.688080 489.902222,364.177856   C490.204407,366.240021 490.457458,367.658478 490.710510,369.076904   C490.684875,369.756500 490.659210,370.436127 490.610962,371.460449   C489.940796,372.437622 489.293213,373.070007 488.337585,373.843079  z\",id:\"svg_1839\"})),_path1838||(_path1838=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M439.997742,303.002258   C437.432190,300.879944 434.866638,298.757660 432.146515,296.325531   C432.765472,294.285522 433.539001,292.555298 434.480133,290.450287   C434.883514,291.692719 435.160583,292.545990 435.427521,293.368164   C436.471375,292.570557 437.483582,291.797119 438.847717,291.047852   C439.651337,293.768005 439.271362,297.413239 443.970612,294.343231   C444.734802,293.843964 446.800201,295.336365 448.617676,295.931885   C448.461945,297.278870 448.240509,298.855621 447.361755,299.853607   C446.499329,300.833038 444.968750,301.224152 443.178101,301.649384   C441.750641,301.949432 440.876526,302.473572 440.001221,302.998871   C440.000000,303.000000 439.997742,303.002258 439.997742,303.002258  z\",id:\"svg_1840\"})),_path1839||(_path1839=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M448.851746,333.004700   C446.229797,327.646118 443.607849,322.287537 440.961670,316.499908   C440.937408,316.070862 441.131134,315.869781 441.485779,315.924500   C442.560089,315.986542 443.279816,315.993866 443.999512,316.001221   C443.999512,316.001221 444.000000,316.000000 443.992310,316.357788   C444.663513,317.474274 445.342377,318.233002 446.021271,318.991730   C446.021271,318.991730 445.998779,319.000732 446.003418,319.354889   C447.337280,321.797760 448.666504,323.886475 449.995758,325.975159   C449.995758,325.975159 450.008881,326.448639 450.003296,327.108459   C451.011078,332.188934 452.024414,336.609589 453.037750,341.030273   C453.047485,341.698090 453.057220,342.365906 453.031555,343.815430   C453.336395,346.738861 453.676697,348.880585 454.016968,351.022308   C453.913269,352.577057 453.809601,354.131805 453.207031,355.584534   C452.046936,355.317291 451.385773,355.152069 450.790253,354.522644   C450.187866,347.040527 449.519806,340.022614 448.851746,333.004700  z\",id:\"svg_1841\"})),_path1840||(_path1840=/*#__PURE__*/React.createElement(\"path\",{fill:\"#925E44\",opacity:1,stroke:\"none\",d:\" M450.724579,354.986877   C451.385773,355.152069 452.046936,355.317291 452.927887,355.758759   C454.344330,360.280518 450.048584,362.727875 449.728363,366.482269   C449.536591,368.730408 449.293701,370.974182 449.126190,373.610229   C448.424896,374.342468 447.671173,374.684479 447.116547,374.936127   C450.076874,381.188354 443.899902,383.134644 441.079041,386.696289   C440.937500,385.604156 441.428772,384.680756 441.800873,383.711578   C442.785645,381.146759 443.718781,378.562103 444.710022,375.648438   C446.439209,368.637695 448.125336,361.962463 449.855072,355.298523   C449.898621,355.130707 450.423920,355.087952 450.724579,354.986877  z\",id:\"svg_1842\"})),_path1841||(_path1841=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M428.739136,304.475159   C432.156982,305.737671 435.710999,307.335022 439.614075,308.966980   C439.969757,309.171143 439.976349,309.340759 440.009399,310.057709   C440.354370,311.059387 440.672913,311.513702 440.991425,311.968018   C440.991425,311.968018 440.995117,311.981537 440.976471,312.375916   C441.015594,313.803467 441.073364,314.836609 441.131134,315.869781   C441.131134,315.869781 440.937408,316.070862 440.841797,316.173279   C436.789215,312.453766 432.832245,308.631866 428.739136,304.475159  z\",id:\"svg_1843\"})),_path1842||(_path1842=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M474.996521,345.244446   C475.492767,345.098206 475.659485,345.049500 475.817535,345.069397   C477.862854,345.327179 479.906921,345.594696 481.951355,345.859741   C481.537323,347.928406 481.123291,349.997070 480.709259,352.065735   C480.220428,352.097443 479.731567,352.129120 479.242737,352.160828   C478.714264,349.115509 472.756500,350.329285 474.996521,345.244446  z\",id:\"svg_1844\"})),_path1843||(_path1843=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M476.996277,327.996246   C477.749054,327.993805 478.501892,327.991364 479.627350,327.994446   C480.000000,328.000000 479.992432,327.992676 479.992432,327.992676   C478.923431,329.682434 477.854431,331.372162 476.742035,333.130554   C474.868713,331.431366 473.521942,330.209808 472.043091,328.868408   C472.682037,327.520691 473.343048,326.126465 474.364746,324.360382   C476.155396,323.297913 477.585419,322.607330 479.015442,321.916718   C478.440643,323.727020 477.865814,325.537292 476.928101,327.797943   C476.586609,328.620392 476.608002,328.992462 476.629456,329.364532   C476.751740,328.908447 476.873993,328.452362 476.996277,327.996246  z\",id:\"svg_1845\"})),_path1844||(_path1844=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M479.193237,321.666962   C477.585419,322.607330 476.155396,323.297913 474.364380,323.982239   C474.003357,323.975983 474.002502,324.002075 474.009766,323.666748   C474.017670,322.887238 474.018250,322.443054 474.242096,321.844849   C474.464996,321.285797 474.464661,320.880707 474.464325,320.475647   C473.976532,320.644531 473.488770,320.813416 472.739380,320.832397   C472.292847,320.123627 472.107941,319.564789 471.923035,319.005951   C473.009552,317.831299 474.096069,316.656616 475.563904,315.069702   C476.373291,317.385956 481.310699,316.940491 479.193237,321.666962  z\",id:\"svg_1846\"})),_path1845||(_path1845=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M453.884338,313.994476   C452.436310,315.164642 451.277344,316.159943 449.990753,317.264771   C449.020569,316.106750 448.001892,314.890869 446.978271,313.669098   C448.837585,312.601837 450.478760,311.659790 452.119965,310.717743   C451.821411,310.237793 451.522858,309.757874 451.224304,309.277924   C452.207336,310.791809 453.190369,312.305695 453.884338,313.994476  z\",id:\"svg_1847\"})),_path1846||(_path1846=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M453.382751,341.006104   C452.024414,336.609589 451.011078,332.188934 450.005432,327.345276   C452.123169,329.325317 455.489319,331.118927 453.499725,335.377380   C453.177887,336.066315 454.766541,337.477234 454.952057,338.637543   C455.063721,339.335938 454.169830,340.195038 453.382751,341.006104  z\",id:\"svg_1848\"})),_path1847||(_path1847=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M479.178467,365.182068   C480.168304,365.690796 480.819122,366.293488 481.469940,366.896179   C480.808044,366.896057 479.999634,366.649933 479.511078,366.940887   C477.893158,367.904449 476.390503,369.061584 474.671631,370.264771   C474.137329,369.346924 473.143250,367.639282 472.409698,366.379181   C474.698669,365.986481 476.769073,365.631287 479.178467,365.182068  z\",id:\"svg_1849\"})),_path1848||(_path1848=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M471.542542,318.999695   C472.107941,319.564789 472.292847,320.123627 472.845581,321.058502   C473.416046,321.716614 473.684509,321.904724 474.018860,321.998871   C474.018250,322.443054 474.017670,322.887238 474.020386,323.664551   C471.406921,323.650085 468.790131,323.302460 466.173340,322.954834   C465.965057,322.565735 465.756805,322.176605 465.548553,321.787476   C467.419708,320.856140 469.290894,319.924774 471.542542,318.999695  z\",id:\"svg_1850\"})),_path1849||(_path1849=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M450.134735,325.639221   C448.666504,323.886475 447.337280,321.797760 446.008789,319.343903   C450.031342,319.333679 451.993805,321.077026 450.134735,325.639221  z\",id:\"svg_1851\"})),_path1850||(_path1850=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M454.269897,350.806122   C453.676697,348.880585 453.336395,346.738861 453.051758,344.148865   C454.210541,344.375061 455.313690,345.049530 456.708435,345.862000   C457.000000,346.000000 456.997131,345.997131 456.997131,345.997131   C456.172363,347.528076 455.347595,349.059021 454.269897,350.806122  z\",id:\"svg_1852\"})),_path1851||(_path1851=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M457.001404,346.001404   C457.736420,344.915649 458.470093,343.828461 459.203735,342.741272   C459.736938,343.293640 460.270142,343.846008 460.803345,344.398376   C459.788116,344.931305 458.772888,345.464203 457.377380,345.997131   C456.997131,345.997131 457.000000,346.000000 457.001404,346.001404  z\",id:\"svg_1853\"})),_path1852||(_path1852=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M480.003693,328.003754   C480.352417,326.742035 480.697449,325.476593 481.042480,324.211151   C481.685822,324.453857 482.329132,324.696594 482.972473,324.939301   C482.230286,325.948273 481.488098,326.957245 480.369171,327.979431   C479.992432,327.992676 480.000000,328.000000 480.003693,328.003754  z\",id:\"svg_1854\"})),_path1853||(_path1853=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M459.216370,321.205139   C460.226349,321.550812 460.894653,321.993225 461.562988,322.435638   C460.820251,322.902008 460.077545,323.368378 459.334839,323.834747   C459.181458,322.990448 459.028076,322.146179 459.216370,321.205139  z\",id:\"svg_1855\"})),_path1854||(_path1854=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M441.485779,315.924500   C441.073364,314.836609 441.015594,313.803467 440.979126,312.379883   C441.972839,313.108276 442.945282,314.227051 443.958618,315.673523   C443.279816,315.993866 442.560089,315.986542 441.485779,315.924500  z\",id:\"svg_1856\"})),_path1855||(_path1855=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M442.988342,305.649963   C441.992065,305.272736 441.004364,304.511139 440.007202,303.375916   C439.997742,303.002258 440.000000,303.000000 440.374420,303.000092   C441.494751,302.987549 442.240662,302.974884 442.986572,302.962219   C442.990021,303.730011 442.993469,304.497803 442.988342,305.649963  z\",id:\"svg_1857\"})),_path1856||(_path1856=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M455.681427,299.043335   C455.718597,300.097870 455.438995,301.194519 455.104370,302.628876   C454.292053,302.777191 453.534790,302.587769 451.933228,302.187164   C453.407990,300.854065 454.386322,299.969727 455.681427,299.043335  z\",id:\"svg_1858\"})),_path1857||(_path1857=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M462.858643,317.550995   C463.003784,316.544312 463.458252,315.599335 463.912750,314.654327   C464.344238,314.925140 464.775726,315.195953 465.207214,315.466766   C464.527496,316.182068 463.847778,316.897369 462.858643,317.550995  z\",id:\"svg_1859\"})),_path1858||(_path1858=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M460.997314,311.997375   C460.598602,312.872681 460.202972,313.751068 459.807373,314.629456   C459.226013,313.979553 458.644684,313.329651 458.034393,312.337006   C458.005432,311.994263 457.999481,312.000519 458.373291,312.005585   C459.499908,312.008942 460.252716,312.007233 461.005493,312.005493   C461.005493,312.005524 461.000397,312.000397 460.997314,311.997375  z\",id:\"svg_1860\"})),_path1859||(_path1859=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M463.998230,327.002441   C465.043304,327.468964 466.088409,327.935455 467.133484,328.401978   C466.806274,328.898102 466.479065,329.394257 466.151855,329.890381   C465.458862,329.158051 464.765900,328.425690 464.036438,327.346680   C464.000000,327.000000 463.998230,327.002441 463.998230,327.002441  z\",id:\"svg_1861\"})),_path1860||(_path1860=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M470.149261,332.459290   C469.536285,332.966278 469.045105,333.195404 468.553894,333.424530   C468.605682,332.731995 468.657440,332.039429 468.709229,331.346893   C469.229828,331.625061 469.750458,331.903259 470.149261,332.459290  z\",id:\"svg_1862\"})),_path1861||(_path1861=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M468.624756,326.488953   C468.916412,325.901123 469.429993,325.540558 469.943604,325.179993   C470.141296,325.546722 470.339020,325.913513 470.536713,326.280304   C469.973389,326.425598 469.410065,326.570923 468.624756,326.488953  z\",id:\"svg_1863\"})),_path1862||(_path1862=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M460.622864,329.019531   C459.937897,329.370117 459.251251,329.404327 458.564575,329.438538   C458.573029,329.152924 458.581451,328.867340 458.589905,328.581726   C459.266968,328.622192 459.944061,328.662659 460.622864,329.019531  z\",id:\"svg_1864\"})),_path1863||(_path1863=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M442.993042,302.707825   C442.240662,302.974884 441.494751,302.987549 440.375610,302.998962   C440.876526,302.473572 441.750641,301.949432 442.827698,301.685333   C443.020264,302.114685 443.009888,302.284027 442.993042,302.707825  z\",id:\"svg_1865\"})),_path1864||(_path1864=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M446.013855,318.638916   C445.342377,318.233002 444.663513,317.474274 443.991699,316.358002   C444.667999,316.762329 445.337219,317.524231 446.013855,318.638916  z\",id:\"svg_1866\"})),_path1865||(_path1865=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M469.365326,341.094360   C469.947266,341.481445 470.245178,341.894653 470.543091,342.307831   C470.277710,342.430817 470.012329,342.553833 469.746948,342.676819   C469.525055,342.158020 469.303192,341.639252 469.365326,341.094360  z\",id:\"svg_1867\"})),_path1866||(_path1866=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M464.001068,326.999146   C463.486023,326.764435 462.958649,326.549866 462.471893,326.265778   C462.425293,326.238556 462.631775,325.777679 462.720764,325.518127   C463.124115,325.821167 463.527466,326.124207 463.964539,326.714844   C463.998230,327.002441 464.000000,327.000000 464.001068,326.999146  z\",id:\"svg_1868\"})),_path1867||(_path1867=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M450.641113,306.136292   C450.357483,305.858795 450.239807,305.442413 450.182037,305.017914   C450.171753,304.942291 450.409760,304.832886 450.533112,304.739075   C450.631256,305.157623 450.729401,305.576141 450.641113,306.136292  z\",id:\"svg_1869\"})),_path1868||(_path1868=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M472.792175,343.986694   C472.606354,344.109467 472.417511,344.049347 472.228668,343.989258   C472.415497,343.927429 472.602325,343.865601 472.792175,343.986694  z\",id:\"svg_1870\"})),_path1869||(_path1869=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M448.302429,307.391296   C448.170532,307.558777 447.938904,307.584259 447.707275,307.609711   C447.872437,307.489594 448.037567,307.369446 448.302429,307.391296  z\",id:\"svg_1871\"})),_path1870||(_path1870=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M478.035034,306.965698   C478.493835,307.091522 478.921600,307.251221 479.349335,307.410950   C478.969055,307.436432 478.588745,307.461884 478.077637,307.279419   C477.946777,307.071503 478.003998,306.999603 478.035034,306.965698  z\",id:\"svg_1872\"})),_path1871||(_path1871=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M440.973053,311.676453   C440.672913,311.513702 440.354370,311.059387 440.017395,310.312164   C440.317505,310.474457 440.636108,310.929657 440.973053,311.676453  z\",id:\"svg_1873\"})),_path1872||(_path1872=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M482.611694,369.323761   C482.434265,369.187225 482.405945,368.947144 482.377625,368.707092   C482.505341,368.878143 482.633087,369.049194 482.611694,369.323761  z\",id:\"svg_1874\"})),_path1873||(_path1873=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M466.567322,313.462708   C466.614716,313.536316 466.421478,313.559814 466.421478,313.559814   C466.421478,313.559814 466.519958,313.389099 466.567322,313.462708  z\",id:\"svg_1875\"})),_path1874||(_path1874=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M461.020264,311.633026   C460.252716,312.007233 459.499908,312.008942 458.370667,312.008240   C458.740479,310.997864 459.486786,309.989899 460.616882,308.991272   C461.000671,309.000580 461.025879,309.024811 461.025879,309.024811   C461.028931,309.770050 461.031982,310.515320 461.020264,311.633026  z\",id:\"svg_1876\"})),_path1875||(_path1875=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M460.988617,308.987976   C461.227783,308.461121 461.458893,307.934296 461.760956,307.451874   C461.791443,307.403198 462.250366,307.622742 462.510437,307.717804   C462.207581,308.125702 461.904724,308.533600 461.313843,308.983154   C461.025879,309.024811 461.000671,309.000580 460.988617,308.987976  z\",id:\"svg_1877\"})),_path1876||(_path1876=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222220\",opacity:1,stroke:\"none\",d:\" M424.172333,394.084015   C417.333160,396.326508 410.502808,400.275391 403.652283,400.310699   C397.351074,400.343201 390.264526,402.193329 384.144928,398.340240   C379.919586,401.611420 376.583984,397.317291 372.800812,396.856445   C369.875946,396.500183 366.809509,395.287201 364.349335,393.642334   C361.219208,391.549500 358.459442,388.798248 355.910858,385.993835   C354.954285,384.941315 355.037659,382.943726 354.763702,381.845184   C353.103088,381.050568 351.124939,380.724243 350.213531,379.561615   C346.043060,374.241638 342.022125,368.816803 342.567719,361.378723   C342.699646,359.580322 341.556366,357.688324 341.404449,355.429321   C345.331970,354.120422 348.854523,353.221588 352.753510,352.226715   C348.402252,357.824188 348.402252,357.824188 352.365540,359.069641   C354.492767,362.950226 356.179230,366.798248 358.035553,370.562469   C360.220795,374.993683 362.572388,378.980957 367.949280,380.740906   C370.993530,381.737366 373.364655,384.790283 376.038971,386.916962   C377.452423,386.202118 379.587769,384.556030 380.647522,388.715393   C382.313263,388.060669 383.664032,387.529724 385.434448,386.996246   C392.902985,386.662567 399.951904,386.331390 407.383118,386.005798   C409.188080,386.315125 410.610718,386.618927 411.560425,386.821716   C416.258331,382.442261 420.647034,378.351105 425.035706,374.259918   C425.297638,374.500336 425.559540,374.740784 425.821472,374.981201   C425.017059,376.446533 424.212646,377.911896 423.350891,379.481720   C425.673401,381.067657 427.834869,382.543579 429.966797,384.347290   C428.634186,385.118286 427.331146,385.561584 425.861084,385.784119   C425.285522,385.612335 424.876953,385.661346 424.468384,385.710358   C424.977692,386.148773 425.487030,386.587219 426.000275,387.472382   C426.048615,389.733124 426.093018,391.547089 425.978516,393.599121   C425.270508,393.919464 424.721436,394.001740 424.172333,394.084015  z\",id:\"svg_1878\"})),_path1877||(_path1877=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M345.833313,328.315979   C346.566345,326.826843 347.312775,325.713928 347.680359,324.487518   C348.827362,320.660278 350.669189,317.808990 355.056061,317.000824   C357.029175,316.637390 358.798492,315.167572 360.782562,314.136230   C361.600403,315.031372 362.440918,315.951355 364.016541,316.933105   C366.080109,316.599701 367.410278,315.888000 368.736542,315.895233   C370.159607,315.903046 371.578979,316.586731 372.998291,317.310730   C373.002869,318.092102 373.009125,318.538208 372.669312,319.024200   C369.788513,320.908417 367.563965,322.770599 371.921448,325.366028   C371.055023,326.162689 370.262360,326.636261 369.439056,327.048584   C365.055908,329.243835 361.497223,332.595551 361.943939,337.562897   C362.179932,340.186859 365.242096,342.556671 367.016174,345.399475   C366.015991,346.175110 365.041382,346.899200 364.036835,346.943420   C362.179901,347.025177 360.202911,346.251343 358.457214,346.642639   C352.914276,347.885162 347.454895,349.500305 341.963196,350.971405   C341.925720,347.608826 341.386383,344.155060 341.976318,340.906433   C342.734467,336.731598 344.399200,332.721375 345.833313,328.315979  M360.542480,319.526703   C359.806244,321.627716 357.736237,324.162872 362.147949,324.945557   C361.773499,322.856323 361.463715,321.127747 360.542480,319.526703  M358.584015,343.519775   C358.584015,343.519775 358.474121,343.585236 358.584015,343.519775  z\",id:\"svg_1879\"})),_path1878||(_path1878=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M341.670105,351.127197   C347.454895,349.500305 352.914276,347.885162 358.457214,346.642639   C360.202911,346.251343 362.179901,347.025177 364.036835,346.943420   C365.041382,346.899200 366.015991,346.175110 367.365295,345.349487   C367.959656,344.909515 368.192780,344.877808 368.794525,344.795959   C372.665558,344.803101 375.835663,347.972504 379.973511,345.894653   C382.256500,345.301849 384.136078,344.671295 386.444031,344.028107   C390.591644,344.388458 394.360596,344.506287 398.013824,345.218079   C400.761841,345.753540 403.361359,347.051117 405.647949,348.011353   C404.512482,348.042328 403.756104,348.071411 402.600861,348.072754   C401.136322,348.040894 400.070587,348.036804 398.581116,348.026123   C393.121979,348.062317 388.038208,347.691956 383.066101,348.274536   C378.843750,348.769196 375.173004,351.627441 370.324341,350.295715   C367.886475,349.626190 364.793518,351.341888 361.597656,351.979126   C356.156219,351.730377 353.700104,354.869934 352.000000,359.000000   C348.402252,357.824188 348.402252,357.824188 352.753510,352.226715   C348.854523,353.221588 345.331970,354.120422 341.402679,355.043701   C341.122955,353.806427 341.249969,352.544708 341.670105,351.127197  z\",id:\"svg_1880\"})),_path1879||(_path1879=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AD703F\",opacity:1,stroke:\"none\",d:\" M405.974182,404.218628   C406.416718,404.128113 406.859283,404.037598 407.658844,404.236053   C408.155060,404.792938 408.294250,405.060852 408.433411,405.328766   C408.627075,404.940979 408.820709,404.553192 409.014343,404.165405   C410.450195,404.035126 411.886078,403.904877 413.966064,403.841980   C415.071167,403.264771 415.532104,402.620209 415.993042,401.975647   C415.993042,401.975677 415.997131,402.004578 416.298279,402.025696   C417.589783,402.404236 418.971436,403.369293 419.508881,403.023254   C423.961090,400.156372 428.670410,397.476807 432.444305,393.848511   C434.677155,391.701813 436.283264,390.855377 438.991272,391.990753   C438.998383,391.998352 438.988251,391.988464 439.001831,392.328552   C439.026367,393.122620 439.037292,393.576538 438.826660,394.294189   C435.298920,395.926025 434.248169,401.910126 428.979187,399.261322   C428.692719,400.133209 428.406250,401.005096 428.059082,401.934448   C427.998352,401.991852 427.866394,402.094482 427.531555,402.144135   C426.276215,403.812225 425.355743,405.430664 425.173828,405.750519   C423.203522,406.081116 421.898224,405.935394 421.111450,406.505371   C419.276611,407.834717 417.691132,409.508209 415.860107,410.739899   C414.323608,410.006317 412.945465,409.290436 411.535828,409.221832   C410.047791,409.149384 408.529724,409.694275 406.968018,409.811798   C406.806000,409.604156 406.700806,409.554169 406.595581,409.504181   C406.721466,409.676575 406.847351,409.848999 406.935120,410.365356   C404.928864,410.803772 402.960724,410.898224 400.992615,410.992676   C400.992615,410.992676 400.994263,410.983795 401.126526,410.689392   C401.502350,409.594269 401.745941,408.793549 401.994141,407.996399   C401.998779,408.000000 401.997253,407.989502 402.302643,407.992920   C403.073822,407.660889 403.539612,407.325439 404.002808,406.994995   C404.000183,407.000000 403.989288,407.001587 404.326691,406.967316   C405.100800,406.028259 405.537506,405.123474 405.974182,404.218628  z\",id:\"svg_1881\"})),_path1880||(_path1880=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M438.984131,391.983154   C436.283264,390.855377 434.677155,391.701813 432.444305,393.848511   C428.670410,397.476807 423.961090,400.156372 419.508881,403.023254   C418.971436,403.369293 417.589783,402.404236 416.285858,402.017639   C417.867798,400.683868 419.861359,399.496887 421.620575,398.029022   C422.619110,397.195862 423.233795,395.902740 424.096863,394.450439   C424.721436,394.001740 425.270508,393.919464 426.276031,393.402466   C434.338959,389.025146 439.402802,382.396515 444.672546,375.985352   C443.718781,378.562103 442.785645,381.146759 441.800873,383.711578   C441.428772,384.680756 440.937500,385.604156 440.740173,386.745941   C440.976471,387.706512 440.973114,388.469604 440.643799,389.657806   C439.873260,390.716339 439.428711,391.349731 438.984131,391.983154  z\",id:\"svg_1882\"})),_path1881||(_path1881=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M331.982117,362.009491   C333.994354,359.883911 333.982605,359.832092 330.688934,356.301819   C333.347961,353.913422 335.023926,341.611206 333.030701,338.304688   C334.149597,335.604004 335.194550,333.173065 336.577759,330.952850   C337.129639,330.066956 338.428589,329.646484 339.766663,329.041962   C340.023102,330.427795 339.900391,331.785858 339.369171,333.626831   C338.139862,335.999908 334.648193,337.328033 337.713593,340.035980   C337.743866,341.083801 337.774139,342.131653 337.388733,343.648804   C337.574615,347.443573 333.884766,350.803986 337.054474,354.108459   C337.568085,358.297821 338.081665,362.487213 338.307190,366.841095   C336.238861,366.003052 334.458618,365.000488 332.330994,363.660431   C331.983124,362.885132 331.982635,362.447296 331.982117,362.009491  z\",id:\"svg_1883\"})),_path1882||(_path1882=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M360.252136,397.286560   C360.706879,396.943909 361.306244,396.872223 362.359833,396.699646   C365.307922,398.058289 367.801758,399.517914 370.672180,401.002838   C368.103333,405.236420 364.425934,404.615723 361.725220,399.480286   C361.365234,398.795807 360.843567,398.196350 360.252136,397.286560  z\",id:\"svg_1884\"})),_path1883||(_path1883=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M337.378510,353.837585   C333.884766,350.803986 337.574615,347.443573 337.270599,344.028870   C337.612976,347.148621 337.657776,350.357635 337.378510,353.837585  z\",id:\"svg_1885\"})),_path1884||(_path1884=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M399.010437,407.988770   C398.993591,407.090790 398.968414,406.199585 398.888397,404.985504   C400.292511,404.491608 401.751526,404.320587 403.623383,404.558838   C404.020599,405.645905 404.004944,406.323761 403.989288,407.001587   C403.989288,407.001587 404.000183,407.000000 403.695557,406.997986   C402.926392,407.327148 402.461823,407.658325 401.997253,407.989502   C401.997253,407.989502 401.998779,408.000000 401.622314,407.984985   C400.501984,407.974152 399.758087,407.978333 399.014221,407.982544   C399.014221,407.982544 399.002136,407.995575 399.010437,407.988770  z\",id:\"svg_1886\"})),_path1885||(_path1885=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M337.921265,339.733582   C334.648193,337.328033 338.139862,335.999908 339.266815,334.023560   C339.091614,335.768646 338.610291,337.599945 337.921265,339.733582  z\",id:\"svg_1887\"})),_path1886||(_path1886=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M395.694763,404.302094   C395.957825,405.203796 395.800323,406.048859 395.642822,406.893890   C394.446899,406.272705 393.250946,405.651550 391.975037,404.716705   C393.021423,404.350494 394.147827,404.297974 395.694763,404.302094  z\",id:\"svg_1888\"})),_path1887||(_path1887=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M382.868042,403.905884   C382.894073,404.506134 382.721252,404.731537 382.238647,404.953979   C381.370697,404.731689 380.708008,404.432281 379.853210,403.800812   C380.698639,403.516205 381.736176,403.563690 382.868042,403.905884  z\",id:\"svg_1889\"})),_path1888||(_path1888=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M389.639893,404.242615   C389.527466,405.202606 389.029572,406.062683 388.531677,406.922791   C388.007050,406.264191 387.482422,405.605591 386.929291,404.639679   C387.685333,404.269196 388.469849,404.205963 389.639893,404.242615  z\",id:\"svg_1890\"})),_path1889||(_path1889=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M404.326691,406.967316   C404.004944,406.323761 404.020599,405.645905 404.059753,404.631439   C404.502869,404.238251 404.922485,404.181671 405.658142,404.171875   C405.537506,405.123474 405.100800,406.028259 404.326691,406.967316  z\",id:\"svg_1891\"})),_path1890||(_path1890=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B47E55\",opacity:1,stroke:\"none\",d:\" M415.655579,401.968872   C415.532104,402.620209 415.071167,403.264771 414.285095,403.946014   C414.412689,403.309143 414.865417,402.635620 415.655579,401.968872  z\",id:\"svg_1892\"})),_path1891||(_path1891=/*#__PURE__*/React.createElement(\"path\",{fill:\"#996E52\",opacity:1,stroke:\"none\",d:\" M408.763397,404.076294   C408.820709,404.553192 408.627075,404.940979 408.433411,405.328766   C408.294250,405.060852 408.155060,404.792938 407.999054,404.281555   C408.158936,404.021088 408.335663,404.004120 408.763397,404.076294  z\",id:\"svg_1893\"})),_path1892||(_path1892=/*#__PURE__*/React.createElement(\"path\",{fill:\"#22201E\",opacity:1,stroke:\"none\",d:\" M373.000000,316.975464   C371.578979,316.586731 370.159607,315.903046 368.736542,315.895233   C367.410278,315.888000 366.080109,316.599701 364.360474,316.991638   C363.721680,316.181580 363.474060,315.374786 363.517517,314.278931   C368.186920,313.713013 372.565247,313.436127 378.203125,313.079620   C374.879852,312.188416 372.593933,311.695129 370.402924,310.930084   C369.500793,310.615112 368.802795,309.715607 368.306976,308.978088   C369.058350,308.286530 369.514679,307.698883 370.344177,307.069611   C374.695312,306.079071 378.673279,305.130127 382.917725,304.072144   C383.444244,303.690887 383.704285,303.418701 384.301147,303.073273   C385.095886,303.025146 385.553772,303.050232 386.073273,303.446411   C390.103851,303.511536 394.072784,303.205658 398.464325,302.818024   C400.599396,302.849304 402.311890,302.962372 404.153442,303.298737   C404.842499,303.390472 405.402496,303.258881 406.310242,303.088074   C407.060272,303.512878 407.462555,303.976837 407.549316,304.624939   C407.358887,305.436005 407.266541,306.294586 407.645874,306.650726   C409.530029,308.419708 411.538483,310.056274 413.638519,311.855438   C414.900177,311.642609 417.149811,310.533997 418.771851,311.130890   C423.059387,312.708679 427.075043,315.025330 431.696960,317.292145   C431.844543,314.895264 431.933929,313.443359 432.023346,311.991455   C437.232269,317.817078 443.004822,323.265594 444.589600,331.648071   C441.094757,333.380463 437.900116,335.176361 435.687225,330.581329   C435.499023,330.190582 434.497253,330.126343 433.855469,330.029907   C429.461456,329.369232 425.073975,328.616516 420.655273,328.211365   C419.823090,328.135040 418.860199,329.484558 417.626678,330.145386   C416.863281,330.026123 416.430817,329.937653 415.996460,329.459290   C416.325836,324.631317 412.802124,324.646637 410.012726,324.088135   C404.159546,322.916107 397.612610,323.209808 392.550781,320.586090   C386.090454,317.237457 379.400452,318.590149 373.000000,316.975464  M429.591431,319.516296   C429.591431,319.516296 429.477936,319.583893 429.591431,319.516296  M402.481995,305.603485   C402.481995,305.603485 402.399841,305.470459 402.481995,305.603485  z\",id:\"svg_1894\"})),_path1893||(_path1893=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B9B5B0\",opacity:1,stroke:\"none\",d:\" M382.651215,304.181213   C378.673279,305.130127 374.695312,306.079071 370.207855,306.796509   C369.352570,306.364655 369.006805,306.164246 368.661041,305.963867   C371.187653,304.211487 373.483521,301.650909 376.282318,300.851776   C386.391876,297.965240 396.578461,296.444244 407.143219,299.536255   C413.880554,301.508087 420.279785,303.708832 425.519409,308.506470   C425.921204,308.874359 425.972931,309.624573 425.709106,310.540344   C419.442169,308.735992 413.653534,306.588409 407.864868,304.440796   C407.462555,303.976837 407.060272,303.512878 405.990417,303.022552   C404.889984,303.022583 404.457184,303.048981 404.024353,303.075409   C402.311890,302.962372 400.599396,302.849304 398.008362,302.721863   C393.423706,302.830078 389.717682,302.952698 386.011627,303.075348   C385.553772,303.050232 385.095886,303.025146 384.012695,303.031555   C382.999939,303.206573 382.612488,303.350098 382.225037,303.493652   C382.367096,303.722839 382.509155,303.952026 382.651215,304.181213  z\",id:\"svg_1895\"})),_path1894||(_path1894=/*#__PURE__*/React.createElement(\"path\",{fill:\"#341D0D\",opacity:1,stroke:\"none\",d:\" M444.710022,375.648438   C439.402802,382.396515 434.338959,389.025146 426.434937,393.164429   C426.093018,391.547089 426.048615,389.733124 426.009308,387.217072   C426.018951,386.344971 426.023529,386.174927 426.028076,386.004883   C427.331146,385.561584 428.634186,385.118286 430.236511,384.156738   C432.020599,382.756256 433.505432,381.874115 435.335510,380.943665   C436.123352,379.935760 436.565918,378.976166 437.006042,378.008606   C437.003632,378.000641 437.020630,378.006683 437.386688,377.960785   C438.826202,376.010834 440.293243,374.220978 440.886047,372.177490   C441.919983,368.613464 441.171600,363.537842 443.383728,361.507690   C448.750305,356.582611 446.568573,350.879913 446.976654,345.401917   C447.193878,342.485596 447.563843,339.380524 444.149384,337.631531   C445.553284,335.889771 446.785767,334.450928 448.018250,333.012054   C448.018250,333.012054 448.435059,333.008331 448.643402,333.006531   C449.519806,340.022614 450.187866,347.040527 450.790253,354.522644   C450.423920,355.087952 449.898621,355.130707 449.855072,355.298523   C448.125336,361.962463 446.439209,368.637695 444.710022,375.648438  z\",id:\"svg_1896\"})),_path1895||(_path1895=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M447.680237,333.002350   C446.785767,334.450928 445.553284,335.889771 443.745575,337.652405   C440.215607,337.112335 437.303497,335.842743 434.291199,335.526001   C432.253967,335.311798 430.075714,336.438812 427.590057,336.972229   C426.478485,336.984497 425.737396,336.990417 424.998169,336.998169   C425.000000,337.000000 425.003296,337.002228 424.958618,336.677612   C424.116333,335.475861 423.318787,334.598755 422.862579,334.097046   C421.846283,336.165039 420.919769,338.050446 419.915619,339.525024   C419.211212,336.134888 418.584412,333.155518 417.957642,330.176147   C418.860199,329.484558 419.823090,328.135040 420.655273,328.211365   C425.073975,328.616516 429.461456,329.369232 433.855469,330.029907   C434.497253,330.126343 435.499023,330.190582 435.687225,330.581329   C437.900116,335.176361 441.094757,333.380463 444.625000,332.015320   C445.783142,332.344788 446.562683,332.668701 447.680237,333.002350  M426.519165,331.410217   C426.519165,331.410217 426.583160,331.518250 426.519165,331.410217  z\",id:\"svg_1897\"})),_path1896||(_path1896=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M407.549316,304.624939   C413.653534,306.588409 419.442169,308.735992 425.612000,310.912170   C426.458740,311.549957 426.912170,312.660004 427.392181,312.671600   C428.674591,312.702606 429.968414,312.261963 431.640533,312.000122   C431.933929,313.443359 431.844543,314.895264 431.696960,317.292145   C427.075043,315.025330 423.059387,312.708679 418.771851,311.130890   C417.149811,310.533997 414.900177,311.642609 413.638519,311.855438   C411.538483,310.056274 409.530029,308.419708 407.645874,306.650726   C407.266541,306.294586 407.358887,305.436005 407.549316,304.624939  z\",id:\"svg_1898\"})),_path1897||(_path1897=/*#__PURE__*/React.createElement(\"path\",{fill:\"#2A2626\",opacity:1,stroke:\"none\",d:\" M368.011932,309.081970   C368.802795,309.715607 369.500793,310.615112 370.402924,310.930084   C372.593933,311.695129 374.879852,312.188416 378.203125,313.079620   C372.565247,313.436127 368.186920,313.713013 363.401001,313.978912   C362.361053,313.103180 361.728729,312.238403 361.482117,311.117920   C363.915833,310.268829 365.963898,309.675385 368.011932,309.081970  z\",id:\"svg_1899\"})),_path1898||(_path1898=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A17B5F\",opacity:1,stroke:\"none\",d:\" M368.306976,308.978088   C365.963898,309.675385 363.915833,310.268829 361.491821,310.782623   C362.212585,307.437408 364.308319,305.557281 368.294617,305.877380   C369.006805,306.164246 369.352570,306.364655 369.834656,306.838135   C369.514679,307.698883 369.058350,308.286530 368.306976,308.978088  z\",id:\"svg_1900\"})),_path1899||(_path1899=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M331.015900,315.015442   C330.995453,315.679626 330.959381,316.328552 330.923309,316.977478   C330.648895,316.941986 330.374481,316.906494 330.100067,316.870972   C330.208527,316.252899 330.316956,315.634796 330.697327,314.993011   C330.969269,314.969299 331.000275,315.000153 331.015900,315.015442  z\",id:\"svg_1901\"})),_path1900||(_path1900=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M331.690186,361.882812   C331.982635,362.447296 331.983124,362.885132 331.960815,363.650330   C330.318634,365.049713 328.699219,366.121735 327.079834,367.193726   C326.907806,366.956116 326.735809,366.718475 326.563782,366.480865   C327.374023,364.901428 328.184265,363.322021 328.997253,361.371277   C329.000000,361.000000 329.002441,360.997559 329.002441,360.997559   C329.801025,361.250397 330.599640,361.503235 331.690186,361.882812  z\",id:\"svg_1902\"})),_path1901||(_path1901=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M327.990265,358.978210   C328.317139,359.449585 328.644043,359.920990 328.986694,360.694946   C329.002441,360.997559 329.000000,361.000000 328.998657,361.001465   C328.177094,360.455414 327.356903,359.907928 327.020203,359.179504   C327.503693,358.998596 327.990265,358.978210 327.990265,358.978210  z\",id:\"svg_1903\"})),_path1902||(_path1902=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M328.086304,358.734375   C327.990265,358.978210 327.503693,358.998596 327.260681,358.986298   C327.372864,358.430603 327.728027,357.887238 328.083191,357.343872   C328.116241,357.726074 328.149292,358.108307 328.086304,358.734375  z\",id:\"svg_1904\"})),_path1903||(_path1903=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M389.098114,442.083832   C388.633118,442.061035 388.168121,442.038208 387.373749,441.711121   C387.365509,440.936432 387.686646,440.466034 388.227722,439.883545   C388.724701,439.562195 388.894135,439.286774 388.990479,438.587830   C392.065063,435.138611 395.105164,432.046692 398.152313,428.947571   C396.173920,426.071503 394.086334,423.036682 391.998749,420.001892   C391.998749,420.001892 392.000000,420.000000 392.351746,420.009003   C394.048004,420.406219 395.375671,421.047028 396.739990,421.137726   C401.932800,421.483124 405.525452,424.500244 406.584900,429.993713   C404.805878,431.329346 403.372925,432.613953 402.996155,432.951691   C402.996155,436.687073 402.996155,439.194946 402.996155,441.914307   C403.504364,441.648346 404.552795,441.449280 404.711975,440.960571   C405.892059,437.338104 406.895264,433.658051 408.318604,429.957764   C410.353668,428.980560 412.024200,428.041687 412.979065,427.505005   C415.906464,429.486359 418.449280,431.207428 421.005859,433.285187   C422.925507,438.093567 424.632751,434.115021 426.395508,433.522736   C427.028687,434.370239 427.665985,435.223328 428.452850,436.276550   C429.757172,435.065796 430.789246,434.107727 430.964233,433.945312   C434.486877,435.158630 437.678955,437.433807 439.854858,436.699188   C442.370697,435.849792 443.991730,432.350189 446.369934,429.993225   C448.196869,429.001038 449.655121,428.016785 451.103027,427.397003   C454.217133,430.600494 457.341583,433.439514 460.466064,436.278534   C460.880463,436.037109 461.294861,435.795715 461.709229,435.554291   C461.082275,434.088104 460.455292,432.621948 459.877350,430.866272   C459.951324,430.382568 459.976288,430.188416 460.348816,429.945038   C461.098999,428.927643 461.501648,427.959473 462.274139,426.991425   C463.408905,427.439423 464.707520,427.762939 464.845825,428.356720   C465.427155,430.852936 465.661743,433.429962 465.808472,436.250000   C464.777374,438.115295 463.961060,439.707947 463.039337,441.506348   C462.630859,441.374817 461.188232,440.372559 460.060028,440.649811   C456.919678,441.421600 453.909851,442.724487 452.260590,443.313385   C450.825775,445.397156 449.946716,446.673767 449.006104,447.606567   C447.108002,447.262726 445.271484,447.262726 443.335419,447.262726   C445.379791,444.921814 447.383942,442.626923 449.388123,440.332001   C448.999664,439.985687 448.611176,439.639374 448.222717,439.293060   C447.189758,440.138489 446.156799,440.983887 445.478485,441.539032   C443.997437,440.623016 442.888367,439.937073 441.779297,439.251099   C441.200287,440.485992 440.621246,441.720856 440.023987,442.975342   C440.005768,442.994965 439.972137,443.036652 439.615173,443.056641   C436.510895,445.224213 433.763580,447.371796 430.887054,449.620361   C432.870117,453.148804 437.887756,455.824829 433.027740,460.142517   C430.023315,457.340576 427.018890,454.538635 424.315430,451.492035   C425.398621,450.854309 426.863281,450.438995 426.851349,450.071777   C426.778839,447.845917 426.369385,445.630981 425.992249,442.812653   C424.483215,444.460571 423.145691,445.921143 421.961304,447.214539   C422.795685,448.765106 423.395996,449.880737 423.996338,450.996338   C418.783966,454.495270 413.260193,453.325684 407.365295,452.040283   C406.999146,451.999298 406.972687,451.973419 406.972656,451.973419   C407.296967,450.874390 407.621277,449.775360 408.296814,448.333191   C411.267090,444.799591 407.339294,445.011719 407.276398,443.215149   C406.809235,443.457550 406.342102,443.699982 405.874939,443.942413   C406.587311,445.292511 407.299683,446.642609 408.012054,447.992676   C406.239136,447.335907 404.466217,446.679108 402.220306,445.768951   C401.539825,445.255615 401.276703,445.077972 400.945190,444.654114   C400.294434,443.881683 399.656433,443.437775 398.995117,442.582367   C397.933167,441.118469 396.681824,439.042236 395.895752,439.205566   C393.532562,439.696533 391.350708,441.060455 389.098114,442.083832  M463.614014,431.520264   C463.614014,431.520264 463.444672,431.423248 463.444672,431.423248   C463.444672,431.423248 463.468323,431.613220 463.614014,431.520264  z\",id:\"svg_1905\"})),_path1904||(_path1904=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M405.922485,492.980164   C404.131439,493.438782 402.340424,493.897430 400.099548,494.471283   C398.566925,493.107635 396.648224,491.400452 394.076263,489.112091   C392.462494,490.805969 390.779999,492.571960 389.049011,494.668518   C389.000519,494.999054 389.004852,494.990601 388.679932,495.132446   C386.750397,495.808197 385.145782,496.342102 382.824463,497.114471   C384.134796,498.719757 385.069733,499.865143 386.002380,501.005493   C386.000122,501.000458 385.991821,500.989227 385.991821,500.989227   C383.911072,501.240051 381.830353,501.490875 379.074280,501.846436   C376.918365,500.909210 375.437805,499.867279 374.136108,498.559814   C374.563080,497.488220 374.811218,496.682159 375.059357,495.876099   C372.841248,493.737457 370.623108,491.598816 368.695160,489.739929   C366.929230,490.557861 365.354034,491.287476 363.400574,491.584839   C363.064819,489.466492 363.107361,487.780426 363.532959,486.071289   C364.939453,486.038330 365.962860,486.028442 367.340515,485.965179   C368.143494,484.922363 368.592194,483.932892 368.949463,482.707794   C369.205872,482.016296 369.553711,481.560425 370.116821,481.367615   C372.212494,483.366852 373.994263,485.233887 376.028076,486.766479   C376.718109,487.286499 378.044342,486.962311 379.079834,487.023865   C381.099335,487.559998 383.118805,488.096130 385.789307,488.805084   C385.154480,487.794861 384.757507,487.163116 384.560730,486.262329   C386.644073,485.297821 388.527222,484.602417 390.695892,483.801605   C392.969727,487.981018 395.379700,485.696808 396.945587,483.630463   C399.903717,485.602814 402.453064,487.302643 405.001221,489.001221   C405.000000,489.000000 404.997559,488.997559 405.039856,489.339142   C405.362274,490.780548 405.642395,491.880341 405.922485,492.980164  M379.596619,492.734253   C380.229980,491.708588 380.863312,490.682953 381.496674,489.657288   C381.018463,489.475128 380.540253,489.292969 380.062073,489.110809   C379.699524,490.398285 379.336975,491.685791 378.299530,492.950104   C377.872070,493.691284 377.444580,494.432465 376.741486,495.716492   C377.086182,496.646912 377.430847,497.577301 377.775513,498.507721   C378.128021,498.397064 378.480499,498.286407 378.833008,498.175781   C378.882721,497.096741 378.932465,496.017731 379.008392,494.300598   C379.013489,493.874756 379.018585,493.448914 379.596619,492.734253  M380.590942,496.516388   C380.590942,496.516388 380.476990,496.585571 380.590942,496.516388  z\",id:\"svg_1906\"})),_path1905||(_path1905=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M405.002441,489.002441   C402.453064,487.302643 399.903717,485.602814 396.945587,483.630463   C395.379700,485.696808 392.969727,487.981018 390.695892,483.801605   C388.527222,484.602417 386.644073,485.297821 384.379822,486.000366   C383.465607,484.447479 382.932434,482.887482 382.260895,480.922638   C385.115112,480.102478 384.222046,473.954315 389.652069,476.285370   C390.948486,479.030151 391.268860,482.805237 395.323578,481.326385   C396.852814,480.768646 397.761292,478.508759 398.952759,477.024811   C400.067474,476.679535 401.182220,476.334259 403.072632,475.999146   C406.036377,476.128937 408.321869,476.385620 408.038727,473.029785   C408.038727,473.029785 407.999146,473.000854 408.261597,473.028809   C408.524048,473.056763 409.018036,473.032074 409.018036,473.032074   C409.448517,473.025238 409.878998,473.018372 410.659058,473.368286   C411.651978,474.655212 412.295349,475.585388 412.938721,476.515564   C413.654114,475.363556 414.369568,474.211548 415.084991,473.059540   C415.852203,474.301361 416.619415,475.543213 417.760468,477.390076   C417.712341,477.390076 418.935516,477.380707 420.157928,477.407196   C420.260010,477.409424 420.356873,477.653229 420.494263,477.835297   C416.019165,482.623291 411.537079,487.418732 407.038605,492.590607   C406.839264,492.975800 406.656342,492.984589 406.197937,492.986755   C405.642395,491.880341 405.362274,490.780548 405.411194,489.328369   C406.400970,488.324005 407.061768,487.672028 407.722534,487.020050   C407.213013,486.743347 406.703461,486.466644 406.193970,486.189941   C405.796783,487.127441 405.399628,488.064941 405.002441,489.002441  z\",id:\"svg_1907\"})),_path1906||(_path1906=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M451.961456,478.973267   C450.504303,478.269012 449.047180,477.564758 447.204498,476.674194   C446.693085,477.114685 445.625305,478.034393 444.236206,478.612244   C443.109802,477.556885 442.300934,476.234833 441.500214,476.239716   C438.675079,476.256927 435.852661,476.728943 433.029236,477.028442   C432.944000,475.824219 432.820770,474.621124 432.783478,473.415436   C432.740509,472.025635 432.773468,470.633514 432.773468,468.507751   C432.391449,468.636719 431.115021,468.850586 430.082947,469.470917   C428.799438,470.242401 427.717834,471.349731 426.549042,472.312042   C426.136108,471.931885 425.723175,471.551697 425.310211,471.171539   C427.890198,468.071594 430.470184,464.971619 433.403137,461.451813   C435.502014,462.016815 437.247925,463.001678 439.329285,464.040802   C443.779327,468.080811 447.893982,472.066620 452.005157,476.417847   C451.988312,477.513306 451.974884,478.243286 451.961456,478.973267  z\",id:\"svg_1908\"})),_path1907||(_path1907=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M379.045776,486.658386   C378.044342,486.962311 376.718109,487.286499 376.028076,486.766479   C373.994263,485.233887 372.212494,483.366852 369.954773,481.058380   C368.071198,480.272797 366.542389,480.157837 365.065125,479.818390   C363.612000,479.484497 362.211243,478.922760 360.787537,478.461029   C361.269989,477.218018 361.752441,475.975006 361.884827,475.633911   C361.140778,473.411774 360.569763,471.706512 360.000793,469.999207   C360.002777,469.997223 360.015076,469.985199 360.015076,469.985199   C361.803314,470.644836 363.591522,471.304443 366.458344,472.361938   C367.348969,471.339996 368.963470,469.487457 371.578644,466.486694   C372.887939,469.070496 373.940369,471.147461 374.699402,473.639801   C374.111511,474.471008 373.816986,474.886841 373.522522,475.302673   C373.787537,475.396790 374.261169,475.609833 374.285706,475.566803   C374.567993,475.071869 374.782104,474.538025 375.014374,474.014557   C376.222076,473.800842 377.429810,473.587158 379.963257,473.138855   C378.443237,475.389069 377.619263,476.608856 376.711700,477.952362   C378.840332,479.615417 380.908722,481.460999 376.559540,482.589447   C377.520294,484.040436 378.266022,485.166656 379.045776,486.658386  M364.613220,477.523071   C364.613220,477.523071 364.477814,477.610138 364.613220,477.523071  z\",id:\"svg_1909\"})),_path1908||(_path1908=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M438.993835,463.986572   C437.247925,463.001678 435.502014,462.016815 433.409912,461.083435   C433.063751,461.134888 433.028656,460.637756 433.028198,460.390137   C437.887756,455.824829 432.870117,453.148804 430.887054,449.620361   C433.763580,447.371796 436.510895,445.224213 439.754639,443.340515   C440.949860,443.951111 441.648621,444.297821 442.347351,444.644531   C442.467163,444.318970 442.586975,443.993439 442.706787,443.667877   C441.818604,443.430511 440.930420,443.193146 440.042236,442.955750   C440.621246,441.720856 441.200287,440.485992 441.779297,439.251099   C442.888367,439.937073 443.997437,440.623016 445.478485,441.539032   C446.156799,440.983887 447.189758,440.138489 448.222717,439.293060   C448.611176,439.639374 448.999664,439.985687 449.388123,440.332001   C447.383942,442.626923 445.379791,444.921814 443.335419,447.262726   C445.271484,447.262726 447.108002,447.262726 448.974823,447.851501   C449.005127,448.440247 448.968567,448.931427 448.610901,448.986328   C446.022491,450.464111 443.791748,451.886932 441.304657,453.473297   C439.563538,452.108948 437.443726,450.447815 435.323883,448.786713   C435.685059,451.031250 436.619965,452.826660 438.066467,453.980957   C440.045837,455.560516 440.664886,456.788452 438.619568,458.735901   C438.310211,459.030457 438.863251,460.230835 439.021484,461.384216   C439.014984,462.499664 439.004425,463.243103 438.993835,463.986572  z\",id:\"svg_1910\"})),_path1909||(_path1909=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M474.997314,498.002747   C473.681152,500.085022 472.365021,502.167297 471.025269,504.622864   C471.001709,504.996155 471.022217,504.998413 470.696594,505.026794   C469.918549,505.700531 469.466095,506.345825 468.689941,506.953674   C467.912506,506.272400 467.458771,505.628601 467.255676,504.786133   C467.415039,503.886871 467.323792,503.186340 467.232544,502.485779   C463.992523,505.816803 461.138184,501.277649 458.017273,501.777527   C458.006836,501.349182 458.003418,501.177856 458.000000,501.006500   C459.571869,499.221436 461.143707,497.436340 463.110413,495.316772   C463.505249,494.982239 463.989899,494.968262 464.147369,495.217804   C464.846924,495.662994 465.388977,495.858643 465.970062,496.338806   C466.077667,496.770508 466.113678,496.953705 466.224609,497.054108   C466.321899,497.142151 466.614838,497.196808 466.631714,497.165161   C468.072876,494.460419 469.520599,494.135254 471.568146,496.757538   C472.202423,497.569855 473.826416,497.609375 474.997314,498.002747  z\",id:\"svg_1911\"})),_path1910||(_path1910=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M442.965820,480.787048   C443.000092,481.940887 443.034363,483.094727 443.080170,485.040344   C442.690765,487.197052 442.289856,488.562042 441.888977,489.927002   C440.707916,490.513977 439.526855,491.100922 438.515045,491.603760   C436.526093,491.240509 434.388611,490.850128 431.815887,490.380249   C433.471680,488.254974 435.188965,486.050751 436.906219,483.846558   C436.471100,483.485046 436.035950,483.123535 435.600830,482.762024   C434.279999,483.817291 432.959167,484.872559 431.311005,485.562134   C430.993286,484.126862 431.002899,483.057343 431.006775,481.993347   C431.001099,481.998932 430.988403,482.011292 431.361389,482.010559   C433.001770,481.380096 434.269165,480.750366 435.536530,480.120636   C435.628418,480.489563 435.720337,480.858459 435.812225,481.227386   C438.196747,481.080597 440.581268,480.933838 442.965820,480.787048  z\",id:\"svg_1912\"})),_path1911||(_path1911=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M457.637024,501.000000   C458.003418,501.177856 458.006836,501.349182 458.003784,502.145538   C458.006439,503.508301 458.015564,504.246033 457.763733,505.147491   C457.245819,506.843414 456.988892,508.375671 456.829041,509.328888   C452.627319,507.909119 448.309204,506.450043 443.995117,504.994995   C443.999146,504.999054 444.008789,505.008850 444.008789,505.008850   C445.192474,503.026642 446.376160,501.044464 447.559845,499.062256   C448.789185,499.905457 450.018524,500.748688 451.627838,501.852509   C452.240234,501.194366 453.040070,500.334747 453.826508,499.489563   C454.974243,499.990234 456.124146,500.491882 457.637024,501.000000  z\",id:\"svg_1913\"})),_path1912||(_path1912=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M463.989929,494.968262   C463.989899,494.968262 463.505249,494.982239 463.264343,495.007477   C462.727295,494.668671 462.106079,494.084717 462.182098,493.972321   C464.706909,490.239166 462.928986,487.949615 459.721680,485.946777   C459.220123,485.633545 459.230499,484.500549 459.009857,483.365692   C459.015564,482.984772 459.033295,482.967377 459.361084,482.987122   C460.788727,483.687164 461.888641,484.367493 463.145752,485.338501   C464.867859,486.751953 466.432709,487.874756 467.998779,488.998779   C468.000000,489.000000 468.002960,489.002441 468.014893,489.386414   C468.693176,492.841064 469.996765,492.662170 471.960663,490.696594   C472.750244,489.906281 473.993896,489.569641 475.029602,489.378845   C475.685150,490.487946 476.342102,491.244720 476.999512,492.000763   C477.000000,492.000000 476.998413,492.001038 477.032959,492.330078   C477.116089,493.097504 477.164734,493.535919 477.146667,494.236145   C477.057220,494.676270 477.034485,494.854553 476.694519,494.894440   C475.150787,494.168335 473.924347,493.580658 472.697906,492.992950   C472.444702,493.348755 472.191528,493.704529 471.938354,494.060333   C472.959503,495.372711 473.980621,496.685120 475.001770,497.997498   C475.001770,497.997498 475.000000,498.000000 474.998657,498.001343   C473.826416,497.609375 472.202423,497.569855 471.568146,496.757538   C469.520599,494.135254 468.072876,494.460419 466.631714,497.165161   C466.614838,497.196808 466.321899,497.142151 466.224609,497.054108   C466.113678,496.953705 466.077667,496.770508 465.997375,496.015564   C466.009460,494.977234 466.033234,494.546692 466.220001,493.938232   C465.903381,493.498566 465.423706,493.236755 464.710114,493.149353   C464.314087,493.871948 464.152008,494.420105 463.989929,494.968262  z\",id:\"svg_1914\"})),_path1913||(_path1913=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M433.937622,503.936218   C432.893219,503.958710 431.848785,503.981232 430.413300,504.002502   C431.411530,499.317139 435.004059,498.149597 438.449890,501.194031   C439.976715,502.542938 441.654907,503.720520 443.636597,504.992371   C444.008789,505.008850 443.999146,504.999054 443.990570,505.392303   C443.982727,506.579681 443.983490,507.373779 443.624939,508.082886   C441.849152,507.659851 440.432709,507.321869 439.010590,506.732849   C438.873444,506.197144 438.741974,505.912476 438.610535,505.627747   C438.481720,505.723206 438.234070,505.891541 438.241455,505.903534   C438.473724,506.282166 438.730774,506.645660 438.984436,507.353943   C437.995422,512.393311 436.234558,506.606995 435.001251,507.989594   C434.700653,506.910339 434.400024,505.831085 434.422119,504.389709   C435.344177,503.683502 435.943542,503.339417 436.542908,502.995331   C436.242279,502.717804 435.708527,502.173553 435.675598,502.202332   C435.060760,502.739655 434.505463,503.345093 433.937622,503.936218  z\",id:\"svg_1915\"})),_path1914||(_path1914=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M350.990845,473.000977   C352.063965,472.338959 353.152466,471.675049 354.808563,470.881470   C355.582001,470.497101 355.787842,470.242432 355.993652,469.987793   C355.993652,469.987793 356.015808,469.496063 356.007629,469.247803   C355.999451,468.999512 356.003876,469.015503 356.003845,469.015503   C356.815399,468.430389 357.626953,467.845306 358.696320,467.070374   C359.306366,467.684418 359.658600,468.488312 360.012939,469.638702   C360.015076,469.985199 360.002777,469.997223 359.634766,470.008850   C358.141541,471.924133 355.643951,474.367432 356.141571,475.632935   C357.809082,479.873322 355.152954,481.411652 352.461304,483.971039   C351.852478,482.328308 351.418365,481.157074 350.984283,479.985840   C350.984283,479.985840 351.000000,480.000000 351.335205,479.960571   C352.322754,479.342224 352.975037,478.763275 353.627319,478.184326   C352.746704,477.793762 351.866089,477.403198 350.985474,477.012665   C350.985474,477.012665 350.992462,477.001465 350.996887,476.599274   C351.002258,475.121246 351.003204,474.045380 351.004150,472.969543   C351.004150,472.969543 351.006226,472.999084 350.990845,473.000977  z\",id:\"svg_1916\"})),_path1915||(_path1915=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M389.072632,442.470032   C391.350708,441.060455 393.532562,439.696533 395.895752,439.205566   C396.681824,439.042236 397.933167,441.118469 398.753448,442.579285   C398.535095,442.987762 398.052307,442.980469 397.688110,442.986633   C395.875305,444.656372 394.426727,446.319885 392.978088,447.983398   C392.978088,447.983398 393.000000,448.000000 392.626465,447.995422   C391.525391,448.016144 390.797882,448.041412 390.070374,448.066711   C390.070374,448.066711 389.632751,448.010559 389.362091,447.663330   C389.071442,446.866241 389.051453,446.416443 389.031433,445.966614   C389.036682,444.929840 389.041901,443.893036 389.072632,442.470032  z\",id:\"svg_1917\"})),_path1916||(_path1916=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M442.994507,480.525635   C440.581268,480.933838 438.196747,481.080597 435.812225,481.227386   C435.720337,480.858459 435.628418,480.489563 435.536530,480.120636   C434.269165,480.750366 433.001770,481.380096 431.388733,481.664795   C431.701294,479.889404 432.359528,478.459106 433.017761,477.028778   C433.017761,477.028778 433.008636,477.011475 433.018921,477.019958   C435.852661,476.728943 438.675079,476.256927 441.500214,476.239716   C442.300934,476.234833 443.109802,477.556885 443.905640,478.645416   C443.605316,479.435028 443.314270,479.849609 442.994507,480.525635  z\",id:\"svg_1918\"})),_path1917||(_path1917=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M432.700806,476.884216   C432.359528,478.459106 431.701294,479.889404 431.015747,481.665527   C430.988403,482.011292 431.001099,481.998932 430.631836,482.000092   C429.513611,482.009125 428.764618,482.016998 428.015625,482.024872   C428.015625,482.024872 427.609344,481.973022 427.318420,481.611023   C426.020020,480.854553 425.012573,480.460114 424.005127,480.065674   C425.541504,477.885010 427.077911,475.704315 428.744537,473.338776   C429.954132,474.469116 431.168976,475.604401 432.700806,476.884216  z\",id:\"svg_1919\"})),_path1918||(_path1918=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M398.581024,477.009552   C397.761292,478.508759 396.852814,480.768646 395.323578,481.326385   C391.268860,482.805237 390.948486,479.030151 390.017334,476.293457   C392.870392,476.346100 395.539825,476.670197 398.581024,477.009552  z\",id:\"svg_1920\"})),_path1919||(_path1919=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M419.002319,500.002197   C419.834473,497.604980 420.664337,495.205566 421.848785,491.780945   C423.271393,495.769714 424.079041,498.034180 424.832611,500.874176   C424.575348,501.719849 424.312012,501.904083 423.616913,501.990845   C422.501495,501.959259 421.757751,501.939270 421.014099,501.625549   C420.341370,500.886841 419.668610,500.441864 418.995819,499.996857   C418.995819,499.996857 419.000000,500.000000 419.002319,500.002197  z\",id:\"svg_1921\"})),_path1920||(_path1920=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M423.988586,502.002441   C424.312012,501.904083 424.575348,501.719849 424.887787,501.231506   C426.088501,502.014557 427.179993,503.015808 428.604736,504.111816   C428.937958,505.164215 428.937958,506.121887 428.937958,508.202698   C427.260803,506.708130 426.305328,505.856659 425.955139,505.544586   C424.583679,506.212982 423.293732,506.841675 421.994659,506.841522   C422.653198,504.809265 423.320892,503.405853 423.988586,502.002441  z\",id:\"svg_1922\"})),_path1921||(_path1921=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M452.115173,479.271759   C451.974884,478.243286 451.988312,477.513306 452.366516,476.409943   C454.794830,477.409821 456.858398,478.783081 458.947540,480.505981   C458.993195,481.559509 459.013245,482.263458 459.033295,482.967377   C459.033295,482.967377 459.015564,482.984772 459.006714,482.993652   C456.754883,481.858398 454.511871,480.714325 452.115173,479.271759  z\",id:\"svg_1923\"})),_path1922||(_path1922=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M441.969971,490.237671   C442.289856,488.562042 442.690765,487.197052 443.120209,485.471375   C443.961273,485.172241 444.844116,485.463593 445.569824,485.241577   C446.652954,484.910156 447.625366,484.216919 448.644867,483.677673   C448.054260,484.874390 447.740692,486.393890 446.809113,487.193390   C445.356232,488.440338 445.328003,491.909119 441.969971,490.237671  z\",id:\"svg_1924\"})),_path1923||(_path1923=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M384.581421,470.265778   C383.223083,471.316223 382.079559,472.081970 380.936035,472.847717   C380.658569,472.616333 380.381104,472.384949 380.103638,472.153595   C381.164551,470.479889 382.225494,468.806183 383.286438,467.132446   C383.789673,468.082001 384.292938,469.031525 384.581421,470.265778  z\",id:\"svg_1925\"})),_path1924||(_path1924=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M360.014679,438.984558   C362.233215,440.298096 364.451782,441.611664 366.670319,442.925201   C366.259369,443.458038 365.848450,443.990906 365.437500,444.523743   C363.645203,442.921936 361.852905,441.320099 360.030457,439.358948   C360.000305,438.999573 360.014679,438.984558 360.014679,438.984558  z\",id:\"svg_1926\"})),_path1925||(_path1925=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M428.001587,482.384399   C428.764618,482.016998 429.513611,482.009125 430.637543,481.994507   C431.002899,483.057343 430.993286,484.126862 430.981750,485.597473   C430.979858,485.998505 431.002960,485.998230 430.626434,486.002319   C429.179230,486.677185 428.108551,487.347900 427.037903,488.018677   C427.354462,486.260406 427.671021,484.502167 428.001587,482.384399  z\",id:\"svg_1927\"})),_path1926||(_path1926=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M400.957947,444.982727   C401.276703,445.077972 401.539825,445.255615 401.858887,445.727814   C400.586487,447.423248 399.202484,448.906433 397.818481,450.389618   C397.558350,450.196960 397.298218,450.004303 397.038116,449.811646   C397.357178,448.766571 397.676239,447.721497 398.316437,446.325684   C399.411041,445.644196 400.184509,445.313446 400.957947,444.982727  z\",id:\"svg_1928\"})),_path1927||(_path1927=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M414.868408,472.848572   C414.369568,474.211548 413.654114,475.363556 412.938721,476.515564   C412.295349,475.585388 411.651978,474.655212 410.981934,473.368164   C412.187439,472.886749 413.419647,472.762177 414.868408,472.848572  z\",id:\"svg_1929\"})),_path1928||(_path1928=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M393.324707,447.971191   C394.426727,446.319885 395.875305,444.656372 397.671814,443.326599   C398.016113,444.113739 398.012482,444.567078 398.008820,445.020447   C396.562988,445.999939 395.117126,446.979431 393.324707,447.971191  z\",id:\"svg_1930\"})),_path1929||(_path1929=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M427.242157,488.275848   C428.108551,487.347900 429.179230,486.677185 430.625183,485.992645   C429.815826,486.830261 428.631134,487.681641 427.242157,488.275848  z\",id:\"svg_1931\"})),_path1930||(_path1930=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M411.001831,466.981750   C412.088409,467.071716 413.174957,467.161652 414.573517,467.277435   C413.309204,470.049774 412.339020,471.661591 411.023987,467.356445   C410.998383,466.997467 411.001831,466.981750 411.001831,466.981750  z\",id:\"svg_1932\"})),_path1931||(_path1931=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M407.700745,473.063416   C408.321869,476.385620 406.036377,476.128937 403.444855,475.991028   C404.481842,475.014191 405.922333,474.055603 407.700745,473.063416  z\",id:\"svg_1933\"})),_path1932||(_path1932=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M390.046631,448.429138   C390.797882,448.041412 391.525391,448.016144 392.617920,447.984344   C392.535492,448.915802 392.088104,449.853790 391.640717,450.791809   C391.101440,450.125061 390.562164,449.458282 390.046631,448.429138  z\",id:\"svg_1934\"})),_path1933||(_path1933=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M398.005737,445.267151   C398.012482,444.567078 398.016113,444.113739 398.036041,443.320435   C398.052307,442.980469 398.535095,442.987762 398.776733,442.990845   C399.656433,443.437775 400.294434,443.881683 400.945190,444.654144   C400.184509,445.313446 399.411041,445.644196 398.320007,445.991180   C398.002441,446.007416 398.002625,445.513885 398.005737,445.267151  z\",id:\"svg_1935\"})),_path1934||(_path1934=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M407.996948,466.997772   C407.589478,467.884705 407.182007,468.771637 406.774567,469.658569   C406.332703,469.257660 405.890869,468.856781 405.449005,468.455872   C406.068787,467.970795 406.688599,467.485718 407.654175,467.000305   C408.000000,467.000000 407.996948,466.997772 407.996948,466.997772  z\",id:\"svg_1936\"})),_path1935||(_path1935=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M408.001556,467.001587   C408.378723,466.090759 408.754364,465.178375 409.130005,464.265991   C409.748138,464.926788 410.366241,465.587585 410.993103,466.615051   C411.001831,466.981750 410.998383,466.997467 410.990601,466.996887   C410.153656,466.932495 409.324463,466.868713 408.246094,466.901367   C407.996948,466.997772 408.000000,467.000000 408.001556,467.001587  z\",id:\"svg_1937\"})),_path1936||(_path1936=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M408.293762,495.056580   C407.722778,494.586914 407.386841,494.094360 407.041351,493.290161   C408.188293,493.512573 409.344788,494.046692 410.161896,494.616394   C409.548309,494.767975 409.274139,494.883972 409.000000,495.000000   C409.000000,495.000000 408.528839,495.033661 408.293762,495.056580  z\",id:\"svg_1938\"})),_path1937||(_path1937=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M377.222412,452.189911   C377.890839,452.526581 378.248718,452.930267 378.606628,453.333954   C378.041931,453.483063 377.477295,453.632172 376.912628,453.781281   C376.912354,453.273163 376.912109,452.765015 377.222412,452.189911  z\",id:\"svg_1939\"})),_path1938||(_path1938=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M357.391052,438.971130   C357.012604,438.537598 357.004761,438.096222 356.994263,437.323364   C357.964722,437.423401 358.937744,437.854950 359.962738,438.635529   C360.014679,438.984558 360.000305,438.999573 359.992859,439.007080   C359.244171,438.997498 358.502899,438.980408 357.391052,438.971130  z\",id:\"svg_1940\"})),_path1939||(_path1939=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M399.223267,468.190796   C399.789734,467.883301 400.293457,467.882965 400.797211,467.882660   C400.653168,468.442841 400.509094,469.003021 400.365051,469.563202   C399.963531,469.208130 399.562042,468.853088 399.223267,468.190796  z\",id:\"svg_1941\"})),_path1940||(_path1940=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M424.070007,480.414062   C425.012573,480.460114 426.020020,480.854553 427.114197,481.595734   C426.178925,481.549133 425.156921,481.155823 424.070007,480.414062  z\",id:\"svg_1942\"})),_path1941||(_path1941=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M388.775421,446.065308   C389.051453,446.416443 389.071442,446.866241 389.141907,447.649902   C388.158203,447.561707 387.124054,447.139709 386.027588,446.358765   C386.816650,446.054565 387.668030,446.109314 388.775421,446.065308  z\",id:\"svg_1943\"})),_path1942||(_path1942=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M409.161316,472.784607   C409.018036,473.032074 408.524048,473.056763 408.276978,473.048096   C408.557220,472.386932 409.079071,471.729614 409.635834,471.103302   C409.654175,471.082672 410.027008,471.377167 410.234619,471.524780   C409.924622,471.862244 409.614624,472.199677 409.161316,472.784607  z\",id:\"svg_1944\"})),_path1943||(_path1943=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M407.012085,452.012451   C406.786652,452.536255 406.567200,453.058258 406.278961,453.539001   C406.251862,453.584229 405.791595,453.369720 405.532410,453.275818   C405.821991,452.863556 406.111603,452.451294 406.686951,452.006226   C406.972687,451.973419 406.999146,451.999298 407.012085,452.012451  z\",id:\"svg_1945\"})),_path1944||(_path1944=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M380.826660,448.988068   C381.065063,448.799896 381.519135,448.873993 381.748871,448.865692   C381.621490,449.442688 381.264374,450.027985 380.907227,450.613251   C380.800903,450.134247 380.694550,449.655243 380.826660,448.988068  z\",id:\"svg_1946\"})),_path1945||(_path1945=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M383.033569,447.193756   C383.361786,446.633423 383.878052,446.322418 384.705139,446.000427   C384.417847,446.473999 383.819763,446.958557 383.033569,447.193756  z\",id:\"svg_1947\"})),_path1946||(_path1946=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M448.340210,489.875549   C448.624878,490.158752 448.743134,490.584045 448.800873,491.017365   C448.811279,491.095642 448.572998,491.207031 448.449493,491.303131   C448.350677,490.875549 448.251862,490.447937 448.340210,489.875549  z\",id:\"svg_1948\"})),_path1947||(_path1947=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M356.998779,443.001221   C357.746918,443.039093 358.496246,443.075775 359.245605,443.112457   C359.221802,443.341217 359.197998,443.569977 359.174225,443.798767   C358.557343,443.701874 357.940460,443.604980 357.162445,443.252930   C357.001312,442.997833 357.000000,443.000000 356.998779,443.001221  z\",id:\"svg_1949\"})),_path1948||(_path1948=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M393.706970,453.604370   C393.846710,453.425568 394.088959,453.397827 394.331238,453.370087   C394.157318,453.498535 393.983429,453.626953 393.706970,453.604370  z\",id:\"svg_1950\"})),_path1949||(_path1949=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M453.015076,483.783508   C452.895050,483.603424 452.953400,483.420563 453.011719,483.237701   C453.072296,483.418701 453.132874,483.599701 453.015076,483.783508  z\",id:\"svg_1951\"})),_path1950||(_path1950=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M403.294312,465.374878   C403.149750,465.559814 402.897644,465.588531 402.645508,465.617279   C402.825958,465.484406 403.006348,465.351532 403.294312,465.374878  z\",id:\"svg_1952\"})),_path1951||(_path1951=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M402.730591,471.346619   C402.996460,471.361816 403.141754,471.503235 403.287048,471.644653   C403.061340,471.587402 402.835693,471.530151 402.730591,471.346619  z\",id:\"svg_1953\"})),_path1952||(_path1952=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M386.557556,471.574707   C386.479767,471.628357 386.452179,471.417786 386.452179,471.417786   C386.452179,471.417786 386.635376,471.521027 386.557556,471.574707  z\",id:\"svg_1954\"})),_path1953||(_path1953=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M409.250854,494.996704   C409.274139,494.883972 409.548309,494.767975 409.913025,494.819244   C409.836273,494.988770 409.669037,494.991089 409.250854,494.996704  z\",id:\"svg_1955\"})),_path1954||(_path1954=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M364.018463,459.226898   C364.094482,459.038422 364.272888,459.029572 364.718506,459.035889   C364.697418,459.169556 364.409119,459.288055 364.018463,459.226898  z\",id:\"svg_1956\"})),_path1955||(_path1955=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M366.989563,494.990295   C366.027191,496.468231 365.064819,497.946167 363.936768,499.678497   C364.849731,500.998016 365.827881,502.411713 366.282959,503.069458   C365.087830,504.661316 364.087036,505.994324 363.045959,507.688995   C361.211182,506.784943 359.416656,505.519287 357.313049,504.127960   C357.003967,504.002289 357.027802,503.997986 357.025452,503.655396   C356.683807,502.543610 356.344452,501.774445 355.714722,500.865540   C354.948364,499.818512 354.472351,498.911163 353.996307,498.003815   C353.996307,498.003815 353.997101,498.004150 354.224060,497.926178   C354.749542,497.685242 354.965149,497.447174 355.523376,497.103363   C358.305664,497.072754 360.662354,497.072754 363.007172,497.072754   C362.215057,495.292694 361.643097,494.007324 361.328918,492.746521   C361.753662,492.727112 361.920654,492.683167 362.087616,492.639221   C363.488617,493.425690 364.889587,494.212158 366.645294,494.999298   C367.000000,495.000000 366.989532,494.990295 366.989563,494.990295  z\",id:\"svg_1957\"})),_path1956||(_path1956=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M353.621582,497.997925   C354.472351,498.911163 354.948364,499.818512 355.538544,501.131958   C355.261108,502.133453 354.869537,502.728851 354.477966,503.324249   C355.327881,503.548828 356.177856,503.773407 357.027802,503.997986   C357.027802,503.997986 357.003967,504.002289 357.005951,503.988098   C356.002472,508.141846 353.445526,504.353180 351.376587,504.999268   C351.000000,505.000000 351.007874,505.006104 351.007874,505.006104   C350.646942,503.727570 350.286041,502.449005 349.738647,500.509827   C347.952728,501.989746 346.890411,502.870026 345.746613,503.817841   C344.127777,502.346375 342.611359,500.968018 341.045441,499.229919   C341.462738,497.682495 341.929535,496.494812 342.101959,496.056183   C346.163422,496.761627 349.705139,497.376831 353.621582,497.997925  z\",id:\"svg_1958\"})),_path1957||(_path1957=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M350.997070,504.996185   C350.904144,505.029022 350.814148,505.065643 350.866028,505.054199   C351.007874,505.006104 351.000000,505.000000 350.997070,504.996185  z\",id:\"svg_1959\"})),_path1958||(_path1958=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M361.071106,492.721954   C361.643097,494.007324 362.215057,495.292694 363.007172,497.072754   C360.662354,497.072754 358.305664,497.072754 355.480347,496.836395   C354.789124,496.357025 354.566528,496.114014 354.343903,495.871002   C354.219879,496.263245 354.095856,496.655457 353.971832,497.047699   C351.018066,494.072357 348.064301,491.097015 344.512085,487.518860   C346.566162,487.322388 347.717529,487.212250 349.367188,487.054474   C348.542389,485.659363 347.906647,484.584045 347.137024,483.187927   C348.099976,481.908356 349.196838,480.949585 350.639008,479.988342   C351.418365,481.157074 351.852478,482.328308 352.461304,483.971039   C355.152954,481.411652 357.809082,479.873322 356.141571,475.632935   C355.643951,474.367432 358.141541,471.924133 359.632782,470.010864   C360.569763,471.706512 361.140778,473.411774 361.884827,475.633911   C361.752441,475.975006 361.269989,477.218018 360.787537,478.461029   C362.211243,478.922760 363.612000,479.484497 365.065125,479.818390   C366.542389,480.157837 368.071198,480.272797 369.739502,480.795349   C369.553711,481.560425 369.205872,482.016296 368.625610,482.724823   C367.924225,483.991180 367.455261,485.004852 366.986298,486.018524   C365.962860,486.028442 364.939453,486.038330 363.295166,485.889648   C362.139923,488.061371 361.605499,490.391663 361.071106,492.721954  M358.201599,481.823456   C358.244263,482.251495 358.286926,482.679504 358.329559,483.107513   C358.626740,482.869720 359.163940,482.630768 359.162842,482.394409   C359.161316,482.069092 358.752747,481.745667 358.201599,481.823456  M358.402618,475.482330   C358.402618,475.482330 358.525665,475.406097 358.402618,475.482330  M358.519501,487.397736   C358.519501,487.397736 358.599304,487.524323 358.519501,487.397736  z\",id:\"svg_1960\"})),_path1959||(_path1959=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M353.973389,497.289276   C354.095856,496.655457 354.219879,496.263245 354.343903,495.871002   C354.566528,496.114014 354.789124,496.357025 355.054749,496.867004   C354.965149,497.447174 354.749542,497.685242 354.220215,497.931000   C353.989410,498.013794 353.974976,497.530853 353.973389,497.289276  z\",id:\"svg_1961\"})),_path1960||(_path1960=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M344.726318,491.355133   C344.987671,491.369934 345.129974,491.507202 345.272247,491.644440   C345.050568,491.588806 344.828918,491.533203 344.726318,491.355133  z\",id:\"svg_1962\"})),_path1961||(_path1961=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M350.697113,473.108582   C351.003204,474.045380 351.002258,475.121246 351.001282,476.600372   C350.123871,476.835236 349.246521,476.666840 347.727661,476.375305   C348.860443,475.044556 349.625244,474.146057 350.697113,473.108582  z\",id:\"svg_1963\"})),_path1962||(_path1962=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M350.982819,477.384308   C351.866089,477.403198 352.746704,477.793762 353.627319,478.184326   C352.975037,478.763275 352.322754,479.342224 351.328156,479.953430   C350.983978,479.242493 350.982056,478.499207 350.982819,477.384308  z\",id:\"svg_1964\"})),_path1963||(_path1963=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M340.001648,472.001831   C339.904755,472.035187 339.806244,472.066711 339.851807,472.047302   C339.995850,471.996338 340.000000,472.000000 340.001648,472.001831  z\",id:\"svg_1965\"})),_path1964||(_path1964=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M355.772247,470.082886   C355.787842,470.242432 355.582001,470.497101 355.131134,470.807922   C355.049957,470.579498 355.271545,470.350800 355.772247,470.082886  z\",id:\"svg_1966\"})),_path1965||(_path1965=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M356.007324,469.001678   C355.891174,468.859161 355.767120,468.714447 355.643097,468.569763   C355.729980,468.622009 355.816895,468.674225 355.953827,468.870972   C356.003876,469.015503 355.999451,468.999512 356.007324,469.001678  z\",id:\"svg_1967\"})),_path1966||(_path1966=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M391.623169,420.010620   C394.086334,423.036682 396.173920,426.071503 398.152313,428.947571   C395.105164,432.046692 392.065063,435.138611 388.756531,438.601868   C388.488098,438.973206 388.018524,438.980347 387.686737,438.970123   C386.914001,438.929016 386.473053,438.898102 386.032104,438.867188   C384.991486,437.589142 383.950867,436.311096 382.882812,434.999390   C383.718781,434.233063 385.001465,433.057220 386.114105,432.037262   C384.509399,429.922028 383.291565,428.316772 382.040771,426.346680   C383.723328,426.816132 385.438843,427.650360 387.686646,428.743378   C388.767395,428.052551 390.335114,427.050415 391.823761,426.098846   C390.813293,424.176147 389.921082,422.478424 389.011383,420.387299   C389.745117,420.002350 390.496338,420.010834 391.623169,420.010620  M391.282806,429.969299   C390.662933,430.318634 390.043030,430.667969 389.423126,431.017273   C389.726654,431.307770 390.030182,431.598267 390.333710,431.888763   C390.894836,431.264618 391.455963,430.640503 392.600494,429.937683   C392.904144,429.530334 393.207794,429.122986 393.511414,428.715607   C393.245911,428.618042 392.774872,428.395599 392.746613,428.442139   C392.450378,428.929901 392.225037,429.460693 391.282806,429.969299  z\",id:\"svg_1968\"})),_path1967||(_path1967=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M376.450531,429.983826   C376.041901,428.926117 376.015808,427.864105 375.991333,426.403503   C377.099274,426.306702 378.205566,426.608521 379.655945,426.953979   C378.944366,427.991577 377.888733,428.985535 376.450531,429.983826  z\",id:\"svg_1969\"})),_path1968||(_path1968=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M386.024109,442.024414   C385.516632,442.735107 385.009186,443.445831 384.501709,444.156555   C384.216156,443.904999 383.930573,443.653412 383.645020,443.401855   C384.213257,442.948059 384.781525,442.494232 385.674866,442.020233   C385.999939,442.000061 386.024109,442.024414 386.024109,442.024414  z\",id:\"svg_1970\"})),_path1969||(_path1969=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M386.016510,439.257324   C386.473053,438.898102 386.914001,438.929016 387.681122,439.224030   C388.007446,439.657318 388.007629,439.826508 388.007751,439.995667   C387.686646,440.466034 387.365509,440.936432 387.024597,441.706421   C387.004791,442.006042 386.514160,442.014648 386.269135,442.019531   C386.024109,442.024414 385.999939,442.000061 385.987366,441.987671   C385.983490,441.199341 385.992218,440.423431 386.016510,439.257324  z\",id:\"svg_1971\"})),_path1970||(_path1970=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M380.318237,426.078857   C380.560547,425.893951 381.142395,425.691620 381.869904,425.740417   C381.562988,426.014862 381.110382,426.038147 380.318237,426.078857  z\",id:\"svg_1972\"})),_path1971||(_path1971=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M380.574585,431.445984   C380.623688,431.519287 380.428253,431.544525 380.428253,431.544525   C380.428253,431.544525 380.525452,431.372650 380.574585,431.445984  z\",id:\"svg_1973\"})),_path1972||(_path1972=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M362.674133,420.033325   C362.240326,420.982208 361.464996,421.980865 360.340637,422.993835   C360.771942,422.033081 361.552246,421.058075 362.674133,420.033325  z\",id:\"svg_1974\"})),_path1973||(_path1973=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M385.963165,417.392456   C386.929260,417.800110 387.849609,418.590515 388.885315,419.690460   C387.972931,419.258423 386.945190,418.516815 385.963165,417.392456  z\",id:\"svg_1975\"})),_path1974||(_path1974=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M406.930969,429.942719   C405.525452,424.500244 401.932800,421.483124 396.739990,421.137726   C395.375671,421.047028 394.048004,420.406219 392.350037,420.010681   C391.246826,418.581055 390.497131,417.158813 389.859772,415.949677   C392.208923,415.349274 394.855621,414.672791 397.882446,413.967072   C399.183990,413.200989 400.105469,412.464172 401.009766,411.360016   C402.960724,410.898224 404.928864,410.803772 406.949066,410.353516   C407.001160,409.997711 407.024780,409.969482 407.024780,409.969482   C408.529724,409.694275 410.047791,409.149384 411.535828,409.221832   C412.945465,409.290436 414.323608,410.006317 415.821228,411.082214   C415.621399,412.828430 415.315918,413.929962 415.005280,415.391113   C415.096924,417.608643 415.193726,419.466583 415.318573,421.862762   C415.806915,421.694031 416.876495,421.324524 418.117920,421.217773   C420.405975,423.904968 422.254303,427.235199 426.537476,423.369232   C426.380493,424.916840 426.142365,425.870392 425.619659,426.627380   C424.139496,428.770844 422.542847,430.833801 420.992096,432.928497   C418.449280,431.207428 415.906464,429.486359 412.979065,427.505005   C412.024200,428.041687 410.353668,428.980560 408.062683,429.952301   C407.271820,429.971039 407.101410,429.956879 406.930969,429.942719  M396.246124,418.817413   C396.368195,418.985077 396.490265,419.152771 396.612366,419.320435   C396.586945,419.086517 396.561554,418.852600 396.246124,418.817413  z\",id:\"svg_1976\"})),_path1975||(_path1975=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M399.032654,408.303406   C399.758087,407.978333 400.501984,407.974152 401.617676,407.981384   C401.745941,408.793549 401.502350,409.594269 401.122284,410.683563   C400.340881,410.189514 399.695984,409.406891 399.032654,408.303406  z\",id:\"svg_1977\"})),_path1976||(_path1976=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M353.969360,515.626404   C353.675537,515.262390 353.634491,514.902832 353.593414,514.543274   C353.849243,514.547913 354.105042,514.552551 354.360870,514.557129   C354.314636,514.915039 354.268372,515.272949 353.969360,515.626404  z\",id:\"svg_1978\"})),_path1977||(_path1977=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M582.271606,306.848694   C581.640076,306.898346 581.388550,306.703583 581.100098,306.206268   C581.534058,304.805786 582.068420,303.625916 582.602722,302.446045   C583.021423,302.538757 583.440125,302.631470 583.858826,302.724182   C583.435303,304.044861 583.011780,305.365540 582.271606,306.848694  z\",id:\"svg_1979\"})),_path1978||(_path1978=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M588.059265,297.334167   C588.754150,296.982117 589.501465,296.965454 590.621948,296.971252   C590.524841,299.313049 589.573364,299.579834 588.059265,297.334167  z\",id:\"svg_1980\"})),_path1979||(_path1979=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M539.355835,302.589783   C542.271240,302.659851 544.789551,302.751312 547.772949,302.743835   C548.554932,302.660950 548.870789,302.650482 549.868774,302.715942   C551.775024,302.797211 552.998352,302.776062 554.221619,302.754944   C554.890747,302.771423 555.559814,302.787872 556.628052,303.116150   C558.344238,303.647064 559.661194,303.866150 560.978210,304.085205   C561.437744,304.011444 561.897339,303.937683 562.691711,303.760620   C563.503418,304.028381 563.980286,304.399475 564.729370,305.309662   C565.000305,307.173096 564.999084,308.497467 564.667236,309.817200   C563.225281,309.150177 562.113953,308.487762 560.942993,307.510803   C559.913635,307.153931 558.943726,307.111572 557.548218,307.028625   C553.023071,306.673187 548.901245,305.933380 544.829468,306.147339   C539.308838,306.437469 533.826660,307.458252 528.021423,307.972656   C527.476807,306.871063 527.238770,305.962433 527.000732,305.053802   C527.783447,304.721497 528.566162,304.389160 529.649414,303.940552   C530.370300,303.869385 530.790710,303.914520 531.824524,304.060608   C533.291687,303.797577 534.145508,303.433563 534.999268,303.069519   C536.319031,302.916718 537.638855,302.763916 539.355835,302.589783  M529.586975,306.516388   C529.586975,306.516388 529.476807,306.581879 529.586975,306.516388  z\",id:\"svg_1981\"})),_path1980||(_path1980=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M564.997864,309.821777   C564.999084,308.497467 565.000305,307.173096 565.000366,305.451721   C565.930420,305.397339 566.861755,305.739960 567.903625,306.736877   C567.642578,308.348633 567.270996,309.306091 566.583496,310.184631   C565.844299,310.011108 565.421082,309.916443 564.997864,309.821777  z\",id:\"svg_1982\"})),_path1981||(_path1981=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M566.899414,310.263550   C567.270996,309.306091 567.642578,308.348633 568.073181,307.007690   C568.555664,306.659088 568.979187,306.693939 569.702881,306.836487   C570.216248,308.452301 570.429565,309.960510 570.472656,311.757904   C569.168152,311.452606 568.033752,310.858093 566.899414,310.263550  z\",id:\"svg_1983\"})),_path1982||(_path1982=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M560.698364,303.943970   C559.661194,303.866150 558.344238,303.647064 556.959961,303.068176   C559.363586,298.899231 559.062378,304.020660 560.698364,303.943970  z\",id:\"svg_1984\"})),_path1983||(_path1983=/*#__PURE__*/React.createElement(\"path\",{fill:\"#604234\",opacity:1,stroke:\"none\",d:\" M554.093506,302.437988   C552.998352,302.776062 551.775024,302.797211 550.105408,302.693542   C551.094482,302.419525 552.529968,302.270294 554.093506,302.437988  z\",id:\"svg_1985\"})),_path1984||(_path1984=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M526.636658,305.101166   C527.238770,305.962433 527.476807,306.871063 527.962524,308.359131   C523.143494,311.625671 518.076843,314.312805 512.669678,317.003479   C511.682709,317.352081 511.036377,317.697174 510.390015,318.042236   C511.520966,319.450684 512.502625,321.877350 513.811890,322.069336   C517.219849,322.569092 519.198303,324.491791 520.998413,326.990540   C519.526428,332.236359 518.054382,337.482178 516.648743,342.491516   C517.414124,344.023590 518.217651,345.631897 519.030640,347.636475   C515.486938,349.259705 512.810486,347.986359 510.354431,344.644592   C509.037537,342.196594 508.063538,340.210846 507.089539,338.225098   C506.433685,340.211273 505.733276,342.184814 505.162872,344.195221   C505.059662,344.559021 505.489716,345.074127 505.876343,346.010345   C507.254211,345.662964 508.627716,345.316681 510.001221,344.970398   C509.882751,348.943604 507.120239,349.309814 504.577484,348.086151   C501.232269,346.476227 498.533447,343.289978 494.199310,344.865784   C494.114380,344.896667 493.620117,343.801605 493.041809,343.077606   C491.826904,332.884979 498.264465,326.430359 504.422180,320.175262   C508.685760,315.844299 513.931335,312.480042 518.877319,308.371704   C521.435181,307.089203 523.853882,306.118866 526.636658,305.101166  z\",id:\"svg_1986\"})),_path1985||(_path1985=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E0C7AA\",opacity:1,stroke:\"none\",d:\" M530.774719,300.897888   C530.911377,301.279327 530.739258,301.684723 530.329956,302.137756   C529.681519,301.963470 529.270325,301.741547 528.859070,301.519653   C529.394714,301.320374 529.930359,301.121094 530.774719,300.897888  z\",id:\"svg_1987\"})),_path1986||(_path1986=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M534.649048,302.999207   C534.145508,303.433563 533.291687,303.797577 532.142578,304.039673   C532.664490,303.588135 533.481689,303.258514 534.649048,302.999207  z\",id:\"svg_1988\"})),_path1987||(_path1987=/*#__PURE__*/React.createElement(\"path\",{fill:\"#3F2E1E\",opacity:1,stroke:\"none\",d:\" M601.257446,338.386597   C600.547119,337.935425 599.823792,337.151764 599.181641,335.969849   C599.923462,336.399109 600.583923,337.226624 601.257446,338.386597  z\",id:\"svg_1989\"})),_path1988||(_path1988=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M597.987793,320.987579   C598.532532,320.348602 599.091797,319.724701 599.651123,319.100769   C599.964722,319.387421 600.278320,319.674042 600.591919,319.960663   C599.971191,320.318573 599.350464,320.676453 598.380737,321.033691   C598.031677,321.032990 598.002441,321.002625 597.987793,320.987579  z\",id:\"svg_1990\"})),_path1989||(_path1989=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M542.984009,519.008301   C543.068176,518.979431 543.167114,518.943481 543.125427,518.969116   C542.984802,519.030762 542.998779,519.001221 542.984009,519.008301  z\",id:\"svg_1991\"})),_path1990||(_path1990=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M493.015472,505.015930   C491.941315,505.557800 490.867126,506.099640 489.792969,506.641479   C488.970093,504.671783 488.147247,502.702057 487.169006,500.360382   C486.647247,500.072266 485.353668,499.358063 484.029724,498.322815   C483.999298,498.001770 483.984467,498.003937 484.311157,498.017700   C485.211517,497.699890 485.785217,497.368317 486.358887,497.036743   C485.599976,496.369690 484.841095,495.702637 483.698730,495.017120   C481.209656,493.999481 479.104034,493.000244 476.998413,492.001038   C476.998413,492.001038 477.000000,492.000000 477.001648,491.630768   C476.999573,490.521667 476.995850,489.781769 477.245117,489.028656   C477.666809,489.010529 477.835571,489.005646 478.346313,488.966553   C479.446411,487.943329 480.204590,486.954285 480.981384,485.981384   C481.000000,485.997559 480.966370,485.959534 481.306366,486.007874   C486.507690,487.367828 480.111786,490.346588 482.389648,491.923279   C483.956024,490.587372 485.486816,489.281769 487.378479,487.991394   C492.934021,486.463165 488.581238,485.089874 487.733063,483.772247   C491.833923,479.870728 495.504303,480.997925 498.512939,485.239502   C500.033783,483.572571 501.159515,482.338715 502.264343,481.127777   C498.640656,473.206055 492.592377,479.959717 487.169159,478.909180   C489.422791,475.971436 491.317566,473.501465 493.212372,471.031494   C492.940277,470.789459 492.668213,470.547424 492.396118,470.305420   C490.933594,470.869598 489.471069,471.433807 488.041840,471.634277   C489.501373,467.622223 491.112518,463.988983 488.863342,459.735779   C487.814270,457.935150 486.893219,456.449707 486.138794,454.732513   C486.832520,454.309448 487.359589,454.118134 488.090698,454.167419   C488.820404,454.118439 489.346100,453.828918 489.871826,453.539429   C489.224091,453.032776 488.576385,452.526093 487.595947,451.961731   C485.509247,450.362274 483.755188,448.820557 482.083008,447.350800   C485.606628,445.108887 488.510498,443.261322 492.656158,440.623657   C492.065582,443.861603 491.727997,445.712433 491.377441,447.634583   C494.471588,445.973450 497.232941,444.490997 500.155518,443.255432   C500.923767,443.597076 501.530762,443.691833 502.137756,443.786621   C502.161987,443.574524 502.186218,443.362396 502.210449,443.150299   C501.476929,443.096832 500.743439,443.043365 499.974792,442.638824   C500.116974,440.990265 500.294220,439.692749 500.471436,438.395203   C502.353668,439.832062 504.235901,441.268890 505.474976,442.214783   C504.524292,444.792023 503.904633,446.471863 503.284973,448.151672   C503.802521,448.391418 504.320068,448.631165 504.837616,448.870941   C509.058044,444.781952 513.278503,440.692993 517.310364,436.786774   C520.018494,438.988007 521.894592,440.512909 523.346497,441.693024   C525.577271,440.230316 527.292847,439.105408 529.293823,438.184509   C531.093994,441.947632 532.608704,445.506683 534.123413,449.065765   C533.438721,454.320587 532.754028,459.575378 531.485474,464.730164   C529.281006,466.406830 527.660339,468.183502 526.039612,469.960144   C526.039612,469.960144 525.997192,470.003235 525.975342,470.025452   C523.583801,469.125702 521.262024,468.033691 518.826294,467.345398   C517.359924,466.931061 514.521484,466.675323 514.335144,467.149109   C512.304749,472.309875 510.030090,469.093079 507.555206,466.958527   C507.306396,468.402649 507.151672,469.300720 506.996887,470.912537   C507.000153,472.098663 507.003448,472.571136 507.006775,473.043579   C507.006775,473.043579 507.005402,473.523499 506.645996,473.769836   C505.888153,474.802643 504.943481,475.981934 505.180420,476.311432   C506.646271,478.349670 508.377899,480.196686 509.979187,482.453491   C508.389191,484.789001 506.926147,486.852234 505.273193,488.750092   C502.864471,491.515625 504.534058,491.931213 507.002991,492.002258   C506.999878,492.000885 506.996338,491.993896 506.996338,491.993896   C507.755768,492.668365 508.515198,493.342865 509.638184,494.223938   C510.001770,494.430511 509.998779,494.881927 509.998779,494.881927   C508.746246,498.586517 506.902069,499.233429 503.987091,496.110138   C504.482147,497.355103 504.977203,498.600067 505.299225,499.409882   C503.067505,499.974304 500.938324,500.512817 498.408508,501.031799   C498.007874,501.012238 497.920258,500.942322 497.829865,500.652893   C498.490021,498.572723 499.240570,496.781952 500.365417,494.986023   C501.362213,494.201935 502.650513,492.925201 502.500153,492.724060   C501.437805,491.303131 500.080048,490.103088 498.816528,488.832550   C498.651764,489.143311 498.486969,489.454041 498.322174,489.764801   C498.884460,491.512878 499.446716,493.260925 499.663513,495.040314   C496.884216,497.217773 494.325439,499.247559 492.124603,501.610687   C491.697021,502.069733 492.663757,503.827332 492.993713,504.992920   C493.000031,504.999908 493.015472,505.015930 493.015472,505.015930  M501.364716,487.209808   C501.731720,487.261200 502.098755,487.312561 502.465759,487.363922   C502.465820,487.101898 502.465851,486.839905 502.465912,486.577881   C502.097900,486.616150 501.729858,486.654449 501.364716,487.209808  M507.583984,449.480316   C507.825775,449.541718 508.067566,449.603088 508.309326,449.664490   C508.153229,449.512512 507.997131,449.360535 507.583984,449.480316  z\",id:\"svg_1992\"})),_path1991||(_path1991=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M510.021271,482.107239   C508.377899,480.196686 506.646271,478.349670 505.180420,476.311432   C504.943481,475.981934 505.888153,474.802643 506.640442,474.009705   C509.028381,478.613617 510.231232,474.173523 512.051697,473.425171   C513.542358,473.675598 515.489929,479.917572 516.649841,472.722992   C518.641357,474.920258 520.130615,476.563324 522.376099,479.040741   C520.501343,479.992798 518.568115,480.974609 516.098816,481.958862   C515.562805,481.961304 515.275330,481.958313 515.173828,481.642334   C513.388672,481.586639 511.704987,481.846954 510.021271,482.107239  z\",id:\"svg_1993\"})),_path1992||(_path1992=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M510.350983,494.944214   C509.998779,494.881927 510.001770,494.430511 509.994781,494.204651   C511.900665,493.055084 513.813477,492.131317 515.198425,491.462524   C516.668518,494.858551 519.151489,491.040100 521.674072,488.730988   C522.039001,489.210144 522.403931,489.689301 522.768860,490.168457   C520.150696,492.722626 517.532532,495.276794 514.906006,497.839111   C513.389709,496.817169 512.046448,495.911804 510.350983,494.944214  z\",id:\"svg_1994\"})),_path1993||(_path1993=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M502.951721,504.663910   C499.951385,505.015839 496.892670,505.022858 493.424744,505.022888   C493.015472,505.015930 493.000031,504.999908 493.039917,504.648987   C494.693298,503.179504 496.306763,502.060913 497.920258,500.942322   C497.920258,500.942322 498.007874,501.012238 498.052002,501.049744   C498.796722,501.854889 499.394470,502.772003 500.228363,503.345917   C500.982697,503.865021 501.994873,504.009369 502.951721,504.663910  z\",id:\"svg_1995\"})),_path1994||(_path1994=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M510.030304,489.029816   C509.266724,490.022552 508.503143,491.015289 507.367950,492.000977   C506.996338,491.993896 506.999878,492.000885 507.002197,491.628052   C507.993866,490.493866 508.983215,489.732483 509.986755,488.985809   C510.000977,489.000519 510.030304,489.029816 510.030304,489.029816  z\",id:\"svg_1996\"})),_path1995||(_path1995=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M515.275269,481.958313   C515.275330,481.958313 515.562805,481.961304 515.704590,481.959534   C515.909119,483.027222 515.971863,484.096710 516.018005,485.582367   C516.001465,485.998566 515.972046,486.029205 515.972046,486.029205   C515.237244,486.026367 514.502441,486.023560 513.383423,486.011047   C512.999207,486.001343 512.963928,485.971832 512.995361,485.639130   C513.776245,484.190399 514.525757,483.074341 515.275269,481.958313  z\",id:\"svg_1997\"})),_path1996||(_path1996=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M516.016357,485.983337   C517.047363,486.288635 518.063477,486.609161 519.079651,486.929718   C518.860962,487.430817 518.642334,487.931915 518.423645,488.433044   C517.641052,487.843414 516.858398,487.253784 516.023926,486.346680   C515.972046,486.029205 516.001465,485.998566 516.016357,485.983337  z\",id:\"svg_1998\"})),_path1997||(_path1997=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M513.016113,486.017090   C512.255554,487.004913 511.478119,487.976929 510.365479,488.989380   C510.030304,489.029816 510.000977,489.000519 510.028351,488.665680   C511.025116,487.544495 511.994537,486.758179 512.963928,485.971832   C512.963928,485.971832 512.999207,486.001343 513.016113,486.017090  z\",id:\"svg_1999\"})),_path1998||(_path1998=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M507.321594,472.992249   C507.003448,472.571136 507.000153,472.098663 507.006531,471.270935   C507.571930,471.158997 508.127655,471.402374 508.683350,471.645752   C508.334351,472.077484 507.985382,472.509186 507.321594,472.992249  z\",id:\"svg_2000\"})),_path1999||(_path1999=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M505.829712,505.711609   C505.129272,505.853668 504.250519,505.702423 503.176849,505.269958   C503.871735,505.131958 504.761566,505.275146 505.829712,505.711609  z\",id:\"svg_2001\"})),_path2000||(_path2000=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M508.361572,502.685181   C508.554932,502.833954 508.586426,503.097382 508.617920,503.360779   C508.478516,503.173798 508.339111,502.986786 508.361572,502.685181  z\",id:\"svg_2002\"})),_path2001||(_path2001=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M531.278931,487.379028   C531.126099,487.575775 530.862549,487.607117 530.598938,487.638428   C530.788635,487.496796 530.978394,487.355194 531.278931,487.379028  z\",id:\"svg_2003\"})),_path2002||(_path2002=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M534.477722,449.046753   C532.608704,445.506683 531.093994,441.947632 529.439148,437.872925   C533.196106,433.862976 528.685364,431.767487 527.942810,428.702576   C527.969055,427.892059 527.969421,427.428406 527.963806,426.656067   C527.950806,425.937225 527.943787,425.527039 527.963684,424.797974   C528.006775,424.266388 528.022949,424.053680 528.039062,423.840973   C532.019409,427.796448 535.550232,431.806396 533.476379,438.210724   C533.088379,439.408813 534.565918,441.211029 535.507019,442.883087   C536.176758,444.811249 536.522034,446.590820 536.919312,448.687408   C536.258240,449.012207 535.545105,449.019989 534.477722,449.046753  z\",id:\"svg_2004\"})),_path2003||(_path2003=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M526.418701,469.971527   C527.660339,468.183502 529.281006,466.406830 531.163330,464.855835   C530.659302,466.531891 529.893616,467.982300 529.102966,469.792236   C528.317932,470.095459 527.557922,470.039185 526.418701,469.971527  z\",id:\"svg_2005\"})),_path2004||(_path2004=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M534.996338,495.002319   C534.731384,494.706024 534.470154,494.407410 534.208923,494.108765   C534.369690,493.975067 534.530518,493.841370 534.691284,493.707672   C534.796265,493.964355 534.901245,494.221039 535.006531,494.735779   C535.006836,494.993805 535.000000,495.000000 534.996338,495.002319  z\",id:\"svg_2006\"})),_path2005||(_path2005=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M529.012268,493.012543   C528.816833,493.443909 528.608521,493.862976 528.400208,494.282043   C528.433289,493.921570 528.466309,493.561066 528.735229,493.089478   C528.971008,492.978394 528.999390,493.000214 529.012268,493.012543  z\",id:\"svg_2007\"})),_path2006||(_path2006=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M521.342590,327.025574   C519.198303,324.491791 517.219849,322.569092 513.811890,322.069336   C512.502625,321.877350 511.520966,319.450684 510.390015,318.042236   C511.036377,317.697174 511.682709,317.352081 512.803833,317.333557   C514.413696,317.967682 515.708740,318.792084 516.657471,318.498199   C522.454834,316.702515 528.093018,314.360504 533.936096,312.751770   C544.674805,309.795105 555.353760,308.816772 565.729980,314.589233   C568.373962,316.060120 571.641296,316.410461 574.622253,317.275665   C574.700439,316.865448 574.778625,316.455231 574.856812,316.045013   C573.777527,314.756012 572.698303,313.466980 571.619019,312.177948   C573.596619,312.819672 575.806030,313.101074 577.496582,314.188934   C579.936096,315.758698 581.999084,317.913635 584.490051,320.047943   C581.415100,324.034790 572.368164,321.395752 572.884949,330.295135   C581.733887,333.481567 576.546204,341.319000 577.514099,348.739319   C578.748108,346.723846 579.183655,345.537018 580.009033,344.769379   C581.457764,343.421906 583.119995,341.458801 584.740906,341.411743   C586.014893,341.374725 588.534851,343.947906 588.419250,345.163757   C588.210693,347.358826 589.116516,350.892975 585.174988,351.437561   C584.362915,351.549744 583.570312,351.802826 582.370972,352.004028   C580.475586,352.158142 578.978088,352.299194 577.229248,352.718262   C574.890686,353.969971 572.803406,354.943604 570.358276,355.958618   C568.611267,354.534302 567.222107,353.068604 565.832947,351.602936   C565.343445,351.825226 564.853943,352.047546 564.364441,352.269836   C564.878357,351.385040 565.392273,350.500214 566.333740,349.214539   C572.597900,349.203766 573.460632,344.244537 574.717773,340.563293   C575.348389,338.716675 574.240479,335.130859 572.686890,333.943878   C570.157227,332.011139 566.617432,331.400421 562.944763,330.178833   C561.666199,330.320740 560.946777,330.515594 560.128174,330.816101   C560.028870,330.921692 559.809265,331.110870 559.809265,331.110870   C559.838562,330.763031 559.867798,330.415192 559.975891,329.184631   C560.496643,324.379822 560.938599,320.457764 561.371277,316.617798   C558.554993,317.811340 556.107239,318.848724 553.641663,319.893646   C554.706543,322.774200 555.860596,325.896149 557.014648,329.018066   C556.037537,330.777679 555.060425,332.537323 554.039917,334.650635   C553.996399,335.004303 553.966980,335.032959 553.966980,335.032959   C552.712585,335.738220 551.217346,336.218262 550.280273,337.220276   C549.534912,338.017273 548.796509,339.954529 549.217590,340.520172   C551.539246,343.639160 554.217957,346.492401 556.695190,349.345734   C555.891602,350.198151 554.946411,351.200714 553.969727,352.559204   C552.002258,352.563934 550.062805,352.231354 548.131348,351.857330   C544.935791,351.238556 541.745361,350.593109 538.219666,349.892670   C539.056458,346.714844 539.770142,344.004303 540.267090,342.117096   C542.796631,341.161713 545.086975,340.296631 547.377380,339.431580   C547.320007,339.001923 547.262634,338.572266 547.205261,338.142609   C546.102722,338.248352 545.000183,338.354126 543.867554,338.462799   C540.112427,329.539398 536.149475,327.484253 525.208252,328.531433   C524.091553,328.638275 522.863281,327.578796 521.342590,327.025574  M545.107544,327.277466   C545.193176,327.326996 545.278809,327.376526 545.364441,327.426025   C545.242981,327.284027 545.121460,327.141998 545.077515,326.367645   C545.426575,324.808014 545.775635,323.248383 546.124695,321.688751   C544.435486,321.709534 544.018860,322.211823 543.484863,322.483856   C543.006775,322.727417 542.399414,322.717285 541.618713,322.861725   C543.479553,318.335419 543.479553,318.335419 539.475647,315.425995   C534.774902,315.724060 530.074097,316.022156 525.373352,316.320221   C525.345154,316.866180 525.316956,317.412140 525.288757,317.958099   C526.856323,318.334930 528.423950,318.711761 530.067932,319.753937   C531.812317,322.759705 531.801208,329.665863 536.682922,323.994965   C540.011414,325.197571 542.505676,326.098785 545.107544,327.277466  M543.106384,346.516174   C544.128113,347.134735 545.149902,347.753265 546.171692,348.371826   C546.893005,346.590027 547.614319,344.808197 548.335632,343.026367   C547.860840,342.771454 547.385986,342.516510 546.911194,342.261597   C545.678406,343.439362 544.445679,344.617126 543.106384,346.516174  M521.435181,322.020081   C523.184326,322.493683 524.933472,322.967285 526.682617,323.440887   C526.769409,322.764099 526.856201,322.087341 526.942993,321.410583   C525.194214,321.410583 523.445496,321.410583 521.435181,322.020081  M568.543945,326.709686   C567.964844,326.597595 567.385742,326.485504 566.806641,326.373444   C566.801453,326.784576 566.796265,327.195740 566.791016,327.606873   C567.372986,327.508820 567.954956,327.410767 568.543945,326.709686  M567.268066,323.097839   C567.768311,323.042877 568.268494,322.987915 568.768738,322.932953   C568.653381,322.485321 568.538086,322.037689 568.422852,321.590088   C567.995972,321.892944 567.569153,322.195770 567.268066,323.097839  M547.609436,331.797272   C547.214355,331.793091 546.819275,331.788940 546.424194,331.784760   C546.422607,331.948730 546.410095,332.255280 546.421082,332.256104   C546.814270,332.286377 547.209717,332.288055 547.609436,331.797272  M565.796509,318.388855   C565.792419,318.784790 565.788330,319.180695 565.784180,319.576630   C565.948486,319.578156 566.255554,319.590668 566.256409,319.579620   C566.286682,319.185699 566.288269,318.789551 565.796509,318.388855  M549.296875,317.429871   C549.010681,317.703217 548.724548,317.976532 548.438354,318.249878   C548.551636,318.368378 548.757263,318.596069 548.764954,318.589600   C549.066772,318.334534 549.350586,318.058136 549.296875,317.429871  M564.569336,325.296722   C564.296082,325.010498 564.022888,324.724274 563.749634,324.438080   C563.631287,324.551453 563.403687,324.757050 563.410217,324.764893   C563.665100,325.066711 563.941406,325.350464 564.569336,325.296722  M578.410461,318.483826   C578.410461,318.483826 578.522522,318.416718 578.410461,318.483826  z\",id:\"svg_2008\"})),_path2007||(_path2007=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6AA0A1\",opacity:1,stroke:\"none\",d:\" M528.934448,348.456024   C522.357056,347.830750 520.528625,345.722626 520.735229,339.002289   C520.875610,334.434631 525.164978,330.071564 529.902100,330.326050   C533.827026,330.536896 536.532288,333.321564 537.642517,336.809875   C538.475403,339.426910 539.269531,342.904419 534.673462,343.825867   C534.284668,341.888611 534.845459,340.253387 534.387573,338.986267   C533.784485,337.317200 532.679260,335.326874 531.230774,334.618896   C529.986694,334.010864 527.536682,334.476624 526.358521,335.404938   C523.525635,337.637085 523.587280,342.445648 526.029297,345.186371   C526.999268,346.274902 527.966125,347.366058 528.934448,348.456024  z\",id:\"svg_2009\"})),_path2008||(_path2008=/*#__PURE__*/React.createElement(\"path\",{fill:\"#629B9A\",opacity:1,stroke:\"none\",d:\" M529.285522,348.538788   C527.966125,347.366058 526.999268,346.274902 526.029297,345.186371   C523.587280,342.445648 523.525635,337.637085 526.358521,335.404938   C527.536682,334.476624 529.986694,334.010864 531.230774,334.618896   C532.679260,335.326874 533.784485,337.317200 534.387573,338.986267   C534.845459,340.253387 534.284668,341.888611 534.294678,343.761719   C534.412231,344.163422 534.341614,344.169617 533.965637,344.306396   C533.429443,345.153320 533.269287,345.863434 533.109131,346.573547   C531.951599,347.256195 530.794067,347.938873 529.285522,348.538788  z\",id:\"svg_2010\"})),_path2009||(_path2009=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M540.295898,338.138092   C540.610168,337.943420 540.956604,337.970337 541.303040,337.997253   C541.230103,338.240906 541.157166,338.484589 541.084229,338.728241   C540.832153,338.605377 540.580139,338.482513 540.295898,338.138092  z\",id:\"svg_2011\"})),_path2010||(_path2010=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6AA0A1\",opacity:1,stroke:\"none\",d:\" M533.444702,346.378815   C533.269287,345.863434 533.429443,345.153320 533.933655,344.291016   C534.111877,344.820557 533.946106,345.502319 533.444702,346.378815  z\",id:\"svg_2012\"})),_path2011||(_path2011=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1B18\",opacity:1,stroke:\"none\",d:\" M523.155640,354.294556   C523.377136,354.141205 523.623657,354.297974 523.887512,354.773224   C523.679077,354.899933 523.437683,354.737610 523.155640,354.294556  z\",id:\"svg_2013\"})),_path2012||(_path2012=/*#__PURE__*/React.createElement(\"path\",{fill:\"#629B9A\",opacity:1,stroke:\"none\",d:\" M563.503967,330.231781   C566.617432,331.400421 570.157227,332.011139 572.686890,333.943878   C574.240479,335.130859 575.348389,338.716675 574.717773,340.563293   C573.460632,344.244537 572.597900,349.203766 566.379456,348.896912   C564.686401,348.899780 563.375244,348.819427 561.601562,348.797516   C561.139099,348.855957 561.193176,348.718384 561.193176,348.718384   C559.457886,346.493744 557.722595,344.269135 555.654724,341.830627   C555.322144,341.616760 555.226685,341.342865 555.226685,341.342865   C555.895081,339.260193 556.563477,337.177490 557.666382,334.610107   C558.615295,333.121552 559.129700,332.117737 559.644104,331.113892   C559.644104,331.113892 559.755310,331.097137 559.782288,331.104004   C559.809265,331.110870 560.028870,330.921692 560.196289,331.137512   C561.410461,330.979492 562.457214,330.605652 563.503967,330.231781  z\",id:\"svg_2014\"})),_path2013||(_path2013=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M557.384338,329.010925   C555.860596,325.896149 554.706543,322.774200 553.641663,319.893646   C556.107239,318.848724 558.554993,317.811340 561.371277,316.617798   C560.938599,320.457764 560.496643,324.379822 560.012939,328.662323   C559.232117,329.016449 558.493042,329.010132 557.384338,329.010925  z\",id:\"svg_2015\"})),_path2014||(_path2014=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M559.295776,331.146881   C559.129700,332.117737 558.615295,333.121552 557.753296,334.216064   C557.919678,333.264465 558.433594,332.222168 559.295776,331.146881  z\",id:\"svg_2016\"})),_path2015||(_path2015=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M555.155884,341.015747   C555.226685,341.342865 555.322144,341.616760 555.325012,341.761658   C554.762939,341.157623 554.197937,340.408691 553.632996,339.659729   C554.019897,339.392303 554.406799,339.124878 554.793701,338.857422   C554.890808,339.467834 554.987915,340.078247 555.155884,341.015747  z\",id:\"svg_2017\"})),_path2016||(_path2016=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M561.208069,348.829407   C560.818115,349.697449 560.359192,350.592041 559.900269,351.486633   C559.599854,351.285583 559.299500,351.084534 558.999084,350.883514   C559.512756,350.237091 560.026428,349.590698 560.866577,348.831329   C561.193176,348.718384 561.139099,348.855957 561.208069,348.829407  z\",id:\"svg_2018\"})),_path2017||(_path2017=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M554.012634,334.991913   C554.149231,335.431488 554.269592,335.883423 554.389893,336.335358   C554.260620,336.062225 554.131226,335.789093 553.984375,335.274475   C553.966980,335.032959 553.996399,335.004303 554.012634,334.991913  z\",id:\"svg_2019\"})),_path2018||(_path2018=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M527.894165,423.529541   C528.022949,424.053680 528.006775,424.266388 527.567993,424.747070   C525.532837,424.441742 523.884155,423.952118 522.316040,423.275879   C519.888306,422.229095 517.515564,421.054962 515.104980,419.572174   C514.187134,417.757324 513.421509,416.192749 512.348755,414.878876   C510.668213,412.820526 508.780182,410.931549 507.024719,408.722473   C507.104706,408.309540 507.139984,408.145020 507.378540,407.834106   C507.746002,407.397858 507.910187,407.108063 508.074371,406.818268   C515.962585,410.689392 523.706299,414.733887 527.894165,423.529541  z\",id:\"svg_2020\"})),_path2019||(_path2019=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M507.970581,406.528595   C507.910187,407.108063 507.746002,407.397858 507.130890,407.771973   C506.138245,407.913208 505.596497,407.970093 504.789978,408.027893   C504.348724,408.034882 504.172302,408.040924 503.977783,407.660309   C503.339539,406.509460 502.692596,405.765259 502.106232,404.975983   C501.381226,404.000183 500.706543,402.986969 500.025024,401.975891   C500.039917,401.961853 500.070526,401.933228 500.070526,401.933228   C501.561859,402.509613 503.053192,403.085999 504.897827,403.763428   C506.123047,404.655975 506.994934,405.447449 507.970581,406.528595  z\",id:\"svg_2021\"})),_path2020||(_path2020=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M502.037842,397.684998   C501.619568,397.369110 501.155975,396.748322 500.948242,395.921692   C501.466949,396.270599 501.729736,396.825348 502.037842,397.684998  z\",id:\"svg_2022\"})),_path2021||(_path2021=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M469.165283,388.180603   C469.758057,387.674164 470.350830,387.167755 470.971252,386.331177   C470.998932,386.001038 471.012360,385.983398 471.012360,385.983398   C474.778046,385.450806 478.543701,384.918243 483.218140,384.257141   C483.237701,384.270874 484.295258,385.013123 485.563263,385.903015   C486.800659,384.960175 488.014252,384.035461 489.566528,383.109924   C492.372711,387.129883 494.840210,391.150757 497.307709,395.171600   C497.737946,394.966675 498.168182,394.761749 498.598419,394.556824   C498.389008,395.785980 498.179565,397.015167 497.746063,398.616669   C497.522003,398.989014 497.067749,398.988312 496.723083,398.966400   C494.895752,397.844086 493.413116,396.743683 492.123901,395.786835   C489.315063,398.292297 486.666199,400.655060 483.751770,402.792755   C483.142456,401.529144 482.798706,400.490540 482.224976,398.757019   C480.541077,402.276367 478.777924,402.980377 476.631744,399.751465   C476.243805,399.167786 474.890228,399.225952 474.030029,398.667114   C475.889648,397.885956 477.701782,397.425415 480.343262,396.754120   C477.306305,394.868774 474.471436,393.108917 471.219269,391.089966   C470.472382,391.255524 468.746246,391.638184 467.011780,392.012207   C467.003448,392.003571 466.987457,391.985870 467.037720,391.668518   C467.110870,390.924072 467.133759,390.496979 467.453918,390.011780   C468.222534,389.362640 468.693909,388.771606 469.165283,388.180603  z\",id:\"svg_2023\"})),_path2022||(_path2022=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D79967\",opacity:1,stroke:\"none\",d:\" M497.067749,398.988312   C497.067749,398.988312 497.522003,398.989014 497.748779,398.993530   C498.664581,399.739258 499.353577,400.480469 500.056580,401.577454   C500.070526,401.933228 500.039917,401.961853 499.648834,401.980164   C498.527740,400.995087 497.797729,399.991699 497.067749,398.988312  z\",id:\"svg_2024\"})),_path2023||(_path2023=/*#__PURE__*/React.createElement(\"path\",{fill:\"#604234\",opacity:1,stroke:\"none\",d:\" M490.388672,360.917267   C490.135590,357.800323 490.267975,354.604645 490.785156,351.233429   C491.038025,354.318085 490.906097,357.578339 490.388672,360.917267  z\",id:\"svg_2025\"})),_path2024||(_path2024=/*#__PURE__*/React.createElement(\"path\",{fill:\"#604234\",opacity:1,stroke:\"none\",d:\" M490.967712,368.956635   C490.457458,367.658478 490.204407,366.240021 490.034180,364.386810   C490.703827,364.436432 491.290680,364.920807 491.908203,365.722565   C491.700867,366.972076 491.462891,367.904205 490.967712,368.956635  z\",id:\"svg_2026\"})),_path2025||(_path2025=/*#__PURE__*/React.createElement(\"path\",{fill:\"#B9B5B0\",opacity:1,stroke:\"none\",d:\" M571.448792,312.187683   C572.698303,313.466980 573.777527,314.756012 574.856812,316.045013   C574.778625,316.455231 574.700439,316.865448 574.622253,317.275665   C571.641296,316.410461 568.373962,316.060120 565.729980,314.589233   C555.353760,308.816772 544.674805,309.795105 533.936096,312.751770   C528.093018,314.360504 522.454834,316.702515 516.657471,318.498199   C515.708740,318.792084 514.413696,317.967682 513.144470,317.330048   C518.076843,314.312805 523.143494,311.625671 528.269043,308.552063   C533.826660,307.458252 539.308838,306.437469 544.829468,306.147339   C548.901245,305.933380 553.023071,306.673187 557.707520,307.333984   C559.195801,307.728394 560.099182,307.776855 561.002563,307.825317   C562.113953,308.487762 563.225281,309.150177 564.667236,309.817200   C565.421082,309.916443 565.844299,310.011108 566.583496,310.184631   C568.033752,310.858093 569.168152,311.452606 570.651245,312.023895   C571.000000,312.000671 571.278564,312.197418 571.448792,312.187683  z\",id:\"svg_2027\"})),_path2026||(_path2026=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M484.006744,520.993286   C482.309967,521.358704 480.613159,521.724060 477.919128,522.304199   C479.377045,520.526855 480.147522,519.587585 480.963867,518.319580   C481.009766,517.990906 480.998962,518.000854 481.370605,517.996460   C482.493591,517.993164 483.244965,517.994141 483.996338,517.995117   C483.996338,517.995117 484.000000,518.000000 483.993835,518.377075   C483.989563,519.505859 483.991394,520.257629 483.996155,521.005249   C483.999054,521.001221 484.006744,520.993286 484.006744,520.993286  z\",id:\"svg_2028\"})),_path2027||(_path2027=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M487.007812,521.007446   C486.476562,521.882141 485.936707,522.747681 485.396820,523.613281   C484.936920,522.971558 484.476990,522.329895 484.011902,521.340698   C484.006744,520.993286 483.999054,521.001221 484.245789,520.907593   C485.323456,520.869446 486.154419,520.924866 486.985352,520.980286   C486.985352,520.980286 486.999146,520.998413 487.007812,521.007446  z\",id:\"svg_2029\"})),_path2028||(_path2028=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M470.994263,516.994812   C471.004303,517.752869 471.004333,518.501465 471.003174,519.624756   C471.001984,519.999390 470.999451,520.001221 470.647400,520.008240   C469.648712,519.558289 469.002014,519.101257 468.355347,518.644226   C469.223633,518.083923 470.091949,517.523682 470.960236,516.963379   C470.960236,516.963379 470.984253,516.985413 470.994263,516.994812  z\",id:\"svg_2030\"})),_path2029||(_path2029=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M514.550659,531.569824   C514.473999,531.620667 514.447449,531.417480 514.447449,531.417480   C514.447449,531.417480 514.627258,531.518982 514.550659,531.569824  z\",id:\"svg_2031\"})),_path2030||(_path2030=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M498.436157,527.548706   C498.390564,527.478210 498.576202,527.455872 498.576202,527.455872   C498.576202,527.455872 498.481781,527.619263 498.436157,527.548706  z\",id:\"svg_2032\"})),_path2031||(_path2031=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M470.924316,516.622009   C470.091949,517.523682 469.223633,518.083923 468.355347,518.644226   C469.002014,519.101257 469.648712,519.558289 470.645142,520.016113   C471.293152,521.251831 471.591370,522.486572 471.928925,523.884277   C470.639709,524.702515 469.385010,525.498901 468.065186,526.647583   C468.000000,527.000000 468.003296,526.996826 468.003296,526.996826   C464.528076,526.087585 461.052826,525.178345 457.329041,523.748779   C458.371216,522.412598 459.878937,521.793213 460.865875,520.702576   C461.400604,520.111633 461.047577,518.717407 461.121124,517.117798   C459.278290,518.497375 458.191132,519.311218 457.081299,520.142090   C456.172363,518.783264 455.548676,517.850891 455.077515,516.633484   C456.150696,515.586121 457.071381,514.823792 458.101074,514.267273   C458.408844,514.724854 458.659454,514.904175 459.142334,515.277771   C460.220245,515.365479 461.117798,515.186340 462.272430,514.995483   C462.700592,514.970093 462.871613,514.956360 463.042664,514.942566   C465.222046,515.690918 467.378082,517.482605 469.627747,515.089905   C470.047943,515.486816 470.468170,515.883728 470.924316,516.622009  z\",id:\"svg_2033\"})),_path2032||(_path2032=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M463.027405,514.551392   C462.871613,514.956360 462.700592,514.970093 462.100922,514.749023   C461.116974,514.322815 460.561646,514.131348 459.832275,513.704468   C459.105011,513.311890 458.551788,513.154724 457.716400,512.867126   C454.744812,511.849304 450.782227,512.963379 450.044159,514.814331   C446.443176,516.692139 444.594696,514.539185 443.219116,511.282562   C443.694244,510.612030 443.881012,510.354828 444.293579,510.029663   C445.146423,509.912384 445.685577,509.799194 446.224762,509.685974   C446.219666,509.506714 446.214600,509.327454 446.209534,509.148193   C445.458832,509.062683 444.708099,508.977173 443.960052,508.710571   C443.962708,508.529480 443.984253,508.167908 443.984253,508.167908   C443.983490,507.373779 443.982727,506.579681 443.986511,505.388245   C448.309204,506.450043 452.627319,507.909119 456.829041,509.328888   C456.988892,508.375671 457.245819,506.843414 457.752136,505.154907   C458.001556,504.998596 458.001495,504.977051 458.194427,505.255005   C459.263794,505.697052 460.140228,505.861176 461.019287,506.225037   C461.021942,506.424805 461.015137,506.824341 460.996277,507.211182   C461.654846,508.738037 462.332336,509.878021 463.009796,511.018005   C463.010590,512.065430 463.011383,513.112793 463.027405,514.551392  z\",id:\"svg_2034\"})),_path2033||(_path2033=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M467.005035,504.984802   C467.458771,505.628601 467.912506,506.272400 469.019470,506.926331   C470.122528,506.290405 470.572357,505.644409 471.022217,504.998413   C471.022217,504.998413 471.001709,504.996155 471.002258,505.007568   C474.277069,505.364258 477.551392,505.709564 480.875427,506.060089   C477.040253,510.041443 472.814117,510.614288 466.304443,507.760864   C465.877533,507.295563 465.845947,507.109955 465.880554,506.629883   C466.299469,505.885223 466.652252,505.434998 467.005035,504.984802  z\",id:\"svg_2035\"})),_path2034||(_path2034=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M477.032959,492.330078   C479.104034,493.000244 481.209656,493.999481 483.673950,495.386902   C484.016571,496.518036 484.000519,497.260986 483.984467,498.003937   C483.984467,498.003937 483.999298,498.001770 484.001221,497.993011   C483.215057,498.304779 482.427032,498.625305 481.321442,498.729492   C481.003021,498.342926 481.002136,498.172699 480.894409,497.774292   C480.529633,497.335541 480.271637,497.124969 480.001404,496.558807   C479.063904,495.460266 478.138641,494.717285 477.213379,493.974335   C477.164734,493.535919 477.116089,493.097504 477.032959,492.330078  z\",id:\"svg_2036\"})),_path2035||(_path2035=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M475.376282,498.033264   C473.980621,496.685120 472.959503,495.372711 471.938354,494.060333   C472.191528,493.704529 472.444702,493.348755 472.697906,492.992950   C473.924347,493.580658 475.150787,494.168335 476.797791,495.104065   C477.409760,495.713654 477.659851,495.893860 477.970551,496.328247   C477.978210,497.111176 477.983887,497.558533 477.994598,498.003601   C477.999664,498.001312 478.005646,497.989197 478.005646,497.989197   C477.254028,498.015808 476.502441,498.042389 475.376282,498.033264  z\",id:\"svg_2037\"})),_path2036||(_path2036=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M483.992126,517.623901   C483.244965,517.994141 482.493591,517.993164 481.366333,518.000854   C481.593018,516.811646 482.195587,515.613708 482.798157,514.415710   C483.194763,515.361328 483.591339,516.307007 483.992126,517.623901  z\",id:\"svg_2038\"})),_path2037||(_path2037=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M463.259766,510.849670   C462.332336,509.878021 461.654846,508.738037 461.319946,507.266876   C462.098572,506.964844 462.534698,506.993958 463.002045,507.324829   C463.383759,508.087280 463.734253,508.547943 464.084778,509.008636   C463.893097,509.566223 463.701385,510.123810 463.259766,510.849670  z\",id:\"svg_2039\"})),_path2038||(_path2038=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M486.994995,520.636414   C486.154419,520.924866 485.323456,520.869446 484.242889,520.911682   C483.991394,520.257629 483.989563,519.505859 483.995667,518.378540   C486.038818,517.409790 487.522705,517.539246 486.994995,520.636414  z\",id:\"svg_2040\"})),_path2039||(_path2039=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M464.367645,508.985229   C463.734253,508.547943 463.383759,508.087280 463.360352,507.314026   C464.396393,506.975800 465.105377,506.950104 465.814392,506.924377   C465.845947,507.109955 465.877533,507.295563 465.949860,507.760956   C465.543884,508.347809 465.097229,508.654816 464.367645,508.985229  z\",id:\"svg_2041\"})),_path2040||(_path2040=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M481.001221,498.002441   C481.002136,498.172699 481.003021,498.342926 481.003387,498.768860   C480.022064,498.902924 479.041260,498.781311 478.033020,498.324463   C478.005646,497.989197 477.999664,498.001312 478.371246,498.009827   C479.495636,498.013062 480.248413,498.007751 481.001221,498.002441  z\",id:\"svg_2042\"})),_path2041||(_path2041=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M473.144836,512.169067   C472.723022,512.260437 472.467590,512.182739 472.212189,512.105042   C472.499786,511.813721 472.787415,511.522400 473.075043,511.231110   C473.153748,511.487396 473.232483,511.743713 473.144836,512.169067  z\",id:\"svg_2043\"})),_path2042||(_path2042=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M443.984924,529.980286   C443.079529,529.669678 441.856903,529.648499 441.339233,529.033752   C439.071533,526.340942 437.530243,524.660767 432.806915,525.180176   C429.496979,525.544189 426.048981,526.156738 422.331665,526.882202   C419.577087,526.344543 417.158813,525.646240 414.125488,524.957214   C413.359436,524.910217 413.175598,524.888977 413.067108,524.787292   C412.966888,524.693420 412.858795,524.436340 412.905548,524.382385   C413.987396,523.135193 415.089905,521.905884 416.188599,520.673279   C417.724670,521.941528 418.560516,523.718506 421.470612,521.829834   C423.605743,520.444214 427.227142,521.021484 430.144623,521.251099   C433.838776,521.541870 437.490814,522.367065 441.816833,522.967346   C442.652161,522.978760 442.831665,522.984619 443.011169,522.990479   C444.097015,523.336304 445.182861,523.682190 446.632843,524.052002   C447.789642,525.023010 448.582275,525.970093 449.639465,527.305664   C448.189178,527.818359 446.474396,527.942444 444.291565,528.100403   C444.271240,528.217346 444.116943,529.105591 443.962646,529.993774   C443.962646,529.993774 443.992188,529.996521 443.984924,529.980286  M441.822418,525.223694   C441.882050,525.402771 441.941650,525.581848 442.001251,525.760925   C442.059235,525.580200 442.117218,525.399536 441.822418,525.223694  z\",id:\"svg_2044\"})),_path2043||(_path2043=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M444.326416,529.998169   C444.116943,529.105591 444.271240,528.217346 444.291565,528.100403   C446.474396,527.942444 448.189178,527.818359 449.977020,527.355103   C451.346008,528.648254 452.641937,530.280640 453.925720,531.897705   C453.217010,532.480896 451.968597,533.508301 450.718353,534.537170   C448.661316,532.989746 446.675751,531.496155 444.326416,529.998169  z\",id:\"svg_2045\"})),_path2044||(_path2044=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M454.924988,516.918518   C455.548676,517.850891 456.172363,518.783264 457.081299,520.142090   C458.191132,519.311218 459.278290,518.497375 461.121124,517.117798   C461.047577,518.717407 461.400604,520.111633 460.865875,520.702576   C459.878937,521.793213 458.371216,522.412598 457.012512,523.576782   C455.833008,522.718140 454.721497,521.511169 453.304993,520.153320   C453.001831,519.557495 453.003632,519.112488 453.157410,518.084717   C453.847931,517.307434 454.386444,517.112976 454.924988,516.918518  z\",id:\"svg_2046\"})),_path2045||(_path2045=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M456.572449,533.503296   C457.046021,533.559509 457.334198,533.794495 457.622345,534.029419   C457.432800,534.212830 457.243225,534.396179 457.053680,534.579590   C456.831482,534.280396 456.609253,533.981262 456.572449,533.503296  z\",id:\"svg_2047\"})),_path2046||(_path2046=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M440.013855,533.014160   C439.775513,533.527771 439.545837,534.042297 439.243866,534.510254   C439.211517,534.560364 438.758362,534.339111 438.500366,534.243774   C438.800781,533.844238 439.101257,533.444702 439.688934,533.011230   C439.976135,532.977356 440.001526,533.001526 440.013855,533.014160  z\",id:\"svg_2048\"})),_path2047||(_path2047=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M467.998291,527.001587   C468.452393,527.151306 468.908203,527.299438 469.364044,527.447632   C469.232117,527.729736 469.100189,528.011902 468.968262,528.294006   C468.661499,528.031982 468.354706,527.769897 468.025604,527.252319   C468.003296,526.996826 468.000000,527.000000 467.998291,527.001587  z\",id:\"svg_2049\"})),_path2048||(_path2048=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M416.058075,520.393433   C415.089905,521.905884 413.987396,523.135193 412.905548,524.382385   C412.858795,524.436340 412.966888,524.693420 413.067108,524.787292   C413.175598,524.888977 413.359436,524.910217 413.786163,525.006958   C411.674652,528.083923 409.430176,529.512695 406.474060,525.393921   C405.468964,523.993591 403.205353,523.496460 401.289246,522.326538   C402.582672,520.941223 404.103699,519.815979 405.624725,518.690735   C405.660614,518.958618 405.696503,519.226440 405.732391,519.494324   C407.837524,518.983459 409.940125,518.110718 412.048767,518.095764   C413.336884,518.086670 414.634308,519.396240 416.058075,520.393433  z\",id:\"svg_2050\"})),_path2049||(_path2049=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M423.616913,501.990845   C423.320892,503.405853 422.653198,504.809265 421.947937,506.548340   C420.354248,506.660126 418.801971,506.300537 417.240723,506.256012   C416.022614,506.221252 414.793335,506.578156 412.954956,506.759308   C411.224670,506.514740 410.108429,506.271912 408.992157,506.029114   C408.702698,504.616577 408.413239,503.204041 408.069946,501.528717   C412.446228,502.248413 416.489868,502.913391 420.760834,503.029449   C420.996765,502.293457 421.005371,502.106384 421.014008,501.919250   C421.757751,501.939270 422.501495,501.959259 423.616913,501.990845  z\",id:\"svg_2051\"})),_path2050||(_path2050=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M388.996582,495.003113   C393.951874,494.275116 393.711975,498.463440 394.962036,501.637451   C394.998505,501.998657 395.026672,502.004761 395.026672,502.004761   C392.205933,501.737030 389.385223,501.469299 386.278137,501.095398   C385.991821,500.989227 386.000122,501.000458 386.165527,500.751648   C388.021484,499.838135 389.712067,499.173462 391.265076,498.562897   C390.564850,497.456177 389.784851,496.223389 389.004852,494.990601   C389.004852,494.990601 389.000519,494.999054 388.996582,495.003113  z\",id:\"svg_2052\"})),_path2051||(_path2051=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M443.979858,510.033752   C443.881012,510.354828 443.694244,510.612030 443.202087,510.912415   C441.308167,511.722931 439.631744,512.426392 437.432709,513.349182   C436.642639,512.036377 435.557037,510.232513 434.736328,508.209106   C436.234558,506.606995 437.995422,512.393311 438.992859,507.347717   C439.000916,506.998993 439.016266,506.983887 439.016266,506.983887   C440.432709,507.321869 441.849152,507.659851 443.624939,508.082886   C443.984253,508.167908 443.962708,508.529480 443.956360,508.996887   C443.959991,509.654114 443.969940,509.843933 443.979858,510.033752  z\",id:\"svg_2053\"})),_path2052||(_path2052=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M455.077515,516.633484   C454.386444,517.112976 453.847931,517.307434 453.155304,517.750977   C452.234924,516.989075 451.468597,515.978027 450.373230,514.890625   C450.782227,512.963379 454.744812,511.849304 457.716583,513.133057   C457.996613,513.706848 457.994354,513.884216 457.992065,514.061523   C457.071381,514.823792 456.150696,515.586121 455.077515,516.633484  z\",id:\"svg_2054\"})),_path2053||(_path2053=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M395.001648,502.012756   C396.787415,501.144073 398.570068,500.261261 400.352722,499.378448   C400.654419,499.704285 400.956116,500.030090 401.257812,500.355927   C399.040894,502.388916 396.823975,504.421906 394.607056,506.454895   C394.215088,506.083679 393.823151,505.712463 393.431183,505.341248   C393.934052,504.447540 394.436951,503.553802 394.983246,502.332397   C395.026672,502.004761 394.998505,501.998657 395.001648,502.012756  z\",id:\"svg_2055\"})),_path2054||(_path2054=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M373.957245,498.825378   C375.437805,499.867279 376.918365,500.909210 378.780212,502.012207   C378.998383,502.529663 378.808502,503.391449 378.676178,503.382721   C375.797058,503.192352 372.924286,502.905060 370.289917,502.142059   C371.358154,500.766449 372.186737,499.885162 373.015320,499.003876   C373.015320,499.003876 372.998749,499.000427 373.242676,498.970215   C373.486633,498.939972 373.957245,498.825378 373.957245,498.825378  z\",id:\"svg_2056\"})),_path2055||(_path2055=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M408.843689,506.318726   C410.108429,506.271912 411.224670,506.514740 412.653076,506.915100   C413.075745,507.866943 413.186340,508.661255 413.273468,509.287323   C410.933624,509.539795 408.743500,509.776123 406.553375,510.012451   C406.384491,509.568604 406.215637,509.124756 406.046783,508.680908   C406.929596,507.990051 407.812378,507.299225 408.843689,506.318726  z\",id:\"svg_2057\"})),_path2056||(_path2056=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M391.968689,510.694702   C390.401306,511.640656 388.822205,512.323181 387.182007,512.791870   C386.892090,512.874695 386.347290,512.065491 385.927094,511.335266   C388.086823,512.205627 389.337738,505.001465 391.968689,510.694702  z\",id:\"svg_2058\"})),_path2057||(_path2057=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M361.328918,492.746521   C361.605499,490.391663 362.139923,488.061371 362.912109,485.912720   C363.107361,487.780426 363.064819,489.466492 363.010284,491.576172   C362.742767,492.057831 362.516571,492.173248 362.203644,492.492615   C361.920654,492.683167 361.753662,492.727112 361.328918,492.746521  z\",id:\"svg_2059\"})),_path2058||(_path2058=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M403.846222,505.253448   C404.158936,506.121277 404.131714,506.910583 404.104462,507.699860   C403.534485,507.548340 402.964508,507.396851 402.394531,507.245361   C402.765137,506.555206 403.135712,505.865051 403.846222,505.253448  z\",id:\"svg_2060\"})),_path2059||(_path2059=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M403.618134,511.484131   C404.019012,512.286743 404.122192,512.952698 404.225342,513.618591   C403.648651,513.547913 403.071960,513.477234 402.495270,513.406616   C402.770294,512.720215 403.045349,512.033813 403.618134,511.484131  z\",id:\"svg_2061\"})),_path2060||(_path2060=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M421.014099,501.625549   C421.005371,502.106384 420.996765,502.293457 420.967590,502.761108   C420.298737,502.261475 419.650452,501.481262 418.998962,500.348938   C419.668610,500.441864 420.341370,500.886841 421.014099,501.625549  z\",id:\"svg_2062\"})),_path2061||(_path2061=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M408.674622,512.471008   C409.443207,512.409790 409.988617,512.561829 410.534027,512.713867   C410.331818,513.068054 410.129608,513.422241 409.927399,513.776428   C409.435425,513.412354 408.943451,513.048340 408.674622,512.471008  z\",id:\"svg_2063\"})),_path2062||(_path2062=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M402.559814,497.557800   C402.856659,496.955292 403.379944,496.584656 403.903259,496.214020   C404.101807,496.583801 404.300354,496.953613 404.498901,497.323425   C403.928040,497.478821 403.357147,497.634216 402.559814,497.557800  z\",id:\"svg_2064\"})),_path2063||(_path2063=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M374.136108,498.559814   C373.957245,498.825378 373.486633,498.939972 373.247498,498.977783   C373.513336,498.060577 374.018341,497.105530 374.791351,496.013306   C374.811218,496.682159 374.563080,497.488220 374.136108,498.559814  z\",id:\"svg_2065\"})),_path2064||(_path2064=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M372.659607,499.006592   C372.186737,499.885162 371.358154,500.766449 370.268982,501.807312   C370.008453,501.966919 369.999146,502.000793 370.009277,501.751282   C370.012726,501.334503 370.006012,501.167267 369.999298,501.000000   C370.767517,500.336456 371.535706,499.672882 372.659607,499.006592  z\",id:\"svg_2066\"})),_path2065||(_path2065=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M367.005035,495.005310   C367.257904,494.451050 367.484009,493.878998 367.787140,493.351166   C367.817596,493.298126 368.314758,493.513092 368.595306,493.603668   C368.264862,494.040833 367.934418,494.478027 367.296753,494.952759   C366.989532,494.990295 367.000000,495.000000 367.005035,495.005310  z\",id:\"svg_2067\"})),_path2066||(_path2066=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M442.999115,522.734375   C442.831665,522.984619 442.652161,522.978760 442.203735,522.947327   C442.131775,522.496155 442.328766,522.070679 442.525757,521.645142   C442.679535,521.922852 442.833313,522.200500 442.999115,522.734375  z\",id:\"svg_2068\"})),_path2067||(_path2067=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M369.824371,501.088989   C370.006012,501.167267 370.012726,501.334503 370.025665,501.752899   C369.904388,501.728699 369.776917,501.453339 369.824371,501.088989  z\",id:\"svg_2069\"})),_path2068||(_path2068=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M392.446716,507.430450   C392.503387,507.394684 392.390015,507.466217 392.446716,507.430450  z\",id:\"svg_2070\"})),_path2069||(_path2069=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M406.437317,515.540344   C406.394928,515.474304 406.479675,515.606384 406.437317,515.540344  z\",id:\"svg_2071\"})),_path2070||(_path2070=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M402.619324,527.416992   C402.700836,527.526855 402.405548,527.587646 402.405548,527.587646   C402.405548,527.587646 402.537781,527.307129 402.619324,527.416992  z\",id:\"svg_2072\"})),_path2071||(_path2071=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M362.436462,529.536133   C362.393707,529.467712 362.479187,529.604492 362.436462,529.536133  z\",id:\"svg_2073\"})),_path2072||(_path2072=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M358.546387,531.564575   C358.476227,531.609009 358.616516,531.520142 358.546387,531.564575  z\",id:\"svg_2074\"})),_path2073||(_path2073=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M367.990112,540.233032   C368.104126,540.405090 368.048431,540.578552 367.992706,540.752075   C367.935303,540.579529 367.877869,540.406982 367.990112,540.233032  z\",id:\"svg_2075\"})),_path2074||(_path2074=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M415.010468,415.031525   C415.315918,413.929962 415.621399,412.828430 415.965759,411.384583   C417.691132,409.508209 419.276611,407.834717 421.111450,406.505371   C421.898224,405.935394 423.203522,406.081116 425.173828,405.750519   C425.355743,405.430664 426.276215,403.812225 427.458313,402.411621   C427.956970,403.087402 428.194061,403.545319 428.431152,404.003235   C428.820374,403.778809 429.209625,403.554413 429.598877,403.330017   C429.105865,402.845673 428.612854,402.361328 428.119812,401.877014   C428.406250,401.005096 428.692719,400.133209 428.979187,399.261322   C434.248169,401.910126 435.298920,395.926025 439.140564,394.244110   C440.125153,393.299164 440.574371,392.668030 441.019135,392.029846   C441.014679,392.022766 441.036774,392.024750 441.036804,392.024780   C442.797913,390.780487 444.559052,389.536194 446.917969,388.324615   C449.010101,391.209869 450.504456,394.062378 451.988281,397.266907   C451.984650,398.086639 451.991516,398.554321 451.997986,399.009552   C451.997589,398.997070 452.022614,398.997650 451.791992,399.006836   C451.374084,399.343231 451.186768,399.670441 450.993958,400.374298   C450.079468,403.006439 449.170441,405.261963 448.077148,407.974731   C448.908752,408.717712 450.743896,410.609192 450.912933,410.470459   C453.383301,408.443054 455.631195,406.144623 457.707184,404.129120   C456.654266,402.136475 455.826538,400.569946 455.267029,398.782288   C456.697083,397.707886 457.858887,396.854584 459.008575,396.002441   C458.996429,396.003662 458.997192,395.979340 459.045715,396.328918   C460.046570,397.116394 460.998901,397.554291 462.293671,398.042969   C464.097260,399.395447 465.558411,400.697113 467.265259,401.996460   C467.511017,401.994110 468.002441,402.002441 467.971039,402.349731   C467.634827,403.808075 467.329987,404.919159 467.011139,406.020538   C466.997101,406.010864 467.028137,406.014191 466.774414,406.169373   C466.347015,406.878448 466.173340,407.432373 466.035583,408.311035   C468.047241,408.423431 470.023010,408.211090 471.999390,407.999390   C472.000000,408.000000 472.000183,408.001221 471.860657,408.312744   C470.535095,410.023865 469.349091,411.423492 468.582184,412.328522   C469.420868,413.925446 470.271088,415.544342 471.528534,417.938629   C469.209717,417.461578 468.101135,417.233490 467.125549,416.702759   C466.503906,415.601807 465.749268,414.803558 464.997681,413.630249   C464.357269,412.585052 463.713806,411.914917 463.070374,411.244751   C462.785248,411.746857 462.500122,412.248901 462.215027,412.750946   C463.145081,413.165527 464.075165,413.580109 465.011230,414.370972   C465.013092,415.499817 465.009003,416.252350 464.638977,417.007416   C462.240387,418.595490 460.207672,420.181000 458.715515,421.344910   C459.646362,423.658997 460.317078,425.326385 460.710846,427.186523   C460.289673,428.250916 460.145447,429.122589 460.001221,429.994232   C459.976288,430.188416 459.951324,430.382568 459.540375,430.770813   C456.474030,429.654114 453.793701,428.343323 451.113373,427.032532   C449.655121,428.016785 448.196869,429.001038 446.369324,429.992615   C446.000000,430.000000 445.998779,429.998779 446.001221,429.611816   C446.002258,428.192871 446.000854,427.160858 446.010742,425.762024   C445.354095,424.615753 444.686218,423.836334 444.139404,422.730957   C444.274292,421.391632 444.288055,420.378326 444.301819,419.365021   C443.525482,419.845612 442.749146,420.326233 441.672150,420.873566   C440.909973,421.293518 440.448486,421.646698 439.993896,422.000549   C440.000763,422.001221 440.000183,421.987701 439.738190,422.013733   C439.300751,422.034668 439.125275,422.029572 438.944031,421.765625   C438.807861,421.276459 438.677460,421.046082 438.547058,420.815704   C438.437195,421.272522 438.327301,421.729340 438.160706,422.533600   C438.012451,423.579071 437.920959,424.277069 437.481689,424.934753   C435.088837,423.929626 433.043823,422.964813 431.237000,421.822144   C432.267090,420.560028 433.058899,419.475769 433.931427,418.281006   C433.044342,417.250000 432.137360,416.195953 430.742432,414.574768   C433.243286,413.258057 435.295654,412.177460 437.649078,410.938354   C437.332428,410.272064 436.883881,409.328308 437.049316,409.676392   C433.187378,409.676392 430.364777,409.676392 426.769684,409.676392   C433.012115,411.915863 427.853882,414.571869 427.576050,416.971436   C426.099335,416.753113 424.739502,416.856628 423.962158,416.233521   C421.095581,413.935547 419.966827,415.666412 418.676758,417.941711   C417.252838,416.880127 416.131653,415.955811 415.010468,415.031525  M445.725159,407.110962   C445.816772,407.073975 445.908386,407.036957 446.276459,406.893829   C446.184296,406.929230 446.092163,406.964600 445.725159,407.110962  M449.780151,421.088440   C451.512878,422.066467 453.245575,423.044525 455.093933,424.689484   C455.806671,424.991333 456.519409,425.293182 457.232178,425.595032   C457.359802,425.223938 457.487427,424.852814 457.615051,424.481720   C456.751587,424.312714 455.888092,424.143707 455.031097,423.273590   C454.411774,422.213104 453.813751,421.139435 453.168671,420.094879   C451.795197,417.871063 452.310089,416.793762 455.065918,417.649323   C455.708466,418.363190 456.351013,419.077057 456.993561,419.790924   C457.299957,419.368744 457.606354,418.946533 457.912750,418.524323   C456.939941,418.018005 455.967133,417.511688 455.015411,416.252502   C455.008240,415.499634 455.001068,414.746765 455.620148,414.004761   C456.184723,413.840576 456.749268,413.676361 457.313843,413.512177   C457.079742,413.151398 456.845642,412.790619 456.611572,412.429871   C456.076233,412.955231 455.540894,413.480591 454.269562,414.015961   C452.481628,416.311920 450.693695,418.607849 448.343079,421.001770   C448.067108,421.428162 447.791107,421.854553 447.515137,422.280945   C447.773804,422.379974 448.224030,422.611023 448.261047,422.557343   C448.578857,422.096100 448.821991,421.583344 449.780151,421.088440  z\",id:\"svg_2076\"})),_path2075||(_path2075=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M451.998779,396.914917   C450.504456,394.062378 449.010101,391.209869 447.227386,388.165894   C447.835815,386.675629 448.552246,385.164185 449.714355,384.178040   C450.209320,383.757996 452.010620,384.083588 452.571960,384.679352   C454.521606,386.748444 454.814972,385.540955 455.004303,383.348938   C454.999573,383.000427 454.990540,383.009796 454.990540,383.009796   C457.915833,384.204041 460.945282,385.297852 461.007507,389.622772   C461.003967,389.994904 461.018188,389.987732 460.653656,389.987732   C457.525665,392.296814 454.762238,394.605865 451.998779,396.914917  z\",id:\"svg_2077\"})),_path2076||(_path2076=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M467.019531,401.998779   C465.558411,400.697113 464.097260,399.395447 462.249207,397.698792   C460.907257,396.862335 459.952209,396.420837 458.997192,395.979340   C458.997192,395.979340 458.996429,396.003662 459.001038,395.635010   C459.676514,393.506775 460.347321,391.747253 461.018188,389.987732   C461.018188,389.987732 461.003967,389.994904 461.000580,390.002686   C462.057556,390.011810 463.117950,390.013092 464.580933,390.011047   C464.983521,390.007690 464.971680,390.022125 465.016846,390.346069   C465.703827,391.108643 466.345642,391.547241 466.987457,391.985870   C466.987457,391.985870 467.003448,392.003571 467.009705,392.394653   C467.804840,394.451355 468.593719,396.116974 469.294403,397.596344   C468.686890,398.772034 467.853210,400.385406 467.019531,401.998779  M464.422424,395.481812   C464.422424,395.481812 464.524231,395.420441 464.422424,395.481812  z\",id:\"svg_2078\"})),_path2077||(_path2077=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M468.876038,387.973389   C468.693909,388.771606 468.222534,389.362640 467.088409,389.985291   C465.941010,390.018677 465.456360,390.020386 464.971680,390.022095   C464.971680,390.022125 464.983521,390.007690 464.978577,390.019348   C464.243011,388.619537 463.512421,387.208038 462.625732,385.494934   C465.711609,382.479919 466.780670,386.363159 468.876038,387.973389  z\",id:\"svg_2079\"})),_path2078||(_path2078=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AD703F\",opacity:1,stroke:\"none\",d:\" M438.991272,391.990753   C439.428711,391.349731 439.873260,390.716339 440.629211,390.038239   C440.961548,390.444763 440.982483,390.895966 441.020081,391.685974   C441.036774,392.024750 441.014679,392.022766 440.679810,392.017334   C439.892700,392.004089 439.440460,391.996277 438.988251,391.988464   C438.988251,391.988464 438.998383,391.998352 438.991272,391.990753  z\",id:\"svg_2080\"})),_path2079||(_path2079=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M455.004456,382.996826   C454.563202,382.585846 454.117035,382.178467 453.670837,381.771118   C453.865204,381.625916 454.059570,381.480743 454.253967,381.335571   C454.490723,381.706940 454.727448,382.078278 454.977356,382.729706   C454.990540,383.009796 454.999573,383.000427 455.004456,382.996826  z\",id:\"svg_2081\"})),_path2080||(_path2080=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M470.990936,386.009155   C470.537354,385.876740 470.091797,385.736237 469.646210,385.595764   C470.025269,385.575195 470.404358,385.554657 470.897888,385.758759   C471.012360,385.983398 470.998932,386.001038 470.990936,386.009155  z\",id:\"svg_2082\"})),_path2081||(_path2081=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M476.998138,327.998108   C476.873993,328.452362 476.751740,328.908447 476.629456,329.364532   C476.608002,328.992462 476.586609,328.620392 476.784454,328.125519   C477.003693,328.002716 477.000000,328.000000 476.998138,327.998108  z\",id:\"svg_2083\"})),_path2082||(_path2082=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DF9254\",opacity:1,stroke:\"none\",d:\" M474.242096,321.844849   C473.684509,321.904724 473.416046,321.716614 473.107178,321.208435   C473.488770,320.813416 473.976532,320.644531 474.464325,320.475647   C474.464661,320.880707 474.464996,321.285797 474.242096,321.844849  z\",id:\"svg_2084\"})),_path2083||(_path2083=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1B18\",opacity:1,stroke:\"none\",d:\" M434.990265,380.991943   C433.505432,381.874115 432.020599,382.756256 430.266052,383.828979   C427.834869,382.543579 425.673401,381.067657 423.350891,379.481720   C424.212646,377.911896 425.017059,376.446533 425.821472,374.981201   C425.559540,374.740784 425.297638,374.500336 425.035706,374.259918   C420.647034,378.351105 416.258331,382.442261 411.560425,386.821716   C410.610718,386.618927 409.188080,386.315125 407.165222,385.735474   C405.911865,385.241211 405.258698,385.022858 404.529724,384.494690   C405.119659,383.742249 405.767548,383.269592 406.454102,382.862091   C409.709137,380.929932 412.974762,379.015625 416.563171,377.041840   C419.286896,374.384003 421.684052,371.779266 424.407471,369.039734   C426.395813,365.394928 428.359955,361.980957 429.525696,358.313232   C429.851746,357.287354 428.107697,354.660339 426.825256,354.233337   C421.867340,352.582489 420.461212,356.290619 419.232849,360.379028   C418.382202,362.384369 417.620270,364.034149 416.542023,365.814514   C414.801331,367.400513 413.376984,368.855896 411.625244,370.259399   C410.054413,370.888397 408.811005,371.569305 407.187500,372.190247   C405.863129,372.808746 404.918884,373.487244 403.757446,374.261627   C403.219757,374.460571 402.910522,374.433777 402.101379,374.196777   C396.388916,374.416077 391.187714,374.715698 385.615540,375.013245   C384.505432,374.960175 383.766296,374.909180 383.002716,374.487915   C381.331665,373.069092 379.685059,372.020508 378.416351,370.977264   C381.906952,370.690643 385.019623,370.398682 388.343750,370.086914   C388.299622,370.324005 388.139313,371.185089 387.909332,372.420624   C396.220306,371.278107 404.924988,374.568817 411.639069,367.418152   C409.322662,363.499878 409.650604,360.934723 414.601624,359.680389   C416.005768,359.324646 416.909607,356.873444 417.973053,355.334930   C418.708649,354.270630 419.324402,353.123505 420.162903,352.239868   C421.220154,351.975525 422.108246,351.484711 423.363770,350.957428   C426.833099,349.379028 428.679138,350.771545 430.886627,353.115692   C433.432892,355.819611 430.757690,358.382812 431.488892,360.564362   C433.458466,366.440521 429.056244,370.507629 428.073669,375.488220   C427.876617,376.487091 427.814880,377.512604 427.690765,378.525848   C428.708954,378.368774 430.324493,378.558380 430.649139,377.998871   C432.893250,374.131500 434.917297,376.510834 437.020630,378.006683   C437.020630,378.006683 437.003632,378.000641 436.661469,378.056885   C435.876282,379.072754 435.433289,380.032349 434.990265,380.991943  z\",id:\"svg_2085\"})),_path2084||(_path2084=/*#__PURE__*/React.createElement(\"path\",{fill:\"#182827\",opacity:1,stroke:\"none\",d:\" M352.365540,359.069641   C353.700104,354.869934 356.156219,351.730377 361.783661,352.258423   C362.764099,353.263184 363.159454,353.988831 363.194061,354.619385   C361.023987,355.234924 357.825897,355.736176 357.680878,356.697876   C357.328217,359.036163 358.393463,361.588348 358.919586,364.387726   C359.104462,365.138824 359.257294,365.556580 359.367645,366.281525   C359.883789,367.053314 360.442444,367.517883 361.043549,368.245300   C361.167999,368.665680 361.250031,368.823151 361.303314,369.283844   C361.851685,370.016907 362.428802,370.446686 363.280884,371.067261   C366.003723,373.283875 368.451569,375.309692 370.969299,377.673706   C373.015472,379.042358 374.946808,380.173553 376.978546,381.079590   C380.014099,382.433228 383.120331,383.628357 385.894684,384.930725   C385.019867,385.059875 384.446869,385.149200 383.873901,385.238525   C384.254211,385.825256 384.634521,386.412018 385.014832,386.998779   C383.664032,387.529724 382.313263,388.060669 380.647522,388.715393   C379.587769,384.556030 377.452423,386.202118 376.038971,386.916962   C373.364655,384.790283 370.993530,381.737366 367.949280,380.740906   C362.572388,378.980957 360.220795,374.993683 358.035553,370.562469   C356.179230,366.798248 354.492767,362.950226 352.365540,359.069641  z\",id:\"svg_2086\"})),_path2085||(_path2085=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M385.434479,386.996246   C384.634521,386.412018 384.254211,385.825256 383.873901,385.238525   C384.446869,385.149200 385.019867,385.059875 386.345856,384.899017   C392.934387,384.819824 398.769958,384.812164 404.605499,384.804504   C405.258698,385.022858 405.911865,385.241211 406.782928,385.729889   C399.951904,386.331390 392.902985,386.662567 385.434479,386.996246  z\",id:\"svg_2087\"})),_path2086||(_path2086=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1A1B18\",opacity:1,stroke:\"none\",d:\" M425.861084,385.784119   C426.023529,386.174927 426.018951,386.344971 426.005371,386.770325   C425.487030,386.587219 424.977692,386.148773 424.468384,385.710358   C424.876953,385.661346 425.285522,385.612335 425.861084,385.784119  z\",id:\"svg_2088\"})),_path2087||(_path2087=/*#__PURE__*/React.createElement(\"path\",{fill:\"#22201E\",opacity:1,stroke:\"none\",d:\" M422.996338,350.993896   C422.108246,351.484711 421.220154,351.975525 420.165283,351.843445   C419.876678,349.968567 419.754913,348.716583 419.480042,345.890564   C416.457642,349.170807 414.734192,352.428925 412.113342,353.508331   C409.306427,354.664490 405.654541,353.769135 402.261414,353.769135   C401.245911,351.980316 400.125397,350.006500 399.004883,348.032715   C400.070587,348.036804 401.136322,348.040894 402.663849,348.397583   C404.055756,349.109680 404.985840,349.469208 405.915924,349.828735   C405.952942,349.222290 405.989960,348.615875 406.026978,348.009430   C403.361359,347.051117 400.761841,345.753540 398.013824,345.218079   C394.360596,344.506287 390.591644,344.388458 386.445923,343.648773   C386.761139,342.305878 387.807159,341.431305 388.174988,340.330170   C388.761078,338.575653 389.835205,335.937592 389.065247,334.950256   C384.771179,329.443939 379.886780,324.493286 371.981049,325.014709   C367.563965,322.770599 369.788513,320.908417 373.067200,319.035339   C377.989014,319.775696 382.396881,319.944427 386.296844,321.438660   C394.455811,324.564758 402.405426,328.075623 411.471405,327.061676   C412.235382,326.976227 413.106201,327.846649 413.546844,328.291473   C406.669952,329.122803 403.424194,331.476898 402.506714,337.084595   C402.138519,339.334961 401.669006,342.886414 406.221863,342.910889   C406.428223,342.993958 406.867157,343.066498 406.989349,343.443848   C408.095245,344.798126 408.966309,346.452240 410.081604,346.637726   C415.657318,347.564850 418.275024,345.648132 419.993225,339.935822   C420.919769,338.050446 421.846283,336.165039 422.862579,334.097046   C423.318787,334.598755 424.116333,335.475861 424.755005,336.797058   C424.608612,337.584076 424.621185,337.927002 424.633728,338.269958   C424.754608,337.845428 424.875458,337.420868 424.996338,336.996338   C425.737396,336.990417 426.478485,336.984497 427.841309,337.164124   C428.310944,338.572266 428.158813,339.794800 427.798889,341.277588   C426.727570,341.687073 425.864075,341.836334 424.983337,341.735046   C424.803284,341.223999 424.640442,340.963501 424.477600,340.702972   C424.319092,341.141754 424.160583,341.580566 423.686523,342.161011   C419.277313,344.310944 421.808899,346.687958 422.998779,349.324280   C422.997955,350.103485 422.997162,350.548676 422.996338,350.993896  z\",id:\"svg_2089\"})),_path2088||(_path2088=/*#__PURE__*/React.createElement(\"path\",{fill:\"#182827\",opacity:1,stroke:\"none\",d:\" M371.921448,325.366028   C379.886780,324.493286 384.771179,329.443939 389.065247,334.950256   C389.835205,335.937592 388.761078,338.575653 388.174988,340.330170   C387.807159,341.431305 386.761139,342.305878 386.017517,343.661438   C384.136078,344.671295 382.256500,345.301849 380.155823,345.588959   C381.081757,343.842926 382.228790,342.440338 383.525452,340.684418   C383.851013,338.870300 384.679565,337.008728 384.076324,336.026398   C382.483429,333.432495 380.624084,330.678528 378.164001,329.067780   C376.788696,328.167328 374.006317,329.415863 371.489807,329.749786   C365.702301,333.468933 365.170471,336.436676 368.425873,344.846130   C368.192780,344.877808 367.959656,344.909515 367.377380,344.991241   C365.242096,342.556671 362.179932,340.186859 361.943939,337.562897   C361.497223,332.595551 365.055908,329.243835 369.439056,327.048584   C370.262360,326.636261 371.055023,326.162689 371.921448,325.366028  z\",id:\"svg_2090\"})),_path2089||(_path2089=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M413.927368,328.273010   C413.106201,327.846649 412.235382,326.976227 411.471405,327.061676   C402.405426,328.075623 394.455811,324.564758 386.296844,321.438660   C382.396881,319.944427 377.989014,319.775696 373.413300,318.995483   C373.009125,318.538208 373.002869,318.092102 372.998291,317.310699   C379.400452,318.590149 386.090454,317.237457 392.550781,320.586090   C397.612610,323.209808 404.159546,322.916107 410.012726,324.088135   C412.802124,324.646637 416.325836,324.631317 415.691101,329.475616   C414.900879,329.345581 414.414124,328.809296 413.927368,328.273010  z\",id:\"svg_2091\"})),_path2090||(_path2090=/*#__PURE__*/React.createElement(\"path\",{fill:\"#22201E\",opacity:1,stroke:\"none\",d:\" M360.848206,319.462952   C361.463715,321.127747 361.773499,322.856323 362.147949,324.945557   C357.736237,324.162872 359.806244,321.627716 360.848206,319.462952  z\",id:\"svg_2092\"})),_path2091||(_path2091=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M358.529053,343.552490   C358.474121,343.585236 358.584015,343.519775 358.529053,343.552490  z\",id:\"svg_2093\"})),_path2092||(_path2092=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222220\",opacity:1,stroke:\"none\",d:\" M398.581116,348.026123   C400.125397,350.006500 401.245911,351.980316 402.261414,353.769135   C405.654541,353.769135 409.306427,354.664490 412.113342,353.508331   C414.734192,352.428925 416.457642,349.170807 419.480042,345.890564   C419.754913,348.716583 419.876678,349.968567 419.996094,351.617004   C419.324402,353.123505 418.708649,354.270630 417.973053,355.334930   C416.909607,356.873444 416.005768,359.324646 414.601624,359.680389   C409.650604,360.934723 409.322662,363.499878 411.639069,367.418152   C404.924988,374.568817 396.220306,371.278107 387.909332,372.420624   C388.139313,371.185089 388.299622,370.324005 388.343750,370.086914   C385.019623,370.398682 381.906952,370.690643 378.360291,370.604614   C376.249451,367.139954 375.007751,363.674316 372.755615,361.088806   C371.009094,359.083679 368.000214,358.178162 365.411682,356.689056   C365.270966,356.594238 365.072601,356.319214 364.937195,356.013855   C364.446106,355.453125 364.090424,355.197754 363.671692,354.899658   C363.608643,354.856964 363.554779,354.714508 363.554779,354.714508   C363.159454,353.988831 362.764099,353.263184 362.182800,352.258240   C364.793518,351.341888 367.886475,349.626190 370.324341,350.295715   C375.173004,351.627441 378.843750,348.769196 383.066101,348.274536   C388.038208,347.691956 393.121979,348.062317 398.581116,348.026123  z\",id:\"svg_2094\"})),_path2093||(_path2093=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6DABAB\",opacity:1,stroke:\"none\",d:\" M368.794525,344.795959   C365.170471,336.436676 365.702301,333.468933 371.663391,330.053925   C376.558105,333.612762 370.165894,333.412262 370.454742,335.654388   C374.753448,337.445374 379.064636,339.241577 383.375793,341.037720   C382.228790,342.440338 381.081757,343.842926 379.752380,345.551208   C375.835663,347.972504 372.665558,344.803101 368.794525,344.795959  z\",id:\"svg_2095\"})),_path2094||(_path2094=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222220\",opacity:1,stroke:\"none\",d:\" M405.647949,348.011353   C405.989960,348.615875 405.952942,349.222290 405.915924,349.828735   C404.985840,349.469208 404.055756,349.109680 403.062683,348.425323   C403.756104,348.071411 404.512482,348.042328 405.647949,348.011353  z\",id:\"svg_2096\"})),_path2095||(_path2095=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M439.001831,392.328552   C439.440460,391.996277 439.892700,392.004089 440.684265,392.024414   C440.574371,392.668030 440.125153,393.299164 439.362091,393.980408   C439.037292,393.576538 439.026367,393.122620 439.001831,392.328552  z\",id:\"svg_2097\"})),_path2096||(_path2096=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA8B68\",opacity:1,stroke:\"none\",d:\" M402.302643,407.992920   C402.461823,407.658325 402.926392,407.327148 403.698181,406.992981   C403.539612,407.325439 403.073822,407.660889 402.302643,407.992920  z\",id:\"svg_2098\"})),_path2097||(_path2097=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M406.987183,410.009552   C406.847351,409.848999 406.721466,409.676575 406.595581,409.504181   C406.700806,409.554169 406.806000,409.604156 406.968018,409.811829   C407.024780,409.969482 407.001160,409.997711 406.987183,410.009552  z\",id:\"svg_2099\"})),_path2098||(_path2098=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6DABAB\",opacity:1,stroke:\"none\",d:\" M413.546844,328.291473   C414.414124,328.809296 414.900879,329.345581 415.692993,329.865540   C416.430817,329.937653 416.863281,330.026123 417.626709,330.145386   C418.584412,333.155518 419.211212,336.134888 419.915619,339.525024   C418.275024,345.648132 415.657318,347.564850 410.081604,346.637726   C408.966309,346.452240 408.095245,344.798126 407.368591,343.424316   C409.171204,343.637024 410.716766,344.246643 412.922638,345.116730   C412.526672,343.313599 412.288910,342.231079 412.000275,340.916779   C413.601410,341.148590 414.996674,341.350616 416.471680,341.564178   C416.471680,339.176300 416.471680,336.971588 416.471680,334.633209   C412.717651,333.010529 408.901123,331.797760 406.117126,336.357208   C406.514954,336.544495 406.912811,336.731750 407.310638,336.919006   C406.878937,338.888611 406.447205,340.858185 406.015503,342.827789   C401.669006,342.886414 402.138519,339.334961 402.506714,337.084595   C403.424194,331.476898 406.669952,329.122803 413.546844,328.291473  z\",id:\"svg_2100\"})),_path2099||(_path2099=/*#__PURE__*/React.createElement(\"path\",{fill:\"#160E0B\",opacity:1,stroke:\"none\",d:\" M386.073273,303.446411   C389.717682,302.952698 393.423706,302.830078 397.585754,302.803619   C394.072784,303.205658 390.103851,303.511536 386.073273,303.446411  z\",id:\"svg_2101\"})),_path2100||(_path2100=/*#__PURE__*/React.createElement(\"path\",{fill:\"#160E0B\",opacity:1,stroke:\"none\",d:\" M382.917725,304.072144   C382.509155,303.952026 382.367096,303.722839 382.225037,303.493652   C382.612488,303.350098 382.999939,303.206573 383.675842,303.104736   C383.704285,303.418701 383.444244,303.690887 382.917725,304.072144  z\",id:\"svg_2102\"})),_path2101||(_path2101=/*#__PURE__*/React.createElement(\"path\",{fill:\"#160E0B\",opacity:1,stroke:\"none\",d:\" M404.153442,303.298737   C404.457184,303.048981 404.889984,303.022583 405.642670,303.061707   C405.402496,303.258881 404.842499,303.390472 404.153442,303.298737  z\",id:\"svg_2103\"})),_path2102||(_path2102=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M429.534668,319.550110   C429.477936,319.583893 429.591431,319.516296 429.534668,319.550110  z\",id:\"svg_2104\"})),_path2103||(_path2103=/*#__PURE__*/React.createElement(\"path\",{fill:\"#160E0B\",opacity:1,stroke:\"none\",d:\" M402.440918,305.536987   C402.399841,305.470459 402.481995,305.603485 402.440918,305.536987  z\",id:\"svg_2105\"})),_path2104||(_path2104=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222220\",opacity:1,stroke:\"none\",d:\" M423.363770,350.957428   C422.997162,350.548676 422.997955,350.103485 423.280396,349.066101   C423.906525,347.078247 424.251007,345.682556 424.559265,344.433533   C428.456024,343.731873 432.022522,343.089630 435.589050,342.447418   C435.540894,341.970734 435.492737,341.494049 435.444580,341.017365   C432.965271,341.017365 430.485962,341.017365 428.006653,341.017365   C428.158813,339.794800 428.310944,338.572266 428.211823,337.157837   C430.075714,336.438812 432.253967,335.311798 434.291199,335.526001   C437.303497,335.842743 440.215607,337.112335 443.574188,337.955322   C447.563843,339.380524 447.193878,342.485596 446.976654,345.401917   C446.568573,350.879913 448.750305,356.582611 443.383728,361.507690   C441.171600,363.537842 441.919983,368.613464 440.886047,372.177490   C440.293243,374.220978 438.826202,376.010834 437.386688,377.960785   C434.917297,376.510834 432.893250,374.131500 430.649139,377.998871   C430.324493,378.558380 428.708954,378.368774 427.690765,378.525848   C427.814880,377.512604 427.876617,376.487091 428.073669,375.488220   C429.056244,370.507629 433.458466,366.440521 431.488892,360.564362   C430.757690,358.382812 433.432892,355.819611 430.886627,353.115692   C428.679138,350.771545 426.833099,349.379028 423.363770,350.957428  M433.508209,372.898834   C435.035278,371.847168 436.562347,370.795502 438.089417,369.743835   C437.790833,369.171448 437.492218,368.599060 437.193604,368.026672   C435.745331,368.838501 434.188843,369.515442 432.911316,370.540192   C432.500519,370.869720 432.825470,372.116394 433.508209,372.898834  z\",id:\"svg_2106\"})),_path2105||(_path2105=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222220\",opacity:1,stroke:\"none\",d:\" M435.335510,380.943665   C435.433289,380.032349 435.876282,379.072754 436.663879,378.064880   C436.565918,378.976166 436.123352,379.935760 435.335510,380.943665  z\",id:\"svg_2107\"})),_path2106||(_path2106=/*#__PURE__*/React.createElement(\"path\",{fill:\"#22201E\",opacity:1,stroke:\"none\",d:\" M426.551147,331.464233   C426.583160,331.518250 426.519165,331.410217 426.551147,331.464233  z\",id:\"svg_2108\"})),_path2107||(_path2107=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M466.992584,417.005432   C468.101135,417.233490 469.209717,417.461578 471.528534,417.938629   C470.271088,415.544342 469.420868,413.925446 468.582184,412.328522   C469.349091,411.423492 470.535095,410.023865 472.135437,408.543671   C472.186584,415.005402 472.186584,415.005402 477.131897,416.122681   C472.367493,409.784058 479.671936,408.653137 481.334076,404.592072   C482.869507,405.830017 483.999573,406.741119 485.904724,408.277161   C485.017700,405.805389 484.517517,404.411591 484.017365,403.017792   C486.666199,400.655060 489.315063,398.292297 492.123901,395.786835   C493.413116,396.743683 494.895752,397.844086 496.723083,398.966400   C497.797729,399.991699 498.527740,400.995087 499.633911,401.994202   C500.706543,402.986969 501.381226,404.000183 502.106232,404.975983   C502.692596,405.765259 503.339539,406.509460 503.938599,408.000061   C502.593719,409.819427 501.269836,410.912384 499.650482,411.869324   C497.573334,413.492218 495.791656,415.251190 493.640411,416.988373   C491.795319,416.021179 490.319794,415.075745 488.844269,414.130341   C488.516571,414.528351 488.188904,414.926392 487.861206,415.324402   C489.299622,416.866486 490.738007,418.408600 492.176453,419.950684   C492.780975,418.963684 493.385529,417.976685 494.330383,417.029053   C495.843597,418.045563 497.016418,419.022675 498.588409,420.332336   C500.224731,417.990814 501.608246,416.011047 503.037964,413.703003   C504.629517,413.374725 506.174927,413.374725 508.112762,413.374725   C507.288727,416.236084 506.821320,417.859039 506.353912,419.482025   C506.643097,419.684906 506.932281,419.887787 507.221466,420.090637   C508.333527,419.058502 509.445557,418.026337 510.349274,417.187561   C512.148621,418.223846 513.634033,419.079346 515.119507,419.934845   C517.515564,421.054962 519.888306,422.229095 522.316040,423.275879   C523.884155,423.952118 525.532837,424.441742 527.541138,425.065918   C527.943787,425.527039 527.950806,425.937225 527.668579,426.706604   C527.558472,427.726990 527.737671,428.388184 527.916870,429.049408   C528.685364,431.767487 533.196106,433.862976 529.153687,437.668884   C527.292847,439.105408 525.577271,440.230316 523.346497,441.693024   C521.894592,440.512909 520.018494,438.988007 517.310364,436.786774   C513.278503,440.692993 509.058044,444.781952 504.837616,448.870941   C504.320068,448.631165 503.802521,448.391418 503.284973,448.151672   C503.904633,446.471863 504.524292,444.792023 505.474976,442.214783   C504.235901,441.268890 502.353668,439.832062 500.471436,438.395203   C500.294220,439.692749 500.116974,440.990265 499.970123,442.643585   C500.000549,442.999390 499.994293,443.008545 499.994293,443.008545   C497.232941,444.490997 494.471588,445.973450 491.377441,447.634583   C491.727997,445.712433 492.065582,443.861603 492.656158,440.623657   C488.510498,443.261322 485.606628,445.108887 482.083008,447.350800   C483.755188,448.820557 485.509247,450.362274 487.603912,452.279968   C487.925232,453.079559 487.905945,453.503174 487.886658,453.926819   C487.359589,454.118134 486.832520,454.309448 485.792297,454.703979   C483.122437,455.866913 485.005768,447.808136 480.642670,452.984314   C479.891235,452.995270 479.461761,452.996246 479.050232,452.660950   C478.713409,451.222412 478.358612,450.120087 477.963104,448.655060   C476.595703,446.214996 475.269043,444.137665 473.969788,442.030212   C473.997192,442.000061 474.048584,441.936890 474.414062,441.943054   C476.852753,439.965729 478.925964,437.982239 481.352112,435.948608   C482.002258,434.983490 482.498749,434.080841 482.556152,433.151093   C482.685272,431.060272 482.596649,428.956024 482.596649,425.781097   C479.810089,422.809631 476.993408,426.082642 473.949646,428.347595   C471.270691,431.125519 468.646973,433.551453 466.023254,435.977386   C465.661743,433.429962 465.427155,430.852936 464.845825,428.356720   C464.707520,427.762939 463.408905,427.439423 462.045593,426.996033   C461.447144,427.000488 460.987793,426.993805 460.987793,426.993805   C460.317078,425.326385 459.646362,423.658997 458.715515,421.344910   C460.207672,420.181000 462.240387,418.595490 464.636536,417.004974   C465.000000,417.000000 464.995117,416.995117 464.997925,417.364929   C465.224518,418.670715 465.448334,419.606720 465.672119,420.542694   C465.983124,420.519470 466.294128,420.496216 466.605133,420.472992   C466.738647,419.313385 466.872162,418.153748 467.002991,416.996887   C467.000336,416.999634 466.992584,417.005432 466.992584,417.005432  M479.650299,412.924042   C480.110016,412.292053 480.569763,411.660065 481.603485,410.934753   C481.908386,410.526489 482.213257,410.118256 482.518158,409.709991   C482.255981,409.618561 481.797882,409.400665 481.762451,409.455536   C481.454987,409.931976 481.223358,410.457336 480.328888,411.050568   C479.880249,411.695892 479.431641,412.341217 478.689240,413.098206   C478.797089,413.070770 478.904968,413.043335 479.650299,412.924042  M499.721649,430.556854   C499.539093,430.296051 499.298553,430.110443 499.003662,429.240234   C499.018250,428.479431 499.032837,427.718597 499.574890,426.559448   C500.211182,424.941711 500.847473,423.323975 501.483795,421.706238   C501.247162,421.622772 501.010529,421.539307 500.773895,421.455841   C498.512817,423.673309 496.251740,425.890778 493.998138,428.842102   C493.988617,429.579071 493.979095,430.316010 493.452271,430.797089   C492.808533,430.971741 492.164795,431.146393 491.521088,431.321045   C492.620270,432.809021 493.719452,434.296997 494.818604,435.784943   C495.550995,435.188385 496.283386,434.591827 497.696136,433.994171   C498.461456,433.638733 499.226776,433.283264 499.966766,432.473511   C499.966766,432.473511 499.952332,432.018707 500.477081,431.983826   C500.719025,431.860321 500.960968,431.736816 501.202881,431.613312   C500.779968,431.397736 500.357056,431.182129 499.721649,430.556854  M513.858337,430.801270   C515.696106,431.472076 517.533936,432.142914 519.371704,432.813721   C519.567078,432.257996 519.762451,431.702301 519.957764,431.146576   C518.064087,429.894135 516.170410,428.641663 513.789246,427.066772   C513.587158,428.555878 513.468140,429.432983 513.858337,430.801270  M507.243500,432.184113   C507.381653,433.752319 507.519806,435.320526 507.657959,436.888733   C508.464447,436.698517 509.270966,436.508331 510.077484,436.318115   C509.370209,434.911469 508.662964,433.504852 507.243500,432.184113  M489.019867,429.358063   C489.540588,429.268860 490.061310,429.179657 490.582031,429.090485   C490.153564,428.509735 489.725098,427.928955 489.296631,427.348175   C489.054260,427.874451 488.811859,428.400757 489.019867,429.358063  M522.092041,428.735992   C522.091003,428.236328 522.089905,427.736633 522.088867,427.236969   C521.539490,427.384186 520.990112,427.531403 520.440735,427.678619   C520.788269,428.072845 521.135864,428.467072 522.092041,428.735992  M476.522095,421.532410   C476.462219,421.782562 476.402344,422.032715 476.342468,422.282867   C476.496521,422.121307 476.650574,421.959747 476.522095,421.532410  M503.825989,432.244873   C503.880524,432.408936 503.935089,432.572998 503.989594,432.737091   C504.043732,432.571167 504.097900,432.405243 503.825989,432.244873  M505.200928,437.237885   C505.026764,437.366241 504.852600,437.494598 504.678436,437.622986   C504.922607,437.595032 505.166809,437.567078 505.200928,437.237885  M492.632690,425.514862   C492.632690,425.514862 492.447784,425.411774 492.447784,425.411774   C492.447784,425.411774 492.475861,425.617615 492.632690,425.514862  z\",id:\"svg_2109\"})),_path2108||(_path2108=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M480.999207,435.998779   C478.925964,437.982239 476.852753,439.965729 474.267365,441.633575   C471.838348,440.209900 469.921509,439.101898 467.949951,437.854431   C467.807983,437.665863 467.720703,437.616730 467.633392,437.567627   C467.753540,437.713409 467.873718,437.859192 468.048950,438.353394   C470.050110,439.821350 471.996246,440.940826 473.942383,442.060333   C475.269043,444.137665 476.595703,446.214996 477.781860,448.904175   C476.998077,450.051147 476.354828,450.586243 475.711609,451.121368   C476.818512,451.746643 477.925385,452.371948 479.032288,452.997223   C479.461761,452.996246 479.891235,452.995270 480.613159,453.295380   C479.156525,454.349487 477.407410,455.102509 475.571594,455.892853   C474.483276,453.519043 473.567291,451.521149 472.493744,449.179565   C471.366394,452.180450 474.169128,457.372131 468.033691,456.666992   C468.790497,455.326538 469.530243,454.319153 470.300354,453.270447   C469.203918,451.957581 468.030334,450.552368 466.273468,448.448761   C464.655426,450.925720 463.325867,452.960999 461.623566,454.990845   C460.505280,454.996643 459.759735,455.007904 459.005981,455.008484   C458.997772,454.997833 458.978424,454.978027 458.986328,454.609558   C459.542969,452.655090 460.091675,451.069061 460.954193,448.575958   C458.813416,449.647491 457.590820,450.259430 456.188629,450.961273   C455.423920,450.021851 454.669952,449.095642 454.058228,448.344177   C451.848145,450.045502 449.925995,451.525177 448.001923,453.002441   C448.000000,453.000000 447.995117,452.996155 448.034241,452.681976   C448.371765,451.222351 448.670166,450.076874 448.968567,448.931427   C448.968567,448.931427 449.005127,448.440247 449.036407,448.195312   C449.946716,446.673767 450.825775,445.397156 452.260590,443.313385   C453.909851,442.724487 456.919678,441.421600 460.060028,440.649811   C461.188232,440.372559 462.630859,441.374817 463.039337,441.506348   C463.961060,439.707947 464.777374,438.115295 465.808472,436.250000   C468.646973,433.551453 471.270691,431.125519 474.259064,428.386566   C476.748871,430.715302 478.874054,433.357025 480.999207,435.998779  M469.503784,443.162506   C469.132111,443.850037 468.760406,444.537567 468.388702,445.225098   C468.956024,445.375885 469.523315,445.526703 470.090637,445.677490   C470.121735,444.889465 470.152863,444.101410 469.503784,443.162506  M459.059540,445.725952   C459.034332,445.384155 459.009094,445.042328 458.983856,444.700562   C458.743927,444.771545 458.503998,444.842560 458.264038,444.913544   C458.383514,445.163147 458.502991,445.412750 459.059540,445.725952  M460.610809,443.522095   C460.610809,443.522095 460.474640,443.607513 460.610809,443.522095  z\",id:\"svg_2110\"})),_path2109||(_path2109=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M430.998779,422.000000   C433.043823,422.964813 435.088837,423.929626 437.709229,425.206970   C439.191376,425.680969 440.098114,425.842377 441.011780,426.006042   C441.018677,426.008331 441.032349,426.015625 441.193268,426.259735   C441.905640,426.662872 442.457092,426.821930 443.023834,427.353027   C444.025665,428.483032 445.012207,429.240906 445.998779,429.998779   C445.998779,429.998779 446.000000,430.000000 446.000641,430.000610   C443.991730,432.350189 442.370697,435.849792 439.854858,436.699188   C437.678955,437.433807 434.486877,435.158630 430.964233,433.945312   C430.789246,434.107727 429.757172,435.065796 428.452850,436.276550   C427.665985,435.223328 427.028687,434.370239 426.395508,433.522736   C424.632751,434.115021 422.925507,438.093567 421.005859,433.285187   C422.542847,430.833801 424.139496,428.770844 425.619659,426.627380   C426.142365,425.870392 426.380493,424.916840 426.537476,423.369232   C422.254303,427.235199 420.405975,423.904968 418.131042,421.226166   C417.972351,420.971771 417.967407,420.955963 418.336945,420.976135   C420.099335,421.645325 421.492188,422.294312 422.740662,422.876038   C424.598724,421.475830 426.268646,420.217438 428.211731,418.984558   C428.667145,419.025330 428.849426,419.040588 428.879822,419.344421   C428.216980,420.509827 427.706055,421.386658 426.596436,423.290771   C428.782501,422.649811 429.890625,422.324921 430.998779,422.000000  M429.314575,427.083771   C429.014923,427.788818 428.715302,428.493835 428.415649,429.198883   C428.784027,429.328003 429.152374,429.457123 429.520721,429.586243   C429.688416,428.730347 429.856140,427.874420 430.297668,426.896454   C430.192322,426.923126 430.086945,426.949829 429.314575,427.083771  M441.483917,431.053741   C441.230072,431.206573 440.976227,431.359436 440.722412,431.512299   C440.983887,431.654633 441.322906,431.970642 441.487976,431.896973   C441.712921,431.796539 441.805298,431.398926 441.483917,431.053741  z\",id:\"svg_2111\"})),_path2110||(_path2110=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M406.584900,429.993713   C407.101410,429.956879 407.271820,429.971039 407.698120,429.990631   C406.895264,433.658051 405.892059,437.338104 404.711975,440.960571   C404.552795,441.449280 403.504364,441.648346 402.996155,441.914307   C402.996155,439.194946 402.996155,436.687073 402.996155,432.951691   C403.372925,432.613953 404.805878,431.329346 406.584900,429.993713  z\",id:\"svg_2112\"})),_path2111||(_path2111=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M451.103027,427.397003   C453.793701,428.343323 456.474030,429.654114 459.491333,431.060333   C460.455292,432.621948 461.082275,434.088104 461.709229,435.554291   C461.294861,435.795715 460.880463,436.037109 460.466064,436.278534   C457.341583,433.439514 454.217133,430.600494 451.103027,427.397003  z\",id:\"svg_2113\"})),_path2112||(_path2112=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M423.998169,450.998169   C423.395996,449.880737 422.795685,448.765106 421.961304,447.214539   C423.145691,445.921143 424.483215,444.460571 425.992249,442.812653   C426.369385,445.630981 426.778839,447.845917 426.851349,450.071777   C426.863281,450.438995 425.398621,450.854309 424.309845,451.125885   C424.003296,451.004395 424.000000,451.000000 423.998169,450.998169  z\",id:\"svg_2114\"})),_path2113||(_path2113=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M408.005859,447.996307   C407.299683,446.642609 406.587311,445.292511 405.874939,443.942413   C406.342102,443.699982 406.809235,443.457550 407.276398,443.215149   C407.339294,445.011719 411.267090,444.799591 408.327911,447.987885   C408.007812,447.985687 407.999695,447.999908 408.005859,447.996307  z\",id:\"svg_2115\"})),_path2114||(_path2114=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M460.710846,427.186523   C460.987793,426.993805 461.447144,427.000488 461.675720,426.995880   C461.501648,427.959473 461.098999,428.927643 460.348816,429.945038   C460.145447,429.122589 460.289673,428.250916 460.710846,427.186523  z\",id:\"svg_2116\"})),_path2115||(_path2115=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M388.227722,439.883545   C388.007629,439.826508 388.007446,439.657318 388.012909,439.234253   C388.018524,438.980347 388.488098,438.973206 388.722046,438.959167   C388.894135,439.286774 388.724701,439.562195 388.227722,439.883545  z\",id:\"svg_2117\"})),_path2116||(_path2116=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M463.541168,431.566742   C463.468323,431.613220 463.444672,431.423248 463.444672,431.423248   C463.444672,431.423248 463.614014,431.520264 463.541168,431.566742  z\",id:\"svg_2118\"})),_path2117||(_path2117=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M388.679932,495.132446   C389.784851,496.223389 390.564850,497.456177 391.265076,498.562897   C389.712067,499.173462 388.021484,499.838135 386.167786,500.756653   C385.069733,499.865143 384.134796,498.719757 382.824463,497.114471   C385.145782,496.342102 386.750397,495.808197 388.679932,495.132446  z\",id:\"svg_2119\"})),_path2118||(_path2118=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M378.982178,494.938721   C378.932465,496.017731 378.882721,497.096741 378.833008,498.175781   C378.480499,498.286407 378.128021,498.397064 377.775513,498.507721   C377.430847,497.577301 377.086182,496.646912 377.202606,495.373962   C378.103210,495.000549 378.542694,494.969635 378.982178,494.938721  z\",id:\"svg_2120\"})),_path2119||(_path2119=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M367.340515,485.965179   C367.455261,485.004852 367.924225,483.991180 368.717041,482.960480   C368.592194,483.932892 368.143494,484.922363 367.340515,485.965179  z\",id:\"svg_2121\"})),_path2120||(_path2120=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M378.974426,492.973267   C379.336975,491.685791 379.699524,490.398285 380.062073,489.110809   C380.540253,489.292969 381.018463,489.475128 381.496674,489.657288   C380.863312,490.682953 380.229980,491.708588 379.297546,492.866272   C378.998474,492.998322 378.974426,492.973267 378.974426,492.973267  z\",id:\"svg_2122\"})),_path2121||(_path2121=/*#__PURE__*/React.createElement(\"path\",{fill:\"#F3A667\",opacity:1,stroke:\"none\",d:\" M378.995300,494.619659   C378.542694,494.969635 378.103210,495.000549 377.340393,495.102539   C377.444580,494.432465 377.872070,493.691284 378.636963,492.961670   C378.974426,492.973267 378.998474,492.998322 379.011108,493.010681   C379.018585,493.448914 379.013489,493.874756 378.995300,494.619659  z\",id:\"svg_2123\"})),_path2122||(_path2122=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M380.533966,496.550964   C380.476990,496.585571 380.590942,496.516388 380.533966,496.550964  z\",id:\"svg_2124\"})),_path2123||(_path2123=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M405.001221,489.001221   C405.399628,488.064941 405.796783,487.127441 406.193970,486.189941   C406.703461,486.466644 407.213013,486.743347 407.722534,487.020050   C407.061768,487.672028 406.400970,488.324005 405.368896,488.986755   C404.997559,488.997559 405.000000,489.000000 405.001221,489.001221  z\",id:\"svg_2125\"})),_path2124||(_path2124=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D69E74\",opacity:1,stroke:\"none\",d:\" M458.921936,480.156342   C456.858398,478.783081 454.794830,477.409821 452.369934,476.044495   C447.893982,472.066620 443.779327,468.080811 439.329285,464.040802   C439.004425,463.243103 439.014984,462.499664 439.281372,461.275177   C440.233215,460.543182 440.929230,460.292175 441.810822,460.341736   C446.581604,464.493805 451.166840,468.345306 455.848511,472.525543   C457.101837,474.708099 458.258728,476.561951 459.286377,478.849304   C459.078766,479.573944 459.000336,479.865143 458.921936,480.156342  z\",id:\"svg_2126\"})),_path2125||(_path2125=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M375.007019,474.007202   C374.782104,474.538025 374.567993,475.071869 374.285706,475.566803   C374.261169,475.609833 373.787537,475.396790 373.522522,475.302673   C373.816986,474.886841 374.111511,474.471008 374.695312,474.020203   C374.984589,473.985199 374.999695,473.999817 375.007019,474.007202  z\",id:\"svg_2127\"})),_path2126||(_path2126=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M364.545532,477.566589   C364.477814,477.610138 364.613220,477.523071 364.545532,477.566589  z\",id:\"svg_2128\"})),_path2127||(_path2127=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M441.625275,460.041168   C440.929230,460.292175 440.233215,460.543182 439.277283,460.903198   C438.863251,460.230835 438.310211,459.030457 438.619568,458.735901   C440.664886,456.788452 440.045837,455.560516 438.066467,453.980957   C436.619965,452.826660 435.685059,451.031250 435.323883,448.786713   C437.443726,450.447815 439.563538,452.108948 441.304657,453.473297   C443.791748,451.886932 446.022491,450.464111 448.610901,448.986328   C448.670166,450.076874 448.371765,451.222351 447.894287,452.735687   C447.811401,453.070679 447.907654,453.037781 448.003845,453.004883   C449.925995,451.525177 451.848145,450.045502 454.058228,448.344177   C454.669952,449.095642 455.423920,450.021851 456.188629,450.961273   C457.590820,450.259430 458.813416,449.647491 460.954193,448.575958   C460.091675,451.069061 459.542969,452.655090 458.625031,454.610565   C457.296906,455.217316 456.337982,455.454620 455.379059,455.691956   C455.638123,456.179657 455.897186,456.667389 456.156219,457.155121   C457.108887,456.443115 458.061554,455.731140 459.014221,455.019165   C459.759735,455.007904 460.505280,454.996643 461.625397,454.992676   C462.000000,455.000000 462.003662,455.005646 462.002014,455.379578   C462.000763,456.501556 462.001160,457.249542 462.000793,457.998779   C462.000000,458.000000 461.998413,458.001709 461.629639,458.010376   C459.531921,458.679596 457.802979,459.340149 455.710510,459.967468   C453.030212,458.708771 450.827698,456.937317 448.362396,456.421326   C446.176880,455.963898 442.486877,453.878021 441.922424,459.135986   C441.776306,459.644592 441.700806,459.842896 441.625275,460.041168  z\",id:\"svg_2129\"})),_path2128||(_path2128=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M440.023987,442.975342   C440.930420,443.193146 441.818604,443.430511 442.706787,443.667877   C442.586975,443.993439 442.467163,444.318970 442.347351,444.644531   C441.648621,444.297821 440.949860,443.951111 440.111633,443.320526   C439.972137,443.036652 440.005768,442.994965 440.023987,442.975342  z\",id:\"svg_2130\"})),_path2129||(_path2129=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M465.880554,506.629913   C465.105377,506.950104 464.396393,506.975800 463.329102,507.012299   C462.534698,506.993958 462.098572,506.964844 461.338806,506.880005   C461.015137,506.824341 461.021942,506.424805 460.813965,505.957977   C459.737854,505.319763 458.869659,505.148407 458.001495,504.977051   C458.001495,504.977051 458.001556,504.998596 458.013123,504.991211   C458.015564,504.246033 458.006439,503.508301 458.010803,502.402527   C461.138184,501.277649 463.992523,505.816803 467.232544,502.485779   C467.323792,503.186340 467.415039,503.886871 467.255676,504.786133   C466.652252,505.434998 466.299469,505.885223 465.880554,506.629913  z\",id:\"svg_2131\"})),_path2130||(_path2130=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M464.147400,495.217804   C464.152008,494.420105 464.314087,493.871948 464.840759,493.388031   C465.489258,493.673553 465.773102,493.894836 466.056976,494.116119   C466.033234,494.546692 466.009460,494.977234 465.958374,495.731049   C465.388977,495.858643 464.846924,495.662994 464.147400,495.217804  z\",id:\"svg_2132\"})),_path2131||(_path2131=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M470.696594,505.026794   C470.572357,505.644409 470.122528,506.290405 469.343140,506.963806   C469.466095,506.345825 469.918549,505.700531 470.696594,505.026794  z\",id:\"svg_2133\"})),_path2132||(_path2132=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M458.947540,480.505981   C459.000336,479.865143 459.078766,479.573944 459.596741,479.001068   C464.121002,481.931610 467.046173,480.377380 469.713989,476.292419   C471.250580,475.435425 472.410339,474.602417 473.690247,474.045471   C479.045929,471.714813 484.683807,469.764893 487.250366,462.349365   C484.371643,462.972717 481.779602,462.815979 480.220062,464.008972   C475.880554,467.328461 471.969849,471.208466 467.529755,474.923523   C463.607483,476.418304 460.933258,475.628784 459.737030,471.914490   C460.672607,471.342499 461.303528,470.751801 462.326538,470.131836   C463.822815,469.081268 464.927002,468.059998 466.021271,467.027191   C466.011383,467.015686 466.037689,467.046844 466.297241,467.193176   C467.425934,467.827026 468.295074,468.314545 469.164185,468.802032   C469.100922,467.885895 469.037689,466.969727 469.211792,465.927856   C469.657104,465.515289 469.865112,465.228424 470.369537,465.074585   C471.399323,465.502472 472.132660,465.797394 473.215942,466.233032   C472.782867,464.416260 472.451233,463.024994 472.347992,462.591766   C474.653595,461.523895 476.324158,460.750183 477.995483,459.990356   C477.996216,460.004272 477.974030,459.986450 478.298035,459.969849   C479.066925,459.320129 479.511749,458.687073 480.244934,457.918488   C481.670624,457.784821 482.888641,457.525848 483.927216,457.847046   C485.675293,458.387665 487.309357,459.296814 488.991394,460.050934   C491.112518,463.988983 489.501373,467.622223 488.000519,471.946198   C487.272797,473.396942 486.619690,474.172058 485.553772,474.959015   C476.637482,475.869232 469.615601,480.024536 462.988525,485.047821   C461.888641,484.367493 460.788727,483.687164 459.361084,482.987122   C459.013245,482.263458 458.993195,481.559509 458.947540,480.505981  z\",id:\"svg_2134\"})),_path2133||(_path2133=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D1884C\",opacity:1,stroke:\"none\",d:\" M463.145752,485.338501   C469.615601,480.024536 476.637482,475.869232 485.530487,475.323792   C484.959259,476.743439 483.905121,477.741333 483.057190,478.891296   C481.332550,481.230286 479.719269,483.651428 478.045502,486.030731   C478.030914,486.022766 478.021881,486.042725 477.677429,486.063629   C476.561829,487.065826 475.790619,488.047150 475.012695,489.021179   C475.005920,489.013885 475.030945,489.026550 475.030945,489.026550   C473.993896,489.569641 472.750244,489.906281 471.960663,490.696594   C469.996765,492.662170 468.693176,492.841064 468.299133,489.351196   C468.893524,488.625793 469.215515,488.319519 469.537537,488.013275   C469.327789,487.831055 469.118042,487.648834 468.908295,487.466614   C468.604706,487.976929 468.301117,488.487244 467.997559,488.997559   C466.432709,487.874756 464.867859,486.751953 463.145752,485.338501  z\",id:\"svg_2135\"})),_path2134||(_path2134=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M477.968567,495.992706   C477.659851,495.893860 477.409760,495.713654 477.115051,495.242493   C477.034485,494.854553 477.057220,494.676270 477.146667,494.236145   C478.138641,494.717285 479.063904,495.460266 479.734497,496.470734   C478.976105,496.489746 478.472321,496.241211 477.968567,495.992706  z\",id:\"svg_2136\"})),_path2135||(_path2135=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M476.992126,489.041901   C476.995850,489.781769 476.999573,490.521667 477.001190,491.631531   C476.342102,491.244720 475.685150,490.487946 475.029602,489.378845   C475.030945,489.026550 475.005920,489.013885 475.341339,489.011658   C476.115204,489.020233 476.553650,489.031067 476.992126,489.041901  z\",id:\"svg_2137\"})),_path2136||(_path2136=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M466.220001,493.938232   C465.773102,493.894836 465.489258,493.673553 465.074707,493.213623   C465.423706,493.236755 465.903381,493.498566 466.220001,493.938232  z\",id:\"svg_2138\"})),_path2137||(_path2137=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M433.971069,503.970642   C434.505463,503.345093 435.060760,502.739655 435.675598,502.202332   C435.708527,502.173553 436.242279,502.717804 436.542908,502.995331   C435.943542,503.339417 435.344177,503.683502 434.407776,504.051086   C434.070679,504.074524 434.004456,504.005066 433.971069,503.970642  z\",id:\"svg_2139\"})),_path2138||(_path2138=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M438.992493,507.005219   C438.730774,506.645660 438.473724,506.282166 438.241455,505.903534   C438.234070,505.891541 438.481720,505.723206 438.610535,505.627747   C438.741974,505.912476 438.873444,506.197144 439.010590,506.732849   C439.016266,506.983887 439.000916,506.998993 438.992493,507.005219  z\",id:\"svg_2140\"})),_path2139||(_path2139=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M357.025452,503.655396   C356.177856,503.773407 355.327881,503.548828 354.477966,503.324249   C354.869537,502.728851 355.261108,502.133453 355.828918,501.271667   C356.344452,501.774445 356.683807,502.543610 357.025452,503.655396  z\",id:\"svg_2141\"})),_path2140||(_path2140=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M358.360107,481.622437   C358.752747,481.745667 359.161316,482.069092 359.162842,482.394409   C359.163940,482.630768 358.626740,482.869720 358.329590,483.107544   C358.286926,482.679504 358.244263,482.251495 358.360107,481.622437  z\",id:\"svg_2142\"})),_path2141||(_path2141=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M358.464142,475.444214   C358.525665,475.406097 358.402618,475.482330 358.464142,475.444214  z\",id:\"svg_2143\"})),_path2142||(_path2142=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M358.559387,487.461029   C358.599304,487.524323 358.519501,487.397736 358.559387,487.461029  z\",id:\"svg_2144\"})),_path2143||(_path2143=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M392.017090,430.016357   C391.455963,430.640503 390.894836,431.264618 390.333710,431.888763   C390.030182,431.598267 389.726654,431.307770 389.423126,431.017273   C390.043030,430.667969 390.662933,430.318634 391.640686,429.983948   C391.998596,429.998566 392.017090,430.016357 392.017090,430.016357  z\",id:\"svg_2145\"})),_path2144||(_path2144=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M391.989319,429.989075   C392.225037,429.460693 392.450378,428.929901 392.746613,428.442139   C392.774872,428.395599 393.245911,428.618042 393.511414,428.715607   C393.207794,429.122986 392.904144,429.530334 392.308777,429.977020   C392.017090,430.016357 391.998596,429.998566 391.989319,429.989075  z\",id:\"svg_2146\"})),_path2145||(_path2145=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AF6833\",opacity:1,stroke:\"none\",d:\" M415.005280,415.391113   C416.131653,415.955811 417.252838,416.880127 418.849304,418.157349   C418.872192,419.325531 418.419800,420.140747 417.967407,420.955963   C417.967407,420.955963 417.972351,420.971771 417.959229,420.963379   C416.876495,421.324524 415.806915,421.694031 415.318573,421.862762   C415.193726,419.466583 415.096924,417.608643 415.005280,415.391113  z\",id:\"svg_2147\"})),_path2146||(_path2146=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M396.391144,418.718048   C396.561554,418.852600 396.586945,419.086517 396.612366,419.320435   C396.490265,419.152771 396.368195,418.985077 396.391144,418.718048  z\",id:\"svg_2148\"})),_path2147||(_path2147=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M560.942993,307.510803   C560.099182,307.776855 559.195801,307.728394 558.133179,307.374573   C558.943726,307.111572 559.913635,307.153931 560.942993,307.510803  z\",id:\"svg_2149\"})),_path2148||(_path2148=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M529.531860,306.549133   C529.476807,306.581879 529.586975,306.516388 529.531860,306.549133  z\",id:\"svg_2150\"})),_path2149||(_path2149=/*#__PURE__*/React.createElement(\"path\",{fill:\"#4F3F31\",opacity:1,stroke:\"none\",d:\" M510.002014,344.986725   C508.627716,345.316681 507.254211,345.662964 505.876343,346.010345   C505.489716,345.074127 505.059662,344.559021 505.162872,344.195221   C505.733276,342.184814 506.433685,340.211273 507.089539,338.225098   C508.063538,340.210846 509.037537,342.196594 509.990845,344.591797   C509.970154,345.001282 510.002838,345.003052 510.002014,344.986725  z\",id:\"svg_2151\"})),_path2150||(_path2150=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M478.060089,486.038696   C479.719269,483.651428 481.332550,481.230286 483.057190,478.891296   C483.905121,477.741333 484.959259,476.743439 485.943298,475.311951   C486.619690,474.172058 487.272797,473.396942 487.967224,472.309906   C489.471069,471.433807 490.933594,470.869598 492.396118,470.305420   C492.668213,470.547424 492.940277,470.789459 493.212372,471.031494   C491.317566,473.501465 489.422791,475.971436 487.169159,478.909180   C492.592377,479.959717 498.640656,473.206055 502.264343,481.127777   C501.159515,482.338715 500.033783,483.572571 498.512939,485.239502   C495.504303,480.997925 491.833923,479.870728 487.733063,483.772247   C488.581238,485.089874 492.934021,486.463165 487.330566,487.662811   C482.891479,482.601410 482.891479,482.601410 480.966370,485.959534   C480.966370,485.959534 481.000000,485.997559 480.618378,485.994965   C479.511200,486.007812 478.785645,486.023254 478.060089,486.038696  z\",id:\"svg_2152\"})),_path2151||(_path2151=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E8A164\",opacity:1,stroke:\"none\",d:\" M488.863342,459.735779   C487.309357,459.296814 485.675293,458.387665 483.927216,457.847046   C482.888641,457.525848 481.670624,457.784821 479.925110,457.942322   C478.869324,458.729950 478.421692,459.358215 477.974060,459.986450   C477.974030,459.986450 477.996216,460.004272 477.630432,460.004822   C476.093323,459.147919 474.922028,458.290497 473.894226,457.538147   C471.922668,458.705200 469.966003,459.863464 468.004700,460.621033   C467.999420,459.152405 467.998749,458.084473 467.999756,457.010162   C468.001434,457.003815 468.016663,457.000092 468.016663,457.000092   C474.169128,457.372131 471.366394,452.180450 472.493744,449.179565   C473.567291,451.521149 474.483276,453.519043 475.571594,455.892853   C477.407410,455.102509 479.156525,454.349487 480.935120,453.285400   C485.005768,447.808136 483.122437,455.866913 485.625702,454.935730   C486.893219,456.449707 487.814270,457.935150 488.863342,459.735779  z\",id:\"svg_2153\"})),_path2152||(_path2152=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M512.995361,485.639130   C511.994537,486.758179 511.025116,487.544495 510.014160,488.650970   C508.983215,489.732483 507.993866,490.493866 507.005310,491.629456   C504.534058,491.931213 502.864471,491.515625 505.273193,488.750092   C506.926147,486.852234 508.389191,484.789001 509.979187,482.453491   C511.704987,481.846954 513.388672,481.586639 515.173828,481.642303   C514.525757,483.074341 513.776245,484.190399 512.995361,485.639130  z\",id:\"svg_2154\"})),_path2153||(_path2153=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M497.829865,500.652893   C496.306763,502.060913 494.693298,503.179504 493.033569,504.642029   C492.663757,503.827332 491.697021,502.069733 492.124603,501.610687   C494.325439,499.247559 496.884216,497.217773 499.658997,495.035828   C500.000000,495.000000 499.991089,494.991211 499.991089,494.991211   C499.240570,496.781952 498.490021,498.572723 497.829865,500.652893  z\",id:\"svg_2155\"})),_path2154||(_path2154=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M481.306366,486.007874   C482.891479,482.601410 482.891479,482.601410 486.969696,487.647614   C485.486816,489.281769 483.956024,490.587372 482.389648,491.923279   C480.111786,490.346588 486.507690,487.367828 481.306366,486.007874  z\",id:\"svg_2156\"})),_path2155||(_path2155=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M500.004517,495.004517   C499.446716,493.260925 498.884460,491.512878 498.322174,489.764801   C498.486969,489.454041 498.651764,489.143311 498.816528,488.832550   C500.080048,490.103088 501.437805,491.303131 502.500153,492.724060   C502.650513,492.925201 501.362213,494.201935 500.365417,494.986023   C499.991089,494.991211 500.000000,495.000000 500.004517,495.004517  z\",id:\"svg_2157\"})),_path2156||(_path2156=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E5985A\",opacity:1,stroke:\"none\",d:\" M478.045502,486.030762   C478.785645,486.023254 479.511200,486.007812 480.599762,485.978821   C480.204590,486.954285 479.446411,487.943329 478.354401,488.596588   C478.020996,487.521454 478.021423,486.782074 478.021881,486.042725   C478.021881,486.042725 478.030914,486.022766 478.045502,486.030762  z\",id:\"svg_2158\"})),_path2157||(_path2157=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M477.677429,486.063629   C478.021423,486.782074 478.020996,487.521454 478.012451,488.630768   C477.835571,489.005646 477.666809,489.010529 477.245087,489.028656   C476.553650,489.031067 476.115204,489.020233 475.348083,489.018951   C475.790619,488.047150 476.561829,487.065826 477.677429,486.063629  z\",id:\"svg_2159\"})),_path2158||(_path2158=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M484.311157,498.017700   C484.000519,497.260986 484.016571,496.518036 484.057434,495.405334   C484.841095,495.702637 485.599976,496.369690 486.358887,497.036743   C485.785217,497.368317 485.211517,497.699890 484.311157,498.017700  z\",id:\"svg_2160\"})),_path2159||(_path2159=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E8A164\",opacity:1,stroke:\"none\",d:\" M488.090668,454.167389   C487.905945,453.503174 487.925232,453.079559 487.936584,452.337677   C488.576385,452.526093 489.224091,453.032776 489.871826,453.539429   C489.346100,453.828918 488.820404,454.118439 488.090668,454.167389  z\",id:\"svg_2161\"})),_path2160||(_path2160=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M501.363281,486.951294   C501.729858,486.654449 502.097900,486.616150 502.465912,486.577881   C502.465851,486.839905 502.465820,487.101898 502.465759,487.363922   C502.098755,487.312561 501.731720,487.261200 501.363281,486.951294  z\",id:\"svg_2162\"})),_path2161||(_path2161=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M500.005249,442.994629   C500.743439,443.043365 501.476929,443.096832 502.210449,443.150299   C502.186218,443.362396 502.161987,443.574524 502.137756,443.786621   C501.530762,443.691833 500.923767,443.597076 500.155518,443.255432   C499.994293,443.008545 500.000549,442.999390 500.005249,442.994629  z\",id:\"svg_2163\"})),_path2162||(_path2162=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M507.712524,449.344421   C507.997131,449.360535 508.153229,449.512512 508.309326,449.664490   C508.067566,449.603088 507.825775,449.541718 507.712524,449.344421  z\",id:\"svg_2164\"})),_path2163||(_path2163=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M527.942810,428.702576   C527.737671,428.388184 527.558472,427.726990 527.674561,427.015259   C527.969421,427.428406 527.969055,427.892059 527.942810,428.702576  z\",id:\"svg_2165\"})),_path2164||(_path2164=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M540.021973,316.001770   C543.479553,318.335419 543.479553,318.335419 541.618713,322.861725   C542.399414,322.717285 543.006775,322.727417 543.484863,322.483856   C544.018860,322.211823 544.435486,321.709534 546.124695,321.688751   C545.775635,323.248383 545.426575,324.808014 545.038757,326.683838   C542.505676,326.098785 540.011414,325.197571 536.682922,323.994965   C531.801208,329.665863 531.812317,322.759705 530.451172,319.398621   C533.205627,318.694458 536.415833,320.319275 537.266663,316.238373   C537.320679,315.979279 539.064392,316.072449 540.021973,316.001770  z\",id:\"svg_2166\"})),_path2165||(_path2165=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M539.748779,315.713867   C539.064392,316.072449 537.320679,315.979279 537.266663,316.238373   C536.415833,320.319275 533.205627,318.694458 530.412964,319.065948   C528.423950,318.711761 526.856323,318.334930 525.288757,317.958099   C525.316956,317.412140 525.345154,316.866180 525.373352,316.320221   C530.074097,316.022156 534.774902,315.724060 539.748779,315.713867  z\",id:\"svg_2167\"})),_path2166||(_path2166=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M543.159668,346.155518   C544.445679,344.617126 545.678406,343.439362 546.911194,342.261597   C547.385986,342.516510 547.860840,342.771454 548.335632,343.026367   C547.614319,344.808197 546.893005,346.590027 546.171631,348.371826   C545.149902,347.753265 544.128113,347.134735 543.159668,346.155518  z\",id:\"svg_2168\"})),_path2167||(_path2167=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M521.565918,321.715332   C523.445496,321.410583 525.194214,321.410583 526.942993,321.410583   C526.856201,322.087341 526.769409,322.764099 526.682617,323.440887   C524.933472,322.967285 523.184326,322.493683 521.565918,321.715332  z\",id:\"svg_2169\"})),_path2168||(_path2168=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M568.540405,327.011169   C567.954956,327.410767 567.372986,327.508820 566.791016,327.606873   C566.796265,327.195740 566.801453,326.784576 566.806641,326.373413   C567.385742,326.485504 567.964844,326.597595 568.540405,327.011169  z\",id:\"svg_2170\"})),_path2169||(_path2169=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M567.205200,322.798218   C567.569153,322.195770 567.995972,321.892944 568.422852,321.590088   C568.538086,322.037689 568.653381,322.485321 568.768738,322.932953   C568.268494,322.987915 567.768311,323.042877 567.205200,322.798218  z\",id:\"svg_2171\"})),_path2170||(_path2170=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M547.607117,332.045502   C547.209717,332.288055 546.814270,332.286377 546.421082,332.256104   C546.410095,332.255280 546.422607,331.948730 546.424194,331.784760   C546.819275,331.788940 547.214355,331.793091 547.607117,332.045502  z\",id:\"svg_2172\"})),_path2171||(_path2171=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M566.045166,318.391296   C566.288269,318.789551 566.286682,319.185699 566.256409,319.579620   C566.255554,319.590668 565.948486,319.578156 565.784180,319.576630   C565.788330,319.180695 565.792419,318.784790 566.045166,318.391296  z\",id:\"svg_2173\"})),_path2172||(_path2172=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M549.466797,317.607178   C549.350586,318.058136 549.066772,318.334534 548.764954,318.589600   C548.757263,318.596069 548.551636,318.368378 548.438354,318.249878   C548.724548,317.976532 549.010681,317.703217 549.466797,317.607178  z\",id:\"svg_2174\"})),_path2173||(_path2173=/*#__PURE__*/React.createElement(\"path\",{fill:\"#182827\",opacity:1,stroke:\"none\",d:\" M562.944763,330.178833   C562.457214,330.605652 561.410461,330.979492 560.295532,331.031921   C560.946777,330.515594 561.666199,330.320740 562.944763,330.178833  z\",id:\"svg_2175\"})),_path2174||(_path2174=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M564.392090,325.466675   C563.941406,325.350464 563.665100,325.066711 563.410217,324.764893   C563.403687,324.757050 563.631287,324.551453 563.749634,324.438080   C564.022888,324.724274 564.296082,325.010498 564.392090,325.466675  z\",id:\"svg_2176\"})),_path2175||(_path2175=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M578.466492,318.450256   C578.522522,318.416718 578.410461,318.483826 578.466492,318.450256  z\",id:\"svg_2177\"})),_path2176||(_path2176=/*#__PURE__*/React.createElement(\"path\",{fill:\"#1C1715\",opacity:1,stroke:\"none\",d:\" M545.053772,327.138733   C545.121460,327.141998 545.242981,327.284027 545.364441,327.426025   C545.278809,327.376526 545.193176,327.326996 545.053772,327.138733  z\",id:\"svg_2178\"})),_path2177||(_path2177=/*#__PURE__*/React.createElement(\"path\",{fill:\"#C07840\",opacity:1,stroke:\"none\",d:\" M515.104980,419.572174   C513.634033,419.079346 512.148621,418.223846 510.349274,417.187561   C509.445557,418.026337 508.333527,419.058502 507.221466,420.090637   C506.932281,419.887787 506.643097,419.684906 506.353912,419.482025   C506.821320,417.859039 507.288727,416.236084 508.112762,413.374725   C506.174927,413.374725 504.629517,413.374725 502.677277,413.705475   C501.495605,413.359283 500.720795,412.682343 499.945984,412.005371   C501.269836,410.912384 502.593719,409.819427 503.956757,408.386719   C504.172302,408.040924 504.348724,408.034882 504.947266,408.265533   C505.906281,408.658447 506.443146,408.814636 506.980011,408.970825   C508.780182,410.931549 510.668213,412.820526 512.348755,414.878876   C513.421509,416.192749 514.187134,417.757324 515.104980,419.572174  z\",id:\"svg_2179\"})),_path2178||(_path2178=/*#__PURE__*/React.createElement(\"path\",{fill:\"#A57453\",opacity:1,stroke:\"none\",d:\" M507.024719,408.722473   C506.443146,408.814636 505.906281,408.658447 505.212097,408.264618   C505.596497,407.970093 506.138245,407.913208 506.927612,407.918396   C507.139984,408.145020 507.104706,408.309540 507.024719,408.722473  z\",id:\"svg_2180\"})),_path2179||(_path2179=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M483.751770,402.792755   C484.517517,404.411591 485.017700,405.805389 485.904724,408.277161   C483.999573,406.741119 482.869507,405.830017 481.334076,404.592072   C479.671936,408.653137 472.367493,409.784058 477.131897,416.122681   C472.186584,415.005402 472.186584,415.005402 472.274963,408.232147   C472.000183,408.001221 472.000000,408.000000 471.989227,407.655121   C471.645203,406.516846 471.311951,405.723480 471.085938,404.695862   C471.125854,403.672943 471.058563,402.884277 471.019257,402.058350   C471.047272,402.021088 471.110901,401.952942 471.421204,401.920319   C472.485901,400.919220 473.240295,399.950745 473.997650,398.989685   C474.000610,398.997101 473.982483,398.987793 473.982483,398.987793   C474.890228,399.225952 476.243805,399.167786 476.631744,399.751465   C478.777924,402.980377 480.541077,402.276367 482.224976,398.757019   C482.798706,400.490540 483.142456,401.529144 483.751770,402.792755  z\",id:\"svg_2181\"})),_path2180||(_path2180=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M467.265289,401.996460   C467.853210,400.385406 468.686890,398.772034 469.294403,397.596344   C468.593719,396.116974 467.804840,394.451355 467.018036,392.403259   C468.746246,391.638184 470.472382,391.255524 471.219269,391.089966   C474.471436,393.108917 477.306305,394.868774 480.343262,396.754120   C477.701782,397.425415 475.889648,397.885956 474.030029,398.667114   C473.982483,398.987793 474.000610,398.997101 473.626251,398.990479   C472.538239,399.973541 471.824554,400.963226 471.110901,401.952942   C471.110901,401.952942 471.047272,402.021088 470.645691,402.040497   C469.496887,402.040741 468.749664,402.021576 468.002441,402.002441   C468.002441,402.002441 467.511017,401.994110 467.265289,401.996460  z\",id:\"svg_2182\"})),_path2181||(_path2181=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M465.016846,390.346069   C465.456360,390.020386 465.941010,390.018677 466.791199,390.043427   C467.133759,390.496979 467.110870,390.924072 467.037720,391.668518   C466.345642,391.547241 465.703827,391.108643 465.016846,390.346069  z\",id:\"svg_2183\"})),_path2182||(_path2182=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M460.006287,513.939880   C460.561646,514.131348 461.116974,514.322815 461.843811,514.760742   C461.117798,515.186340 460.220245,515.365479 459.374207,515.161926   C459.619232,514.499451 459.812775,514.219666 460.006287,513.939880  z\",id:\"svg_2184\"})),_path2183||(_path2183=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M459.832275,513.704468   C459.812775,514.219666 459.619232,514.499451 459.193848,514.895142   C458.659454,514.904175 458.408844,514.724854 458.101074,514.267273   C457.994354,513.884216 457.996613,513.706848 457.998718,513.263550   C458.551788,513.154724 459.105011,513.311890 459.832275,513.704468  z\",id:\"svg_2185\"})),_path2184||(_path2184=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M458.194427,505.255005   C458.869659,505.148407 459.737854,505.319763 460.811340,505.758209   C460.140228,505.861176 459.263794,505.697052 458.194427,505.255005  z\",id:\"svg_2186\"})),_path2185||(_path2185=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M444.293579,510.029663   C443.969940,509.843933 443.959991,509.654114 443.953735,509.177979   C444.708099,508.977173 445.458832,509.062683 446.209534,509.148193   C446.214600,509.327454 446.219666,509.506714 446.224762,509.685974   C445.685577,509.799194 445.146423,509.912384 444.293579,510.029663  z\",id:\"svg_2187\"})),_path2186||(_path2186=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M477.970551,496.328247   C478.472321,496.241211 478.976105,496.489746 479.746765,496.826324   C480.271637,497.124969 480.529633,497.335541 480.894409,497.774292   C480.248413,498.007751 479.495636,498.013062 478.366180,498.012146   C477.983887,497.558533 477.978210,497.111176 477.970551,496.328247  z\",id:\"svg_2188\"})),_path2187||(_path2187=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D58544\",opacity:1,stroke:\"none\",d:\" M441.998810,525.221252   C442.117218,525.399536 442.059235,525.580200 442.001251,525.760925   C441.941650,525.581848 441.882050,525.402771 441.998810,525.221252  z\",id:\"svg_2189\"})),_path2188||(_path2188=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M454.998779,399.003418   C455.826538,400.569946 456.654266,402.136475 457.707184,404.129120   C455.631195,406.144623 453.383301,408.443054 450.912933,410.470459   C450.743896,410.609192 448.908752,408.717712 448.077148,407.974731   C449.170441,405.261963 450.079468,403.006439 451.213654,400.262878   C451.719513,399.580414 451.914093,399.321350 452.022614,398.997650   C452.022614,398.997650 451.997589,398.997070 452.373047,398.997040   C453.498627,398.999146 454.248688,399.001282 454.998779,399.003418  z\",id:\"svg_2190\"})),_path2189||(_path2189=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M431.237000,421.822144   C429.890625,422.324921 428.782501,422.649811 426.596436,423.290771   C427.706055,421.386658 428.216980,420.509827 429.095947,419.158081   C428.989227,418.136139 428.514465,417.589111 428.019928,417.021423   C428.000153,417.000763 427.960297,416.959778 427.960297,416.959778   C427.853882,414.571869 433.012115,411.915863 426.769684,409.676392   C430.364777,409.676392 433.187378,409.676392 437.049316,409.676392   C436.883881,409.328308 437.332428,410.272064 437.649078,410.938354   C435.295654,412.177460 433.243286,413.258057 430.742432,414.574768   C432.137360,416.195953 433.044342,417.250000 433.931427,418.281006   C433.058899,419.475769 432.267090,420.560028 431.237000,421.822144  z\",id:\"svg_2191\"})),_path2190||(_path2190=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M418.336945,420.976135   C418.419800,420.140747 418.872192,419.325531 419.152039,418.294647   C419.966827,415.666412 421.095581,413.935547 423.962158,416.233521   C424.739502,416.856628 426.099335,416.753113 427.576050,416.971436   C427.960297,416.959778 428.000153,417.000763 428.005127,417.340637   C427.986237,418.106689 427.962402,418.532867 427.938538,418.959015   C426.268646,420.217438 424.598724,421.475830 422.740662,422.876038   C421.492188,422.294312 420.099335,421.645325 418.336945,420.976135  z\",id:\"svg_2192\"})),_path2191||(_path2191=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M455.267029,398.782288   C454.248688,399.001282 453.498627,398.999146 452.373474,399.009521   C451.991516,398.554321 451.984650,398.086639 451.988281,397.266907   C454.762238,394.605865 457.525665,392.296814 460.653625,389.987732   C460.347321,391.747253 459.676514,393.506775 459.013184,395.633789   C457.858887,396.854584 456.697083,397.707886 455.267029,398.782288  z\",id:\"svg_2193\"})),_path2192||(_path2192=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M454.993896,413.993896   C455.001068,414.746765 455.008240,415.499634 455.007690,416.626251   C455.000000,417.000000 455.005524,416.994049 455.005524,416.994049   C452.310089,416.793762 451.795197,417.871063 453.168671,420.094879   C453.813751,421.139435 454.411774,422.213104 455.016174,423.636108   C455.001282,423.998657 454.978302,424.022583 454.978302,424.022583   C453.245575,423.044525 451.512878,422.066467 449.388123,421.041901   C448.996094,420.995361 448.905762,420.903778 448.905762,420.903778   C450.693695,418.607849 452.481628,416.311920 454.634766,414.007996   C455.000000,414.000000 454.993896,413.993896 454.993896,413.993896  z\",id:\"svg_2194\"})),_path2193||(_path2193=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M441.972839,420.806824   C442.749146,420.326233 443.525482,419.845612 444.301819,419.365021   C444.288055,420.378326 444.274292,421.391632 444.122437,423.102386   C443.948334,424.547058 443.912384,425.294250 443.659821,426.036621   C443.443237,426.031799 443.010101,426.022888 442.880859,425.831909   C442.178528,425.765808 441.605438,425.890717 441.032349,426.015625   C441.032349,426.015625 441.018677,426.008331 440.874573,425.682678   C440.487030,424.233948 440.243622,423.110809 440.000183,421.987701   C440.000183,421.987701 440.000763,422.001221 440.284973,422.042542   C441.286560,422.042572 442.003967,422.001312 442.721375,421.960083   C442.471863,421.575653 442.222351,421.191223 441.972839,420.806824  z\",id:\"svg_2195\"})),_path2194||(_path2194=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M470.978699,404.930054   C471.311951,405.723480 471.645203,406.516846 471.988617,407.654480   C470.023010,408.211090 468.047241,408.423431 466.292175,408.159058   C466.684601,407.126282 466.856354,406.570251 467.028137,406.014191   C467.028137,406.014191 466.997101,406.010864 467.355316,405.994080   C468.801910,405.628204 469.890289,405.279144 470.978699,404.930054  z\",id:\"svg_2196\"})),_path2195||(_path2195=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M471.085938,404.695831   C469.890289,405.279144 468.801910,405.628204 467.369354,406.003723   C467.329987,404.919159 467.634827,403.808075 467.971039,402.349731   C468.749664,402.021576 469.496887,402.040741 470.617676,402.077759   C471.058563,402.884277 471.125854,403.672943 471.085938,404.695831  z\",id:\"svg_2197\"})),_path2196||(_path2196=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M443.010101,426.022888   C443.010101,426.022888 443.443237,426.031799 444.014130,426.069183   C445.056519,426.114014 445.527985,426.121460 445.999481,426.128876   C446.000854,427.160858 446.002258,428.192871 446.001221,429.611816   C445.012207,429.240906 444.025665,428.483032 443.022949,427.113647   C443.006744,426.502136 443.010101,426.022888 443.010101,426.022888  z\",id:\"svg_2198\"})),_path2197||(_path2197=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M465.005249,413.994690   C464.075165,413.580109 463.145081,413.165527 462.215027,412.750946   C462.500122,412.248901 462.785248,411.746857 463.070374,411.244751   C463.713806,411.914917 464.357269,412.585052 465.000366,413.627594   C465.000000,414.000000 465.005249,413.994690 465.005249,413.994690  z\",id:\"svg_2199\"})),_path2198||(_path2198=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M439.738190,422.013733   C440.243622,423.110809 440.487030,424.233948 440.867676,425.680420   C440.098114,425.842377 439.191376,425.680969 438.057037,425.247314   C437.920959,424.277069 438.012451,423.579071 438.342987,422.492981   C438.582001,422.104889 438.949829,422.024445 438.949829,422.024445   C439.125275,422.029572 439.300751,422.034668 439.738190,422.013733  z\",id:\"svg_2200\"})),_path2199||(_path2199=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M464.997314,414.002655   C465.749268,414.803558 466.503906,415.601807 467.125549,416.702759   C466.992584,417.005432 467.000336,416.999634 466.667908,417.004272   C465.888702,417.004333 465.441895,416.999725 464.995117,416.995117   C464.995117,416.995117 465.000000,417.000000 465.002441,417.002441   C465.009003,416.252350 465.013092,415.499817 465.011230,414.370972   C465.005249,413.994690 465.000000,414.000000 464.997314,414.002655  z\",id:\"svg_2201\"})),_path2200||(_path2200=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M454.997162,417.002686   C455.967133,417.511688 456.939941,418.018005 457.912750,418.524323   C457.606354,418.946533 457.299957,419.368744 456.993561,419.790924   C456.351013,419.077057 455.708466,418.363190 455.035706,417.321686   C455.005524,416.994049 455.000000,417.000000 454.997162,417.002686  z\",id:\"svg_2202\"})),_path2201||(_path2201=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M459.045715,396.328918   C459.952209,396.420837 460.907257,396.862335 461.906738,397.648010   C460.998901,397.554291 460.046570,397.116394 459.045715,396.328918  z\",id:\"svg_2203\"})),_path2202||(_path2202=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M455.012939,423.986694   C455.888092,424.143707 456.751587,424.312714 457.615051,424.481720   C457.487427,424.852814 457.359802,425.223938 457.232178,425.595032   C456.519409,425.293182 455.806671,424.991333 455.036133,424.356018   C454.978302,424.022583 455.001282,423.998657 455.012939,423.986694  z\",id:\"svg_2204\"})),_path2203||(_path2203=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M446.010742,425.762024   C445.527985,426.121460 445.056519,426.114014 444.230713,426.074036   C443.912384,425.294250 443.948334,424.547058 444.001312,423.428406   C444.686218,423.836334 445.354095,424.615753 446.010742,425.762024  z\",id:\"svg_2205\"})),_path2204||(_path2204=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M455.002777,414.002991   C455.540894,413.480591 456.076233,412.955231 456.611572,412.429871   C456.845642,412.790619 457.079742,413.151398 457.313843,413.512177   C456.749268,413.676361 456.184723,413.840576 455.307007,413.999329   C454.993896,413.993896 455.000000,414.000000 455.002777,414.002991  z\",id:\"svg_2206\"})),_path2205||(_path2205=/*#__PURE__*/React.createElement(\"path\",{fill:\"#AD703F\",opacity:1,stroke:\"none\",d:\" M428.059082,401.934418   C428.612854,402.361328 429.105865,402.845673 429.598877,403.330017   C429.209625,403.554413 428.820374,403.778809 428.431152,404.003235   C428.194061,403.545319 427.956970,403.087402 427.793152,402.362000   C427.866394,402.094482 427.998352,401.991852 428.059082,401.934418  z\",id:\"svg_2207\"})),_path2206||(_path2206=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M441.672150,420.873566   C442.222351,421.191223 442.471863,421.575653 442.721375,421.960083   C442.003967,422.001312 441.286560,422.042572 440.278076,422.041870   C440.448486,421.646698 440.909973,421.293518 441.672150,420.873566  z\",id:\"svg_2208\"})),_path2207||(_path2207=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M449.041748,421.040680   C448.821991,421.583344 448.578857,422.096100 448.261047,422.557343   C448.224030,422.611023 447.773804,422.379974 447.515137,422.280945   C447.791107,421.854553 448.067108,421.428162 448.624420,420.952759   C448.905762,420.903778 448.996094,420.995361 449.041748,421.040680  z\",id:\"svg_2209\"})),_path2208||(_path2208=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M466.774414,406.169373   C466.856354,406.570251 466.684601,407.126282 466.256256,407.834320   C466.173340,407.432373 466.347015,406.878448 466.774414,406.169373  z\",id:\"svg_2210\"})),_path2209||(_path2209=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M438.944031,421.765625   C438.949829,422.024445 438.582001,422.104889 438.399719,422.145508   C438.327301,421.729340 438.437195,421.272522 438.547058,420.815704   C438.677460,421.046082 438.807861,421.276459 438.944031,421.765625  z\",id:\"svg_2211\"})),_path2210||(_path2210=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M451.791992,399.006836   C451.914093,399.321350 451.719513,399.580414 451.219147,399.886230   C451.186768,399.670441 451.374084,399.343231 451.791992,399.006836  z\",id:\"svg_2212\"})),_path2211||(_path2211=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M445.862579,407.055481   C445.908386,407.036957 445.816772,407.073975 445.862579,407.055481  z\",id:\"svg_2213\"})),_path2212||(_path2212=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M446.138245,406.946899   C446.092163,406.964600 446.184296,406.929230 446.138245,406.946899  z\",id:\"svg_2214\"})),_path2213||(_path2213=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M464.473328,395.451111   C464.524231,395.420441 464.422424,395.481812 464.473328,395.451111  z\",id:\"svg_2215\"})),_path2214||(_path2214=/*#__PURE__*/React.createElement(\"path\",{fill:\"#629B9A\",opacity:1,stroke:\"none\",d:\" M404.529724,384.494690   C398.769958,384.812164 392.934387,384.819824 386.647675,384.859192   C383.120331,383.628357 380.014099,382.433228 376.978546,381.079590   C374.946808,380.173553 373.015472,379.042358 371.042938,377.321960   C372.925629,375.713531 374.804565,374.795044 377.040649,373.895874   C379.274231,374.229523 381.150696,374.543854 383.027161,374.858154   C383.766296,374.909180 384.505432,374.960175 385.902222,375.323914   C391.942474,375.557404 397.542725,378.048492 402.612579,374.277130   C402.910522,374.433777 403.219757,374.460571 404.123474,374.258942   C405.660309,373.523651 406.613953,372.886932 407.567596,372.250214   C408.811005,371.569305 410.054413,370.888397 411.502106,370.518524   C412.875183,373.003662 412.875183,373.003662 417.085449,371.431366   C415.719360,373.755005 414.376434,375.715820 412.775208,378.053772   C414.178162,377.665161 415.207367,377.380066 416.236603,377.094971   C412.974762,379.015625 409.709137,380.929932 406.454102,382.862091   C405.767548,383.269592 405.119659,383.742249 404.529724,384.494690  z\",id:\"svg_2216\"})),_path2215||(_path2215=/*#__PURE__*/React.createElement(\"path\",{fill:\"#182827\",opacity:1,stroke:\"none\",d:\" M383.002716,374.487915   C381.150696,374.543854 379.274231,374.229523 377.063782,373.503326   C373.087982,368.734375 369.446167,364.377289 365.810852,359.689819   C365.729065,358.500885 365.640747,357.642395 365.552429,356.783875   C368.000214,358.178162 371.009094,359.083679 372.755615,361.088806   C375.007751,363.674316 376.249451,367.139954 377.982361,370.599243   C379.685059,372.020508 381.331665,373.069092 383.002716,374.487915  z\",id:\"svg_2217\"})),_path2216||(_path2216=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6AA0A1\",opacity:1,stroke:\"none\",d:\" M419.321533,360.023468   C420.461212,356.290619 421.867340,352.582489 426.825256,354.233337   C428.107697,354.660339 429.851746,357.287354 429.525696,358.313232   C428.359955,361.980957 426.395813,365.394928 424.411621,368.648865   C426.580383,363.278595 423.182587,361.519073 419.321533,360.023468  z\",id:\"svg_2218\"})),_path2217||(_path2217=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6DABAB\",opacity:1,stroke:\"none\",d:\" M419.232849,360.379028   C423.182587,361.519073 426.580383,363.278595 424.085358,368.783691   C421.684052,371.779266 419.286896,374.384003 416.563171,377.041870   C415.207367,377.380066 414.178162,377.665161 412.775208,378.053772   C414.376434,375.715820 415.719360,373.755005 417.387817,371.360168   C418.154327,370.295654 418.595276,369.665131 419.316711,368.987030   C419.915161,368.629395 420.233124,368.319336 420.551086,368.009277   C420.343384,367.826324 420.135742,367.643372 419.928070,367.460449   C419.608337,367.962708 419.288605,368.464966 418.603394,368.909790   C417.778046,367.796204 417.318207,366.740051 416.858368,365.683929   C417.620270,364.034149 418.382202,362.384369 419.232849,360.379028  M421.826111,365.239594   C421.883362,365.410797 421.940643,365.581970 421.997955,365.753174   C422.053558,365.581055 422.109131,365.408936 421.826111,365.239594  z\",id:\"svg_2219\"})),_path2218||(_path2218=/*#__PURE__*/React.createElement(\"path\",{fill:\"#182827\",opacity:1,stroke:\"none\",d:\" M402.101379,374.196777   C397.542725,378.048492 391.942474,375.557404 386.273193,375.325989   C391.187714,374.715698 396.388916,374.416077 402.101379,374.196777  z\",id:\"svg_2220\"})),_path2219||(_path2219=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6AA0A1\",opacity:1,stroke:\"none\",d:\" M419.036255,369.034607   C418.595276,369.665131 418.154327,370.295654 417.411011,370.997375   C412.875183,373.003662 412.875183,373.003662 411.829529,370.570435   C413.376984,368.855896 414.801331,367.400513 416.542023,365.814514   C417.318207,366.740051 417.778046,367.796204 418.619934,368.926910   C419.001953,369.001495 419.036255,369.034607 419.036255,369.034607  z\",id:\"svg_2221\"})),_path2220||(_path2220=/*#__PURE__*/React.createElement(\"path\",{fill:\"#182827\",opacity:1,stroke:\"none\",d:\" M407.187500,372.190247   C406.613953,372.886932 405.660309,373.523651 404.340637,374.163055   C404.918884,373.487244 405.863129,372.808746 407.187500,372.190247  z\",id:\"svg_2222\"})),_path2221||(_path2221=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6DABAB\",opacity:1,stroke:\"none\",d:\" M365.804352,360.020203   C369.446167,364.377289 373.087982,368.734375 376.706665,373.484009   C374.804565,374.795044 372.925629,375.713531 370.973022,376.983765   C368.451569,375.309692 366.003723,373.283875 363.248047,370.783264   C362.404114,369.865845 361.868073,369.423218 361.332031,368.980591   C361.250031,368.823151 361.167999,368.665680 361.023499,367.956726   C360.444061,366.928284 359.927094,366.451294 359.410156,365.974304   C359.257294,365.556580 359.104462,365.138824 359.207581,364.191101   C361.577118,362.447479 363.690735,361.233856 365.804352,360.020203  M370.092133,372.518005   C370.235138,372.762543 370.378174,373.007080 370.521149,373.251617   C370.653015,372.999634 370.939209,372.694305 370.875458,372.509979   C370.804779,372.305573 370.414520,372.211578 370.092133,372.518005  z\",id:\"svg_2223\"})),_path2222||(_path2222=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6AA0A1\",opacity:1,stroke:\"none\",d:\" M365.810852,359.689819   C363.690735,361.233856 361.577118,362.447479 359.175537,363.857727   C358.393463,361.588348 357.328217,359.036163 357.680878,356.697876   C357.825897,355.736176 361.023987,355.234924 363.194061,354.619385   C363.554779,354.714508 363.608643,354.856964 363.750793,355.248566   C364.286194,355.866516 364.679382,356.092865 365.072601,356.319214   C365.072601,356.319214 365.270966,356.594238 365.411682,356.689056   C365.640747,357.642395 365.729065,358.500885 365.810852,359.689819  z\",id:\"svg_2224\"})),_path2223||(_path2223=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6AA0A1\",opacity:1,stroke:\"none\",d:\" M359.367645,366.281525   C359.927094,366.451294 360.444061,366.928284 360.981079,367.693848   C360.442444,367.517883 359.883789,367.053314 359.367645,366.281525  z\",id:\"svg_2225\"})),_path2224||(_path2224=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6AA0A1\",opacity:1,stroke:\"none\",d:\" M361.303314,369.283844   C361.868073,369.423218 362.404114,369.865845 362.973022,370.592468   C362.428802,370.446686 361.851685,370.016907 361.303314,369.283844  z\",id:\"svg_2226\"})),_path2225||(_path2225=/*#__PURE__*/React.createElement(\"path\",{fill:\"#629B9A\",opacity:1,stroke:\"none\",d:\" M406.221863,342.910889   C406.447205,340.858185 406.878937,338.888611 407.310638,336.919006   C406.912811,336.731750 406.514954,336.544495 406.117126,336.357208   C408.901123,331.797760 412.717651,333.010529 416.471680,334.633209   C416.471680,336.971588 416.471680,339.176300 416.471680,341.564178   C414.996674,341.350616 413.601410,341.148590 412.000275,340.916779   C412.288910,342.231079 412.526672,343.313599 412.922638,345.116730   C410.716766,344.246643 409.171204,343.637024 407.246399,343.046936   C406.867157,343.066498 406.428223,342.993958 406.221863,342.910889  z\",id:\"svg_2227\"})),_path2226||(_path2226=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M427.798889,341.277588   C430.485962,341.017365 432.965271,341.017365 435.444580,341.017365   C435.492737,341.494049 435.540894,341.970734 435.589050,342.447418   C432.022522,343.089630 428.456024,343.731873 424.559265,344.433533   C424.251007,345.682556 423.906525,347.078247 423.280396,348.732117   C421.808899,346.687958 419.277313,344.310944 423.936157,342.152466   C424.501312,342.002258 425.000549,341.985565 425.000549,341.985565   C425.864075,341.836334 426.727570,341.687073 427.798889,341.277588  z\",id:\"svg_2228\"})),_path2227||(_path2227=/*#__PURE__*/React.createElement(\"path\",{fill:\"#222220\",opacity:1,stroke:\"none\",d:\" M424.983337,341.735046   C425.000549,341.985565 424.501312,342.002258 424.251709,342.010803   C424.160583,341.580566 424.319092,341.141754 424.477600,340.702972   C424.640442,340.963501 424.803284,341.223999 424.983337,341.735046  z\",id:\"svg_2229\"})),_path2228||(_path2228=/*#__PURE__*/React.createElement(\"path\",{fill:\"#39312D\",opacity:1,stroke:\"none\",d:\" M424.998169,336.998169   C424.875458,337.420868 424.754608,337.845428 424.633728,338.269958   C424.621185,337.927002 424.608612,337.584076 424.799683,337.121674   C425.003296,337.002228 425.000000,337.000000 424.998169,336.998169  z\",id:\"svg_2230\"})),_path2229||(_path2229=/*#__PURE__*/React.createElement(\"path\",{fill:\"#629B9A\",opacity:1,stroke:\"none\",d:\" M383.525452,340.684448   C379.064636,339.241577 374.753448,337.445374 370.454742,335.654388   C370.165894,333.412262 376.558105,333.612762 372.031616,330.000183   C374.006317,329.415863 376.788696,328.167328 378.164001,329.067780   C380.624084,330.678528 382.483429,333.432495 384.076324,336.026398   C384.679565,337.008728 383.851013,338.870300 383.525452,340.684448  z\",id:\"svg_2231\"})),_path2230||(_path2230=/*#__PURE__*/React.createElement(\"path\",{fill:\"#182827\",opacity:1,stroke:\"none\",d:\" M364.937195,356.013855   C364.679382,356.092865 364.286194,355.866516 363.813843,355.291260   C364.090424,355.197754 364.446106,355.453125 364.937195,356.013855  z\",id:\"svg_2232\"})),_path2231||(_path2231=/*#__PURE__*/React.createElement(\"path\",{fill:\"#191513\",opacity:1,stroke:\"none\",d:\" M433.161011,372.921173   C432.825470,372.116394 432.500519,370.869720 432.911316,370.540192   C434.188843,369.515442 435.745331,368.838501 437.193604,368.026672   C437.492218,368.599060 437.790833,369.171448 438.089417,369.743835   C436.562347,370.795502 435.035278,371.847168 433.161011,372.921173  z\",id:\"svg_2233\"})),_path2232||(_path2232=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M481.352142,435.948608   C478.874054,433.357025 476.748871,430.715302 474.314301,428.034576   C476.993408,426.082642 479.810089,422.809631 482.596649,425.781097   C482.596649,428.956024 482.685272,431.060272 482.556152,433.151093   C482.498749,434.080841 482.002258,434.983490 481.352142,435.948608  z\",id:\"svg_2234\"})),_path2233||(_path2233=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M499.650513,411.869324   C500.720795,412.682343 501.495605,413.359283 502.631104,414.033752   C501.608246,416.011047 500.224731,417.990814 498.588409,420.332336   C497.016418,419.022675 495.843597,418.045563 494.335388,417.034241   C494.000000,417.000000 494.009979,417.010132 494.009979,417.010132   C495.791656,415.251190 497.573334,413.492218 499.650513,411.869324  z\",id:\"svg_2235\"})),_path2234||(_path2234=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M513.603699,430.555664   C513.468140,429.432983 513.587158,428.555878 513.789246,427.066772   C516.170410,428.641663 518.064087,429.894135 519.957764,431.146576   C519.762451,431.702301 519.567078,432.257996 519.371704,432.813721   C517.533936,432.142914 515.696106,431.472076 513.603699,430.555664  z\",id:\"svg_2236\"})),_path2235||(_path2235=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M493.990631,428.108215   C496.251740,425.890778 498.512817,423.673309 500.773895,421.455841   C501.010529,421.539307 501.247162,421.622772 501.483795,421.706238   C500.847473,423.323975 500.211182,424.941711 498.949463,426.868958   C496.879578,427.488373 495.435089,427.798279 493.990631,428.108215  z\",id:\"svg_2237\"})),_path2236||(_path2236=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M493.995026,416.994843   C493.385529,417.976685 492.780975,418.963684 492.176453,419.950684   C490.738007,418.408600 489.299622,416.866486 487.861206,415.324402   C488.188904,414.926392 488.516571,414.528351 488.844269,414.130341   C490.319794,415.075745 491.795319,416.021179 493.640411,416.988373   C494.009979,417.010132 494.000000,417.000000 493.995026,416.994843  z\",id:\"svg_2238\"})),_path2237||(_path2237=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M493.994385,428.475159   C495.435089,427.798279 496.879578,427.488373 498.685730,427.068115   C499.032837,427.718597 499.018250,428.479431 498.657135,429.673065   C497.878021,431.074951 497.445465,432.044037 496.692993,432.976746   C495.571930,432.311279 494.770752,431.682129 493.969574,431.052979   C493.979095,430.316010 493.988617,429.579071 493.994385,428.475159  z\",id:\"svg_2239\"})),_path2238||(_path2238=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M493.710938,430.925049   C494.770752,431.682129 495.571930,432.311279 496.685974,432.969604   C496.998810,432.998810 496.986206,432.986267 496.989807,433.238647   C497.000885,433.659088 497.008331,433.827179 497.015778,433.995300   C496.283386,434.591827 495.550995,435.188385 494.818604,435.784973   C493.719452,434.296997 492.620270,432.809021 491.521057,431.321045   C492.164795,431.146393 492.808533,430.971741 493.710938,430.925049  z\",id:\"svg_2240\"})),_path2239||(_path2239=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M507.599609,432.141174   C508.662964,433.504852 509.370209,434.911469 510.077484,436.318115   C509.270966,436.508331 508.464447,436.698517 507.657959,436.888733   C507.519806,435.320526 507.381653,433.752319 507.599609,432.141174  z\",id:\"svg_2241\"})),_path2240||(_path2240=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E8A164\",opacity:1,stroke:\"none\",d:\" M479.050232,452.660950   C477.925385,452.371948 476.818512,451.746643 475.711609,451.121368   C476.354828,450.586243 476.998077,450.051147 477.822571,449.266907   C478.358612,450.120087 478.713409,451.222412 479.050232,452.660950  z\",id:\"svg_2242\"})),_path2241||(_path2241=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M497.005859,433.005951   C497.445465,432.044037 497.878021,431.074951 498.655304,430.052948   C499.298553,430.110443 499.539093,430.296051 499.825256,431.025085   C499.936676,431.668396 499.944489,431.843536 499.952332,432.018707   C499.952332,432.018707 499.966766,432.473511 499.604187,432.721558   C498.489807,432.975159 497.738007,432.980713 496.986206,432.986267   C496.986206,432.986267 496.998810,432.998810 497.005859,433.005951  z\",id:\"svg_2243\"})),_path2242||(_path2242=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M464.997925,417.364929   C465.441895,416.999725 465.888702,417.004333 466.670593,417.001526   C466.872162,418.153748 466.738647,419.313385 466.605133,420.472992   C466.294128,420.496216 465.983124,420.519470 465.672119,420.542694   C465.448334,419.606720 465.224518,418.670715 464.997925,417.364929  z\",id:\"svg_2244\"})),_path2243||(_path2243=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M488.794678,429.142548   C488.811859,428.400757 489.054260,427.874451 489.296631,427.348175   C489.725098,427.928955 490.153564,428.509735 490.582031,429.090485   C490.061310,429.179657 489.540588,429.268860 488.794678,429.142548  z\",id:\"svg_2245\"})),_path2244||(_path2244=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M521.787720,428.798645   C521.135864,428.467072 520.788269,428.072845 520.440735,427.678619   C520.990112,427.531403 521.539490,427.384186 522.088867,427.236969   C522.089905,427.736633 522.091003,428.236328 521.787720,428.798645  z\",id:\"svg_2246\"})),_path2245||(_path2245=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M481.029480,411.028076   C480.569763,411.660065 480.110016,412.292053 479.324921,412.961914   C478.999542,412.999817 478.983002,412.986511 478.983032,412.986511   C479.431641,412.341217 479.880249,411.695892 480.663879,411.024597   C480.998840,410.998627 481.029449,411.028076 481.029480,411.028076  z\",id:\"svg_2247\"})),_path2246||(_path2246=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M480.984009,410.983398   C481.223358,410.457336 481.454987,409.931976 481.762451,409.455536   C481.797882,409.400665 482.255981,409.618561 482.518158,409.709991   C482.213257,410.118256 481.908386,410.526489 481.316467,410.981415   C481.029449,411.028076 480.998840,410.998627 480.984009,410.983398  z\",id:\"svg_2248\"})),_path2247||(_path2247=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M496.989807,433.238647   C497.738007,432.980713 498.489807,432.975159 499.616852,432.948700   C499.226776,433.283264 498.461456,433.638733 497.355957,433.994751   C497.008331,433.827179 497.000885,433.659088 496.989807,433.238647  z\",id:\"svg_2249\"})),_path2248||(_path2248=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M476.663361,421.665283   C476.650574,421.959747 476.496521,422.121307 476.342468,422.282867   C476.402344,422.032715 476.462219,421.782562 476.663361,421.665283  z\",id:\"svg_2250\"})),_path2249||(_path2249=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M503.989014,432.242096   C504.097900,432.405243 504.043732,432.571167 503.989624,432.737091   C503.935089,432.572998 503.880524,432.408936 503.989014,432.242096  z\",id:\"svg_2251\"})),_path2250||(_path2250=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M505.305969,437.388489   C505.166809,437.567078 504.922607,437.595032 504.678436,437.622986   C504.852600,437.494598 505.026764,437.366241 505.305969,437.388489  z\",id:\"svg_2252\"})),_path2251||(_path2251=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M500.214722,432.001282   C499.944489,431.843536 499.936676,431.668396 499.931519,431.229919   C500.357056,431.182129 500.779968,431.397736 501.202881,431.613342   C500.960968,431.736816 500.719025,431.860321 500.214722,432.001282  z\",id:\"svg_2253\"})),_path2252||(_path2252=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M479.006165,413.007874   C478.904968,413.043335 478.797089,413.070770 478.836121,413.042358   C478.983002,412.986511 478.999542,412.999817 479.006165,413.007874  z\",id:\"svg_2254\"})),_path2253||(_path2253=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M492.554260,425.566223   C492.475861,425.617615 492.447784,425.411774 492.447784,425.411774   C492.447784,425.411774 492.632690,425.514862 492.554260,425.566223  z\",id:\"svg_2255\"})),_path2254||(_path2254=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M461.998169,454.998138   C463.325867,452.960999 464.655426,450.925720 466.273468,448.448761   C468.030334,450.552368 469.203918,451.957581 470.300354,453.270447   C469.530243,454.319153 468.790497,455.326538 468.033691,456.666992   C468.016663,457.000092 468.001434,457.003815 467.646576,457.035156   C466.474243,457.757843 465.734924,458.842163 464.816284,459.024811   C463.977966,459.191559 462.945374,458.381348 461.998413,458.001709   C461.998413,458.001709 462.000000,458.000000 462.255371,457.820374   C462.341705,456.762390 462.172699,455.884033 462.003662,455.005646   C462.003662,455.005646 462.000000,455.000000 461.998169,454.998138  z\",id:\"svg_2256\"})),_path2255||(_path2255=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M473.969788,442.030212   C471.996246,440.940826 470.050110,439.821350 468.052002,438.350922   C468.000000,438.000000 468.004639,437.993896 468.004639,437.993896   C469.921509,439.101898 471.838348,440.209900 473.901886,441.627380   C474.048584,441.936890 473.997192,442.000061 473.969788,442.030212  z\",id:\"svg_2257\"})),_path2256||(_path2256=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M469.843872,443.237946   C470.152863,444.101410 470.121735,444.889465 470.090637,445.677490   C469.523315,445.526703 468.956024,445.375885 468.388702,445.225098   C468.760406,444.537567 469.132111,443.850037 469.843872,443.237946  z\",id:\"svg_2258\"})),_path2257||(_path2257=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M458.841003,445.694153   C458.502991,445.412750 458.383514,445.163147 458.264038,444.913574   C458.503998,444.842560 458.743927,444.771545 458.983856,444.700562   C459.009094,445.042328 459.034332,445.384155 458.841003,445.694153  z\",id:\"svg_2259\"})),_path2258||(_path2258=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M460.542725,443.564819   C460.474640,443.607513 460.610809,443.522095 460.542725,443.564819  z\",id:\"svg_2260\"})),_path2259||(_path2259=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D28442\",opacity:1,stroke:\"none\",d:\" M467.996948,438.002472   C467.873718,437.859192 467.753540,437.713409 467.633392,437.567627   C467.720703,437.616730 467.807983,437.665863 467.949951,437.854431   C468.004639,437.993896 468.000000,438.000000 467.996948,438.002472  z\",id:\"svg_2261\"})),_path2260||(_path2260=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M430.023834,427.018524   C429.856140,427.874420 429.688416,428.730347 429.520721,429.586243   C429.152374,429.457123 428.784027,429.328003 428.415649,429.198883   C428.715302,428.493835 429.014923,427.788818 429.657501,427.041779   C430.000427,426.999786 430.023834,427.018524 430.023834,427.018524  z\",id:\"svg_2262\"})),_path2261||(_path2261=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M428.211731,418.984558   C427.962402,418.532867 427.986237,418.106689 428.024902,417.361328   C428.514465,417.589111 428.989227,418.136139 429.247864,418.869507   C428.849426,419.040588 428.667145,419.025330 428.211731,418.984558  z\",id:\"svg_2263\"})),_path2262||(_path2262=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EB9D5D\",opacity:1,stroke:\"none\",d:\" M441.719208,431.091248   C441.805298,431.398926 441.712921,431.796539 441.487976,431.896973   C441.322906,431.970642 440.983887,431.654633 440.722412,431.512299   C440.976227,431.359436 441.230072,431.206573 441.719208,431.091248  z\",id:\"svg_2264\"})),_path2263||(_path2263=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E39454\",opacity:1,stroke:\"none\",d:\" M442.880859,425.831909   C443.010101,426.022888 443.006744,426.502136 443.007629,426.741547   C442.457092,426.821930 441.905640,426.662872 441.193268,426.259735   C441.605438,425.890717 442.178528,425.765808 442.880859,425.831909  z\",id:\"svg_2265\"})),_path2264||(_path2264=/*#__PURE__*/React.createElement(\"path\",{fill:\"#D98A49\",opacity:1,stroke:\"none\",d:\" M429.991028,426.988159   C430.086945,426.949829 430.192322,426.923126 430.160767,426.957489   C430.023834,427.018524 430.000427,426.999786 429.991028,426.988159  z\",id:\"svg_2266\"})),_path2265||(_path2265=/*#__PURE__*/React.createElement(\"path\",{fill:\"#431E11\",opacity:1,stroke:\"none\",d:\" M441.810822,460.341736   C441.700806,459.842896 441.776306,459.644592 442.348633,459.181885   C449.294739,458.007141 452.059326,462.772552 455.320312,467.297058   C456.230194,468.625580 457.029205,469.601257 458.018127,470.818115   C458.373718,471.179413 458.539429,471.299530 457.968506,471.620117   C456.738586,471.946014 456.245331,472.071442 455.752075,472.196838   C451.166840,468.345306 446.581604,464.493805 441.810822,460.341736  z\",id:\"svg_2267\"})),_path2266||(_path2266=/*#__PURE__*/React.createElement(\"path\",{fill:\"#70391E\",opacity:1,stroke:\"none\",d:\" M455.848511,472.525574   C456.245331,472.071442 456.738586,471.946014 458.097351,471.676849   C459.107422,471.669403 459.263947,471.790283 459.432373,471.895752   C460.933258,475.628784 463.607483,476.418304 467.699280,475.252655   C468.616699,475.831329 469.004547,476.137360 469.392426,476.443359   C467.046173,480.377380 464.121002,481.931610 459.725952,478.567566   C458.258728,476.561951 457.101837,474.708099 455.848511,472.525574  z\",id:\"svg_2268\"})),_path2267||(_path2267=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E6AA77\",opacity:1,stroke:\"none\",d:\" M459.737030,471.914490   C459.263947,471.790283 459.107422,471.669403 458.833984,471.476379   C458.539429,471.299530 458.373718,471.179413 458.104736,470.532928   C457.070770,468.985779 456.140076,467.964996 455.209412,466.944183   C452.059326,462.772552 449.294739,458.007141 442.419250,458.871552   C442.486877,453.878021 446.176880,455.963898 448.362396,456.421326   C450.827698,456.937317 453.030212,458.708771 455.709900,460.319885   C457.747406,463.135986 459.422028,465.566467 461.104370,468.299377   C461.386139,469.121552 461.660278,469.641327 461.934418,470.161072   C461.303528,470.751801 460.672607,471.342499 459.737030,471.914490  z\",id:\"svg_2269\"})),_path2268||(_path2268=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M461.096680,467.996948   C459.422028,465.566467 457.747406,463.135986 456.073425,460.353149   C457.802979,459.340149 459.531921,458.679596 461.629639,458.010376   C462.945374,458.381348 463.977966,459.191559 464.816284,459.024811   C465.734924,458.842163 466.474243,457.757843 467.644897,457.041504   C467.998749,458.084473 467.999420,459.152405 468.003143,460.609253   C468.006226,460.998108 468.024384,461.005402 467.674683,461.050964   C466.886566,462.061096 466.448151,463.025635 465.983826,464.371857   C465.984497,465.517944 466.011078,466.282410 466.037659,467.046844   C466.037689,467.046844 466.011383,467.015686 465.653687,467.013763   C463.896210,467.340210 462.496429,467.668579 461.096680,467.996948  z\",id:\"svg_2270\"})),_path2269||(_path2269=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M459.005981,455.008484   C458.061554,455.731140 457.108887,456.443115 456.156219,457.155121   C455.897186,456.667389 455.638123,456.179657 455.379059,455.691956   C456.337982,455.454620 457.296906,455.217316 458.617126,454.979004   C458.978424,454.978027 458.997772,454.997833 459.005981,455.008484  z\",id:\"svg_2271\"})),_path2270||(_path2270=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M462.002014,455.379578   C462.172699,455.884033 462.341705,456.762390 462.256134,457.819153   C462.001160,457.249542 462.000763,456.501556 462.002014,455.379578  z\",id:\"svg_2272\"})),_path2271||(_path2271=/*#__PURE__*/React.createElement(\"path\",{fill:\"#DE8F51\",opacity:1,stroke:\"none\",d:\" M448.001953,453.002441   C447.907654,453.037781 447.811401,453.070679 447.855164,453.049866   C447.995117,452.996155 448.000000,453.000000 448.001953,453.002441  z\",id:\"svg_2273\"})),_path2272||(_path2272=/*#__PURE__*/React.createElement(\"path\",{fill:\"#431E11\",opacity:1,stroke:\"none\",d:\" M469.713989,476.292419   C469.004547,476.137360 468.616699,475.831329 468.059296,475.196228   C471.969849,471.208466 475.880554,467.328461 480.220062,464.008972   C481.779602,462.815979 484.371643,462.972717 487.250366,462.349365   C484.683807,469.764893 479.045929,471.714813 473.690247,474.045471   C472.410339,474.602417 471.250580,475.435425 469.713989,476.292419  z\",id:\"svg_2274\"})),_path2273||(_path2273=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M468.007751,461.009918   C469.966003,459.863464 471.922668,458.705200 473.894226,457.538147   C474.922028,458.290497 476.093323,459.147919 477.629669,459.990906   C476.324158,460.750183 474.653595,461.523895 472.347992,462.591766   C472.451233,463.024994 472.782867,464.416260 473.215942,466.233032   C472.132660,465.797394 471.399323,465.502472 470.091827,464.906219   C469.019928,463.405060 468.522156,462.205231 468.024384,461.005402   C468.024384,461.005402 468.006226,460.998108 468.007751,461.009918  z\",id:\"svg_2275\"})),_path2274||(_path2274=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M466.297241,467.193176   C466.011078,466.282410 465.984497,465.517944 466.296082,464.415039   C467.414337,464.735596 468.194397,465.394592 468.974426,466.053589   C469.037689,466.969727 469.100922,467.885895 469.164185,468.802032   C468.295074,468.314545 467.425934,467.827026 466.297241,467.193176  z\",id:\"svg_2276\"})),_path2275||(_path2275=/*#__PURE__*/React.createElement(\"path\",{fill:\"#BA753E\",opacity:1,stroke:\"none\",d:\" M461.104340,468.299377   C462.496429,467.668579 463.896210,467.340210 465.663574,467.025269   C464.927002,468.059998 463.822815,469.081268 462.326538,470.131836   C461.660278,469.641327 461.386139,469.121552 461.104340,468.299377  z\",id:\"svg_2277\"})),_path2276||(_path2276=/*#__PURE__*/React.createElement(\"path\",{fill:\"#E8A164\",opacity:1,stroke:\"none\",d:\" M469.211792,465.927856   C468.194397,465.394592 467.414337,464.735596 466.322021,464.033386   C466.448151,463.025635 466.886566,462.061096 467.674683,461.050964   C468.522156,462.205231 469.019928,463.405060 469.795410,464.773254   C469.865112,465.228424 469.657104,465.515289 469.211792,465.927856  z\",id:\"svg_2278\"})),_path2277||(_path2277=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CB8143\",opacity:1,stroke:\"none\",d:\" M478.298065,459.969849   C478.421692,459.358215 478.869324,458.729950 479.636780,458.077850   C479.511749,458.687073 479.066925,459.320129 478.298065,459.969849  z\",id:\"svg_2279\"})),_path2278||(_path2278=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CC7E3E\",opacity:1,stroke:\"none\",d:\" M467.998779,488.998779   C468.301117,488.487244 468.604706,487.976929 468.908295,487.466614   C469.118042,487.648834 469.327789,487.831055 469.537537,488.013275   C469.215515,488.319519 468.893524,488.625793 468.287231,488.967224   C468.002960,489.002441 468.000000,489.000000 467.998779,488.998779  z\",id:\"svg_2280\"})),_path2279||(_path2279=/*#__PURE__*/React.createElement(\"path\",{fill:\"#EEA05E\",opacity:1,stroke:\"none\",d:\" M471.421204,401.920319   C471.824554,400.963226 472.538239,399.973541 473.623291,398.983063   C473.240295,399.950745 472.485901,400.919220 471.421204,401.920319  z\",id:\"svg_2281\"})),_path2280||(_path2280=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6AA0A1\",opacity:1,stroke:\"none\",d:\" M418.985413,368.984375   C419.288605,368.464966 419.608337,367.962708 419.928070,367.460449   C420.135742,367.643372 420.343384,367.826324 420.551086,368.009277   C420.233124,368.319336 419.915161,368.629395 419.316742,368.987030   C419.036255,369.034607 419.001953,369.001495 418.985413,368.984375  z\",id:\"svg_2282\"})),_path2281||(_path2281=/*#__PURE__*/React.createElement(\"path\",{fill:\"#6AA0A1\",opacity:1,stroke:\"none\",d:\" M421.995422,365.238220   C422.109131,365.408936 422.053558,365.581055 421.997925,365.753174   C421.940643,365.581970 421.883362,365.410797 421.995422,365.238220  z\",id:\"svg_2283\"})),_path2282||(_path2282=/*#__PURE__*/React.createElement(\"path\",{fill:\"#629B9A\",opacity:1,stroke:\"none\",d:\" M370.127777,372.293762   C370.414520,372.211578 370.804779,372.305573 370.875458,372.509979   C370.939209,372.694305 370.653015,372.999634 370.521179,373.251617   C370.378174,373.007080 370.235138,372.762543 370.127777,372.293762  z\",id:\"svg_2284\"})),_path2283||(_path2283=/*#__PURE__*/React.createElement(\"path\",{fill:\"#CA9872\",opacity:1,stroke:\"none\",d:\" M455.320312,467.297058   C456.140076,467.964996 457.070770,468.985779 457.914856,470.291748   C457.029205,469.601257 456.230194,468.625580 455.320312,467.297058  z\",id:\"svg_2285\"}))));}const ForwardRef=/*#__PURE__*/React.forwardRef(SvgHeaderImg);export default __webpack_public_path__+\"static/media/header-img.394d6910640c9c536097c7270ef888ef.svg\";export{ForwardRef as ReactComponent};","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgNavIcon3(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 12 3 C 7.04 3 3 7.04 3 12 L 3 25.380859 L 16.419922 32.089844 C 16.919922 32.319844 17.140156 32.919922 16.910156 33.419922 C 16.740156 33.789922 16.38 34 16 34 C 15.86 34 15.720078 33.970156 15.580078 33.910156 L 3 27.619141 L 3 38 C 3 42.96 7.04 47 12 47 L 38 47 C 42.96 47 47 42.96 47 38 L 47 12 C 47 7.04 42.96 3 38 3 L 12 3 z M 12 5 L 38 5 C 41.86 5 45 8.14 45 12 L 45 38 C 45 41.86 41.86 45 38 45 L 12 45 C 8.14 45 5 41.86 5 38 L 5 30.859375 L 9.0195312 32.869141 C 9.0095313 33.079141 9 33.29 9 33.5 C 9 37.64 12.36 41 16.5 41 C 20.64 41 24 37.64 24 33.5 C 24 32.65 23.860078 31.819297 23.580078 31.029297 L 28.330078 27.449219 C 29.340078 27.819219 30.4 28 31.5 28 C 36.74 28 41 23.74 41 18.5 C 41 13.26 36.74 9 31.5 9 C 26.26 9 22 13.26 22 18.5 C 22 19.62 22.190312 20.71 22.570312 21.75 L 19.119141 26.470703 C 18.289141 26.160703 17.4 26 16.5 26 C 14.76 26 13.160625 26.589844 11.890625 27.589844 L 5 24.150391 L 5 12 C 5 8.14 8.14 5 12 5 z M 31.5 11 C 35.64 11 39 14.36 39 18.5 C 39 22.64 35.64 26 31.5 26 C 30.47 26 29.490078 25.800391 28.580078 25.400391 C 28.250078 25.250391 27.870078 25.299766 27.580078 25.509766 L 21.759766 29.900391 C 21.379766 30.190391 21.260937 30.700859 21.460938 31.130859 C 21.820938 31.870859 22 32.67 22 33.5 C 22 36.53 19.53 39 16.5 39 C 13.6 39 11.199531 36.729141 11.019531 33.869141 L 14.689453 35.699219 L 14.720703 35.710938 L 14.740234 35.720703 C 15.140234 35.910703 15.56 36 16 36 C 17.17 36 18.240703 35.319766 18.720703 34.259766 C 19.410703 32.769766 18.769062 30.999063 17.289062 30.289062 L 13.960938 28.630859 C 14.720937 28.230859 15.58 28 16.5 28 C 17.38 28 18.22 28.199609 19 28.599609 C 19.44 28.829609 19.979531 28.700781 20.269531 28.300781 L 23.369141 24.060547 L 24.509766 22.480469 C 24.719766 22.200469 24.769141 21.820234 24.619141 21.490234 C 24.209141 20.550234 24 19.54 24 18.5 C 24 14.36 27.36 11 31.5 11 z M 31.5 13 C 28.474279 13 26 15.474279 26 18.5 C 26 21.525721 28.474279 24 31.5 24 C 34.525721 24 37 21.525721 37 18.5 C 37 15.474279 34.525721 13 31.5 13 z M 31.5 15 C 33.444841 15 35 16.555159 35 18.5 C 35 20.444841 33.444841 22 31.5 22 C 29.555159 22 28 20.444841 28 18.5 C 28 16.555159 29.555159 15 31.5 15 z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgNavIcon3);\nexport default __webpack_public_path__ + \"static/media/nav-icon3.058eac9196db19bbd6a22028c84185b3.svg\";\nexport { ForwardRef as ReactComponent };","// logos\r\nimport headerImg from './header-img.svg';\r\nimport logo from './CZAR-logo.png';\r\n\r\n// navigational icons\r\nimport navIcon1 from './nav-icon1.svg';\r\nimport navIcon2 from './nav-icon2.svg';\r\nimport navIcon3 from './nav-icon3.svg';\r\n\r\n\r\n\r\n\r\n\r\nexport const nav_icons = {\r\n    navIcon1,\r\n    navIcon2,\r\n    navIcon3,\r\n};\r\n\r\nexport const logos = {\r\n    headerImg,\r\n    logo,\r\n};\r\n","var _path, _path2, _path3;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgNavIcon1(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.996 16V15.9993H16V10.1313C16 7.26065 15.382 5.04932 12.026 5.04932C10.4127 5.04932 9.33 5.93465 8.888 6.77398H8.84133V5.31732H5.65933V15.9993H8.97267V10.71C8.97267 9.31732 9.23667 7.97065 10.9613 7.97065C12.6607 7.97065 12.686 9.55998 12.686 10.7993V16H15.996Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.264008 5.31812H3.58134V16.0001H0.264008V5.31812Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.92133 0C0.860667 0 0 0.860667 0 1.92133C0 2.982 0.860667 3.86067 1.92133 3.86067C2.982 3.86067 3.84267 2.982 3.84267 1.92133C3.842 0.860667 2.98133 0 1.92133 0V0Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgNavIcon1);\nexport default __webpack_public_path__ + \"static/media/nav-icon1.721d5414c26365f117e71d46b6641cb2.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgNavIcon2(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.54 2.65667H12.0007V0.112667C11.7487 0.078 10.882 0 9.87267 0C7.76667 0 6.324 1.32467 6.324 3.75933V6H4V8.844H6.324V16H9.17333V8.84467H11.4033L11.7573 6.00067H9.17267V4.04133C9.17333 3.21933 9.39467 2.65667 10.54 2.65667V2.65667Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgNavIcon2);\nexport default __webpack_public_path__ + \"static/media/nav-icon2.178f497aa17b70c42df2a1a8c926ed01.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useEffect } from 'react';\r\nimport { Navbar, Container, Nav } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport { nav_icons, logos } from '../assets/img'\r\n\r\n\r\nexport const NavBar = () => {\r\n    // State to track which navigation link is active\r\n    const [activeLink, setActiveLink] = useState('home');\r\n\r\n    // State to track if the page has been scrolled past a certain point\r\n    const [scrolled, setScrolled] = useState(false);\r\n\r\n    // Hook to detect scroll behavior and update the 'scrolled' state\r\n    useEffect(() => {\r\n        const handleScroll = () => setScrolled(window.scrollY > 50);\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, []); \r\n\r\n    // Function to update the active navigation link\r\n    const handleSetActiveLink = (value) => setActiveLink(value);\r\n\r\n    // Helper function to apply the correct class based on active link\r\n    const getLinkClass = (link) =>\r\n        activeLink === link ? 'active navbar-link' : 'navbar-link';\r\n\r\n    return (\r\n        <Navbar expand=\"lg\" className={scrolled ? 'scrolled' : ''}>\r\n            <Container>\r\n                <Navbar.Brand href=\"/\">\r\n                    <img src={logos.logo} alt=\"Logo\" />\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Link to=\"/\" className={getLinkClass('home')} onClick={() => handleSetActiveLink('home')}>Home</Link>\r\n                        <Link to=\"/skills\" className={getLinkClass('skills')} onClick={() => handleSetActiveLink('skills')}>Skills</Link>\r\n                        <Link to=\"/links\" className={getLinkClass('links')} onClick={() => handleSetActiveLink('links')}>Links</Link>\r\n                        <Link to=\"/about\" className={getLinkClass('about')} onClick={() => handleSetActiveLink('about')}>About Me</Link>\r\n                    </Nav>\r\n\r\n                    <span className=\"navbar-text\">\r\n                        <div className=\"social-icon\">\r\n                            \r\n                            <a href=\"/\" aria-label=\"Social Link 1\">\r\n                                <img src={nav_icons.navIcon1} alt=\"Social Icon 1\" />\r\n                            </a>\r\n                            <a href=\"/\" aria-label=\"Social Link 2\">\r\n                                <img src={nav_icons.navIcon2} alt=\"Social Icon 2\" />\r\n                            </a>\r\n                            <a href=\"/\" aria-label=\"Social Link 3\">\r\n                                <img src={nav_icons.navIcon3} alt=\"Social Icon 3\" />\r\n                            </a>\r\n                        </div>\r\n\r\n                        <button className=\"vvd\" onClick={() => window.open('https://www.linkedin.com/in/cesar-olague-225769214/', '_blank')}>\r\n                            <span>Let's Connect</span>\r\n                        </button>\r\n                    </span>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n};","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","var _excluded = [\"color\", \"size\", \"title\", \"className\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowRightCircle = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color,\n    className: ['bi', 'bi-arrow-right-circle', className].filter(Boolean).join(' ')\n  }, rest), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8m15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0M4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5z\"\n  }));\n});\nArrowRightCircle.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  className: PropTypes.string\n};\nArrowRightCircle.defaultProps = {\n  color: 'currentColor',\n  size: '1em',\n  title: null,\n  className: ''\n};\nexport default ArrowRightCircle;","import { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { logos } from \"../assets/img\";\r\nimport { ArrowRightCircle } from 'react-bootstrap-icons';\r\nimport 'animate.css';\r\n\r\nexport const Banner = () => {\r\n\r\n    // Time delay before typing changes between words\r\n    const period = 2000;\r\n\r\n    // Memoize the array to avoid it being re-created on every render\r\n    const toRotate = useMemo(() => [\"ML Enthusiast\", \"Software Engineer\", \"COMPSCI Student\"], []);\r\n\r\n    // Consolidated state for loop counter, deletion state, current text, and typing speed\r\n    const [state, setState] = useState({\r\n        loopNum: 0,                         // track which word in array is being displayed\r\n        isDeleting: false,                  // tracks whether we are currently deleting\r\n        text: '',                           // substring currently being shown\r\n        delta: 300 - Math.random() * 100,   // speed of typing randomized slightly\r\n    });\r\n\r\n    // Destructure the state object for easier access\r\n    const { loopNum, isDeleting, text, delta } = state;\r\n\r\n\r\n    // handles typing effect: adding/removing characters from text\r\n    const tick = useCallback(() => {\r\n        const i = loopNum % toRotate.length;    \r\n        const fullText = toRotate[i];\r\n        const updatedText = isDeleting\r\n            ? fullText.substring(0, text.length - 1)\r\n            : fullText.substring(0, text.length + 1);\r\n        \r\n        // Update the state with the new text and adjust typing speed (faster when deleting)\r\n        setState((prevState) => ({\r\n            ...prevState,\r\n            text: updatedText,\r\n            delta: isDeleting ? prevState.delta / 2 : prevState.delta,\r\n        }));\r\n\r\n        // If the full word is typed out, start deleting\r\n        if (!isDeleting && updatedText === fullText) {\r\n            setState((prevState) => ({\r\n                ...prevState,\r\n                isDeleting: true,\r\n                delta: period,\r\n            }));\r\n\r\n        // If all characters are deleted, move to the next word\r\n        } else if (isDeleting && updatedText === '') {\r\n            setState((prevState) => ({\r\n                ...prevState,\r\n                isDeleting: false,\r\n                loopNum: prevState.loopNum + 1,\r\n                delta: 500,\r\n            }));\r\n        }\r\n    }, [isDeleting, text, loopNum, toRotate]);\r\n\r\n    useEffect(() => {\r\n        const ticker = setInterval(() => {\r\n            tick();\r\n        }, delta);\r\n\r\n        return () => clearInterval(ticker);\r\n    }, [tick, delta]);\r\n\r\n    return (\r\n        <section className=\"banner\" id=\"home\">\r\n            <Container>\r\n                <Row className=\"align-items-center\">\r\n                    <Col xs={12} md={6} xl={7}>\r\n                        <span className=\"tagline\">Welcome to my Portfolio</span>\r\n                        <h1>{`Hi! I'm Cesar:`}<br />\r\n                            <span className=\"txt-rotate\" dataPeriod=\"1000\" data-rotate='[\"ML Enthusiast\", \"Software Engineer\", \"COMPSCI Student\"]'>\r\n                                <span className=\"wrap\">{text}</span>\r\n                            </span>\r\n                        </h1>\r\n                        <p>\r\n                            Hi, I'm Cesar Olague, a COMPSCI student at CSUDH with a passion for Software Development.\r\n                            I specialize in Java, Python, and enjoy building AI models and exploring new projects.\r\n                            I am excited about AI and machine learning and eager to contribute to innovative Software Engineering Projects.\r\n                            Explore my projects and let's connect!\r\n                        </p>\r\n                        <button onClick={() => window.open('https://www.linkedin.com/in/cesar-olague-225769214/', '_blank')}>Let’s Connect<ArrowRightCircle size={25} /></button>\r\n                    </Col>\r\n                    <Col xs={12} md={6} xl={5}>\r\n                        <img src={logos.headerImg} alt=\"Header Img\" style={{ width: '100%', height: 'auto' }} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    );\r\n};","function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { useCallback, useRef, useState } from 'react';\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  const wasPropRef = useRef(propValue !== undefined);\n  const [stateValue, setState] = useState(defaultValue);\n  const isProp = propValue !== undefined;\n  const wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n  return [isProp ? propValue : stateValue, useCallback((...args) => {\n    const [value, ...rest] = args;\n    let returnValue = handler == null ? void 0 : handler(value, ...rest);\n    setState(value);\n    return returnValue;\n  }, [handler])];\n}\nexport { useUncontrolledProp };\nexport function useUncontrolled(props, config) {\n  return Object.keys(config).reduce((result, fieldName) => {\n    const _ref = result,\n      _defaultKey = defaultKey(fieldName),\n      {\n        [_defaultKey]: defaultValue,\n        [fieldName]: propsValue\n      } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [_defaultKey, fieldName].map(_toPropertyKey));\n    const handlerName = config[fieldName];\n    const [value, handler] = useUncontrolledProp(propsValue, defaultValue, props[handlerName]);\n    return Object.assign({}, rest, {\n      [fieldName]: value,\n      [handlerName]: handler\n    });\n  }, props);\n}","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\nimport React, {JSX, ReactNode, useContext, useLayoutEffect, useMemo, useRef, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\nconst IsSSRContext = React.createContext(false);\n\nexport interface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n// This is only used in React < 18.\nfunction LegacySSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let counter = useCounter(cur === defaultContext);\n  let [isSSR, setIsSSR] = useState(true);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${counter}`,\n    current: 0\n  }), [cur, counter]);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof document !== 'undefined') {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return (\n    <SSRContext.Provider value={value}>\n      <IsSSRContext.Provider value={isSSR}>\n        {props.children}\n      </IsSSRContext.Provider>\n    </SSRContext.Provider>\n  );\n}\n\nlet warnedAboutSSRProvider = false;\n\n/**\n * When using SSR with React Aria in React 16 or 17, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  if (typeof React['useId'] === 'function') {\n    if (process.env.NODE_ENV !== 'test' && !warnedAboutSSRProvider) {\n      console.warn('In React 18, SSRProvider is not necessary and is a noop. You can remove it from your app.');\n      warnedAboutSSRProvider = true;\n    }\n    return <>{props.children}</>;\n  }\n  return <LegacySSRProvider {...props} />;\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet componentIds = new WeakMap();\n\nfunction useCounter(isDisabled = false) {\n  let ctx = useContext(SSRContext);\n  let ref = useRef<number | null>(null);\n  // eslint-disable-next-line rulesdir/pure-render\n  if (ref.current === null && !isDisabled) {\n    // In strict mode, React renders components twice, and the ref will be reset to null on the second render.\n    // This means our id counter will be incremented twice instead of once. This is a problem because on the\n    // server, components are only rendered once and so ids generated on the server won't match the client.\n    // In React 18, useId was introduced to solve this, but it is not available in older versions. So to solve this\n    // we need to use some React internals to access the underlying Fiber instance, which is stable between renders.\n    // This is exposed as ReactCurrentOwner in development, which is all we need since StrictMode only runs in development.\n    // To ensure that we only increment the global counter once, we store the starting id for this component in\n    // a weak map associated with the Fiber. On the second render, we reset the global counter to this value.\n    // Since React runs the second render immediately after the first, this is safe.\n    // @ts-ignore\n    let currentOwner = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED?.ReactCurrentOwner?.current;\n    if (currentOwner) {\n      let prevComponentValue = componentIds.get(currentOwner);\n      if (prevComponentValue == null) {\n        // On the first render, and first call to useId, store the id and state in our weak map.\n        componentIds.set(currentOwner, {\n          id: ctx.current,\n          state: currentOwner.memoizedState\n        });\n      } else if (currentOwner.memoizedState !== prevComponentValue.state) {\n        // On the second render, the memoizedState gets reset by React.\n        // Reset the counter, and remove from the weak map so we don't\n        // do this for subsequent useId calls.\n        ctx.current = prevComponentValue.id;\n        componentIds.delete(currentOwner);\n      }\n    }\n\n    // eslint-disable-next-line rulesdir/pure-render\n    ref.current = ++ctx.current;\n  }\n\n  // eslint-disable-next-line rulesdir/pure-render\n  return ref.current;\n}\n\nfunction useLegacySSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  let counter = useCounter(!!defaultId);\n  let prefix = ctx === defaultContext && process.env.NODE_ENV === 'test' ? 'react-aria' : `react-aria${ctx.prefix}`;\n  return defaultId || `${prefix}-${counter}`;\n}\n\nfunction useModernSSRSafeId(defaultId?: string): string {\n  // @ts-ignore\n  let id = React.useId();\n  let [didSSR] = useState(useIsSSR());\n  let prefix = didSSR || process.env.NODE_ENV === 'test' ? 'react-aria' : `react-aria${defaultContext.prefix}`;\n  return defaultId || `${prefix}-${id}`;\n}\n\n// Use React.useId in React 18 if available, otherwise fall back to our old implementation.\n/** @private */\nexport const useSSRSafeId = typeof React['useId'] === 'function' ? useModernSSRSafeId : useLegacySSRSafeId;\n\nfunction getSnapshot() {\n  return false;\n}\n\nfunction getServerSnapshot() {\n  return true;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction subscribe(onStoreChange: () => void): () => void {\n  // noop\n  return () => {};\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  // In React 18, we can use useSyncExternalStore to detect if we're server rendering or hydrating.\n  if (typeof React['useSyncExternalStore'] === 'function') {\n    return React['useSyncExternalStore'](subscribe, getSnapshot, getServerSnapshot);\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useContext(IsSSRContext);\n}\n","const _excluded = [\"active\", \"eventKey\", \"mountOnEnter\", \"transition\", \"unmountOnExit\", \"role\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\"],\n  _excluded2 = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n  _excluded3 = [\"as\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTabPanel(_ref) {\n  let {\n      active,\n      eventKey,\n      mountOnEnter,\n      transition,\n      unmountOnExit,\n      role = 'tabpanel',\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const context = useContext(TabContext);\n  if (!context) return [Object.assign({}, props, {\n    role\n  }), {\n    eventKey,\n    isActive: active,\n    mountOnEnter,\n    transition,\n    unmountOnExit,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited\n  }];\n  const {\n      activeKey,\n      getControlledId,\n      getControllerId\n    } = context,\n    rest = _objectWithoutPropertiesLoose(context, _excluded2);\n  const key = makeEventKey(eventKey);\n  return [Object.assign({}, props, {\n    role,\n    id: getControlledId(eventKey),\n    'aria-labelledby': getControllerId(eventKey)\n  }), {\n    eventKey,\n    isActive: active == null && key != null ? makeEventKey(activeKey) === key : active,\n    transition: transition || rest.transition,\n    mountOnEnter: mountOnEnter != null ? mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: unmountOnExit != null ? unmountOnExit : rest.unmountOnExit,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited\n  }];\n}\nconst TabPanel = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(_ref2, ref) => {\n  let {\n      as: Component = 'div'\n    } = _ref2,\n    props = _objectWithoutPropertiesLoose(_ref2, _excluded3);\n  const [tabPanelProps, {\n    isActive,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition = NoopTransition\n  }] = useTabPanel(props);\n  // We provide an empty the TabContext so `<Nav>`s in `<TabPanel>`s don't\n  // conflict with the top level one.\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: /*#__PURE__*/_jsx(Transition, {\n        in: isActive,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: onExited,\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit,\n        children: /*#__PURE__*/_jsx(Component, Object.assign({}, tabPanelProps, {\n          ref: ref,\n          hidden: !isActive,\n          \"aria-hidden\": !isActive\n        }))\n      })\n    })\n  });\n});\nTabPanel.displayName = 'TabPanel';\nexport default TabPanel;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport { useSSRSafeId } from './ssr';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\nimport TabPanel from './TabPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Tabs = props => {\n  const {\n    id: userId,\n    generateChildId: generateCustomChildId,\n    onSelect: propsOnSelect,\n    activeKey: propsActiveKey,\n    defaultActiveKey,\n    transition,\n    mountOnEnter,\n    unmountOnExit,\n    children\n  } = props;\n  const [activeKey, onSelect] = useUncontrolledProp(propsActiveKey, defaultActiveKey, propsOnSelect);\n  const id = useSSRSafeId(userId);\n  const generateChildId = useMemo(() => generateCustomChildId || ((key, type) => id ? `${id}-${type}-${key}` : null), [id, generateCustomChildId]);\n  const tabContext = useMemo(() => ({\n    onSelect,\n    activeKey,\n    transition,\n    mountOnEnter: mountOnEnter || false,\n    unmountOnExit: unmountOnExit || false,\n    getControlledId: key => generateChildId(key, 'tabpane'),\n    getControllerId: key => generateChildId(key, 'tab')\n  }), [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: tabContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: onSelect || null,\n      children: children\n    })\n  });\n};\nTabs.Panel = TabPanel;\nexport default Tabs;","import NoopTransition from '@restart/ui/NoopTransition';\nimport Fade from './Fade';\nexport default function getTabTransitionComponent(transition) {\n  if (typeof transition === 'boolean') {\n    return transition ? Fade : NoopTransition;\n  }\n  return transition;\n}","import * as React from 'react';\nimport Tabs from '@restart/ui/Tabs';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabContainer = ({\n  transition,\n  ...props\n}) => /*#__PURE__*/_jsx(Tabs, {\n  ...props,\n  transition: getTabTransitionComponent(transition)\n});\nTabContainer.displayName = 'TabContainer';\nexport default TabContainer;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabContent = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nTabContent.displayName = 'TabContent';\nexport default TabContent;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport TabContext from '@restart/ui/TabContext';\nimport { useTabPanel } from '@restart/ui/TabPanel';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabPane = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  transition,\n  ...props\n}, ref) => {\n  const [{\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    ...rest\n  }, {\n    isActive,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition = Fade\n  }] = useTabPanel({\n    ...props,\n    transition: getTabTransitionComponent(transition)\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n\n  // We provide an empty the TabContext so `<Nav>`s in `<TabPanel>`s don't\n  // conflict with the top level one.\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: /*#__PURE__*/_jsx(Transition, {\n        in: isActive,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: onExited,\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit,\n        children: /*#__PURE__*/_jsx(Component, {\n          ...rest,\n          ref: ref,\n          className: classNames(className, prefix, isActive && 'active')\n        })\n      })\n    })\n  });\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import PropTypes from 'prop-types';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n/* eslint-disable react/no-unused-prop-types */\nconst propTypes = {\n  eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Content for the tab title.\n   */\n  title: PropTypes.node.isRequired,\n  /**\n   * The disabled state of the tab.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Class to pass to the underlying nav link.\n   */\n  tabClassName: PropTypes.string,\n  /**\n   * Object containing attributes to pass to underlying nav link.\n   */\n  tabAttrs: PropTypes.object\n};\nconst Tab = () => {\n  throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n};\nTab.propTypes = propTypes;\nexport default Object.assign(Tab, {\n  Container: TabContainer,\n  Content: TabContent,\n  Pane: TabPane\n});","import { Col } from \"react-bootstrap\";\r\n\r\nexport const FavoritesCard = ({ title, description, imgUrl, link }) => (\r\n  <Col xs={12} sm={6} md={4}>\r\n    <a href={link} className=\"fav-link\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n      <div className=\"fav-imgbx\">\r\n        <img src={imgUrl} alt={title} />\r\n        <div className=\"fav-txtx\">\r\n          <h4>{title}</h4>\r\n          <span>{description}</span>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  </Col>\r\n);","import { useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Tab, Nav } from \"react-bootstrap\";\r\nimport { FavoritesCard } from \"./FavoritesCard\";\r\nimport colorSharp2 from \"../assets/img/color-sharp2.png\";\r\nimport 'animate.css';\r\n\r\n// load the favorites.json file\r\nimport favoritesData from \"../assets/img/favorites.json\";\r\n\r\nexport const Favorites = () => {\r\n  const [shows, setShows] = useState([]);\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Simulate data loading from an external source\r\n    const loadData = async () => {\r\n      // Set shows and games from the JSON data\r\n      setShows(favoritesData.shows);\r\n      setGames(favoritesData.games);\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"favorites\" id=\"favorites\">\r\n      <Container>\r\n        <Row>\r\n          <Col size={12}>\r\n            <h2>Favorite Shows/Films/Games</h2>\r\n            <p>\r\n              Here is a list of some of my all-time favorite films and shows as well as games.\r\n              These games and films provided stories that have captivated my imagination.\r\n            </p>\r\n            <Tab.Container id=\"favorites-tabs\" defaultActiveKey=\"first\">\r\n              <Nav variant=\"pills\" className=\"nav-pills mb-5 justify-content-center align-items-center\" id=\"pills-tab\">\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"first\">Films/Shows</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"second\">Games</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n              <Tab.Content id=\"slideInUp\">\r\n                <Tab.Pane eventKey=\"first\">\r\n                  <Row>\r\n                    {shows.map((show, index) => (\r\n                      <FavoritesCard key={index} {...show} />\r\n                    ))}\r\n                  </Row>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"second\">\r\n                  <Row>\r\n                    {games.map((game, index) => (\r\n                      <FavoritesCard key={index} {...game} />\r\n                    ))}\r\n                  </Row>\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Tab.Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <img className=\"background-image-right\" src={colorSharp2} alt=\"background\" />\r\n    </section>\r\n  );\r\n};\r\n","import { Banner } from './Banner';\r\nimport { Favorites } from './Favorites';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div className=\"Home\">\r\n            <Banner />\r\n            <Favorites />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import { Container, Row, Col } from 'react-bootstrap';\r\nimport { nav_icons, logos } from '../assets/img';\r\n\r\nexport const Footer = () => (\r\n    <footer className=\"footer\">\r\n        <div className=\"footer-spacer\" />\r\n        <Container>\r\n            <Row className=\"align-items-center\">\r\n                <Col xs={12} sm={6} className=\"text-center text-sm-start\">\r\n                    <img src={logos.logo} alt=\"Logo\" className=\"footer-logo\" />\r\n                </Col>\r\n                <Col xs={12} sm={6} className=\"text-center text-sm-end\">\r\n                    <div className=\"social-icon\">\r\n                        <a href=\"/\"><img src={nav_icons.navIcon1} alt=\"Icon\" /></a>\r\n                        <a href=\"/\"><img src={nav_icons.navIcon2} alt=\"Icon\" /></a>\r\n                        <a href=\"/\"><img src={nav_icons.navIcon3} alt=\"Icon\" /></a>\r\n                    </div>\r\n\r\n                    <p className=\"footer-copy\">Copyright 2024. All Rights Reserved.</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n);","import './App.css';\r\nimport { Routes, Route } from \"react-router-dom\";\r\n\r\nimport { NavBar } from './components/NavBar';\r\nimport { Home } from './components/Home';\r\nimport { Footer } from './components/Footer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n\r\n      </Routes>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Router>\r\n    <App />\r\n  </Router>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"names":["module","exports","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","Object","defineProperty","value","_len","arguments","length","validators","Array","_key","_createChainableTypeChecker2","default","_len2","_key2","forEach","validator","result","apply","obj","_createChainableTypeChecker","require","__esModule","validate","checkType","isRequired","props","propName","componentName","location","propFullName","componentNameSafe","propFullNameSafe","concat","chainedCheckType","bind","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","secret","err","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","aa","ca","p","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","prototype","hasOwnProperty","ka","la","ma","v","g","this","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","type","sanitizeURL","removeEmptyString","z","split","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","call","test","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","stack","trim","match","Na","Oa","prepareStackTrace","set","Reflect","construct","l","h","k","displayName","includes","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","String","fromCharCode","code","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","capture","passive","n","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","ref","_owner","_stringRef","refs","Mg","join","Ng","Og","index","Pg","Qg","Rg","implementation","Sg","Tg","q","r","y","next","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","callback","nh","K","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","L","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","hi","ii","create","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","R","Bi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","defaultProps","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","contextType","state","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","message","digest","Ki","Li","console","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","ReactCurrentOwner","Xi","Yi","Zi","$i","aj","compare","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","version","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","__self","__source","Fragment","jsx","jsxs","setState","forceUpdate","escape","_status","_result","Children","map","count","toArray","only","Component","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","hasOwn","classNames","classes","i","arg","appendClass","parseValue","newClass","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","leafPrototypes","getProto","getPrototypeOf","ns","def","getOwnPropertyNames","definition","o","chunkId","all","reduce","promises","miniCssF","globalThis","Function","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","onload","doneFns","fn","head","toStringTag","installedChunks","j","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","Action","PopStateEventType","invariant","warning","cond","warn","getHistoryState","usr","idx","createLocation","to","_extends","pathname","hash","parsePath","substr","createPath","_ref","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","filter","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","splatValue","decodeURIComponent","startIndex","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","static","useNavigate","router","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","routePathnamesJson","UNSAFE_getResolveToMatches","parse","relative","useNavigateUnstable","useResolvedPath","_temp2","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","errors","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","super","revalidation","errorInfo","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState","_future","v7_partialHydration","initialized","errorIndex","findIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","alreadyWarned","getChildren","hookName","ctx","useRouteContext","thisRoute","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","handle","makeEventKey","eventKey","defaultKey","_toPropertyKey","hint","prim","toPrimitive","res","TypeError","Number","_toPrimitive","useUncontrolled","config","fieldName","_extends2","Utils","propsValue","_objectWithoutPropertiesLoose","handlerName","_useUncontrolledProp","propValue","handler","wasPropRef","_useState","stateValue","isProp","wasProp","useUncontrolledProp","nextProps","prevState","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","__suppressDeprecationWarning","DEFAULT_BREAKPOINTS","DEFAULT_MIN_BREAKPOINT","ThemeContext","prefixes","breakpoints","minBreakpoint","useBootstrapPrefix","prefix","defaultPrefix","useBootstrapBreakpoints","useBootstrapMinBreakpoint","NavbarBrand","bsPrefix","className","as","_jsx","getComputedStyle","psuedoElement","doc","ownerWindow","rUpper","msPattern","hyphenateStyleName","hyphenate","supportedTransforms","property","css","transforms","getPropertyValue","isTransform","removeProperty","cssText","_setPrototypeOf","setPrototypeOf","__proto__","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","_this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","nextCallback","_proto","updateStatus","nextStatus","cancelNextCallback","getTimeouts","exit","mounting","nodeRef","ReactDOM","forceReflow","performEnter","performExit","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","setNextCallback","_this4","active","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","_this$props","childProps","TransitionGroupContext","noop","propTypes","optionsSupported","onceSupported","once","canUseDOM","eventName","wrappedHandler","__once","onceHandler","emulateTransitionEnd","duration","called","createEvent","initEvent","triggerEvent","remove","transitionEnd","str","mult","parseFloat","parseDuration","removeEmulate","transitionEndListener","funcs","acc","triggerBrowserReflow","offsetHeight","toFnRef","refA","refB","mergeRefs","childRef","mergedRef","useMergedRefs","attachRef","componentOrElement","normalize","handleEnter","handleEntering","handleEntered","handleExit","handleExiting","handleExited","handleAddEndListener","innerProps","MARGINS","getDefaultDimensionValue","dimension","elem","margins","parseInt","collapseStyles","Collapse","inProp","getDimensionValue","computedDimension","createChainedFunction","scroll","TransitionWrapper","role","NavbarCollapse","NavbarContext","expanded","useEventCallback","useCommittedRef","NavbarToggle","label","onToggle","handleClick","isReactNative","global","product","matchersByWindow","getMatcher","query","targetWindow","matchers","mql","matchMedia","refCount","media","useMediaQuery","setMatches","handleChange","addListener","removeListener","breakpointValues","names","and","getMaxQuery","breakpoint","getNext","breakpointOrMap","direction","breakpointMap","entries","getMinQuery","createBreakpointHook","xs","sm","xl","xxl","useWillUnmount","onUnmount","valueRef","useUpdatedRef","dataAttr","OPEN_DATA_ATTRIBUTE","handleContainerOverflow","isRTL","modals","getScrollbarWidth","abs","innerWidth","clientWidth","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","reset","removeContainerStyle","modal","modalIdx","isTopModal","Context","useWindow","resolveContainerRef","getBoundingClientRect","hasEnteredRef","combinedRef","_excluded","useRTGTransitionProps","major","parts","minor","patch","getReactVersion","transitionProps","ImperativeTransition","exited","setExited","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","initial","isStale","onFinish","renderTransition","runTransition","RTGTransition","NoopTransition","manager","useModalManager","provided","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","setBackdropRef","Modal","show","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","mounted","useMounted","prevShow","usePrevious","lastFocusRef","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","handleHide","_lastFocusRef$current","handleBackdropClick","isEscKey","dialogProps","tabIndex","backdropElement","_Fragment","_jsxs","Manager","fadeStyles","Fade","transitionClasses","isAppearing","OffcanvasBody","transitionStyles","OffcanvasToggling","variant","CloseButton","ariaLabel","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","OffcanvasHeader","DivStyledAsH5","OffcanvasTitle","qsa","selector","replaceClassName","origClass","classToRemove","Selector","BootstrapModalManager","adjustAndStore","adjust","actual","restore","classList","baseVal","hasClass","addClass","marginProp","removeClass","sharedManager","DialogTransition","BackdropTransition","Offcanvas","ariaLabelledby","placement","responsive","backdropClassName","propsManager","renderStaticNode","showOffcanvas","setShowOffcanvas","hideResponsiveOffcanvas","useBreakpoint","modalContext","backdropProps","BaseModal","visibility","getSharedManager","Body","Header","Title","NavbarOffcanvas","NavbarText","Navbar","initialBsPrefix","expand","fixed","sticky","onSelect","collapseOnSelect","controlledProps","handleCollapse","expandClass","navbarContext","SelectableContext","Brand","Text","Toggle","Container","fluid","suffix","NavContext","useButtonProps","rel","isTrivialHref","onKeyDown","Button","asProp","buttonProps","useNavItem","parentOnSelect","navContext","tabContext","TabContext","isActive","contextControllerId","getControllerId","contextControlledId","getControlledId","activeKey","NavItem","EVENT_KEY_ATTR","Nav","useForceUpdate","needsRefocusRef","listNode","getNextActiveTab","currentListNode","items","activeChild","querySelector","handleSelect","nextActiveChild","Item","Anchor","handleKeyDown","NavLink","navItemProps","uncontrolledProps","fill","justify","navbar","navbarScroll","navbarBsPrefix","cardHeaderBsPrefix","isNavbar","cardHeaderContext","CardHeaderContext","BaseNav","Link","__reactRouterVersion","startTransitionImpl","HashRouter","historyRef","createHashHistory","setStateImpl","v7_startTransition","newState","isBrowser","ABSOLUTE_URL_REGEX","_ref7","absoluteHref","reloadDocument","preventScrollReset","unstable_viewTransition","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","nav_icons","navIcon1","navIcon2","navIcon3","logos","headerImg","logo","NavBar","activeLink","setActiveLink","scrolled","setScrolled","handleScroll","scrollY","handleSetActiveLink","getLinkClass","alt","open","Row","decoratedBsPrefix","sizePrefix","brkPoint","cols","infix","Col","colProps","spans","span","useCol","_objectWithoutProperties","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrowRightCircle","title","xmlns","viewBox","Boolean","fillRule","Banner","toRotate","loopNum","isDeleting","tick","fullText","updatedText","ticker","setInterval","clearInterval","dataPeriod","$b5e257d569688ac6$var$defaultContext","round","$b5e257d569688ac6$var$SSRContext","$670gB$react","$b5e257d569688ac6$var$IsSSRContext","$b5e257d569688ac6$var$canUseDOM","$b5e257d569688ac6$var$componentIds","$b5e257d569688ac6$var$useCounter","$670gB$useContext","$670gB$useRef","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","currentOwner","prevComponentValue","$b5e257d569688ac6$export$619500959fc48b26","defaultId","didSSR","$670gB$useState","$b5e257d569688ac6$var$subscribe","$b5e257d569688ac6$var$getSnapshot","$b5e257d569688ac6$var$getServerSnapshot","counter","onStoreChange","_excluded2","_excluded3","useTabPanel","TabPanel","tabPanelProps","hidden","Tabs","userId","generateChildId","generateCustomChildId","propsOnSelect","propsActiveKey","defaultActiveKey","useSSRSafeId","Panel","getTabTransitionComponent","TabContainer","TabContent","TabPane","tabClassName","tabAttrs","Tab","Content","Pane","FavoritesCard","description","imgUrl","Favorites","shows","setShows","games","setGames","async","favoritesData","loadData","game","colorSharp2","Home","Footer","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById","App","reportWebVitals"],"sourceRoot":""}